{
  if (e instanceof MessageEvent) {
    Object message=((MessageEvent)e).getMessage();
    if (message instanceof MappingHttpRequest) {
      MappingHttpRequest request=((MappingHttpRequest)message);
      if (HttpMethod.GET.equals(request.getMethod())) {
        MappingHttpResponse response=new MappingHttpResponse(request.getProtocolVersion(),HttpResponseStatus.OK);
        String resp="";
        for (        Component c : Component.values()) {
          resp+=String.format("name=%-20.20s enabled=%-10.10s local=%-10.10s\n",c.name(),c.isEnabled(),c.isLocal());
        }
        ChannelBuffer buf=ChannelBuffers.copiedBuffer(resp.getBytes());
        response.setContent(buf);
        response.addHeader(HttpHeaders.Names.CONTENT_LENGTH,String.valueOf(buf.readableBytes()));
        response.addHeader(HttpHeaders.Names.CONTENT_TYPE,"text/plain; charset=UTF-8");
        ChannelFuture writeFuture=ctx.getChannel().write(response);
        writeFuture.addListener(ChannelFutureListener.CLOSE);
      }
 else       if (!initialized) {
        initialize(ctx,request);
      }
 else       if (request.getMessage() instanceof HeartbeatType) {
        HeartbeatType hb=(HeartbeatType)request.getMessage();
        for (        ComponentType startedComponent : hb.getStarted()) {
          Component c=Component.valueOf(startedComponent.getComponent());
          try {
            if (Component.walrus.equals(c)) {
              ComponentConfiguration config=Configuration.getWalrusConfiguration(startedComponent.getName());
              Configuration.fireStartComponent(config);
            }
            if (Component.storage.equals(c)) {
              ComponentConfiguration config=Configuration.getStorageControllerConfiguration(startedComponent.getName());
              Configuration.fireStartComponent(config);
            }
          }
 catch (          Exception e1) {
          }
        }
        for (        ComponentType stoppedComponent : hb.getStopped()) {
          URI uri=new URI(stoppedComponent.getUri());
          Component c=Component.valueOf(stoppedComponent.getComponent());
          try {
            if (Component.walrus.equals(c)) {
              Configuration.fireStopComponent(new RemoteConfiguration(c,uri));
            }
            if (Component.storage.equals(c)) {
              Configuration.fireStopComponent(new RemoteConfiguration(c,uri));
            }
          }
 catch (          Exception e1) {
          }
        }
      }
 else {
        ChannelFuture writeFuture=ctx.getChannel().write(new DefaultHttpResponse(request.getProtocolVersion(),HttpResponseStatus.NOT_ACCEPTABLE));
        writeFuture.addListener(ChannelFutureListener.CLOSE);
      }
    }
  }
}
