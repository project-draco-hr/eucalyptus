{
  List<String> attributeNames=Lists.newArrayList();
  BeanInfo beanInfo=null;
  try {
    beanInfo=Introspector.getBeanInfo(resourceInfo.getClass());
  }
 catch (  IntrospectionException ex) {
    LOG.error(ex,ex);
    throw new InternalFailureException(ex.getMessage());
  }
  Map<String,PropertyDescriptor> propertyDescriptorMap=Maps.newHashMap();
  for (  PropertyDescriptor propertyDescriptor : beanInfo.getPropertyDescriptors()) {
    propertyDescriptorMap.put(propertyDescriptor.getName(),propertyDescriptor);
  }
  for (  Field field : resourceInfo.getClass().getDeclaredFields()) {
    AttributeJson attribute=field.getAnnotation(AttributeJson.class);
    if (attribute == null)     continue;
    String attributeName=field.getName().substring(0,1).toUpperCase() + field.getName().substring(1);
    if (attribute.name() != null && !attribute.name().isEmpty()) {
      attributeName=attribute.name();
    }
    if (propertyDescriptorMap.containsKey(field.getName())) {
      attributeNames.add(attributeName);
    }
  }
  return attributeNames;
}
