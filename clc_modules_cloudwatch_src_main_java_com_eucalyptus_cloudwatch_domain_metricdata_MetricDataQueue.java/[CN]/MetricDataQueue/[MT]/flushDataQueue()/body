{
  busy.set(true);
  Runnable safeRunner=new Runnable(){
    @Override public void run(){
      try {
        List<MetricQueueItem> dataBatch=Lists.newArrayList();
        dataQueue.drainTo(dataBatch);
        dataBatch=aggregate(dataBatch);
        for (        final MetricQueueItem metricData : dataBatch) {
          MetricManager.addMetric(metricData.getAccountId(),metricData.getMetricName(),metricData.getNamespace(),metricData.getDimensionMap(),metricData.getMetricType(),metricData.getUnits(),metricData.getTimestamp(),metricData.getSampleSize(),metricData.getSampleMax(),metricData.getSampleMin(),metricData.getSampleSum());
          ListMetricManager.addMetric(metricData.getAccountId(),metricData.getMetricName(),metricData.getNamespace(),metricData.getDimensionMap(),metricData.getMetricType());
        }
        dataQueue.clear();
        busy.set(false);
      }
 catch (      Exception ex) {
        ex.printStackTrace();
        LOG.error(ex,ex);
      }
    }
  }
;
  dataFlushTimer.schedule(safeRunner,1,TimeUnit.MINUTES);
}
