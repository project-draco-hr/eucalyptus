{
  List<MetricDatum> extraData=new ArrayList<MetricDatum>();
  Date now=new Date();
  for (  final MetricDatum datum : metricDatum) {
    if ("AWS/EBS".equals(nameSpace) && metricType == MetricType.System) {
      String volumeId=null;
      if ((datum.getDimensions() != null) && (datum.getDimensions().getMember() != null)) {
        for (        Dimension dimension : datum.getDimensions().getMember()) {
          if ("VolumeId".equals(dimension.getName())) {
            volumeId=dimension.getValue();
          }
        }
        if (volumeId != null) {
          if ("VolumeReadOpsTotal".equals(datum.getMetricName())) {
            if (!adjustAbsoluteVolumeValue(datum,"VolumeReadOpsTotal","VolumeReadOps",volumeId))             continue;
            extraData.add(createVolumeThroughputMetric(datum));
          }
          if ("VolumeWriteOpsTotal".equals(datum.getMetricName())) {
            if (!adjustAbsoluteVolumeValue(datum,"VolumeWriteOpsTotal","VolumeWriteOps",volumeId))             continue;
          }
          if ("VolumeReadBytesTotal".equals(datum.getMetricName())) {
            if (!adjustAbsoluteVolumeValue(datum,"VolumeReadBytesTotal","VolumeReadBytes",volumeId))             continue;
          }
          if ("VolumeWriteBytesTotal".equals(datum.getMetricName())) {
            if (!adjustAbsoluteVolumeValue(datum,"VolumeWriteBytesTotal","VolumeWriteBytes",volumeId))             continue;
          }
          if ("TotalVolumeReadTimeTotal".equals(datum.getMetricName())) {
            if (!adjustAbsoluteVolumeValue(datum,"TotalVolumeReadTimeTotal","TotalVolumeReadTime",volumeId))             continue;
          }
          if ("TotalVolumeWriteTimeTotal".equals(datum.getMetricName())) {
            if (!adjustAbsoluteVolumeValue(datum,"TotalVolumeWriteTimeTotal","TotalVolumeWriteTime",volumeId))             continue;
          }
        }
      }
    }
    if ("AWS/EC2".equals(nameSpace) && metricType == MetricType.System) {
      String instanceId=null;
      if ((datum.getDimensions() != null) && (datum.getDimensions().getMember() != null)) {
        for (        Dimension dimension : datum.getDimensions().getMember()) {
          if ("InstanceId".equals(dimension.getName())) {
            instanceId=dimension.getValue();
          }
        }
        if (instanceId != null) {
          if ("CPUUtilizationMS".equals(datum.getMetricName())) {
            if (!adjustAbsoluteCPUValue(datum,"CPUUtilizationMS","CPUUtilization",instanceId))             continue;
          }
        }
      }
    }
  }
  metricDatum.addAll(extraData);
  for (  final MetricDatum datum : metricDatum) {
    scrub(datum,now);
    final ArrayList<Dimension> dimensions=datum.getDimensions().getMember();
    queue(new Supplier<MetricQueueItem>(){
      @Override public MetricQueueItem get(){
        MetricQueueItem metricMetadata=new MetricQueueItem();
        metricMetadata.setAccountId(ownerAccountId);
        metricMetadata.setMetricName(datum.getMetricName());
        metricMetadata.setNamespace(nameSpace);
        metricMetadata.setDimensionMap(makeDimensionMap(dimensions));
        metricMetadata.setMetricType(metricType);
        metricMetadata.setUnits(Units.fromValue(datum.getUnit()));
        metricMetadata.setTimestamp(datum.getTimestamp());
        if (datum.getValue() != null) {
          metricMetadata.setSampleMax(datum.getValue());
          metricMetadata.setSampleMin(datum.getValue());
          metricMetadata.setSampleSum(datum.getValue());
          metricMetadata.setSampleSize(1.0);
        }
 else         if ((datum.getStatisticValues() != null) && (datum.getStatisticValues().getMaximum() != null) && (datum.getStatisticValues().getMinimum() != null)&& (datum.getStatisticValues().getSum() != null)&& (datum.getStatisticValues().getSampleCount() != null)) {
          metricMetadata.setSampleMax(datum.getStatisticValues().getMaximum());
          metricMetadata.setSampleMin(datum.getStatisticValues().getMinimum());
          metricMetadata.setSampleSum(datum.getStatisticValues().getSum());
          metricMetadata.setSampleSize(datum.getStatisticValues().getSampleCount());
        }
 else {
          throw new RuntimeException("Statistics set (all values) or Value must be set");
        }
        return metricMetadata;
      }
    }
);
  }
}
