{
  InstanceUsageLog usageLog=InstanceUsageLog.getInstanceUsageLog();
  final long maxTimeMs=new FalseDataGenerator().generateFakeInstances(NUM_INSTANCES,NUM_USAGES,TIME_USAGE_APART_MS);
  final long subPeriodLength=maxTimeMs / NUM_VERIFY_USAGES;
  LogResultSet rs=usageLog.queryLog(new Period(0l,maxTimeMs));
  while (rs.next()) {
    InstanceAttributes insAttrs=rs.getInstanceAttributes();
    PeriodUsageData pud=rs.getPeriodUsageData();
    UsageData lastUsageData=null;
    UsageData lastUsageDataDiff=null;
    for (int j=0; j < NUM_VERIFY_USAGES; j++) {
      long subPeriodBeginMs=j * subPeriodLength;
      long subPeriodEndMs=subPeriodBeginMs + subPeriodLength;
      UsageData usageData=pud.getUsageData(new Period(subPeriodBeginMs,subPeriodEndMs));
      if (j == 1) {
        lastUsageDataDiff=lastUsageData.subtractFrom(usageData);
      }
 else       if (j > 1) {
        UsageData usageDataDiff=lastUsageData.subtractFrom(usageData);
        System.out.printf("ins:%s net:%d disk:%d\n",insAttrs.getUuid(),usageDataDiff.getNetworkIoMegs(),usageDataDiff.getDiskIoMegs());
        if (!equalWithinError(usageDataDiff,lastUsageDataDiff,ERROR_MARGIN)) {
          throw new RuntimeException("difference check failed");
        }
        lastUsageDataDiff=usageDataDiff;
      }
      lastUsageData=usageData;
    }
  }
  usageLog.purgeLog(maxTimeMs);
}
