{
  final EntityTransaction db=Entities.get(NetworkGroup.class);
  try {
    final List<NetworkGroup> networkGroupList=Entities.query(new NetworkGroup());
    final Set<String> generatedIdentifiers=Sets.newHashSet(Iterables.transform(networkGroupList,RestrictedTypes.toDisplayName()));
    for (    final NetworkGroup networkGroup : networkGroupList) {
      LOG.debug("Upgrading " + networkGroup.getDisplayName());
      if (networkGroup.getGroupId() == null) {
        String networkGroupId=null;
        while (networkGroupId == null || generatedIdentifiers.contains(networkGroupId)) {
          networkGroupId=Crypto.generateId(Integer.toHexString(networkGroup.getDisplayName().hashCode()),"sg");
        }
        generatedIdentifiers.add(networkGroupId);
        networkGroup.setGroupId(networkGroupId);
      }
    }
    db.commit();
  }
 catch (  Exception ex) {
    throw Exceptions.toUndeclared(ex);
  }
 finally {
    if (db.isActive())     db.rollback();
  }
}
