{
  final EntityTransaction db=Entities.get(NetworkGroup.class);
  NetworkGroup net=Entities.merge(this);
  if (!NetworkGroups.networkingConfiguration().hasNetworking()) {
    return ExtantNetwork.bogus(this);
  }
 else   if (net.getExtantNetwork() == null) {
    ExtantNetwork exNet=Entities.uniqueResult(new ExtantNetwork(this,null));
    if (exNet != null) {
      this.setExtantNetwork(exNet);
    }
 else {
      for (      Integer i : Numbers.shuffled(NetworkGroups.networkTagInterval())) {
        try {
          Entities.uniqueResult(ExtantNetwork.named(i));
          continue;
        }
 catch (        Exception ex) {
          try {
            this.setExtantNetwork(Entities.persist(ExtantNetwork.create(this,i)));
            Entities.merge(this);
            db.commit();
            return this.getExtantNetwork();
          }
 catch (          Exception ex1) {
            Logs.exhaust().trace(ex1,ex1);
            db.rollback();
            throw new NotEnoughResourcesAvailable("Failed to allocate network tag for network: " + this.getFullName(),ex1);
          }
        }
      }
    }
    db.rollback();
    throw new NotEnoughResourcesAvailable("Failed to allocate network tag for network: " + this.getFullName() + ": no network tags are free.");
  }
 else {
    return net.getExtantNetwork();
  }
}
