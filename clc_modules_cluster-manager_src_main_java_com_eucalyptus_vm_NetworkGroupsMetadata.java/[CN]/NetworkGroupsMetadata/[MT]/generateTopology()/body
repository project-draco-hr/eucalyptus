{
  StringBuilder buf=new StringBuilder();
  Multimap<String,String> networks=ArrayListMultimap.create();
  Multimap<String,String> rules=ArrayListMultimap.create();
  EntityTransaction db=Entities.get(VmInstance.class);
  try {
    for (    VmInstance vm : VmInstances.listValues()) {
      if (VmState.RUNNING.ordinal() > vm.getState().ordinal())       continue;
      for (      NetworkGroup ruleGroup : vm.getNetworkGroups()) {
        try {
          ruleGroup=Entities.merge(ruleGroup);
          networks.put(ruleGroup.getClusterNetworkName(),vm.getPrivateAddress());
          if (!rules.containsKey(ruleGroup.getNaturalId())) {
            for (            NetworkRule netRule : ruleGroup.getNetworkRules()) {
              try {
                String rule=String.format("-P %s -%s %d%s%d ",netRule.getProtocol(),("icmp".equals(netRule.getProtocol()) ? "t" : "p"),netRule.getLowPort(),("icmp".equals(netRule.getProtocol()) ? ":" : "-"),netRule.getHighPort());
                for (                NetworkPeer peer : netRule.getNetworkPeers()) {
                  String ruleString=String.format("%s -o %s -u %s",rule,peer.getGroupName(),peer.getUserQueryKey());
                  if (!rules.get(ruleGroup.getClusterNetworkName()).contains(ruleString)) {
                    rules.put(ruleGroup.getClusterNetworkName(),ruleString);
                  }
                }
                for (                IpRange cidr : netRule.getIpRanges()) {
                  String ruleString=String.format("%s -s %s",rule,cidr.getValue());
                  if (!rules.get(ruleGroup.getClusterNetworkName()).contains(ruleString)) {
                    rules.put(ruleGroup.getClusterNetworkName(),ruleString);
                  }
                }
              }
 catch (              Exception ex) {
                LOG.error(ex,ex);
              }
            }
          }
        }
 catch (        Exception ex) {
          LOG.error(ex,ex);
        }
      }
    }
    buf.append(rulesToString(rules));
    buf.append(groupsToString(networks));
    db.rollback();
  }
 catch (  Exception ex) {
    LOG.error(ex,ex);
    db.rollback();
  }
  return buf.toString();
}
