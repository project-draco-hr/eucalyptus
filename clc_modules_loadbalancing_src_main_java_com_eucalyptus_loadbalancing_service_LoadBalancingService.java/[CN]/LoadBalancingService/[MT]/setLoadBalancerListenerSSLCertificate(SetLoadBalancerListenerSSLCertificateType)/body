{
  final SetLoadBalancerListenerSSLCertificateResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final String lbName=request.getLoadBalancerName();
  final int lbPort=request.getLoadBalancerPort();
  final String certArn=request.getSSLCertificateId();
  if (lbPort <= 0 || lbPort > 65535)   throw new InvalidConfigurationRequestException("Invalid port");
  if (certArn == null || certArn.length() <= 0)   throw new InvalidConfigurationRequestException("SSLCertificateId is not specified");
  LoadBalancer lb;
  try {
    lb=LoadBalancers.getLoadbalancer(ctx,lbName);
  }
 catch (  NoSuchElementException ex) {
    throw new AccessPointNotFoundException();
  }
catch (  Exception ex) {
    throw new InternalFailure400Exception("Failed to find the loadbalancer");
  }
  LoadBalancers.checkWorkerCertificateExpiration(lb);
  try {
    LoadBalancers.setLoadBalancerListenerSSLCertificate(lb,lbPort,certArn);
    LoadBalancingWorkflows.updateLoadBalancer(ctx.getAccountNumber(),lbName);
  }
 catch (  final LoadBalancingException ex) {
    throw ex;
  }
catch (  final Exception ex) {
    LOG.error("Failed to set loadbalancer listener SSL certificate",ex);
    throw new InternalFailure400Exception("Failed to set loadbalancer listener SSL certificate",ex);
  }
 finally {
    if (lb != null)     LoadBalancingServoCache.getInstance().invalidate(lb);
  }
  reply.setSetLoadBalancerListenerSSLCertificateResult(new SetLoadBalancerListenerSSLCertificateResult());
  reply.set_return(true);
  return reply;
}
