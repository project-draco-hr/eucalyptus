{
  final List<PolicyTypeDescription> policyTypes=Lists.newArrayList();
  Set<String> requestedTypeNames=Sets.newHashSet();
  if (request.getPolicyTypeNames() != null && request.getPolicyTypeNames().getMember() != null) {
    requestedTypeNames.addAll(request.getPolicyTypeNames().getMember());
  }
  try {
    final List<LoadBalancerPolicyTypeDescription> internalPolicyTypes=LoadBalancerPolicies.getLoadBalancerPolicyTypeDescriptions();
    for (    final LoadBalancerPolicyTypeDescription from : internalPolicyTypes) {
      if (requestedTypeNames.isEmpty() || requestedTypeNames.contains(from.getPolicyTypeName()))       policyTypes.add(LoadBalancerPolicies.AsPolicyTypeDescription.INSTANCE.apply(from));
    }
  }
 catch (  final Exception ex) {
    LOG.error("Failed to retrieve policy types",ex);
    throw new InternalFailure400Exception("Failed to retrieve policy types",ex);
  }
  final DescribeLoadBalancerPolicyTypesResponseType reply=request.getReply();
  final PolicyTypeDescriptions desc=new PolicyTypeDescriptions();
  desc.setMember((ArrayList<PolicyTypeDescription>)policyTypes);
  final DescribeLoadBalancerPolicyTypesResult result=new DescribeLoadBalancerPolicyTypesResult();
  result.setPolicyTypeDescriptions(desc);
  reply.setDescribeLoadBalancerPolicyTypesResult(result);
  reply.set_return(true);
  return reply;
}
