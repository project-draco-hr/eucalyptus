{
  Matcher m=URI_PATTERN.matcher(uri);
  if (m.matches()) {
    String scheme=m.group(2);
    String authority=m.group(3);
    String userinfo=m.group(5);
    String host=m.group(6);
    String port=m.group(8);
    String path=m.group(9);
    String query=m.group(11);
    String fragment=m.group(13);
    StringBuilder sb=new StringBuilder();
    if (scheme != null) {
      sb.append(encodeScheme(scheme,encoding));
      sb.append(':');
    }
    if (authority != null) {
      sb.append("//");
      if (userinfo != null) {
        sb.append(encodeUserInfo(userinfo,encoding));
        sb.append('@');
      }
      if (host != null) {
        sb.append(encodeHost(host,encoding));
      }
      if (port != null) {
        sb.append(':');
        sb.append(encodePort(port,encoding));
      }
    }
    sb.append(encodePath(path,encoding));
    if (query != null) {
      sb.append('?');
      sb.append(encodeQuery(query,encoding));
    }
    if (fragment != null) {
      sb.append('#');
      sb.append(encodeFragment(fragment,encoding));
    }
    return sb.toString();
  }
 else {
    throw new IllegalArgumentException("[" + uri + "] is not a valid URI");
  }
}
