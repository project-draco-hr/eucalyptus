{
  try {
    if (!arn.startsWith("arn:aws:iam::"))     throw new EucalyptusCloudException("malformed arn");
    String token=arn.substring("arn:aws:iam::".length());
    String acctId=token.substring(0,token.indexOf(":server-certificate"));
    final Account acct=Accounts.lookupAccountById(acctId);
    final User adminUser=acct.lookupAdmin();
    final String prefix=String.format("arn:aws:iam::%s:server-certificate",acctId);
    if (!arn.startsWith(prefix))     throw new EucalyptusCloudException("malformed arn");
    String pathAndName=arn.replace(prefix,"");
    String certName=pathAndName.substring(pathAndName.lastIndexOf("/") + 1);
    ServerCertificateEntity found=null;
    try (final TransactionResource db=Entities.transactionFor(ServerCertificateEntity.class)){
      found=Entities.uniqueResult(ServerCertificateEntity.named(UserFullName.getInstance(adminUser),certName));
      db.rollback();
    }
 catch (    final NoSuchElementException ex) {
      ;
    }
catch (    final Exception ex) {
      throw ex;
    }
    return found;
  }
 catch (  final Exception ex) {
    throw Exceptions.toUndeclared(ex);
  }
}
