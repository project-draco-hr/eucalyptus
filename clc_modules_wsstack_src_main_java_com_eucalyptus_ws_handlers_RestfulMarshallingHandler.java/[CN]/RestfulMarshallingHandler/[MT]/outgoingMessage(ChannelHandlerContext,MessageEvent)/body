{
  if (event.getMessage() instanceof MappingHttpResponse) {
    MappingHttpResponse httpResponse=(MappingHttpResponse)event.getMessage();
    Binding binding=BindingManager.getBinding(BindingManager.sanitizeNamespace(this.namespace));
    ByteArrayOutputStream byteOut=new ByteArrayOutputStream();
    HoldMe.canHas.lock();
    try {
      if (httpResponse.getMessage() == null) {
      }
 else       if (httpResponse.getMessage() instanceof EucalyptusErrorMessageType) {
        EucalyptusErrorMessageType errMsg=(EucalyptusErrorMessageType)httpResponse.getMessage();
        byteOut.write(Binding.createRestFault(errMsg.getSource(),errMsg.getMessage(),errMsg.getCorrelationId()).getBytes());
        httpResponse.setStatus(HttpResponseStatus.BAD_REQUEST);
      }
 else {
        try {
          String ns=this.namespace;
          if (httpResponse.getMessage() instanceof EuareMessage) {
            binding=BindingManager.getBinding(BindingManager.sanitizeNamespace(ns));
            ns="http://iam.amazonaws.com/doc/" + this.bindingVersion + "/";
          }
          OMElement omMsg=binding.toOM(httpResponse.getMessage(),ns);
          omMsg.serialize(byteOut);
        }
 catch (        Throwable e) {
          LOG.debug(e);
          LOG.error(e,e);
          binding=BindingManager.getBinding(BindingManager.sanitizeNamespace("http://ec2.amazonaws.com/doc/2009-04-04/"));
          OMElement omMsg=binding.toOM(httpResponse.getMessage(),this.namespace);
          omMsg.serialize(byteOut);
        }
      }
    }
  finally {
      HoldMe.canHas.unlock();
    }
    byte[] req=byteOut.toByteArray();
    ChannelBuffer buffer=ChannelBuffers.copiedBuffer(req);
    httpResponse.addHeader(HttpHeaders.Names.CONTENT_LENGTH,String.valueOf(buffer.readableBytes()));
    httpResponse.addHeader(HttpHeaders.Names.CONTENT_TYPE,"application/xml; charset=UTF-8");
    httpResponse.setContent(buffer);
  }
}
