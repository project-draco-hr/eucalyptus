{
  List<StorageControllerConfiguration> storageControllerConfig=Lists.newArrayList();
  for (  StorageInfoWeb storageControllerWeb : newStorageList) {
    storageControllerConfig.add(new StorageControllerConfiguration(storageControllerWeb.getName(),storageControllerWeb.getHost(),storageControllerWeb.getPort()));
  }
  updateStorageControllerConfigurations(storageControllerConfig);
  for (  StorageInfoWeb storageControllerWeb : newStorageList) {
    UpdateStorageConfigurationType updateStorageConfiguration=new UpdateStorageConfigurationType();
    updateStorageConfiguration.setName(storageControllerWeb.getName());
    updateStorageConfiguration.setMaxTotalVolumeSize(storageControllerWeb.getTotalVolumesSizeInGB());
    updateStorageConfiguration.setMaxVolumeSize(storageControllerWeb.getMaxVolumeSizeInGB());
    updateStorageConfiguration.setStorageInterface(storageControllerWeb.getStorageInterface());
    updateStorageConfiguration.setStorageRootDirectory(storageControllerWeb.getVolumesPath());
    updateStorageConfiguration.setZeroFillVolumes(storageControllerWeb.getZeroFillVolumes());
    updateStorageConfiguration.setSanHost(storageControllerWeb.getSanHost());
    updateStorageConfiguration.setSanUser(storageControllerWeb.getSanUser());
    updateStorageConfiguration.setSanPassword(storageControllerWeb.getSanPassword());
    updateStorageConfiguration.setDASDevice(storageControllerWeb.getDASDevice());
    updateStorageConfiguration.setStorageParams(storageControllerWeb.getStorageParams());
    ServiceDispatcher scDispatch=ServiceDispatcher.lookup(Component.storage,storageControllerWeb.getHost());
    if (Component.eucalyptus.isLocal()) {
      updateStorageConfiguration.setName(StorageProperties.SC_LOCAL_NAME);
    }
    try {
      scDispatch.send(updateStorageConfiguration);
    }
 catch (    Exception e) {
      LOG.error("Error sending update configuration message to storage controller: " + updateStorageConfiguration);
      LOG.error("The storage controller's configuration may be out of sync!");
      LOG.debug(e,e);
    }
  }
}
