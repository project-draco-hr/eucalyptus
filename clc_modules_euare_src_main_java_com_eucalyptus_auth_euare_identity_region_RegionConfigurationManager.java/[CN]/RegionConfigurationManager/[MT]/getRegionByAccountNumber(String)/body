{
  Optional<RegionInfo> regionInfoOptional=Optional.absent();
  final Optional<RegionConfiguration> configurationOptional=regionConfigurationSupplier.get();
  if (configurationOptional.isPresent() && accountNumber != null && accountNumber.length() == 12) {
    final RegionConfiguration configuration=configurationOptional.get();
    final String regionIdPartition=accountNumber.substring(0,3);
    for (    final Region region : configuration) {
      if (Iterables.contains(Iterables.transform(region.getIdentifierPartitions(),PartitionFunctions.ACCOUNT_NUMBER),regionIdPartition)) {
        regionInfoOptional=Optional.of(TypeMappers.transform(region,RegionInfo.class));
      }
    }
  }
  return regionInfoOptional;
}
