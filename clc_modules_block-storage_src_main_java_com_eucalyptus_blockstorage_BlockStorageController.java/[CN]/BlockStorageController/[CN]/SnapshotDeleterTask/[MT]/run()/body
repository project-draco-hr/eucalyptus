{
  TransactionResource tran=Entities.transactionFor(SnapshotInfo.class);
  SnapshotInfo searchSnap=new SnapshotInfo();
  searchSnap.setStatus(StorageProperties.Status.deleting.toString());
  List<SnapshotInfo> snapshots=Entities.query(searchSnap);
  tran.commit();
  S3SnapshotTransfer snapshotTransfer=null;
  for (  SnapshotInfo snap : snapshots) {
    String snapshotId=snap.getSnapshotId();
    LOG.info("Snapshot: " + snapshotId + " was marked for deletion. Cleaning up...");
    try {
      blockManager.deleteSnapshot(snapshotId);
    }
 catch (    EucalyptusCloudException e1) {
      LOG.error(e1);
      continue;
    }
    SnapshotInfo snapInfo=new SnapshotInfo(snapshotId);
    SnapshotInfo foundSnapshotInfo;
    try (TransactionResource tran2=Entities.transactionFor(SnapshotInfo.class)){
      foundSnapshotInfo=Entities.uniqueResult(snapInfo);
      foundSnapshotInfo.setStatus(StorageProperties.Status.deleted.toString());
      tran2.commit();
    }
 catch (    TransactionException|NoSuchElementException e) {
      LOG.error(e);
      continue;
    }
    if (StringUtils.isNotBlank(foundSnapshotInfo.getSnapshotLocation())) {
      try {
        String[] names=SnapshotInfo.getSnapshotBucketKeyNames(foundSnapshotInfo.getSnapshotLocation());
        if (snapshotTransfer == null) {
          if (mock == null) {
            snapshotTransfer=new S3SnapshotTransfer();
          }
 else {
            snapshotTransfer=mock;
          }
        }
        snapshotTransfer.setSnapshotId(snapshotId);
        snapshotTransfer.setBucketName(names[0]);
        snapshotTransfer.setKeyName(names[1]);
        snapshotTransfer.delete();
      }
 catch (      Exception e) {
        LOG.warn("Failed to delete snapshot " + snapshotId + " from objectstorage",e);
      }
    }
 else {
      LOG.debug("Snapshot location missing for " + snapshotId + ". Skipping deletion from ObjectStorageGateway");
    }
  }
}
