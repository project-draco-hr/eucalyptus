{
  blockManager.configure();
  blockManager.enable();
  runStartUpChecks();
  VolumeThreadPool.initialize();
  SnapshotThreadPool.initialize();
  SnapshotTransferThreadPool.initialize();
  CheckerThreadPool.initialize();
  CheckerThreadPool.add(new VolumeDeleter(blockManager));
  CheckerThreadPool.add(new FailedVolumeCleaner(blockManager));
  CheckerThreadPool.add(new ExpiredVolumeCleaner());
  CheckerThreadPool.add(new VolumeStateChecker(blockManager));
  CheckerThreadPool.add(new SnapshotDeleter(blockManager));
  CheckerThreadPool.add(new FailedSnapshotCleaner(blockManager));
  CheckerThreadPool.add(new ExpiredSnapshotCleaner());
  CheckerThreadPool.add(new SnapshotTransferCleaner());
  List<CheckerTask> backendCheckers=null;
  if ((backendCheckers=blockManager.getCheckers()) != null && !backendCheckers.isEmpty()) {
    for (    CheckerTask checker : backendCheckers) {
      CheckerThreadPool.add(checker);
    }
  }
  StorageProperties.enableSnapshots=StorageProperties.enableStorage=true;
}
