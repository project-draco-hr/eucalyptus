{
  AWSEC2RouteResourceAction oldAction=(AWSEC2RouteResourceAction)oldResourceAction;
  AWSEC2RouteResourceAction newAction=(AWSEC2RouteResourceAction)newResourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  newAction.validateProperties();
  if (newAction.properties.getRouteTableId().isEmpty()) {
    throw new ValidationErrorException("RouteTableId is a required field");
  }
  DescribeRouteTablesType describeRouteTablesType=MessageHelper.createMessage(DescribeRouteTablesType.class,newAction.info.getEffectiveUserId());
  describeRouteTablesType.getFilterSet().add(Filter.filter("route-table-id",newAction.properties.getRouteTableId()));
  DescribeRouteTablesResponseType describeRouteTablesResponseType=AsyncRequests.sendSync(configuration,describeRouteTablesType);
  if (describeRouteTablesResponseType.getRouteTableSet() == null || describeRouteTablesResponseType.getRouteTableSet().getItem() == null || describeRouteTablesResponseType.getRouteTableSet().getItem().isEmpty()) {
    throw new ValidationErrorException("No such route table with id '" + newAction.properties.getRouteTableId());
  }
  ReplaceRouteType replaceRouteType=MessageHelper.createMessage(ReplaceRouteType.class,newAction.info.getEffectiveUserId());
  replaceRouteType.setRouteTableId(newAction.properties.getRouteTableId());
  if (!Strings.isNullOrEmpty(newAction.properties.getGatewayId())) {
    replaceRouteType.setGatewayId(newAction.properties.getGatewayId());
  }
  if (!Strings.isNullOrEmpty(newAction.properties.getInstanceId())) {
    replaceRouteType.setInstanceId(newAction.properties.getInstanceId());
  }
  if (!Strings.isNullOrEmpty(newAction.properties.getVpcPeeringConnectionId())) {
    replaceRouteType.setVpcPeeringConnectionId(newAction.properties.getVpcPeeringConnectionId());
  }
  if (!Strings.isNullOrEmpty(newAction.properties.getNatGatewayId())) {
    replaceRouteType.setNatGatewayId(newAction.properties.getNatGatewayId());
  }
  if (!Strings.isNullOrEmpty(newAction.properties.getNetworkInterfaceId())) {
    replaceRouteType.setNetworkInterfaceId(newAction.properties.getNetworkInterfaceId());
  }
  replaceRouteType.setDestinationCidrBlock(newAction.properties.getDestinationCidrBlock());
  ReplaceRouteResponseType replaceRouteResponseType=AsyncRequests.<ReplaceRouteType,ReplaceRouteResponseType>sendSync(configuration,replaceRouteType);
  return newAction;
}
