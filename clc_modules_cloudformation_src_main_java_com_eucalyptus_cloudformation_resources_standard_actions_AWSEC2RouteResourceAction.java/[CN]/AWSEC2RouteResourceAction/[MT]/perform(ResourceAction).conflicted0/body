{
  AWSEC2RouteResourceAction action=(AWSEC2RouteResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  action.validateProperties();
  if (action.properties.getRouteTableId().isEmpty()) {
    throw new ValidationErrorException("RouteTableId is a required field");
  }
  DescribeRouteTablesType describeRouteTablesType=MessageHelper.createMessage(DescribeRouteTablesType.class,action.info.getEffectiveUserId());
  describeRouteTablesType.getFilterSet().add(Filter.filter("route-table-id",action.properties.getRouteTableId()));
  DescribeRouteTablesResponseType describeRouteTablesResponseType=AsyncRequests.sendSync(configuration,describeRouteTablesType);
  if (describeRouteTablesResponseType.getRouteTableSet() == null || describeRouteTablesResponseType.getRouteTableSet().getItem() == null || describeRouteTablesResponseType.getRouteTableSet().getItem().isEmpty()) {
    throw new ValidationErrorException("No such route table with id '" + action.properties.getRouteTableId());
  }
  CreateRouteType createRouteType=MessageHelper.createMessage(CreateRouteType.class,action.info.getEffectiveUserId());
  createRouteType.setRouteTableId(action.properties.getRouteTableId());
  if (!Strings.isNullOrEmpty(action.properties.getGatewayId())) {
    createRouteType.setGatewayId(action.properties.getGatewayId());
  }
  if (!Strings.isNullOrEmpty(action.properties.getInstanceId())) {
    createRouteType.setInstanceId(action.properties.getInstanceId());
  }
  if (!Strings.isNullOrEmpty(action.properties.getVpcPeeringConnectionId())) {
    createRouteType.setVpcPeeringConnectionId(action.properties.getVpcPeeringConnectionId());
  }
  if (!Strings.isNullOrEmpty(action.properties.getNetworkInterfaceId())) {
    createRouteType.setNetworkInterfaceId(action.properties.getNetworkInterfaceId());
  }
  createRouteType.setDestinationCidrBlock(action.properties.getDestinationCidrBlock());
  CreateRouteResponseType createRouteResponseType=AsyncRequests.<CreateRouteType,CreateRouteResponseType>sendSync(configuration,createRouteType);
  action.info.setPhysicalResourceId(action.getDefaultPhysicalResourceId());
  action.info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(action.info.getPhysicalResourceId())));
  return action;
}
