{
  List<ImagingTask> pendingTasks=null;
  try {
    try (final TransactionResource db=Entities.transactionFor(VolumeImagingTask.class)){
      pendingTasks=Entities.query(ImagingTask.named(ImportTaskState.PENDING));
    }
     ImagingTask oldestTask=null;
    Date oldest=new Date(Long.MAX_VALUE);
    for (    final ImagingTask task : pendingTasks) {
      if (oldest.before(task.getCreationTimestamp())) {
        oldest=task.getCreationTimestamp();
        oldestTask=task;
      }
    }
    return oldestTask;
  }
 catch (  final Exception ex) {
    LOG.error("failed to schedule the task to imaging worker",ex);
    return null;
  }
}
