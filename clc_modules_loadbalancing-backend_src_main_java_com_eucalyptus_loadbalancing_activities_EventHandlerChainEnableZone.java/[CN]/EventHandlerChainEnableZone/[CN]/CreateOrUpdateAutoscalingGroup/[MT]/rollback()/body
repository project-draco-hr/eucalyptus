{
  if (this.event == null)   return;
  if (this.oldZones != null && this.groupName != null) {
    try {
      int capacityPerZone=Integer.parseInt(EventHandlerChainNew.VM_PER_ZONE);
      if (capacityPerZone <= 0)       capacityPerZone=1;
      final int oldCapacity=capacityPerZone * this.oldZones.size();
      LoadBalancer lb;
      try {
        lb=LoadBalancers.getLoadbalancer(this.event.getContext(),this.event.getLoadBalancer());
      }
 catch (      Exception ex) {
        throw new EventHandlerException("Could not find the loadbalancer with name=" + this.event.getLoadBalancer(),ex);
      }
      EucalyptusActivityTasks.getInstance().updateAutoScalingGroup(this.groupName,this.oldZones,oldCapacity,lb.useSystemAccount());
      LoadBalancerAutoScalingGroup scaleGroup;
      try {
        scaleGroup=LoadBalancerAutoScalingGroupEntityTransform.INSTANCE.apply(this.group);
      }
 catch (      final Exception ex) {
        LOG.error("unable to transform scaling group from the view",ex);
        throw ex;
      }
      try (final TransactionResource db=Entities.transactionFor(LoadBalancerAutoScalingGroup.class)){
        final LoadBalancerAutoScalingGroup update=Entities.uniqueResult(scaleGroup);
        update.setCapacity(oldCapacity);
        db.commit();
      }
 catch (      NoSuchElementException ex) {
        LOG.error("failed to find the autoscaling group record",ex);
      }
catch (      Exception ex) {
        LOG.error("failed to update the autoscaling group record",ex);
      }
    }
 catch (    Exception ex) {
      throw new EventHandlerException("failed to update the zone to the original list",ex);
    }
  }
}
