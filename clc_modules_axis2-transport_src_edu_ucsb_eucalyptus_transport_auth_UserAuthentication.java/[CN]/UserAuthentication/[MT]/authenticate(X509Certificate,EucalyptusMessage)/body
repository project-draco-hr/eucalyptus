{
  try {
    return super.authenticate(cert,msg);
  }
 catch (  EucalyptusCloudException e) {
    AbstractKeyStore userKs=UserKeyStore.getInstance();
    String userAlias=null;
    try {
      userAlias=userKs.getCertificateAlias(cert);
    }
 catch (    GeneralSecurityException ex) {
      throw new EucalyptusCloudException(ex);
    }
    EntityManager em=EntityWrapper.getEntityManagerFactory(EucalyptusProperties.NAME).createEntityManager();
    Session session=(Session)em.getDelegate();
    UserInfo searchUser=new UserInfo();
    CertificateInfo searchCert=new CertificateInfo();
    searchCert.setCertAlias(userAlias);
    Example qbeUser=Example.create(searchUser).enableLike(MatchMode.EXACT);
    Example qbeCert=Example.create(searchCert).enableLike(MatchMode.EXACT);
    List<UserInfo> users=(List<UserInfo>)session.createCriteria(UserInfo.class).add(qbeUser).createCriteria("certificates").add(qbeCert).list();
    if (users.size() > 1) {
      em.close();
      throw new EucalyptusCloudException("Certificate with more than one entities: " + userAlias);
    }
 else     if (users.size() < 1) {
      em.close();
      throw new EucalyptusCloudException("WS-Security screw up -- unauthorized user has authorized certificate: " + userAlias);
    }
 else {
      msg.setUserId(users.get(0).getUserName());
      if (users.get(0).isAdministrator())       msg.setEffectiveUserId(EucalyptusProperties.NAME);
 else       msg.setEffectiveUserId(users.get(0).getUserName());
      em.close();
    }
    return msg;
  }
}
