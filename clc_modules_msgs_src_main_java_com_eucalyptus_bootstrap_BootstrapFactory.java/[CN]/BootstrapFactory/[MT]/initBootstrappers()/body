{
  File libDir=new File(BaseDirectory.LIB.toString());
  for (  File f : libDir.listFiles()) {
    if (f.getName().startsWith(Component.eucalyptus.name()) && f.getName().endsWith(".jar") && !f.getName().matches(".*-ext-.*")) {
      LOG.debug("Found eucalyptus component jar: " + f.getName());
      ServiceJarFile jar;
      try {
        jar=new ServiceJarFile(f);
      }
 catch (      IOException e) {
        LOG.error(e.getMessage());
        continue;
      }
      List<Bootstrapper> bsList=jar.getBootstrappers();
      for (      Bootstrapper bootstrap : bsList) {
        for (        Resource r : Resource.values()) {
          if (r.providedBy(bootstrap.getClass()) || Resource.Final.equals(r)) {
            Provides provides=bootstrap.getClass().getAnnotation(Provides.class);
            if (provides == null) {
              LOG.info("-X Skipping bootstrapper " + bootstrap.getClass().getSimpleName() + " since Provides is not specified.");
            }
 else {
              Component component=provides.component();
              if (component != null && !component.isEnabled()) {
                LOG.info("-X Skipping bootstrapper " + bootstrap.getClass().getSimpleName() + " since Provides.component="+ component.toString()+ " is disabled.");
                break;
              }
              if (checkDepends(bootstrap)) {
                r.add(bootstrap);
                LOG.info("-> Associated bootstrapper " + bootstrap.getClass().getSimpleName() + " with resource "+ r.toString()+ ".");
                break;
              }
            }
          }
        }
      }
    }
  }
}
