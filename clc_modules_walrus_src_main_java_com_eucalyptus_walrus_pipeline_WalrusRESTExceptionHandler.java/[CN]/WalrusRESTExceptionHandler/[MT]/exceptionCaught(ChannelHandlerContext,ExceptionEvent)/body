{
  final Channel ch=e.getChannel();
  final Throwable cause=e.getCause();
  HttpResponseStatus status=null;
  String code=null;
  String resource=null;
  String message=null;
  String requestId=null;
  try {
    if (ch != null) {
      Context context=Contexts.lookup(ch);
      requestId=context.getCorrelationId();
      Contexts.clear(context);
    }
  }
 catch (  Exception ex) {
    LOG.trace("Error getting request ID or clearing context",ex);
  }
  if (cause instanceof WalrusException) {
    WalrusException walrusEx=(WalrusException)cause;
    status=walrusEx.getStatus();
    code=walrusEx.getCode();
    resource=walrusEx.getResource();
  }
 else   if (cause instanceof WebServicesException) {
    WebServicesException webEx=(WebServicesException)cause;
    status=webEx.getStatus();
    code=CODE_UNKNOWN;
  }
 else {
    status=HttpResponseStatus.INTERNAL_SERVER_ERROR;
    code=CODE_UNKNOWN;
  }
  message=cause.getMessage();
  StringBuilder error=new StringBuilder().append("<?xml version=\"1.0\" encoding=\"UTF-8\"?><Error><Code>").append(code != null ? code : new String()).append("</Code><Message>").append(message != null ? message : new String()).append("</Message><Resource>").append(resource != null ? resource : new String()).append("</Resource><RequestId>").append(requestId != null ? requestId : new String()).append("</RequestId></Error>");
  ChannelBuffer buffer=ChannelBuffers.copiedBuffer(error,Charset.forName("UTF-8"));
  final HttpResponse response=new DefaultHttpResponse(HttpVersion.HTTP_1_1,status);
  response.addHeader(HttpHeaders.Names.CONTENT_TYPE,"text/xml; charset=UTF-8");
  response.addHeader(HttpHeaders.Names.CONTENT_LENGTH,String.valueOf(buffer.readableBytes()));
  response.setContent(buffer);
  ChannelFuture writeFuture=Channels.future(ctx.getChannel());
  writeFuture.addListener(ChannelFutureListener.CLOSE);
  response.addHeader(HttpHeaders.Names.CONNECTION,HttpHeaders.Values.CLOSE);
  if (ctx.getChannel().isConnected()) {
    Channels.write(ctx,writeFuture,response);
  }
}
