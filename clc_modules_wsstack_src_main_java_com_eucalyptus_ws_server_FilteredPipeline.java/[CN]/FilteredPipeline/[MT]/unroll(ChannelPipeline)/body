{
  try {
    for (    final UnrollableStage s : this.stages) {
      pipeline.addLast("pre-" + s.getStageName(),new UnrollableStage.StageBottomHandler(s));
      s.unrollStage(pipeline);
      pipeline.addLast("post-" + s.getStageName(),new UnrollableStage.StageTopHandler(s));
    }
    if (this.msgReceiver != null) {
      pipeline.addLast("service-sink",new ServiceSinkHandler(this.msgReceiver));
    }
 else {
      pipeline.addLast("service-sink",new ServiceSinkHandler());
    }
    for (    final Map.Entry<String,ChannelHandler> e : pipeline.toMap().entrySet()) {
      FilteredPipeline.LOG.trace(" - handler: key=" + e.getKey() + " class="+ e.getValue().getClass().getSimpleName());
    }
  }
 catch (  final Exception e) {
    FilteredPipeline.LOG.error("Error unrolling pipeline: " + this.getPipelineName());
    final ChannelFuture close=pipeline.getChannel().close();
    close.awaitUninterruptibly();
    FilteredPipeline.LOG.error("Forced pipeline to close due to exception: ",e);
  }
}
