{
  AWSIAMAccessKeyResourceAction action=(AWSIAMAccessKeyResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Euare.class);
  if (action.properties.getStatus() == null)   action.properties.setStatus("Active");
  if (!"Active".equals(action.properties.getStatus()) && !"Inactive".equals(action.properties.getStatus())) {
    throw new ValidationErrorException("Invalid status " + action.properties.getStatus());
  }
  CreateAccessKeyType createAccessKeyType=MessageHelper.createMessage(CreateAccessKeyType.class,action.info.getEffectiveUserId());
  createAccessKeyType.setUserName(action.properties.getUserName());
  CreateAccessKeyResponseType createAccessKeyResponseType=AsyncRequests.<CreateAccessKeyType,CreateAccessKeyResponseType>sendSync(configuration,createAccessKeyType);
  action.info.setPhysicalResourceId(createAccessKeyResponseType.getCreateAccessKeyResult().getAccessKey().getAccessKeyId());
  action.info.setSecretAccessKey(JsonHelper.getStringFromJsonNode(new TextNode(createAccessKeyResponseType.getCreateAccessKeyResult().getAccessKey().getSecretAccessKey())));
  action.info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(action.info.getPhysicalResourceId())));
  return action;
}
