{
  ServiceConfiguration configuration=Topology.lookup(Euare.class);
  if (!"Active".equals(properties.getStatus()) && !"Inactive".equals(properties.getStatus())) {
    throw new ValidationErrorException("Invalid status " + properties.getStatus());
  }
  CreateAccessKeyType createAccessKeyType=new CreateAccessKeyType();
  createAccessKeyType.setEffectiveUserId(info.getEffectiveUserId());
  createAccessKeyType.setUserName(properties.getUserName());
  CreateAccessKeyResponseType createAccessKeyResponseType=AsyncRequests.<CreateAccessKeyType,CreateAccessKeyResponseType>sendSync(configuration,createAccessKeyType);
  info.setPhysicalResourceId(createAccessKeyResponseType.getCreateAccessKeyResult().getAccessKey().getAccessKeyId());
  info.setSecretAccessKey(JsonHelper.getStringFromJsonNode(new TextNode(createAccessKeyResponseType.getCreateAccessKeyResult().getAccessKey().getSecretAccessKey())));
  info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(info.getPhysicalResourceId())));
  UpdateAccessKeyType updateAccessKeyType=new UpdateAccessKeyType();
  updateAccessKeyType.setUserName(properties.getUserName());
  updateAccessKeyType.setAccessKeyId(info.getPhysicalResourceId());
  updateAccessKeyType.setStatus(properties.getStatus());
  updateAccessKeyType.setEffectiveUserId(info.getEffectiveUserId());
  AsyncRequests.<UpdateAccessKeyType,UpdateAccessKeyResponseType>sendSync(configuration,updateAccessKeyType);
}
