{
  ServiceConfiguration configuration=Topology.lookup(Euare.class);
  if (properties.getStatus() == null)   properties.setStatus("Active");
switch (stepNum) {
case 0:
    if (!"Active".equals(properties.getStatus()) && !"Inactive".equals(properties.getStatus())) {
      throw new ValidationErrorException("Invalid status " + properties.getStatus());
    }
  CreateAccessKeyType createAccessKeyType=new CreateAccessKeyType();
createAccessKeyType.setEffectiveUserId(info.getEffectiveUserId());
createAccessKeyType.setUserName(properties.getUserName());
CreateAccessKeyResponseType createAccessKeyResponseType=AsyncRequests.<CreateAccessKeyType,CreateAccessKeyResponseType>sendSync(configuration,createAccessKeyType);
info.setPhysicalResourceId(createAccessKeyResponseType.getCreateAccessKeyResult().getAccessKey().getAccessKeyId());
info.setSecretAccessKey(JsonHelper.getStringFromJsonNode(new TextNode(createAccessKeyResponseType.getCreateAccessKeyResult().getAccessKey().getSecretAccessKey())));
info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(info.getPhysicalResourceId())));
break;
case 1:
UpdateAccessKeyType updateAccessKeyType=new UpdateAccessKeyType();
updateAccessKeyType.setUserName(properties.getUserName());
updateAccessKeyType.setAccessKeyId(info.getPhysicalResourceId());
updateAccessKeyType.setStatus(properties.getStatus());
updateAccessKeyType.setEffectiveUserId(info.getEffectiveUserId());
AsyncRequests.<UpdateAccessKeyType,UpdateAccessKeyResponseType>sendSync(configuration,updateAccessKeyType);
break;
default :
throw new IllegalStateException("Invalid step " + stepNum);
}
}
