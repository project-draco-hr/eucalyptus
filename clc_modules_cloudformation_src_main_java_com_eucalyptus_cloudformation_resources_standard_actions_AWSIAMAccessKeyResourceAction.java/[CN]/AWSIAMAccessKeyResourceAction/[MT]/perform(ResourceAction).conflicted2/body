{
  AWSIAMAccessKeyResourceAction action=(AWSIAMAccessKeyResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Euare.class);
  if (action.info.getPhysicalResourceId() == null)   return action;
  if (action.properties.getStatus() == null)   action.properties.setStatus("Active");
  boolean seenAllUsers=false;
  boolean foundUser=false;
  String userMarker=null;
  while (!seenAllUsers && !foundUser) {
    ListUsersType listUsersType=MessageHelper.createMessage(ListUsersType.class,action.info.getEffectiveUserId());
    if (userMarker != null) {
      listUsersType.setMarker(userMarker);
    }
    ListUsersResponseType listUsersResponseType=AsyncRequests.<ListUsersType,ListUsersResponseType>sendSync(configuration,listUsersType);
    if (listUsersResponseType.getListUsersResult().getIsTruncated() == Boolean.TRUE) {
      userMarker=listUsersResponseType.getListUsersResult().getMarker();
    }
 else {
      seenAllUsers=true;
    }
    if (listUsersResponseType.getListUsersResult().getUsers() != null && listUsersResponseType.getListUsersResult().getUsers().getMemberList() != null) {
      for (      UserType userType : listUsersResponseType.getListUsersResult().getUsers().getMemberList()) {
        if (userType.getUserName().equals(action.properties.getUserName())) {
          foundUser=true;
          break;
        }
      }
    }
  }
  if (!foundUser)   return action;
  boolean seenAllAccessKeys=false;
  boolean foundAccessKey=false;
  String accessKeyMarker=null;
  while (!seenAllAccessKeys && !foundAccessKey) {
    ListAccessKeysType listAccessKeysType=MessageHelper.createMessage(ListAccessKeysType.class,action.info.getEffectiveUserId());
    listAccessKeysType.setUserName(action.properties.getUserName());
    if (accessKeyMarker != null) {
      listAccessKeysType.setMarker(accessKeyMarker);
    }
    ListAccessKeysResponseType listAccessKeysResponseType=AsyncRequests.<ListAccessKeysType,ListAccessKeysResponseType>sendSync(configuration,listAccessKeysType);
    if (listAccessKeysResponseType.getListAccessKeysResult().getIsTruncated() == Boolean.TRUE) {
      accessKeyMarker=listAccessKeysResponseType.getListAccessKeysResult().getMarker();
    }
 else {
      seenAllAccessKeys=true;
    }
    if (listAccessKeysResponseType.getListAccessKeysResult().getAccessKeyMetadata() != null && listAccessKeysResponseType.getListAccessKeysResult().getAccessKeyMetadata().getMemberList() != null) {
      for (      AccessKeyMetadataType accessKeyMetadataType : listAccessKeysResponseType.getListAccessKeysResult().getAccessKeyMetadata().getMemberList()) {
        if (accessKeyMetadataType.getAccessKeyId().equals(action.info.getPhysicalResourceId())) {
          foundAccessKey=true;
          break;
        }
      }
    }
  }
  if (!foundAccessKey)   return action;
  DeleteAccessKeyType deleteAccessKeyType=MessageHelper.createMessage(DeleteAccessKeyType.class,action.info.getEffectiveUserId());
  deleteAccessKeyType.setUserName(action.properties.getUserName());
  deleteAccessKeyType.setAccessKeyId(action.info.getPhysicalResourceId());
  AsyncRequests.<DeleteAccessKeyType,DeleteAccessKeyResponseType>sendSync(configuration,deleteAccessKeyType);
  return action;
}
