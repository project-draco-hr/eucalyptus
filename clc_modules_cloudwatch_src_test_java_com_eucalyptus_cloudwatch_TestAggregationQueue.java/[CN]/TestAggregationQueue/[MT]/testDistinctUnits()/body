{
  final Date now=MetricManager.stripSeconds(new Date());
  final Map<String,String> hashMap=new HashMap<String,String>();
  hashMap.put("dim1","val1");
  hashMap.put("dim2","val2");
  final Map<String,String> treeMap=new TreeMap<String,String>();
  treeMap.put("dim2","val2");
  treeMap.put("dim1","val1");
  ArrayList<MetricQueueItem> list=new ArrayList<MetricQueueItem>();
  for (int i=0; i < 10; i++) {
    MetricQueueItem mqi=new MetricQueueItem();
    mqi.setAccountId("account1");
    mqi.setDimensionMap((i % 3 == 0) ? hashMap : treeMap);
    mqi.setMetricName("metric1");
    mqi.setMetricType(MetricType.Custom);
    mqi.setNamespace("namespace1");
    mqi.setSampleMax((double)i);
    mqi.setSampleMin((double)i);
    mqi.setSampleSize((double)1);
    mqi.setSampleSum((double)i);
    mqi.setTimestamp(now);
    mqi.setUnits((i % 2 == 0) ? Units.None : Units.Count);
    mqi.setUserId("user1");
    list.add(mqi);
  }
  List<MetricQueueItem> aggregateList=MetricDataQueue.aggregate(list);
  assertEquals(2,aggregateList.size());
  MetricQueueItem odd, even;
  if (aggregateList.get(0).getUnits().equals(Units.None)) {
    even=aggregateList.get(0);
    odd=aggregateList.get(1);
  }
 else {
    even=aggregateList.get(1);
    odd=aggregateList.get(0);
  }
  assertEquals(even.getSampleMax().doubleValue(),8.0,TOLERANCE);
  assertEquals(even.getSampleMin().doubleValue(),0.0,TOLERANCE);
  assertEquals(even.getSampleSize().doubleValue(),5.0,TOLERANCE);
  assertEquals(even.getSampleSum().doubleValue(),20.0,TOLERANCE);
  assertEquals(even.getAccountId(),"account1");
  assertEquals(even.getDimensionMap(),hashMap);
  assertEquals(even.getMetricName(),"metric1");
  assertEquals(even.getMetricType(),MetricType.Custom);
  assertEquals(even.getNamespace(),"namespace1");
  assertEquals(even.getTimestamp(),now);
  assertEquals(even.getUnits(),Units.None);
  assertEquals(even.getUserId(),"user1");
  assertEquals(odd.getSampleMax().doubleValue(),9.0,TOLERANCE);
  assertEquals(odd.getSampleMin().doubleValue(),1.0,TOLERANCE);
  assertEquals(odd.getSampleSize().doubleValue(),5.0,TOLERANCE);
  assertEquals(odd.getSampleSum().doubleValue(),25.0,TOLERANCE);
  assertEquals(odd.getAccountId(),"account1");
  assertEquals(odd.getDimensionMap(),treeMap);
  assertEquals(odd.getMetricName(),"metric1");
  assertEquals(odd.getMetricType(),MetricType.Custom);
  assertEquals(odd.getNamespace(),"namespace1");
  assertEquals(odd.getTimestamp(),now);
  assertEquals(odd.getUnits(),Units.Count);
  assertEquals(odd.getUserId(),"user1");
}
