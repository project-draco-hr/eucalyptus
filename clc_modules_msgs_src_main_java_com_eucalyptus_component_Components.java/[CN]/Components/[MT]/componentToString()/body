{
  if (componentToString != null) {
    return componentToString;
  }
 else {
synchronized (Components.class) {
      return new Function<Component,String>(){
        @Override public String apply(        Component comp){
          final StringBuilder buf=new StringBuilder();
          buf.append(LogUtil.header(comp.getName() + " component configuration")).append("\n");
          buf.append("-> Enabled/Local:      " + comp.isEnabled() + "/"+ comp.isLocal()).append("\n");
          buf.append("-> State/Running:      " + comp.getState() + "/"+ comp.isRunning()).append("\n");
          buf.append("-> Builder:            " + comp.getBuilder().getClass().getSimpleName()).append("\n");
          buf.append("-> Disable/Remote cli: " + System.getProperty("euca." + comp.getPeer().name() + ".disable") + "/"+ System.getProperty("euca." + comp.getPeer().name() + ".remote")).append("\n");
          buf.append("-> Configuration:      " + (comp.getConfiguration().getResource() != null ? comp.getConfiguration().getResource().getOrigin() : "null")).append("\n");
          for (          Bootstrapper b : comp.getConfiguration().getBootstrappers()) {
            buf.append("-> " + b.toString()).append("\n");
          }
          buf.append(LogUtil.subheader(comp.getName() + " services")).append("\n");
          for (          Service s : comp.getServices()) {
            buf.append("->  Service:          " + s.getName() + " "+ s.getUri()).append("\n");
            buf.append("|-> Dispatcher:       " + s.getDispatcher().getName() + " for "+ s.getDispatcher().getAddress()).append("\n");
            buf.append("|-> Service Endpoint: " + s.getEndpoint()).append("\n");
            buf.append("|-> Service config:   " + LogUtil.dumpObject(s.getServiceConfiguration())).append("\n");
          }
          return buf.toString();
        }
      }
;
    }
  }
}
