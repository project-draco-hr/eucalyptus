{
  List<StackResourceEntity> returnValue=null;
  String stackId=null;
  try (TransactionResource db=Entities.transactionFor(StackResourceEntity.class)){
    Criteria criteria=Entities.createCriteria(StackResourceEntity.class).add(Restrictions.eq("accountId",accountId));
    if (stackNameOrId != null) {
      criteria.add(Restrictions.or(Restrictions.and(Restrictions.eq("recordDeleted",Boolean.FALSE),Restrictions.eq("stackName",stackNameOrId)),Restrictions.eq("stackId",stackNameOrId)));
    }
    if (logicalResourceId != null) {
      criteria.add(Restrictions.eq("logicalResourceId",logicalResourceId));
    }
    if (physicalResourceId != null) {
      criteria.add(Restrictions.eq("physicalResourceId",logicalResourceId));
    }
    criteria.add(Restrictions.ne("resourceStatus",StackResourceEntity.Status.NOT_STARTED.toString()));
    returnValue=criteria.list();
    db.commit();
  }
   return returnValue;
}
