{
synchronized (lock) {
    if ((oldSpi != null) && (oldSpi != spi)) {
      return spi;
    }
    if (serviceIterator == null) {
      return null;
    }
    while (serviceIterator.hasNext()) {
      Service s=(Service)serviceIterator.next();
      if (JceSecurity.canUseProvider(s.getProvider()) == false) {
        continue;
      }
      try {
        Object inst=s.newInstance(null);
        if (inst instanceof KeyGeneratorSpi == false) {
          continue;
        }
        KeyGeneratorSpi spi=(KeyGeneratorSpi)inst;
        if (reinit) {
          if (initType == I_SIZE) {
            spi.engineInit(initKeySize,initRandom);
          }
 else           if (initType == I_PARAMS) {
            spi.engineInit(initParams,initRandom);
          }
 else           if (initType == I_RANDOM) {
            spi.engineInit(initRandom);
          }
 else           if (initType != I_NONE) {
            throw new AssertionError("KeyGenerator initType: " + initType);
          }
        }
        provider=s.getProvider();
        this.spi=spi;
        return spi;
      }
 catch (      Exception e) {
      }
    }
    disableFailover();
    return null;
  }
}
