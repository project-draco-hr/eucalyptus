{
  final int volSz=1;
  VolumeInfo good=new VolumeInfo();
  good.setStatus(StorageProperties.Status.available.toString());
  good.setSize(new Integer(volSz));
  good.setUserName("unittestuser0");
  good.setVolumeId("vol-0000");
  good.setSnapshotId("snap-0000");
  good.setCreateTime(new Date());
  good.setZone("eucalyptus");
  try (TransactionResource tran=Entities.transactionFor(VolumeInfo.class)){
    Entities.persist(good);
    tran.commit();
  }
   final LogicalStorageManager storageManager=context.mock(LogicalStorageManager.class);
  context.checking(new Expectations(){
{
      oneOf(storageManager).cloneVolume("vol-0001","vol-0000");
      will(createVolume());
    }
  }
);
  BlockStorageController bsc=new BlockStorageController(storageManager);
  BlockStorageController.VolumeCreator bscvc=new BlockStorageController.VolumeCreator("vol-0001",null,null,"vol-0000",1);
  bscvc.run();
  List<VolumeInfo> remaining;
  try (TransactionResource tran=Entities.transactionFor(VolumeInfo.class)){
    remaining=Entities.query(new VolumeInfo());
    tran.commit();
  }
   assertTrue("expected to have a result set querying the eucalyptus_storage persistence context",remaining != null);
  assertTrue("expected two VolumeInfos to exist, but there are " + remaining.size(),remaining.size() == 2);
}
