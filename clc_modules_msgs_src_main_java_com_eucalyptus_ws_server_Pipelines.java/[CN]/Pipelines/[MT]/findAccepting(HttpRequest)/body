{
  final FilteredPipeline candidate=null;
  for (  final FilteredPipeline f : pipelines) {
    if (f.checkAccepts(request)) {
      return f;
    }
  }
  final String hostHeader=request.getHeader(HttpHeaders.Names.HOST);
  if (hostHeader != null && (hostHeader.contains("amazonaws.com") || hostHeader.contains(subDomain.get()))) {
    final String host=hostHeader.indexOf(':') > 0 ? hostHeader.substring(0,hostHeader.indexOf(':')) : hostHeader;
    LOG.debug("Trying to intercept request for " + hostHeader);
    for (    final FilteredPipeline f : pipelines) {
      if (Ats.from(f).has(ComponentPart.class)) {
        Class<? extends ComponentId> compIdClass=Ats.from(f).get(ComponentPart.class).value();
        ComponentId compId=ComponentIds.lookup(compIdClass);
        if (Ats.from(compIdClass).has(PublicService.class)) {
          if (request.getHeaderNames().contains("SOAPAction") && f.addHandlers(Channels.pipeline()).get(SoapHandler.class) == null) {
            continue;
          }
 else           if (!request.getHeaderNames().contains("SOAPAction") && f.addHandlers(Channels.pipeline()).get(SoapHandler.class) != null) {
            continue;
          }
          LOG.debug("Maybe intercepting: " + hostHeader + " using "+ f.getClass());
          if (Ats.from(compIdClass).has(AwsServiceName.class) && host.matches("[\\w\\.-_]*" + compId.getAwsServiceName() + "(?:\\.[\\w\\-]+)?\\.amazonaws.com")) {
            return f;
          }
 else           if (host.matches("[\\w\\.-_]*" + compId.name() + "\\."+ subDomain.get())) {
            return f;
          }
        }
      }
    }
  }
  if (candidate == null) {
    for (    final FilteredPipeline f : internalPipelines) {
      if (f.checkAccepts(request)) {
        return f;
      }
    }
  }
  return candidate;
}
