{
  AWSEC2VolumeResourceAction action=(AWSEC2VolumeResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  DescribeVolumesType describeVolumesType=MessageHelper.createMessage(DescribeVolumesType.class,action.info.getEffectiveUserId());
  describeVolumesType.setVolumeSet(Lists.newArrayList(action.info.getPhysicalResourceId()));
  DescribeVolumesResponseType describeVolumesResponseType=AsyncRequests.<DescribeVolumesType,DescribeVolumesResponseType>sendSync(configuration,describeVolumesType);
  if (describeVolumesResponseType.getVolumeSet().size() == 0) {
    throw new ValidationFailedException("Volume " + action.info.getPhysicalResourceId() + " not yet available");
  }
  if (!"available".equals(describeVolumesResponseType.getVolumeSet().get(0).getStatus())) {
    throw new ValidationFailedException("Volume " + action.info.getPhysicalResourceId() + " not yet available");
  }
  return action;
}
