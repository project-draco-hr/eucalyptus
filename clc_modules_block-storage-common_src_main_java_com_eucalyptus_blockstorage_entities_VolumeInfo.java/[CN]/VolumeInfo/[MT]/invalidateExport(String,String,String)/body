{
  Function<VolumeInfo,VolumeToken> invalidateToken=new Function<VolumeInfo,VolumeToken>(){
    @Override public VolumeToken apply(    VolumeInfo src){
      try {
        VolumeInfo volEntity=Entities.merge(src);
        VolumeToken token=volEntity.getAttachmentTokenIfValid(tokenValue);
        token.invalidateExport(nodeIp,nodeIqn);
        Entities.flush(token);
        return token;
      }
 catch (      Exception e) {
        LOG.error("Could not invalidate requested export with token " + tokenValue + " to "+ nodeIp+ " with iqn "+ nodeIqn);
      }
      return null;
    }
  }
;
  if (Entities.asTransaction(VolumeInfo.class,invalidateToken).apply(this) == null) {
    throw new EucalyptusCloudException("Failed on invalidation of token");
  }
}
