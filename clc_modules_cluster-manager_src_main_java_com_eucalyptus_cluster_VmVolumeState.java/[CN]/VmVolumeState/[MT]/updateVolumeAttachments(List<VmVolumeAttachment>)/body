{
  final Map<String,VmVolumeAttachment> ncAttachedVolMap=new HashMap<String,VmVolumeAttachment>(){
{
      for (      final VmVolumeAttachment v : ncAttachedVols) {
        this.put(v.getVolumeId(),v);
      }
    }
  }
;
  this.eachVolumeAttachment(new Predicate<VmVolumeAttachment>(){
    @Override public boolean apply(    final VmVolumeAttachment arg0){
      final String volId=arg0.getVolumeId();
      if (ncAttachedVolMap.containsKey(volId)) {
        final VmVolumeAttachment ncVol=ncAttachedVolMap.get(volId);
        if ("detached".equals(ncVol.getStatus())) {
          VmVolumeState.this.removeVolumeAttachment(volId);
        }
 else         if ("attaching".equals(arg0.getStatus()) || "attached".equals(arg0.getStatus())) {
          VmVolumeState.this.updateVolumeAttachment(volId,arg0.getStatus());
        }
      }
 else       if ("detaching".equals(arg0.getStatus())) {
        VmVolumeState.this.removeVolumeAttachment(volId);
      }
      ncAttachedVolMap.remove(volId);
      return true;
    }
  }
);
  for (  final VmVolumeAttachment v : ncAttachedVolMap.values()) {
    if ("attached".equals(v.getStatus())) {
      LOG.warn("Restoring volume attachment state for " + this.getVmInstance().getInstanceId() + " with "+ v.toString());
      this.addVolumeAttachment(v);
    }
  }
}
