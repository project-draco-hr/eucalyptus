{
  ConcurrentNavigableMap<String,NodeInfo> clusterNodeMap=Clusters.lookup(ccConfig).getNodeMap();
  Set<String> knownTags=Sets.newHashSet(clusterNodeMap.keySet());
  Set<String> reportedTags=Sets.newHashSet();
  for (  final NodeType node : nodes) {
    reportedTags.add(node.getServiceTag());
  }
  Set<String> unreportedTags=Sets.difference(knownTags,reportedTags);
  Set<String> newTags=Sets.difference(reportedTags,knownTags);
  Set<String> stillKnownTags=Sets.intersection(knownTags,reportedTags);
  StringBuilder nodeLog=new StringBuilder();
  for (  String unreportedTag : unreportedTags) {
    NodeInfo unreportedNode=clusterNodeMap.get(unreportedTag);
    if (unreportedNode != null && (System.currentTimeMillis() - unreportedNode.getLastSeen().getTime()) > Nodes.REFRESH_TIMEOUT) {
      Topology.destroy(Components.lookup(NodeController.class).lookup(unreportedNode.getName()));
      NodeInfo removed=clusterNodeMap.remove(unreportedTag);
      nodeLog.append("GONE:").append(removed.getName()).append(":").append(removed.getLastState()).append(" ");
    }
  }
  Set<NodeInfo> nodesToUpdate=Sets.newHashSet();
  for (  final NodeType node : nodes) {
    try {
      String serviceTag=node.getServiceTag();
      if (newTags.contains(serviceTag)) {
        clusterNodeMap.putIfAbsent(serviceTag,new NodeInfo(ccConfig.getPartition(),node));
        NodeInfo nodeInfo=clusterNodeMap.get(serviceTag);
        nodeLog.append("NEW:").append(nodeInfo.getName()).append(":").append(nodeInfo.getLastState()).append(" ");
        nodesToUpdate.add(nodeInfo);
      }
 else       if (stillKnownTags.contains(serviceTag)) {
        NodeInfo nodeInfo=clusterNodeMap.get(serviceTag);
        nodeInfo.setIqn(node.getIqn());
        nodeLog.append("OLD:").append(nodeInfo.getName()).append(":").append(nodeInfo.getLastState()).append(" ");
        nodesToUpdate.add(nodeInfo);
      }
    }
 catch (    NoSuchElementException e) {
      LOG.error(e);
      LOG.debug(e,e);
    }
  }
  LOG.debug("Updated node info map: " + nodeLog.toString());
  try {
    Nodes.updateServiceConfiguration(ccConfig,nodesToUpdate);
  }
 catch (  Exception e) {
    if (!Component.State.ENABLED.apply(ccConfig))     LOG.debug("Error while updating nodes: " + e.getMessage(),e);
  }
}
