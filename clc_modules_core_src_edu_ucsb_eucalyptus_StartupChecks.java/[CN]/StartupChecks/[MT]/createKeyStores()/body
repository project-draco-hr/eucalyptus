{
  LOG.info(String.format(HEADER_FSTRING,"Create service keystore"));
  AbstractKeyStore serviceKeyStore=ServiceKeyStore.getInstance();
  LOG.info(String.format(HEADER_FSTRING,"Create user keystore"));
  AbstractKeyStore userKeyStore=UserKeyStore.getInstance();
  LOG.info(String.format(HEADER_FSTRING,"Create www keystore"));
  AbstractKeyStore eucaKeyStore=EucaKeyStore.getInstance();
  try {
    LOG.info(String.format(HEADER_FSTRING,"Create system keys"));
    KeyTool keyTool=new KeyTool();
    KeyPair sysKp=keyTool.getKeyPair();
    X509Certificate sysX509=keyTool.getCertificate(sysKp,EucalyptusProperties.getDName(EucalyptusProperties.NAME));
    keyTool.writePem(String.format("%s/cloud-cert.pem",SubDirectory.KEYS.toString()),sysX509);
    keyTool.writePem(String.format("%s/cloud-pk.pem",SubDirectory.KEYS.toString()),sysKp.getPrivate());
    KeyPair wwwKp=keyTool.getKeyPair();
    X509Certificate wwwX509=keyTool.getCertificate(wwwKp,EucalyptusProperties.getDName(EucalyptusProperties.WWW_NAME));
    LOG.info(String.format(HEADER_FSTRING,"Store system keys"));
    serviceKeyStore.addKeyPair(EucalyptusProperties.NAME,sysX509,sysKp.getPrivate(),EucalyptusProperties.NAME);
    userKeyStore.addKeyPair(EucalyptusProperties.NAME,sysX509,sysKp.getPrivate(),EucalyptusProperties.NAME);
    eucaKeyStore.addKeyPair(EucalyptusProperties.NAME,sysX509,sysKp.getPrivate(),EucalyptusProperties.NAME);
    eucaKeyStore.addKeyPair(EucalyptusProperties.WWW_NAME,wwwX509,wwwKp.getPrivate(),EucalyptusProperties.NAME);
    serviceKeyStore.store();
    userKeyStore.store();
    eucaKeyStore.store();
  }
 catch (  Exception e) {
    serviceKeyStore.remove();
    userKeyStore.remove();
    eucaKeyStore.remove();
    new File(String.format("%s/cloud-pk.pem",SubDirectory.KEYS.toString())).delete();
    new File(String.format("%s/cloud-cert.pem",SubDirectory.KEYS.toString())).delete();
    StartupChecks.fail("Eucalyptus requires the unlimited strength jurisdiction policy files for the JCE.","Please see the documentation for more information.");
  }
}
