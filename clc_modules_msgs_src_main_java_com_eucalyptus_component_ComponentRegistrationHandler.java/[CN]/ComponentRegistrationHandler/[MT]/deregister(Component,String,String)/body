{
  final ServiceBuilder builder=component.getBuilder();
  LOG.info("Using builder: " + builder.getClass().getSimpleName());
  try {
    if (!builder.checkRemove(partition,name)) {
      LOG.info(builder.getClass().getSimpleName() + ": checkRemove failed.");
      throw new ServiceRegistrationException(builder.getClass().getSimpleName() + ": checkRemove returned false.  It is unsafe to currently deregister, please check the logs for additional information.");
    }
  }
 catch (  Exception e) {
    LOG.info(builder.getClass().getSimpleName() + ": checkRemove failed.");
    throw new ServiceRegistrationException(builder.getClass().getSimpleName() + ": checkRemove failed with message: " + e.getMessage(),e);
  }
  ServiceConfiguration conf;
  try {
    conf=builder.lookupByName(name);
  }
 catch (  ServiceRegistrationException e) {
    LOG.info(builder.getClass().getSimpleName() + ": lookupByName failed.");
    LOG.error(e,e);
    throw e;
  }
  try {
    try {
      builder.getComponent().destroyTransition(conf);
    }
 catch (    Throwable ex) {
      LOG.error(ex,ex);
    }
    builder.remove(conf);
    return true;
  }
 catch (  Throwable e) {
    LOG.info(builder.getClass().getSimpleName() + ": remove failed.");
    LOG.info(e.getMessage());
    LOG.error(e,e);
    throw new ServiceRegistrationException(builder.getClass().getSimpleName() + ": remove failed with message: " + e.getMessage(),e);
  }
}
