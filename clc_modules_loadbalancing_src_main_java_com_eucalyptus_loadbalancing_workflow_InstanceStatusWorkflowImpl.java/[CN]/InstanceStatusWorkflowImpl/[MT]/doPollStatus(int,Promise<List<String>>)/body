{
  final List<String> instances=servoInstances.get();
  final List<Promise<Map<String,String>>> activities=Lists.newArrayList();
  for (  final String instanceId : instances) {
    final ActivitySchedulingOptions scheduler=new ActivitySchedulingOptions();
    scheduler.setTaskList(instanceId);
    scheduler.setScheduleToCloseTimeoutSeconds(10L);
    activities.add(client.filterInstanceStatus(Promise.asPromise(accountId),Promise.asPromise(loadbalancer),Promise.asPromise(instanceId),vmClient.getInstanceStatus(scheduler)));
  }
  final Promise<List<Map<String,String>>> allActivities=Promises.listOfPromisesToPromise(activities);
  final Promise<Void> timer=startDaemonTimer(POLLING_PERIOD_SEC);
  final Promise<Void> merge=client.updateInstanceStatus(Promise.asPromise(accountId),Promise.asPromise(loadbalancer),allActivities);
  final OrPromise waitOrSignal=new OrPromise(timer,signalReceived);
  pollInstanceStatusPeriodic(count + 1,new AndPromise(merge,waitOrSignal));
}
