{
  com.eucalyptus.storage.msgs.s3.LifecycleRule ruleResponse=new com.eucalyptus.storage.msgs.s3.LifecycleRule();
  ruleResponse.setId(entity.getRuleId());
  ruleResponse.setStatus(entity.getEnabled() != null && entity.getEnabled().booleanValue() ? "Enabled" : "Disabled");
  ruleResponse.setPrefix(entity.getPrefix());
  if (entity.getExpirationDate() != null) {
    Expiration expiration=new Expiration();
    expiration.setEffectiveDate(entity.getExpirationDate());
    ruleResponse.setExpiration(expiration);
  }
  if (entity.getExpirationDays() != null) {
    Expiration expiration=new Expiration();
    expiration.setCreationDelayDays(entity.getExpirationDays().intValue());
    ruleResponse.setExpiration(expiration);
  }
  if (entity.getTransitionDate() != null) {
    Transition transition=new Transition();
    transition.setDestinationClass(entity.getTransitionStorageClass());
    transition.setEffectiveDate(entity.getTransitionDate());
    ruleResponse.setTransition(transition);
  }
  if (entity.getTransitionDays() != null) {
    Transition transition=new Transition();
    transition.setDestinationClass(entity.getTransitionStorageClass());
    transition.setCreationDelayDays(entity.getTransitionDays());
    ruleResponse.setTransition(transition);
  }
  return ruleResponse;
}
