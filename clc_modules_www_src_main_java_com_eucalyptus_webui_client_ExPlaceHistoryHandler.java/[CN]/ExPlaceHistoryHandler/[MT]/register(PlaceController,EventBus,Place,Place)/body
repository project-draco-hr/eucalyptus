{
  this.placeController=placeController;
  this.defaultPlace=defaultPlace;
  this.errorPlace=errorPlace;
  final HandlerRegistration placeReg=eventBus.addHandler(PlaceChangeEvent.TYPE,new PlaceChangeEvent.Handler(){
    public void onPlaceChange(    PlaceChangeEvent event){
      log().log(Level.INFO,"Place changed");
      Place newPlace=event.getNewPlace();
      historian.newItem(tokenForPlace(newPlace),false);
    }
  }
);
  final HandlerRegistration historyReg=historian.addValueChangeHandler(new ValueChangeHandler<String>(){
    public void onValueChange(    ValueChangeEvent<String> event){
      String token=event.getValue();
      log().log(Level.INFO,"History changed: " + token);
      handleHistoryToken(token);
    }
  }
);
  return new HandlerRegistration(){
    public void removeHandler(){
      ExPlaceHistoryHandler.this.defaultPlace=Place.NOWHERE;
      ExPlaceHistoryHandler.this.placeController=null;
      placeReg.removeHandler();
      historyReg.removeHandler();
    }
  }
;
}
