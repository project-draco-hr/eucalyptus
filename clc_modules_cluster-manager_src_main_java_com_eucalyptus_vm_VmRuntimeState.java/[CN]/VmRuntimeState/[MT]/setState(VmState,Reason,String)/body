{
  final VmState olderState=this.getVmInstance().getLastState();
  final VmState oldState=this.getVmInstance().getState();
  final Callable<Boolean> action;
  if (!oldState.equals(newState)) {
    action=handleStateTransition(newState,oldState,olderState);
  }
 else {
    action=null;
  }
  if (action != null) {
    if (Reason.APPEND.equals(reason)) {
      reason=this.reason;
    }
    this.addReasonDetail(extra);
    this.reason=reason;
    Entities.registerSynchronization(VmInstance.class,new Synchronization(){
      @Override public void beforeCompletion(){
      }
      @Override public void afterCompletion(      final int status){
        if (Status.STATUS_COMMITTED == status)         try {
          Threads.enqueue(Eucalyptus.class,VmInstance.class,VmInstances.MAX_STATE_THREADS,action);
        }
 catch (        final Exception ex) {
          LOG.error(ex);
          Logs.extreme().error(ex,ex);
        }
      }
    }
);
  }
}
