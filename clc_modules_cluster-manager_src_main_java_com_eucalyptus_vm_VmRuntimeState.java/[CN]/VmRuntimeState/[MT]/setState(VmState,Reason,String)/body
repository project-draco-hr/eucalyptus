{
  final VmState olderState=this.getVmInstance().getLastState();
  final VmState oldState=this.getVmInstance().getState();
  Callable<Boolean> action=null;
  if (VmStateSet.RUN.contains(newState) && VmStateSet.NOT_RUNNING.contains(oldState)) {
    action=this.cleanUpRunnable(SEND_USER_TERMINATE);
  }
 else   if (!oldState.equals(newState)) {
    action=handleStateTransition(newState,oldState,olderState);
  }
  this.getVmInstance().updateTimeStamps();
  if (action != null) {
    if (Reason.APPEND.equals(reason)) {
      reason=this.reason;
    }
    this.addReasonDetail(extra);
    this.reason=reason;
    try {
      Threads.enqueue(Eucalyptus.class,VmInstance.class,VmInstances.MAX_STATE_THREADS,action).get(10,TimeUnit.MILLISECONDS);
    }
 catch (    final TimeoutException ex) {
    }
catch (    final InterruptedException ex) {
    }
catch (    final Exception ex) {
      LOG.error(ex);
      Logs.extreme().error(ex,ex);
    }
  }
}
