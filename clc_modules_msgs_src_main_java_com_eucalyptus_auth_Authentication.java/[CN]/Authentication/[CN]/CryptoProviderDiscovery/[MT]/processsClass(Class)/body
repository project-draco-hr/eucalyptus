{
  if (!Modifier.isInterface(candidate.getModifiers()) && !Modifier.isAbstract(candidate.getModifiers()) && BaseSecurityProvider.class.isAssignableFrom(candidate)) {
    try {
      BaseSecurityProvider o=(BaseSecurityProvider)candidate.newInstance();
      for (      Class c : Authentication.providers.keySet()) {
        if (c.isAssignableFrom(candidate)) {
          Object curr=Authentication.providers.get(c);
          if (DUMMY.equals(curr)) {
            LOG.info(EventRecord.here(this.getClass(),EventType.PROVIDER_CONFIGURED,c.getSimpleName(),candidate.getCanonicalName()));
            Authentication.providers.put(c,o);
          }
 else           if (!candidate.getSimpleName().startsWith("Default")) {
            LOG.info(EventRecord.here(this.getClass(),EventType.PROVIDER_CONFLICT,c.getSimpleName(),"current",curr.getClass().getCanonicalName()));
            LOG.info(EventRecord.here(this.getClass(),EventType.PROVIDER_CONFLICT,c.getSimpleName(),"candidate",candidate.getCanonicalName()));
            Authentication.providers.put(c,o);
          }
 else {
            LOG.info(EventRecord.here(this.getClass(),EventType.PROVIDER_IGNORED,c.getSimpleName(),candidate.getCanonicalName()));
            return false;
          }
        }
      }
      return true;
    }
 catch (    Exception e) {
      LOG.error(e,e);
      LOG.fatal("Provider class " + candidate + " failed during <init>().  This must be fixed for the system to run.");
      System.exit(-1);
    }
  }
  return false;
}
