{
  AWSCredentialsProvider provider=null;
  if (this.credentialPropertyFile != null) {
    provider=new AWSCredentialsProvider(){
      private String accessKey=null;
      private String secretAccessKey=null;
      private void readProperty() throws FileNotFoundException, IOException {
        final FileInputStream stream=new FileInputStream(new File(credentialPropertyFile));
        try {
          Properties credentialProperties=new Properties();
          credentialProperties.load(stream);
          if (credentialProperties.getProperty("accessKey") == null || credentialProperties.getProperty("secretKey") == null) {
            throw new IllegalArgumentException("The specified file (" + credentialPropertyFile + ") doesn't contain the expected properties 'accessKey' "+ "and 'secretKey'.");
          }
          accessKey=credentialProperties.getProperty("accessKey");
          secretAccessKey=credentialProperties.getProperty("secretKey");
        }
  finally {
          try {
            stream.close();
          }
 catch (          final IOException e) {
          }
        }
      }
      @Override public AWSCredentials getCredentials(){
        if (this.accessKey == null || this.secretAccessKey == null) {
          try {
            readProperty();
          }
 catch (          final Exception ex) {
            throw new RuntimeException("Failed to read credentials file",ex);
          }
        }
        return new BasicAWSCredentials(accessKey,secretAccessKey);
      }
      @Override public void refresh(){
        this.accessKey=null;
      }
    }
;
  }
 else {
    provider=new InstanceProfileCredentialsProvider();
  }
  return provider;
}
