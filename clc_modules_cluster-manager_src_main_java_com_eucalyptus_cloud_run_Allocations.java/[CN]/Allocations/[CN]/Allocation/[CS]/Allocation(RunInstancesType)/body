{
  this.context=Contexts.lookup();
  this.instanceIds=Maps.newHashMap();
  this.request=request;
  this.minCount=request.getMinCount();
  this.maxCount=request.getMaxCount();
  this.usePrivateAddressing="private".equals(request.getAddressingType());
  this.monitoring=request.getMonitoring() == null ? Boolean.FALSE : request.getMonitoring();
  this.clientToken=Strings.emptyToNull(request.getClientToken());
  this.ownerFullName=this.context.getUserFullName();
  if ((this.request.getInstanceType() == null) || "".equals(this.request.getInstanceType())) {
    this.request.setInstanceType(VmTypes.defaultTypeName());
  }
  final String iamInstanceProfileArn=this.request.getIamInstanceProfileArn();
  final String iamInstanceProfileName=this.request.getIamInstanceProfileName();
  if (!iamInstanceProfileArn.equals("")) {
    this.nameOrArn=iamInstanceProfileArn;
    this.request.setInstanceProfileNameOrArn(this.nameOrArn);
  }
 else   if (!iamInstanceProfileName.equals("")) {
    this.nameOrArn=iamInstanceProfileName;
    this.request.setInstanceProfileNameOrArn(this.nameOrArn);
  }
 else {
    this.nameOrArn="";
  }
  this.reservationIndex=UniqueIds.nextIndex(VmInstance.class,(long)request.getMaxCount());
  this.reservationId=VmInstances.getId(this.reservationIndex,0).replaceAll("i-","r-");
  this.request.setMonitoring(this.monitoring);
  if (this.request.getUserData() != null) {
    try {
      this.userData=Base64.decode(this.request.getUserData());
      this.request.setUserData(new String(Base64.encode(this.userData)));
    }
 catch (    Exception e) {
    }
  }
 else {
    try {
      this.request.setUserData(new String(Base64.encode(new byte[0])));
    }
 catch (    Exception ex) {
      LOG.error(ex,ex);
    }
  }
}
