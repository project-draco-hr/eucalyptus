{
  try {
    this.getAccount().lookupUserByName(name);
  }
 catch (  AuthException e) {
    EntityWrapper<UserEntity> db=EntityWrapper.get(UserEntity.class);
    try {
      UserEntity user=db.getUnique(UserEntity.newInstanceWithUserId(this.delegate.getUserId()));
      user.setName(name);
      for (      GroupEntity g : user.getGroups()) {
        if (g.isUserGroup()) {
          g.setName(DatabaseAuthUtils.getUserGroupName(name));
          break;
        }
      }
      db.commit();
    }
 catch (    Exception t) {
      Debugging.logError(LOG,t,"Failed to setName for " + this.delegate);
      db.rollback();
      throw new AuthException(t);
    }
    return;
  }
  throw new AuthException("Can not change to a name already in use: " + name);
}
