{
  List<Policy> results=Lists.newArrayList();
  EntityWrapper<UserEntity> db=EntityWrapper.get(UserEntity.class);
  try {
    UserEntity user=db.getUnique(UserEntity.newInstanceWithUserId(this.delegate.getUserId()));
    GroupEntity group=getUserGroupEntity(user);
    if (group == null) {
      throw new RuntimeException("Can't find user group for user " + this.delegate.getName());
    }
    for (    PolicyEntity p : group.getPolicies()) {
      results.add(new DatabasePolicyProxy(p));
    }
    db.commit();
    return results;
  }
 catch (  Exception e) {
    db.rollback();
    Debugging.logError(LOG,e,"Failed to get policies for " + this.delegate);
    throw new AuthException("Failed to get policies",e);
  }
}
