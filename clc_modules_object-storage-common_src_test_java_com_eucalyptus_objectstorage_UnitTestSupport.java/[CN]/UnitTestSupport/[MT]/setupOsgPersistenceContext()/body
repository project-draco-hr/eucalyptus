{
  Map<String,String> props=Maps.newHashMap();
  props.put("hibernate.ejb.interceptor.session_scoped","com.eucalyptus.entities.DelegatingInterceptor");
  props.put("hibernate.show_sql","false");
  props.put("hibernate.format_sql","false");
  props.put("hibernate.generate_statistics","false");
  props.put("hibernate.bytecode.use_reflection_optimizer","true");
  props.put("javax.persistence.jdbc.driver","org.apache.derby.jdbc.EmbeddedDriver");
  props.put("javax.persistence.jdbc.user","root");
  props.put("javax.persistence.jdbc.password","root");
  props.put("hibernate.hbm2ddl.auto","create");
  props.put("hibernate.cache.use_second_level_cache","false");
  props.put("hibernate.dialect","org.hibernate.dialect.DerbyDialect");
  props.put("hibernate.connection.url","jdbc:derby:memory:test;create=true");
  PersistenceContextConfiguration config=new PersistenceContextConfiguration("eucalyptus_osg",ImmutableList.<Class<?>>builder().add(Bucket.class).add(ObjectEntity.class).add(PartEntity.class).add(TorrentInfo.class).add(BucketTags.class).add(LifecycleRule.class).add(ScheduledJob.class).add(ObjectStorageGlobalConfiguration.class).add(S3AccessControlledEntity.class).add(S3ProviderConfiguration.class).build(),props);
  PersistenceContexts.registerPersistenceContext(config);
}
