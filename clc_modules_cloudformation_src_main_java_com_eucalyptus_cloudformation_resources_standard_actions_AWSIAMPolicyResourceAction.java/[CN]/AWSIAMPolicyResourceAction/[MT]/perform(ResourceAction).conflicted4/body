{
  AWSIAMPolicyResourceAction action=(AWSIAMPolicyResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Euare.class);
  if (action.info.getPhysicalResourceId() == null)   return action;
  Set<String> passedInRoles=IAMHelper.collectionToSetAndNullToEmpty(action.properties.getRoles());
  List<String> realRolesToRemovePolicyFrom=IAMHelper.getExistingRoles(configuration,passedInRoles,action.info.getEffectiveUserId());
  for (  String role : realRolesToRemovePolicyFrom) {
    DeleteRolePolicyType deleteRolePolicyType=MessageHelper.createMessage(DeleteRolePolicyType.class,action.info.getEffectiveUserId());
    deleteRolePolicyType.setRoleName(role);
    deleteRolePolicyType.setPolicyName(action.properties.getPolicyName());
    AsyncRequests.<DeleteRolePolicyType,DeleteRolePolicyResponseType>sendSync(configuration,deleteRolePolicyType);
  }
  Set<String> passedInUsers=action.properties.getUsers() == null ? new HashSet<String>() : Sets.newHashSet(action.properties.getUsers());
  List<String> realUsersToRemovePolicyFrom=IAMHelper.getExistingUsers(configuration,passedInUsers,action.info.getEffectiveUserId());
  for (  String user : realUsersToRemovePolicyFrom) {
    DeleteUserPolicyType deleteUserPolicyType=MessageHelper.createMessage(DeleteUserPolicyType.class,action.info.getEffectiveUserId());
    deleteUserPolicyType.setUserName(user);
    deleteUserPolicyType.setPolicyName(action.properties.getPolicyName());
    AsyncRequests.<DeleteUserPolicyType,DeleteUserPolicyResponseType>sendSync(configuration,deleteUserPolicyType);
  }
  Set<String> passedInGroups=IAMHelper.collectionToSetAndNullToEmpty(action.properties.getGroups());
  List<String> realGroupsToRemovePolicyFrom=IAMHelper.getExistingGroups(configuration,passedInGroups,action.info.getEffectiveUserId());
  for (  String group : realGroupsToRemovePolicyFrom) {
    DeleteGroupPolicyType deleteGroupPolicyType=MessageHelper.createMessage(DeleteGroupPolicyType.class,action.info.getEffectiveUserId());
    deleteGroupPolicyType.setGroupName(group);
    deleteGroupPolicyType.setPolicyName(action.properties.getPolicyName());
    AsyncRequests.<DeleteGroupPolicyType,DeleteGroupPolicyResponseType>sendSync(configuration,deleteGroupPolicyType);
  }
  return action;
}
