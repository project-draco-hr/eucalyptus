{
  AWSIAMPolicyResourceAction oldAction=(AWSIAMPolicyResourceAction)oldResourceAction;
  AWSIAMPolicyResourceAction newAction=(AWSIAMPolicyResourceAction)newResourceAction;
  ServiceConfiguration configuration=Topology.lookup(Euare.class);
  Set<String> oldGroupNames=IAMHelper.collectionToSetAndNullToEmpty(oldAction.properties.getGroups());
  Set<String> newGroupNames=IAMHelper.collectionToSetAndNullToEmpty(newAction.properties.getGroups());
  for (  String groupName : newGroupNames) {
    PutGroupPolicyType putGroupPolicyType=MessageHelper.createMessage(PutGroupPolicyType.class,newAction.info.getEffectiveUserId());
    putGroupPolicyType.setGroupName(groupName);
    putGroupPolicyType.setPolicyName(newAction.properties.getPolicyName());
    putGroupPolicyType.setPolicyDocument(newAction.properties.getPolicyDocument().toString());
    AsyncRequests.<PutGroupPolicyType,PutGroupPolicyResponseType>sendSync(configuration,putGroupPolicyType);
  }
  Collection<String> targetOldGroupNames=oldAction.properties.getPolicyName().equals(newAction.properties.getPolicyName()) ? Sets.difference(oldGroupNames,newGroupNames) : oldGroupNames;
  for (  String groupName : targetOldGroupNames) {
    DeleteGroupPolicyType deleteGroupPolicyType=MessageHelper.createMessage(DeleteGroupPolicyType.class,newAction.info.getEffectiveUserId());
    deleteGroupPolicyType.setGroupName(groupName);
    deleteGroupPolicyType.setPolicyName(oldAction.properties.getPolicyName());
    AsyncRequests.<DeleteGroupPolicyType,DeleteGroupPolicyResponseType>sendSync(configuration,deleteGroupPolicyType);
  }
  return newAction;
}
