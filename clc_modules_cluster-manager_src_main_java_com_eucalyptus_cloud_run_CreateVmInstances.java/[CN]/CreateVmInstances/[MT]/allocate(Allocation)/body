{
  long quantity=allocInfo.getAllocationTokens().size();
  Context ctx=allocInfo.getContext();
  User requestUser=ctx.getUser();
  UserFullName userFullName=ctx.getUserFullName();
  String action=PolicySpec.requestToAction(allocInfo.getRequest());
  String vmType=allocInfo.getVmType().getName();
  if (!Permissions.canAllocate(PolicySpec.VENDOR_EC2,PolicySpec.EC2_RESOURCE_VMTYPE,vmType,action,requestUser,1L)) {
    throw new EucalyptusCloudException("Quota exceeded in allocating vm type " + vmType + " for "+ requestUser.getName());
  }
  if (!Permissions.canAllocate(PolicySpec.VENDOR_EC2,PolicySpec.EC2_RESOURCE_INSTANCE,"",action,requestUser,quantity)) {
    throw new EucalyptusCloudException("Quota exceeded in allocating " + quantity + " vm instances for "+ requestUser.getName());
  }
  String reservationId=VmInstances.getId(allocInfo.getReservationIndex(),-1).replaceAll("i-","r-");
  int vmIndex=0;
  EntityTransaction db=Entities.get(VmInstance.class);
  try {
    for (    ResourceToken token : allocInfo.getAllocationTokens()) {
      VmInstance vmInst=makeVmInstance(token);
    }
    db.commit();
  }
 catch (  ResourceAllocationException ex) {
    db.rollback();
    Logs.extreme().error(ex,ex);
    throw ex;
  }
catch (  Exception ex) {
    db.rollback();
    Logs.extreme().error(ex,ex);
    throw new TransactionExecutionException(ex);
  }
  return allocInfo;
}
