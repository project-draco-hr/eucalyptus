{
  final String vmType=allocInfo.getVmType().getName();
  RestrictedTypes.allocate(vmType,Long.valueOf(allocInfo.getAllocationTokens().size()),allocInfo.getVmType().allocator());
  Function<Long,List<VmInstance>> allocator=new Function<Long,List<VmInstance>>(){
    @Override public List<VmInstance> apply(    Long input){
      List<VmInstance> vms=Lists.newArrayList();
      for (      final ResourceToken token : allocInfo.getAllocationTokens()) {
        try {
          VmInstance vmInst=VmInstance.Create.INSTANCE.apply(token);
          token.setVmInstance(vmInst);
        }
 catch (        Exception ex) {
          LOG.error(ex,ex);
          throw new RuntimeException(ex);
        }
      }
      return vms;
    }
  }
;
  RestrictedTypes.allocate(Long.valueOf(allocInfo.getAllocationTokens().size()),allocator);
  return allocInfo;
}
