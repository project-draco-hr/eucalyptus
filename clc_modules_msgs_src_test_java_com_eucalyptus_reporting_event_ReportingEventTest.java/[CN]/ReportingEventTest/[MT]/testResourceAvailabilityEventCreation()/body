{
  final ResourceAvailabilityEvent event=new ResourceAvailabilityEvent(ResourceType.Instance,Arrays.<Availability>asList(new Availability(4,2,Arrays.<Tag>asList(new Dimension("type","c1.small"))),new Availability(5,3,Arrays.<Tag>asList(new Dimension("type","a1.sauce"))),new Availability(6,4,Arrays.<Tag>asList(new Dimension("type","f2.foo"),new Type("color","red")))));
  assertEquals("type",ResourceType.Instance,event.getType());
  assertEquals("availability size",3,event.getAvailability().size());
  assertEquals("a0 total",4,Iterables.get(event.getAvailability(),0).getTotal());
  assertEquals("a0 available",2,Iterables.get(event.getAvailability(),0).getAvailable());
  assertEquals("a0 tags size",1,Iterables.get(event.getAvailability(),0).getTags().size());
  assertEquals("a1 total",5,Iterables.get(event.getAvailability(),1).getTotal());
  assertEquals("a1 available",3,Iterables.get(event.getAvailability(),1).getAvailable());
  assertEquals("a1 tags size",1,Iterables.get(event.getAvailability(),1).getTags().size());
  assertEquals("a2 total",6,Iterables.get(event.getAvailability(),2).getTotal());
  assertEquals("a2 available",4,Iterables.get(event.getAvailability(),2).getAvailable());
  assertEquals("a2 tags size",2,Iterables.get(event.getAvailability(),2).getTags().size());
  assertEquals("event string","[type:Instance,availability:[total:4,available:2,tags:[tag:type=c1.small]],[total:5,available:3,tags:[tag:type=a1.sauce]],[total:6,available:4,tags:[tag:type=f2.foo],[tag:color=red]]]",event.toString());
}
