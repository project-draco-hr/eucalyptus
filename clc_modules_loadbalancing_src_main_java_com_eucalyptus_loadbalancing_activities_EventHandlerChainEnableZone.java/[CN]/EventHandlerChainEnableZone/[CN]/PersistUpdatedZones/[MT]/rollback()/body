{
  for (  final LoadBalancerZone zone : this.persistedZones) {
    final EntityTransaction db=Entities.get(LoadBalancerZone.class);
    try {
      final LoadBalancerZone update=Entities.uniqueResult(zone);
      update.setState(LoadBalancerZone.STATE.OutOfService);
      Entities.persist(update);
      db.commit();
    }
 catch (    final Exception ex) {
      db.rollback();
      LOG.error("could not mark out of state for the zone",ex);
    }
 finally {
      if (db.isActive())       db.rollback();
    }
  }
}
