{
  if (!Ats.from(obj).has(Managed.class)) {
    throw Exceptions.trace(new RuntimeException("Attempted to register an object which doesn't have an @Managed annotation as an MBean."));
  }
 else {
    try {
      List<GroovyMBean> mbeans=(List<GroovyMBean>)GroovyUtil.eval("jmx.export{ " + Ats.from(obj).get(Managed.class).value() + "}",new HashMap(){
{
          put("jmx",jmxBuilder);
          put("obj",obj);
        }
      }
);
      for (      GroovyMBean mbean : mbeans) {
        LOG.info("MBean server: default=" + mbean.server().getDefaultDomain() + " all="+ Arrays.asList(mbean.server().getDomains()));
        LOG.info("Exported MBean: " + mbean);
      }
    }
 catch (    ScriptExecutionFailedException ex) {
      LOG.error("Exporting MBean failed: " + ex.getMessage(),ex);
    }
catch (    IOException ex) {
      LOG.error("Error after export MBean: " + ex.getMessage(),ex);
    }
  }
}
