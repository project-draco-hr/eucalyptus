{
  if (jmxBuilder == null) {
    return;
  }
 else {
    Class targetType=obj.getClass();
    if (targetType.isAnonymousClass()) {
      targetType=(targetType.getSuperclass() != null ? targetType.getSuperclass() : targetType.getInterfaces()[0]);
    }
    String exportString="jmx.export{ bean( " + " target: obj, " + " name: obj.class.package.name+\":type=${obj.class.simpleName}\","+ " desc: \"${obj.toString()}\""+ " ) }";
    for (    Class c : Classes.ancestors(targetType)) {
      File jmxConfig=SubDirectory.MANAGEMENT.getChildFile(c.getCanonicalName());
      if (jmxConfig.exists()) {
        LOG.trace("Trying to read jmx config file: " + jmxConfig.getAbsolutePath());
        try {
          exportString=Files.toString(jmxConfig,Charset.defaultCharset());
          LOG.trace("Succeeded reading jmx config file: " + jmxConfig.getAbsolutePath());
          break;
        }
 catch (        IOException ex) {
          LOG.error(ex,ex);
        }
      }
 else {
        try {
          final URL jmxConfigUrl=Resources.getResource(c,c.getSimpleName() + ".jmx-export.groovy");
          exportString=Resources.toString(jmxConfigUrl,Charsets.UTF_8);
          LOG.trace("Succeeded reading jmx config resource: " + jmxConfigUrl);
          break;
        }
 catch (        final IllegalArgumentException e) {
        }
catch (        final IOException ex) {
          LOG.error(ex,ex);
        }
      }
    }
    try {
      LOG.trace("Exporting MBean: " + obj);
      LOG.trace("Exporting MBean: " + exportString);
      List<GroovyMBean> mbeans=(List<GroovyMBean>)Groovyness.eval(exportString,new HashMap(){
{
          put("jmx",jmxBuilder);
          put("obj",obj);
        }
      }
);
      for (      GroovyMBean mbean : mbeans) {
        LOG.trace("MBean server: default=" + mbean.server().getDefaultDomain() + " all="+ Arrays.asList(mbean.server().getDomains()));
        LOG.trace("Exported MBean: " + mbean);
      }
    }
 catch (    ScriptExecutionFailedException ex) {
      LOG.error("Exporting MBean failed: " + ex.getMessage(),ex);
    }
catch (    IOException ex) {
      LOG.error("Error after export MBean: " + ex.getMessage(),ex);
    }
  }
}
