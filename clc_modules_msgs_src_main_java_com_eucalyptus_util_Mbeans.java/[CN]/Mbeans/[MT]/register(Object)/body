{
  if (obj.getClass().isAnonymousClass()) {
    throw Exceptions.uncatchable("MBeans.register(Object) only supports the registration of concrete classes, your argument is anonymous: " + obj.getClass().getName());
  }
  String defaultExport="bean( " + " target: obj, " + " name: \"${(obj.class.package.name}:type=${obj.getClass().getSimpleName()},\","+ " )";
  try {
    List<GroovyMBean> mbeans=(List<GroovyMBean>)GroovyUtil.eval("jmx.export{ " + defaultExport + "}",new HashMap(){
{
        put("jmx",jmxBuilder);
        put("obj",obj);
      }
    }
);
    for (    GroovyMBean mbean : mbeans) {
      LOG.info("MBean server: default=" + mbean.server().getDefaultDomain() + " all="+ Arrays.asList(mbean.server().getDomains()));
      LOG.info("Exported MBean: " + mbean);
    }
  }
 catch (  ScriptExecutionFailedException ex) {
    LOG.error("Exporting MBean failed: " + ex.getMessage(),ex);
  }
catch (  IOException ex) {
    LOG.error("Error after export MBean: " + ex.getMessage(),ex);
  }
}
