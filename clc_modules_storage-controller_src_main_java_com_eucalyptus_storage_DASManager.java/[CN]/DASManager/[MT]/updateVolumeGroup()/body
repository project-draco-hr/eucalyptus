{
  if (volumeGroup == null) {
    String dasDevice=DASInfo.getStorageInfo().getDASDevice();
    if (dasDevice != null) {
      try {
        boolean volumeGroupFound=false;
        try {
          String returnValue=getVolumeGroup(dasDevice);
          if (returnValue.length() > 0) {
            volumeGroupFound=true;
          }
        }
 catch (        ExecutionException e) {
          LOG.warn(e);
        }
        if (volumeGroupFound) {
          Pattern volumeGroupPattern=Pattern.compile("(?s:.*VG Name)(.*)\n.*");
          Matcher m=volumeGroupPattern.matcher(returnValue);
          if (m.find())           volumeGroup=m.group(1).trim();
 else           throw new EucalyptusCloudException("Not a volume group: " + dasDevice);
        }
 else {
          boolean physicalVolumeGroupFound=false;
          try {
            returnValue=getPhysicalVolume(dasDevice);
            if (returnValue.matches("(?s:.*)PV Name.*" + dasDevice + "(?s:.*)")) {
              physicalVolumeGroupFound=true;
            }
          }
 catch (          ExecutionException e) {
            LOG.warn(e);
          }
          if (!physicalVolumeGroupFound) {
            returnValue=createPhysicalVolume(dasDevice);
            if (returnValue.length() == 0) {
              throw new EucalyptusCloudException("Unable to create physical volume on device: " + dasDevice);
            }
          }
          returnValue=getPhysicalVolumeVerbose(dasDevice);
          if (!returnValue.matches("(?s:.*)PV Name.*" + dasDevice + "(?s:.*)")) {
            volumeGroup="vg-" + Hashes.getRandom(10);
            returnValue=createVolumeGroup(dasDevice,volumeGroup);
            if (returnValue.length() == 0) {
              throw new EucalyptusCloudException("Unable to create volume group: " + volumeGroup + " physical volume: "+ dasDevice);
            }
          }
 else {
            Pattern volumeGroupPattern=Pattern.compile("(?s:.*VG Name)(.*)\n.*");
            Matcher m=volumeGroupPattern.matcher(returnValue);
            if (m.find())             volumeGroup=m.group(1).trim();
 else             throw new EucalyptusCloudException("Unable to get volume group for physical volume: " + dasDevice);
          }
        }
      }
 catch (      ExecutionException e) {
        LOG.error(e);
        throw new EucalyptusCloudException(e);
      }
    }
 else {
      throw new EucalyptusCloudException("DAS partition not yet configured. Please specify partition.");
    }
  }
}
