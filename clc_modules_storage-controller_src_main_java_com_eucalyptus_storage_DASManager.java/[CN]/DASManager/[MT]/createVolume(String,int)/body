{
  updateVolumeGroup();
  File volumeDir=new File(DirectStorageInfo.getStorageInfo().getVolumesDir());
  volumeDir.mkdirs();
  VolumeEntityWrapperManager volumeManager=new VolumeEntityWrapperManager();
  String lvName="lv-" + Hashes.getRandom(4);
  LVMVolumeInfo lvmVolumeInfo=null;
  if (exportManager instanceof AOEManager) {
    lvmVolumeInfo=new AOEVolumeInfo();
  }
 else {
    lvmVolumeInfo=new ISCSIVolumeInfo();
  }
  volumeManager.finish();
  try {
    createLogicalVolume(lvName,size);
    try {
      volumeManager.exportVolume(lvmVolumeInfo,volumeGroup,lvName);
    }
 catch (    EucalyptusCloudException ex) {
      LOG.error(ex);
      String absoluteLVName=lvmRootDirectory + PATH_SEPARATOR + volumeGroup+ PATH_SEPARATOR+ lvName;
      String returnValue=removeLogicalVolume(absoluteLVName);
      throw ex;
    }
    lvmVolumeInfo.setVolumeId(volumeId);
    lvmVolumeInfo.setLvName(lvName);
    lvmVolumeInfo.setStatus(StorageProperties.Status.available.toString());
    lvmVolumeInfo.setSize(size);
    volumeManager=new VolumeEntityWrapperManager();
    volumeManager.add(lvmVolumeInfo);
    volumeManager.finish();
  }
 catch (  ExecutionException ex) {
    String error="Unable to run command: " + ex.getMessage();
    volumeManager.abort();
    LOG.error(error);
    throw new EucalyptusCloudException(error);
  }
}
