{
  if (c.isAnnotationPresent(Entity.class) && f.isAnnotationPresent(ConfigurableField.class)) {
    LOG.debug("Checking field: " + c.getName() + "."+ f.getName());
    ConfigurableClass classAnnote=(ConfigurableClass)c.getAnnotation(ConfigurableClass.class);
    ConfigurableField annote=f.getAnnotation(ConfigurableField.class);
    String fqPrefix=classAnnote.alias();
    String description=annote.description();
    String defaultValue=annote.initial();
    PropertyTypeParser p=PropertyTypeParser.get(f.getType());
    try {
      if (!Modifier.isStatic(f.getModifiers()) && !f.isAnnotationPresent(Transient.class)) {
        ConfigurableProperty prop=new SingletonDatabasePropertyEntry(c,fqPrefix,f,description,defaultValue,p,annote.readonly(),annote.displayName(),annote.type());
        return prop;
      }
    }
 catch (    Throwable e) {
      LOG.debug(e,e);
      return null;
    }
  }
 else {
    return null;
  }
  return null;
}
