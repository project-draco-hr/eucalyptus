{
  db=new Server();
  HsqlProperties props=new HsqlProperties();
  props.setProperty(ServerConstants.SC_KEY_NO_SYSTEM_EXIT,true);
  String dbPort=System.getProperty(DatabaseConfig.EUCA_DB_PORT);
  props.setProperty(ServerConstants.SC_KEY_PORT,Integer.parseInt(dbPort));
  props.setProperty(ServerConstants.SC_KEY_REMOTE_OPEN_DB,true);
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".0",SubDirectory.DB.toString() + File.separator + EucalyptusProperties.NAME);
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".0",EucalyptusProperties.NAME);
  String vol="_volumes";
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".1",SubDirectory.DB.toString() + File.separator + EucalyptusProperties.NAME+ vol);
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".1",EucalyptusProperties.NAME + vol);
  String auth="_auth";
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".2",SubDirectory.DB.toString() + File.separator + EucalyptusProperties.NAME+ auth);
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".2",EucalyptusProperties.NAME + auth);
  String config="_config";
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".3",SubDirectory.DB.toString() + File.separator + EucalyptusProperties.NAME+ config);
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".3",EucalyptusProperties.NAME + config);
  db.setProperties(props);
  return true;
}
