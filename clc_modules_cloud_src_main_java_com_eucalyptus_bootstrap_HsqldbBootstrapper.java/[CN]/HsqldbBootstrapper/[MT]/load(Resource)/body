{
  LOG.trace("Touching class: " + SslSetup.class);
  this.db=new Server();
  Component.db.markLocal();
  Component.db.markEnabled();
  Component.db.setHostAddress("127.0.0.1");
  System.setProperty("euca.db.url",Component.db.getUri().toASCIIString());
  System.setProperty("euca.db.password",Hashes.getHexSignature());
  String general=Component.eucalyptus.name() + "_general";
  this.prepareDatabase(general);
  String vol=Component.eucalyptus.name() + "_images";
  this.prepareDatabase(vol);
  String auth=Component.eucalyptus.name() + "_auth";
  this.prepareDatabase(auth);
  String config=Component.eucalyptus.name() + "_config";
  this.prepareDatabase(config);
  String walrus=Component.eucalyptus.name() + "_walrus";
  this.prepareDatabase(walrus);
  String storage=Component.eucalyptus.name() + "_storage";
  this.prepareDatabase(storage);
  String dns=Component.eucalyptus.name() + "_dns";
  this.prepareDatabase(dns);
  HsqlProperties props=new HsqlProperties();
  props.setProperty(ServerConstants.SC_KEY_NO_SYSTEM_EXIT,true);
  props.setProperty(ServerConstants.SC_KEY_PORT,9001);
  props.setProperty(ServerConstants.SC_KEY_REMOTE_OPEN_DB,true);
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".0",SubDirectory.DB.toString() + File.separator + general);
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".0",general);
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".1",SubDirectory.DB.toString() + File.separator + vol);
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".1",vol);
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".2",SubDirectory.DB.toString() + File.separator + auth);
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".2",auth);
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".3",SubDirectory.DB.toString() + File.separator + config);
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".3",config);
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".4",SubDirectory.DB.toString() + File.separator + walrus);
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".4",walrus);
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".5",SubDirectory.DB.toString() + File.separator + storage);
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".5",storage);
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".6",SubDirectory.DB.toString() + File.separator + dns);
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".6",dns);
  this.db.setProperties(props);
  this.db.start();
  return true;
}
