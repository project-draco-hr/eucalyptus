{
  this.db=new Server();
  LOG.info("-> database host: " + System.getProperty("euca.db.host"));
  LOG.info("-> database port: " + System.getProperty("euca.db.port"));
  HsqlProperties props=new HsqlProperties();
  props.setProperty(ServerConstants.SC_KEY_NO_SYSTEM_EXIT,true);
  String dbPort=System.getProperty(DatabaseConfig.EUCA_DB_PORT);
  props.setProperty(ServerConstants.SC_KEY_PORT,Integer.parseInt(dbPort));
  props.setProperty(ServerConstants.SC_KEY_REMOTE_OPEN_DB,true);
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".0",SubDirectory.DB.toString() + File.separator + Component.eucalyptus.name());
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".0",Component.eucalyptus.name());
  String vol="_volumes";
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".1",SubDirectory.DB.toString() + File.separator + Component.eucalyptus.name()+ vol);
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".1",Component.eucalyptus.name() + vol);
  String auth="_auth";
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".2",SubDirectory.DB.toString() + File.separator + Component.eucalyptus.name()+ auth);
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".2",Component.eucalyptus.name() + auth);
  String config="_config";
  props.setProperty(ServerConstants.SC_KEY_DATABASE + ".3",SubDirectory.DB.toString() + File.separator + Component.eucalyptus.name()+ config);
  props.setProperty(ServerConstants.SC_KEY_DBNAME + ".3",Component.eucalyptus.name() + config);
  this.db.setProperties(props);
  this.db.start();
  return true;
}
