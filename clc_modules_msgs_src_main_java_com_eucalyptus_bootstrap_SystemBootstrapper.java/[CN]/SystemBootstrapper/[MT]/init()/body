{
  try {
    LogLevels.EXTREME="EXTREME".equals(System.getProperty("euca.log.level").toUpperCase());
    LogLevels.TRACE="TRACE".equals(System.getProperty("euca.log.level")) || LogLevels.EXTREME;
    LogLevels.DEBUG="DEBUG".equals(System.getProperty("euca.log.level")) || LogLevels.TRACE;
    if (LogLevels.EXTREME) {
      System.setProperty("euca.log.level","TRACE");
    }
    System.setOut(new PrintStream(System.out){
      public void print(      final String string){
        SystemBootstrapper.out.print(string);
        LOG.info(string);
      }
    }
);
    System.setErr(new PrintStream(System.err){
      public void print(      final String string){
        SystemBootstrapper.err.print(string);
        LOG.error(string);
      }
    }
);
    LOG.info(LogUtil.subheader("Starting system with debugging set as: " + Join.join("\n",LogLevels.class.getDeclaredFields())));
    Security.addProvider(new BouncyCastleProvider());
    System.setProperty("euca.ws.port","8773");
  }
 catch (  Throwable t) {
    t.printStackTrace();
    System.exit(1);
  }
  try {
    Bootstrap.initialize();
    Bootstrap.Stage stage=Bootstrap.transition();
    stage.load();
    return true;
  }
 catch (  BootstrapException e) {
    e.printStackTrace();
    throw e;
  }
catch (  Throwable t) {
    t.printStackTrace();
    LOG.fatal(t,t);
    System.exit(1);
    return false;
  }
}
