{
  final String instanceId=instance.getInstanceId();
  final LoadBalancerCoreView lbView=group.getLoadBalancer();
  LoadBalancer lb;
  try {
    lb=LoadBalancerEntityTransform.INSTANCE.apply(lbView);
  }
 catch (  final Exception ex) {
    LOG.error("unable to transfrom loadbalancer from the viewer",ex);
    throw ex;
  }
  LoadBalancerZoneCoreView zoneView=null;
  for (  final LoadBalancerZoneCoreView z : lb.getZones()) {
    if (z.getName().equals(instance.getAvailabilityZone())) {
      zoneView=z;
      break;
    }
  }
  if (zoneView == null)   throw new Exception("No availability zone with name=" + instance.getAvailabilityZone() + " found for loadbalancer "+ lb.getDisplayName());
  final LoadBalancerSecurityGroupCoreView sgroupView=lb.getGroup();
  if (sgroupView == null && lb.getVpcId() == null)   throw new Exception("No security group is found for loadbalancer " + lb.getDisplayName());
  LoadBalancerZone zone;
  LoadBalancerSecurityGroup sgroup;
  try {
    zone=LoadBalancerZoneEntityTransform.INSTANCE.apply(zoneView);
    sgroup=sgroupView == null ? null : LoadBalancerSecurityGroupEntityTransform.INSTANCE.apply(sgroupView);
  }
 catch (  final Exception ex) {
    LOG.error("unable to transform entity",ex);
    throw ex;
  }
  String ipAddr=null;
  String privateIpAddr=null;
  try {
    List<RunningInstancesItemType> result=null;
    result=EucalyptusActivityTasks.getInstance().describeSystemInstancesWithVerbose(Lists.newArrayList(instance.getInstanceId()));
    if (result != null && result.size() > 0) {
      ipAddr=result.get(0).getIpAddress();
      privateIpAddr=result.get(0).getPrivateIpAddress();
    }
  }
 catch (  Exception ex) {
    LOG.warn("failed to run describe-instances",ex);
  }
  final LoadBalancerServoInstance newInstance=LoadBalancerServoInstance.newInstance(zone,sgroup,group,instanceId);
  if ("Healthy".equals(instance.getHealthStatus()) && "InService".equals(instance.getLifecycleState()))   newInstance.setState(LoadBalancerServoInstance.STATE.InService);
  newInstance.setAddress(ipAddr);
  newInstance.setPrivateIp(privateIpAddr);
  if (!(ipAddr == null && privateIpAddr == null))   newInstance.setDnsState(LoadBalancerServoInstance.DNS_STATE.Registered);
  return newInstance;
}
