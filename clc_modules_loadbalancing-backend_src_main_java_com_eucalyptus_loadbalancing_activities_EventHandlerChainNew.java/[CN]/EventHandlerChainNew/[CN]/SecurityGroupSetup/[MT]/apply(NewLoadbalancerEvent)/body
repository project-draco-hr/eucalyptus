{
  this.event=evt;
  LoadBalancer lbEntity;
  LoadBalancerCoreView lb;
  try {
    lbEntity=LoadBalancers.getLoadbalancer(evt.getContext(),evt.getLoadBalancer());
    lb=lbEntity.getCoreView();
  }
 catch (  NoSuchElementException ex) {
    throw new EventHandlerException("Could not find the loadbalancer with name=" + evt.getLoadBalancer(),ex);
  }
catch (  Exception ex) {
    throw new EventHandlerException("Error while looking for loadbalancer with name=" + evt.getLoadBalancer(),ex);
  }
  if (lb.getVpcId() == null) {
    final String groupName=String.format("euca-internal-%s-%s",lb.getOwnerAccountNumber(),lb.getDisplayName());
    final String groupDesc=String.format("group for loadbalancer %s",evt.getLoadBalancer());
    boolean groupFound=false;
    try {
      List<SecurityGroupItemType> groups=EucalyptusActivityTasks.getInstance().describeSystemSecurityGroups(Lists.newArrayList(groupName));
      if (groups != null)       for (      final SecurityGroupItemType group : groups) {
        if (groupName.equals(group.getGroupName()) && group.getVpcId() == null) {
          groupFound=true;
          this.createdGroup=groupName;
          this.createdGroupId=group.getGroupId();
          this.groupOwnerAccountId=group.getAccountId();
          break;
        }
      }
    }
 catch (    Exception ex) {
      groupFound=false;
    }
    if (!groupFound) {
      try {
        EucalyptusActivityTasks.getInstance().createSystemSecurityGroup(groupName,groupDesc);
        this.createdGroup=groupName;
        List<SecurityGroupItemType> groups=EucalyptusActivityTasks.getInstance().describeSystemSecurityGroups(Lists.newArrayList(groupName));
        if (groups != null)         for (        final SecurityGroupItemType group : groups) {
          if (groupName.equals(group.getGroupName()) && group.getVpcId() == null) {
            this.createdGroupId=group.getGroupId();
            this.groupOwnerAccountId=group.getAccountId();
            break;
          }
        }
      }
 catch (      Exception ex) {
        throw new EventHandlerException("Failed to create the security group for loadbalancer",ex);
      }
    }
    if (this.createdGroup == null || this.groupOwnerAccountId == null)     throw new EventHandlerException("Failed to create the security group for loadbalancer");
    try (final TransactionResource db=Entities.transactionFor(LoadBalancerSecurityGroup.class)){
      try {
        Entities.uniqueResult(LoadBalancerSecurityGroup.named(lbEntity,this.groupOwnerAccountId,this.createdGroup));
      }
 catch (      NoSuchElementException ex) {
        Entities.persist(LoadBalancerSecurityGroup.create(lbEntity,this.groupOwnerAccountId,this.createdGroup));
      }
      db.commit();
    }
 catch (    Exception ex) {
      throw new EventHandlerException("Error while persisting security group",ex);
    }
  }
 else   if (lb.getSecurityGroupIdsToNames().isEmpty()) {
    final String groupName=generateDefaultVPCSecurityGroupName(lb.getVpcId());
    final String groupDesc=String.format("ELB created security group used when no security group is specified during ELB creation - modifications could impact traffic to future ELBs");
    final AccountFullName accountFullName=evt.getContext().getAccount();
    final List<SecurityGroupItemType> groups=EucalyptusActivityTasks.getInstance().describeUserSecurityGroupsByName(accountFullName,lb.getVpcId(),groupName);
    final SecurityGroupItemType elbVpcGroup;
    if (groups.isEmpty()) {
      EucalyptusActivityTasks.getInstance().createUserSecurityGroup(accountFullName,groupName,groupDesc);
      final List<SecurityGroupItemType> createdGroupList=EucalyptusActivityTasks.getInstance().describeUserSecurityGroupsByName(accountFullName,lb.getVpcId(),groupName);
      elbVpcGroup=Iterables.getOnlyElement(createdGroupList);
    }
 else {
      elbVpcGroup=Iterables.get(groups,0);
    }
    Entities.asDistinctTransaction(LoadBalancer.class,new Predicate<String>(){
      @Override public boolean apply(      @Nullable final String loadBalancerName){
        try {
          final LoadBalancer lb=Entities.uniqueResult(LoadBalancer.namedByAccountId(accountFullName.getAccountNumber(),loadBalancerName));
          lb.setSecurityGroupRefs(Lists.newArrayList(new LoadBalancerSecurityGroupRef(elbVpcGroup.getGroupId(),elbVpcGroup.getGroupName())));
        }
 catch (        TransactionException e) {
          throw Exceptions.toUndeclared(e);
        }
        return true;
      }
    }
).apply(lb.getDisplayName());
    this.rollbackCreate=false;
    this.createdGroupId=elbVpcGroup.getGroupId();
    this.createdGroup=elbVpcGroup.getGroupName();
    this.groupOwnerAccountId=elbVpcGroup.getAccountId();
  }
}
