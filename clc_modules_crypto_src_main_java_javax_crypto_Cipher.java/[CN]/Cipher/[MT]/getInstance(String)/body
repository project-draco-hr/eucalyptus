{
  List transforms=getTransforms(transformation);
  List cipherServices=new ArrayList(transforms.size());
  for (Iterator t=transforms.iterator(); t.hasNext(); ) {
    Transform transform=(Transform)t.next();
    cipherServices.add(new ServiceId("Cipher",transform.transform));
  }
  List services=GetInstance.getServices(cipherServices);
  Iterator t=services.iterator();
  Exception failure=null;
  while (t.hasNext()) {
    Service s=(Service)t.next();
    Transform tr=getTransform(s,transforms);
    if (tr == null) {
      continue;
    }
    int canuse=tr.supportsModePadding(s);
    if (canuse == S_NO) {
      continue;
    }
    if (canuse == S_YES) {
      return new Cipher(null,s,t,transformation,transforms);
    }
 else {
      try {
        CipherSpi spi=(CipherSpi)s.newInstance(null);
        tr.setModePadding(spi);
        return new Cipher(spi,s,t,transformation,transforms);
      }
 catch (      Exception e) {
        failure=e;
      }
    }
  }
  throw new NoSuchAlgorithmException("Cannot find any provider supporting " + transformation,failure);
}
