{
  SnapshotInfo good=new SnapshotInfo();
  good.setStatus(StorageProperties.Status.available.toString());
  good.setProgress("100");
  good.setSizeGb(new Integer(1));
  good.setShouldTransfer(Boolean.FALSE);
  good.setSnapPointId(null);
  good.setStartTime(new Date());
  good.setUserName("unittestuser0");
  good.setSnapshotLocation("http://osg.host/snaps/good");
  good.setVolumeId("vol-0000");
  good.setSnapshotId("snap-0000");
  SnapshotInfo failOne=new SnapshotInfo();
  failOne.setStatus(StorageProperties.Status.failed.toString());
  failOne.setProgress("0");
  failOne.setSizeGb(new Integer(1));
  failOne.setShouldTransfer(Boolean.FALSE);
  failOne.setSnapPointId(null);
  failOne.setStartTime(new Date());
  failOne.setUserName("unittestuser0");
  failOne.setSnapshotLocation("http://osg.host/snaps/failOne");
  failOne.setVolumeId("vol-0001");
  failOne.setSnapshotId("snap-0001");
  SnapshotInfo failTwo=new SnapshotInfo();
  failTwo.setStatus(StorageProperties.Status.failed.toString());
  failTwo.setProgress("0");
  failTwo.setSizeGb(new Integer(1));
  failTwo.setShouldTransfer(Boolean.FALSE);
  failTwo.setSnapPointId(null);
  failTwo.setStartTime(new Date());
  failTwo.setUserName("unittestuser0");
  failTwo.setSnapshotLocation("http://osg.host/snaps/failTwo");
  failTwo.setVolumeId("vol-0002");
  failTwo.setSnapshotId("snap-0002");
  try (TransactionResource tran=Entities.transactionFor(SnapshotInfo.class)){
    good=Entities.persist(good);
    failOne=Entities.persist(failOne);
    failTwo=Entities.persist(failTwo);
    tran.commit();
  }
   BlockStorageChecker bsc=new BlockStorageChecker(BlockStorageUnitTestSupport.createMockLogicalStorageManager());
  bsc.snapshotTransfer=BlockStorageUnitTestSupport.createMockS3SnapshotTransfer();
  bsc.cleanFailedSnapshot(failOne.getSnapshotId());
  List<SnapshotInfo> remaining;
  try (TransactionResource tran=Entities.transactionFor(SnapshotInfo.class)){
    remaining=Entities.query(new SnapshotInfo());
    tran.commit();
  }
   assertTrue("expected to have a result set querying the eucalyptus_storage persistence context",remaining != null);
  assertTrue("expected two SnapshotInfos to still exist, but " + remaining.size() + " exist",remaining.size() == 2);
}
