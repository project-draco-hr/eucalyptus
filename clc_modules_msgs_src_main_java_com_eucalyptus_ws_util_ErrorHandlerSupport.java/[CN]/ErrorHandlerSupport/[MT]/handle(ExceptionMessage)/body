{
  EventRecord.here(getClass(),EventType.MSG_REPLY,exMsg.getPayload().getClass().getSimpleName()).debug();
  final Throwable exception=exMsg.getException();
  if (exception instanceof MessagingException && exception.getCause() instanceof EucalyptusCloudException) {
    try {
      final EucalyptusCloudException cloudException=(EucalyptusCloudException)exception.getCause();
      final BaseMessage payload=parsePayload(exMsg.getPayload());
      final HttpResponseStatus status;
      final Role role;
      final String code;
      if (cloudException instanceof EucalyptusWebServiceException) {
        final EucalyptusWebServiceException webServiceException=(EucalyptusWebServiceException)cloudException;
        role=webServiceException.getRole();
        code=webServiceException.getCode();
      }
 else {
        role=Role.Receiver;
        code=defaultCode;
      }
      final Optional<Integer> statusCodeOptional=getHttpResponseStatus(cloudException);
      status=!statusCodeOptional.isPresent() ? HttpResponseStatus.INTERNAL_SERVER_ERROR : new HttpResponseStatus(statusCodeOptional.get(),code);
      final BaseMessage errorResp=buildErrorResponse(payload.getCorrelationId(),role,code,cloudException.getMessage());
      Contexts.response(new BaseMessageSupplier(errorResp,status));
    }
 catch (    final PayloadParseException e) {
      LOG.error("Failed to parse payload ",e.getCause());
    }
  }
 else {
    final BaseMessage errorResp=buildFatalResponse(exception);
    Contexts.response(new BaseMessageSupplier(errorResp,HttpResponseStatus.INTERNAL_SERVER_ERROR));
  }
}
