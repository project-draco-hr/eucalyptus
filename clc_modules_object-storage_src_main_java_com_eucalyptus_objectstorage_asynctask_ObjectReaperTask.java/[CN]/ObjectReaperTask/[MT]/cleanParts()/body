{
  try {
    List<PartEntity> partsToClean=MpuPartMetadataManagers.getInstance().lookupPartsInState(null,null,null,ObjectState.deleting);
    LOG.trace("Reaping " + partsToClean.size() + " parts from backend");
    for (    PartEntity part : partsToClean) {
      try {
        reapPart(part);
      }
 catch (      final Throwable f) {
        LOG.error("Error during part reaper cleanup for part: " + part.getBucket().getBucketName() + " uploadId: "+ part.getUploadId()+ " partNumber: "+ part.getPartNumber()+ " uuid= "+ part.getPartUuid(),f);
      }
      if (interrupted) {
        break;
      }
    }
  }
 catch (  Exception e) {
    LOG.warn("Error cleaning parts. Will retry later.",e);
  }
}
