{
  try {
    Enum.valueOf(Bytes.class,metricType);
    return "Bytes";
  }
 catch (  IllegalArgumentException ex1) {
    try {
      Enum.valueOf(Count.class,metricType);
      return "Count";
    }
 catch (    IllegalArgumentException ex2) {
      try {
        Enum.valueOf(Seconds.class,metricType);
        return "Seconds";
      }
 catch (      IllegalArgumentException ex4) {
        try {
          Enum.valueOf(Percent.class,metricType);
          return "Percent";
        }
 catch (        IllegalArgumentException ex5) {
          throw new NoSuchElementException("Unknown system unit type : " + metricType);
        }
      }
    }
  }
}
