{
  String snapshotId=snapInfo.getSnapshotId();
  LOG.info("Checker task cleaning up snapshot " + snapshotId);
  try {
    LOG.debug("Disconnecting snapshot " + snapshotId + " from the Storage Controller");
    blockManager.finishVolume(snapshotId);
  }
 catch (  Exception e) {
    LOG.debug("Attempt to disconnect snapshot " + snapshotId + " from Storage Controller failed because: "+ e.getMessage());
  }
  try {
    LOG.debug("Cleaning snapshot " + snapshotId + " on storage backend");
    blockManager.cleanSnapshot(snapshotId);
  }
 catch (  Exception e) {
    LOG.debug("Attempt to clean snapshot " + snapshotId + " on storage backend failed because: "+ e.getMessage());
  }
  try {
    LOG.debug("Cleaning snapshot " + snapshotId + " from objectsotrage");
    if (snapshotTransfer == null) {
      snapshotTransfer=new S3SnapshotTransfer();
    }
    String[] names=SnapshotInfo.getSnapshotBucketKeyNames(snapInfo.getSnapshotLocation());
    snapshotTransfer.setSnapshotId(snapshotId);
    snapshotTransfer.setBucketName(names[0]);
    snapshotTransfer.setKeyName(names[1]);
    snapshotTransfer.cancelUpload();
  }
 catch (  Exception e) {
    LOG.debug("Attempt to clean uploaded snapshot " + snapshotId + " from objectstorage failed because: "+ e.getMessage());
  }
}
