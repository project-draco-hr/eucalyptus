{
  String policyJson="{\n" + "  \"Statement\": [{\n" + "    \"Action\": [\"iam:*AccessKey*\"],\n"+ "    \"Effect\": \"Allow\",\n"+ "    \"Resource\": [\"arn:aws:iam::012345678912:user/${aws:username}\"]\n"+ "  }]\n"+ "}";
  PolicyPolicy policy=PolicyParser.getInstance().parse(policyJson);
  assertNotNull("Policy null",policy);
  assertNotNull("Policy authorizations",policy.getAuthorizations());
  assertEquals("Policy authorization count",1,policy.getAuthorizations().size());
  Authorization authorization=policy.getAuthorizations().get(0);
  assertNotNull("Authorization null",authorization);
  assertNull("Authorization principal",authorization.getPrincipal());
  assertEquals("Authorization actions",Sets.newHashSet("iam:*accesskey*"),authorization.getActions());
  assertEquals("Authorization effect",Authorization.EffectType.Allow,authorization.getEffect());
  assertNotNull("Authorization resources",authorization.getResources());
  assertEquals("Authorization resource count",1,authorization.getResources().size());
  assertEquals("Authorization resources",Sets.newHashSet("/${aws:username}"),authorization.getResources());
  assertNotNull("Authorization conditions",authorization.getConditions());
  assertEquals("Authorization condition count",0,authorization.getConditions().size());
  assertNotNull("Authorization policy variables",authorization.getPolicyVariables());
  assertEquals("Authorization policy variable count",0,authorization.getPolicyVariables().size());
}
