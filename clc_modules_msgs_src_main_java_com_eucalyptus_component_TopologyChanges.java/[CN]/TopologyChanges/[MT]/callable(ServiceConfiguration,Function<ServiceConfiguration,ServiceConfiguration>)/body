{
  final String functionName=function.getClass().toString().replaceAll("^.*\\.","");
  final Long queueStart=System.currentTimeMillis();
  final Callable<ServiceConfiguration> call=new Callable<ServiceConfiguration>(){
    @Override public ServiceConfiguration call() throws Exception {
      if (Bootstrap.isShuttingDown()) {
        throw Exceptions.toUndeclared("System is shutting down.");
      }
 else {
        final Long serviceStart=System.currentTimeMillis();
        LOG.trace(EventRecord.here(Topology.class,EventType.DEQUEUE,functionName,config.getFullName().toString(),Long.toString(serviceStart - queueStart),"ms"));
        try {
          final ServiceConfiguration result=function.apply(config);
          LOG.trace(EventRecord.here(Topology.class,EventType.QUEUE,functionName,config.getFullName().toString(),Long.toString(System.currentTimeMillis() - serviceStart),"ms"));
          return result;
        }
 catch (        Exception ex) {
          Throwable t=Exceptions.unwrapCause(ex);
          Logs.extreme().error(t,t);
          LOG.error(config.getFullName() + " failed to transition because of: " + t);
          throw ex;
        }
      }
    }
  }
;
  return call;
}
