{
  if (!Bootstrap.isFinished()) {
    LOG.debug(this.toString() + " aborted because bootstrap is not complete for service: " + config);
    return config;
  }
 else {
    State initialState=config.lookupState();
    State nextState=config.lookupState();
    if (State.NOTREADY.equals(initialState) || State.BROKEN.equals(initialState)) {
      nextState=State.DISABLED;
    }
 else     if (initialState.ordinal() < State.NOTREADY.ordinal()) {
      return config;
    }
    try {
      Future<ServiceConfiguration> result=ServiceTransitions.transitionChain(config,nextState);
      ServiceConfiguration endConfig=result.get();
      State endState=endConfig.lookupState();
      LOG.debug(this.toString() + " completed for: " + endConfig+ " trying "+ initialState+ "->"+ nextState+ " ended in: "+ endState);
      return endConfig;
    }
 catch (    InterruptedException ex) {
      Thread.currentThread().interrupt();
      throw new UndeclaredThrowableException(ex);
    }
catch (    Exception ex) {
      LOG.debug(this.toString() + " failed for: " + config+ " trying "+ initialState+ "->"+ nextState+ " because of: "+ ex.getMessage(),ex);
      throw new UndeclaredThrowableException(ex);
    }
  }
}
