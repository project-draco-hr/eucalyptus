{
  if (!Bootstrap.isFinished()) {
    LOG.debug(this.toString() + " aborted because bootstrap is not complete");
    return config;
  }
 else   if (config.isVmLocal() && !config.lookupStateMachine().isBusy()) {
    State initialState=config.lookupState();
    State nextState=config.lookupState();
    if (initialState.ordinal() < State.NOTREADY.ordinal()) {
      return config;
    }
 else     if (State.NOTREADY.equals(initialState)) {
      nextState=State.DISABLED;
    }
    try {
      LOG.debug(this.toString() + " attempting check for: " + config+ " trying "+ initialState+ "->"+ nextState);
      Future<ServiceConfiguration> result=config.lookupStateMachine().transition(initialState);
      State endState=result.get().lookupState();
      LOG.debug(this.toString() + " completed for: " + result+ " trying "+ initialState+ "->"+ nextState+ " ended in: "+ endState);
      return result.get();
    }
 catch (    InterruptedException ex) {
      Thread.currentThread().interrupt();
      return config;
    }
catch (    Exception ex) {
      LOG.error(ex,ex);
      throw new UndeclaredThrowableException(ex);
    }
  }
 else {
    return config;
  }
}
