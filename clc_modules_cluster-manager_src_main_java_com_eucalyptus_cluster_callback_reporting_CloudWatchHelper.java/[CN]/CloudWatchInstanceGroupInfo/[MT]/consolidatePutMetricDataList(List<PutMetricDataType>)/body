{
  final int MAX_PUT_METRIC_DATA_ITEMS=20;
  final LinkedHashMap<Pair<String,String>,List<MetricDatum>> metricDataMap=new LinkedHashMap<>();
  for (  final PutMetricDataType putMetricData : putMetricDataList) {
    final Pair<String,String> userIdAndNamespacePair=Pair.pair(putMetricData.getUserId(),putMetricData.getNamespace());
    if (!metricDataMap.containsKey(userIdAndNamespacePair)) {
      metricDataMap.put(userIdAndNamespacePair,new ArrayList<MetricDatum>());
    }
    metricDataMap.get(userIdAndNamespacePair).addAll(putMetricData.getMetricData().getMember());
  }
  final ArrayList<PutMetricDataType> retVal=new ArrayList<>();
  for (  final Map.Entry<Pair<String,String>,List<MetricDatum>> metricDataEntry : metricDataMap.entrySet()) {
    for (    final List<MetricDatum> datums : Iterables.partition(metricDataEntry.getValue(),MAX_PUT_METRIC_DATA_ITEMS)) {
      final MetricData metricData=new MetricData();
      metricData.setMember(Lists.newArrayList(datums));
      final PutMetricDataType putMetricData=new PutMetricDataType();
      putMetricData.setUserId(metricDataEntry.getKey().getLeft());
      putMetricData.markPrivileged();
      putMetricData.setNamespace(metricDataEntry.getKey().getRight());
      putMetricData.setMetricData(metricData);
      retVal.add(putMetricData);
    }
  }
  return retVal;
}
