{
  LOG.info(String.format(EucalyptusProperties.DEBUG_FSTRING,EucalyptusProperties.TokenState.submitted,token));
  Clusters.getInstance().lookup(token.getCluster()).getState().submitResourceAllocation(token);
  for (  String vmId : msg.getInstanceIds())   parent.msgMap.put(ClusterAllocator.State.ROLLBACK,new QueuedEvent<TerminateInstancesType>(new TerminateCallback(),new TerminateInstancesType(vmId,msg)));
  VmRunResponseType reply=null;
  try {
    reply=(VmRunResponseType)clusterClient.send(msg);
    Clusters.getInstance().lookup(token.getCluster()).getState().redeemToken(token);
    LOG.info(String.format(EucalyptusProperties.DEBUG_FSTRING,EucalyptusProperties.TokenState.redeemed,token));
    if (reply.get_return()) {
      for (      VmInfo vmInfo : reply.getVms())       VmInstances.getInstance().lookup(vmInfo.getInstanceId()).getNetworkConfig().setIpAddress(vmInfo.getNetParams().getIpAddress());
    }
 else {
      this.parent.getRollback().lazySet(true);
    }
  }
 catch (  AxisFault axisFault) {
    throw axisFault;
  }
}
