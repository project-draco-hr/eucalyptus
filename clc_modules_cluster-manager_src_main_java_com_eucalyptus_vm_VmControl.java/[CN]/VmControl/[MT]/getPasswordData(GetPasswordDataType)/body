{
  final String instanceId=normalizeIdentifier(request.getInstanceId());
  final VmInstance v;
  try {
    v=VmInstances.lookup(instanceId);
  }
 catch (  NoSuchElementException e) {
    throw new ClientComputeException("InvalidInstanceID.NotFound","The instance ID '" + instanceId + "' does not exist");
  }
  if (!RestrictedTypes.filterPrivileged().apply(v)) {
    throw new EucalyptusCloudException("Instance " + instanceId + " does not exist.");
  }
  if (!VmState.RUNNING.equals(v.getState())) {
    throw new EucalyptusCloudException("Instance " + instanceId + " is not in a running state.");
  }
  if (!ImageMetadata.Platform.windows.name().equals(v.getPlatform())) {
    throw new ClientComputeException("OperationNotPermitted","Instance's platform is not Windows");
  }
  if (KeyPairs.noKey().equals(v.getKeyPair())) {
    throw new ClientComputeException("OperationNotPermitted","Keypair is not found for the instance");
  }
  if (v.getPasswordData() == null) {
    try {
      final GetConsoleOutputResponseType consoleOutput=getConsoleOutput(new GetConsoleOutputType(instanceId));
      final String tempCo=B64.standard.decString(String.valueOf(consoleOutput.getOutput())).replaceAll("[\r\n]*","");
      final String passwordData=tempCo.replaceAll(".*<Password>","").replaceAll("</Password>.*","");
      if (tempCo.matches(".*<Password>[\\w=+/]*</Password>.*")) {
        Entities.asTransaction(VmInstance.class,new Predicate<String>(){
          @Override public boolean apply(          final String passwordData){
            final VmInstance vm=Entities.merge(v);
            vm.updatePasswordData(passwordData);
            return true;
          }
        }
).apply(passwordData);
        v.updatePasswordData(passwordData);
      }
    }
 catch (    Exception e) {
      throw new ComputeException("InternalError","Error processing request: " + e.getMessage());
    }
  }
  final GetPasswordDataResponseType reply=request.getReply();
  reply.set_return(true);
  reply.setOutput(v.getPasswordData());
  reply.setTimestamp(new Date());
  reply.setInstanceId(v.getInstanceId());
  return reply;
}
