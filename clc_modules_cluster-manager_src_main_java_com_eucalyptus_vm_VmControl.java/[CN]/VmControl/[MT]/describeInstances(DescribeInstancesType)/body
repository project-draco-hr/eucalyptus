{
  final DescribeInstancesResponseType reply=(DescribeInstancesResponseType)msg.getReply();
  final Context ctx=Contexts.lookup();
  final boolean isAdmin=ctx.hasAdministrativePrivileges();
  final boolean isVerbose=msg.getInstancesSet().remove("verbose");
  final ArrayList<String> instancesSet=msg.getInstancesSet();
  final Map<String,ReservationInfoType> rsvMap=new HashMap<String,ReservationInfoType>();
  Predicate<VmInstance> privileged=RestrictedTypes.filterPrivileged();
  try {
    for (    final VmInstance vm : Iterables.filter(VmInstances.listValues(),privileged)) {
      EntityTransaction db=Entities.get(VmInstance.class);
      try {
        VmInstance v=Entities.merge(vm);
        if (VmState.TERMINATED.apply(v) && v.getSplitTime() > VmInstances.SHUT_DOWN_TIME) {
          VmInstance.Transitions.TERMINATE.apply(v);
        }
 else         if (VmState.BURIED.apply(v) && v.getSplitTime() > VmInstances.BURY_TIME) {
          VmInstance.Transitions.DELETE.apply(v);
        }
        if (VmState.BURIED.apply(v) && !isVerbose) {
          continue;
        }
        if (!instancesSet.isEmpty() && !instancesSet.contains(v.getInstanceId())) {
          continue;
        }
        if (rsvMap.get(v.getReservationId()) == null) {
          final ReservationInfoType reservation=new ReservationInfoType(v.getReservationId(),v.getOwner().getNamespace(),v.getNetworkNames());
          rsvMap.put(reservation.getReservationId(),reservation);
        }
        rsvMap.get(v.getReservationId()).getInstancesSet().add(VmInstance.Transform.INSTANCE.apply(v));
        db.commit();
      }
 catch (      Exception ex) {
        Logs.exhaust().error(ex,ex);
        db.rollback();
        throw ex;
      }
    }
    ArrayList<ReservationInfoType> vms=new ArrayList<ReservationInfoType>(rsvMap.values());
    reply.setReservationSet(vms);
  }
 catch (  final Exception e) {
    LOG.error(e);
    LOG.debug(e,e);
    throw new EucalyptusCloudException(e.getMessage());
  }
  return reply;
}
