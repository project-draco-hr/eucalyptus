{
  Context ctx=Contexts.lookup();
  final StartInstancesResponseType reply=request.getReply();
  for (  String instanceId : request.getInstancesSet()) {
    VmInstance vm=null;
    try {
      vm=VmInstances.getInstance().lookup(instanceId);
    }
 catch (    NoSuchElementException ex) {
      try {
        vm=Transactions.find(VmInstance.named(ctx.getUserFullName(),instanceId));
      }
 catch (      Throwable ex1) {
        throw new EucalyptusCloudException("Failed to locate instance information for instance id: " + instanceId);
      }
      final VmInstance v=vm;
      try {
        RunInstancesType runRequest=new RunInstancesType(){
{
            this.setMinCount(1);
            this.setMaxCount(1);
            this.setImageId(v.getImageId());
            this.setAvailabilityZone(v.getPartition());
            this.getGroupSet().addAll(v.getNetworkNames());
            this.setInstanceType(v.getVmType().getName());
          }
        }
;
        Allocation allocInfo=VerifyMetadata.handle(runRequest);
        allocInfo=AdmissionControl.handle(allocInfo);
        final int oldCode=v.getRuntimeState().getCode(), newCode=VmState.SHUTTING_DOWN.getCode();
        final String oldState=v.getRuntimeState().getName(), newState=VmState.SHUTTING_DOWN.getName();
        reply.getInstancesSet().add(new TerminateInstancesItemType(v.getInstanceId(),oldCode,oldState,newCode,newState));
      }
 catch (      MetadataException ex1) {
        LOG.error(ex1,ex1);
      }
    }
  }
  return reply;
}
