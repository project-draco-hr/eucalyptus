{
  final BundleInstanceResponseType reply=request.getReply();
  reply.set_return(true);
  Component walrus=Components.lookup(Walrus.class);
  NavigableSet<ServiceConfiguration> configs=walrus.lookupServiceConfigurations();
  if (configs.isEmpty() || !Component.State.ENABLED.equals(configs.first().lookupState())) {
    throw new EucalyptusCloudException("Failed to bundle instance because there is no available walrus service at the moment.");
  }
  final String walrusUrl=configs.first().getUri().toASCIIString();
  final String instanceId=request.getInstanceId();
  final Context ctx=Contexts.lookup();
  final User user=ctx.getUser();
  EntityTransaction db=Entities.get(VmInstance.class);
  try {
    final VmInstance v=VmInstances.lookup(instanceId);
    if (v.isBundling()) {
      reply.setTask(v.getBundleTask());
    }
 else     if (!ImageMetadata.Platform.windows.name().equals(v.getPlatform())) {
      throw new EucalyptusCloudException("Failed to bundle requested vm because the platform is not 'windows': " + request.getInstanceId());
    }
 else     if (!VmState.RUNNING.equals(v.getState())) {
      throw new EucalyptusCloudException("Failed to bundle requested vm because it is not currently 'running': " + request.getInstanceId());
    }
 else     if (RestrictedTypes.filterPrivileged().apply(v)) {
      final BundleTask bundleTask=Bundles.create(v,request.getBucket(),request.getPrefix(),new String(Base64.decode(request.getUploadPolicy())));
      if (v.startBundleTask(bundleTask)) {
        reply.setTask(bundleTask);
      }
 else       if (v.getBundleTask() == null) {
        v.resetBundleTask();
        v.startBundleTask(bundleTask);
        reply.setTask(bundleTask);
      }
 else {
        throw new EucalyptusCloudException("Instance is already being bundled: " + v.getBundleTask().getBundleId());
      }
      EventRecord.here(BundleCallback.class,EventType.BUNDLE_PENDING,ctx.getUserFullName().toString(),v.getBundleTask().getBundleId(),v.getInstanceId()).debug();
      final BundleCallback callback=new BundleCallback(request);
      request.setUrl(walrusUrl);
      request.setAwsAccessKeyId(Accounts.getFirstActiveAccessKeyId(user));
      AsyncRequests.newRequest(callback).dispatch(v.lookupClusterConfiguration());
    }
 else {
      throw new EucalyptusCloudException("Failed to find instance: " + request.getInstanceId());
    }
  }
 catch (  EucalyptusCloudException ex) {
    Logs.exhaust().error(ex,ex);
    db.rollback();
    throw ex;
  }
catch (  final Exception ex) {
    Logs.exhaust().error(ex,ex);
    db.rollback();
    throw new EucalyptusCloudException("Failed to find instance: " + request.getInstanceId(),ex);
  }
  return reply;
}
