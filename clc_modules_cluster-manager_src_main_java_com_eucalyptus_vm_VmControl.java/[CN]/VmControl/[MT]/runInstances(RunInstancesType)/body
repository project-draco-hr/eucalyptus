{
  RunInstancesResponseType reply=request.getReply();
  Allocation allocInfo=Allocations.run(request);
  EntityTransaction db=Entities.get(VmInstance.class);
  try {
    Predicates.and(VerifyMetadata.get(),AdmissionControl.run()).apply(allocInfo);
    allocInfo.commit();
    ReservationInfoType reservation=new ReservationInfoType(allocInfo.getReservationId(),allocInfo.getOwnerFullName().getAccountNumber(),Lists.transform(allocInfo.getNetworkGroups(),CloudMetadatas.toDisplayName()));
    reply.setRsvInfo(reservation);
    for (    ResourceToken allocToken : allocInfo.getAllocationTokens()) {
      VmInstance entity=Entities.merge(allocToken.getVmInstance());
      reservation.getInstancesSet().add(VmInstances.transform(entity));
    }
    db.commit();
  }
 catch (  Exception ex) {
    LOG.trace(ex,ex);
    db.rollback();
    allocInfo.abort();
    throw ex;
  }
  ClusterAllocator.get().apply(allocInfo);
  return reply;
}
