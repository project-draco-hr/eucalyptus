{
  final CancelBundleTaskResponseType reply=request.getReply();
  reply.set_return(true);
  final Context ctx=Contexts.lookup();
  try {
    final VmInstance v=VmInstances.lookupByBundleId(request.getBundleId());
    if (Types.checkPrivilege(request,PolicySpec.VENDOR_EC2,PolicySpec.EC2_RESOURCE_INSTANCE,v.getInstanceId(),v.getOwner())) {
      v.getBundleTask().setState("canceling");
      LOG.info(EventRecord.here(BundleCallback.class,EventType.BUNDLE_CANCELING,ctx.getUserFullName().toString(),v.getBundleTask().getBundleId(),v.getInstanceId()));
      final Cluster cluster=Clusters.getInstance().lookup(v.getClusterName());
      request.setInstanceId(v.getInstanceId());
      reply.setTask(v.getBundleTask());
      AsyncRequests.newRequest(new CancelBundleCallback(request)).dispatch(cluster.getConfiguration());
      return reply;
    }
 else {
      throw new EucalyptusCloudException("Failed to find bundle task: " + request.getBundleId());
    }
  }
 catch (  final NoSuchElementException e) {
    throw new EucalyptusCloudException("Failed to find bundle task: " + request.getBundleId());
  }
}
