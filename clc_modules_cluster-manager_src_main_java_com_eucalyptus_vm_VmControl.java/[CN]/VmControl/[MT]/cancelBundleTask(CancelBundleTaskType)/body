{
  final CancelBundleTaskResponseType reply=request.getReply();
  reply.set_return(true);
  final Context ctx=Contexts.lookup();
  try {
    final VmInstance v=VmInstances.lookupByBundleId(normalizeBundleIdentifier(request.getBundleId()));
    BundleState bundleState=v.getRuntimeState().getBundleTaskState();
    if (!(bundleState == BundleState.pending || bundleState == BundleState.storing))     throw new EucalyptusCloudException("Can't cancel bundle task when the bundle task is " + bundleState);
    if (RestrictedTypes.filterPrivileged().apply(v)) {
      v.getRuntimeState().updateBundleTaskState(BundleState.canceling);
      LOG.info(EventRecord.here(BundleCallback.class,EventType.BUNDLE_CANCELING,ctx.getUserFullName().toString(),v.getRuntimeState().getBundleTask().getBundleId(),v.getInstanceId()));
      ServiceConfiguration ccConfig=Topology.lookup(ClusterController.class,v.lookupPartition());
      final Cluster cluster=Clusters.lookup(ccConfig);
      request.setInstanceId(v.getInstanceId());
      reply.setTask(Bundles.transform(v.getRuntimeState().getBundleTask()));
      AsyncRequests.newRequest(Bundles.cancelCallback(request)).dispatch(cluster.getConfiguration());
      return reply;
    }
 else {
      throw new EucalyptusCloudException("Failed to find bundle task: " + request.getBundleId());
    }
  }
 catch (  final NoSuchElementException e) {
    throw new EucalyptusCloudException("Failed to find bundle task: " + request.getBundleId());
  }
}
