{
  final TerminateInstancesResponseType reply=request.getReply();
  try {
    final Context ctx=Contexts.lookup();
    final List<TerminateInstancesItemType> results=reply.getInstancesSet();
    Iterables.all(request.getInstancesSet(),new Predicate<String>(){
      @Override public boolean apply(      final String instanceId){
        try {
          try {
            VmInstance vm=RestrictedTypes.doPrivileged(instanceId,VmInstance.Lookup.INSTANCE);
            final int oldCode=vm.getRuntimeState().getCode(), newCode=VmState.SHUTTING_DOWN.getCode();
            final String oldState=vm.getRuntimeState().getName(), newState=VmState.SHUTTING_DOWN.getName();
            if (VmState.RUNNING.equals(vm.getRuntimeState()) || VmState.PENDING.equals(vm.getRuntimeState())) {
              vm.setState(VmState.SHUTTING_DOWN,Reason.USER_TERMINATED);
            }
            results.add(new TerminateInstancesItemType(vm.getInstanceId(),oldCode,oldState,newCode,newState));
          }
 catch (          AuthException ex) {
            LOG.error(ex);
          }
catch (          Exception ex) {
          }
          return true;
        }
 catch (        final NoSuchElementException e) {
          try {
            VmInstances.deregister(instanceId);
            return true;
          }
 catch (          final NoSuchElementException e1) {
            return false;
          }
        }
      }
    }
);
    reply.set_return(!reply.getInstancesSet().isEmpty());
    return reply;
  }
 catch (  final Throwable e) {
    LOG.error(e);
    LOG.debug(e,e);
    throw new EucalyptusCloudException(e.getMessage());
  }
}
