{
  VmInstance v=null;
  final String instanceId=normalizeIdentifier(request.getInstanceId());
  try {
    v=VmInstances.lookup(instanceId);
  }
 catch (  final NoSuchElementException e2) {
    try {
      v=VmInstances.lookup(instanceId);
      final GetConsoleOutputResponseType reply=request.getReply();
      reply.setInstanceId(instanceId);
      reply.setTimestamp(new Date());
      reply.setOutput(v.getConsoleOutputString());
      Contexts.response(reply);
    }
 catch (    final NoSuchElementException ex) {
      throw new EucalyptusCloudException("No such instance: " + instanceId);
    }
  }
  if (!RestrictedTypes.filterPrivileged().apply(v)) {
    throw new EucalyptusCloudException("Permission denied for vm: " + instanceId);
  }
 else   if (!VmState.RUNNING.equals(v.getState())) {
    final GetConsoleOutputResponseType reply=request.getReply();
    reply.setInstanceId(instanceId);
    reply.setTimestamp(new Date());
    reply.setOutput(v.getConsoleOutputString());
    Contexts.response(reply);
  }
 else {
    Cluster cluster=null;
    try {
      ServiceConfiguration ccConfig=Topology.lookup(ClusterController.class,v.lookupPartition());
      cluster=Clusters.lookup(ccConfig);
    }
 catch (    final NoSuchElementException e1) {
      throw new EucalyptusCloudException("Failed to find cluster info for '" + v.getPartition() + "' related to vm: "+ instanceId);
    }
    RequestContext.getEventContext().setStopFurtherProcessing(true);
    ConsoleOutputCallback messageCallback=new ConsoleOutputCallback(request);
    try {
      AsyncRequests.newRequest(messageCallback).sendSync(cluster.getConfiguration());
    }
 catch (    Exception e) {
      GetConsoleOutputResponseType reply=request.getReply();
      reply.setTimestamp(new Date());
      reply.setOutput(" ");
      reply.set_return(false);
      reply.setStatusMessage("ERROR");
      messageCallback.fire(reply);
    }
  }
}
