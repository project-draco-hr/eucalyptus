{
  VmInstance v=null;
  try {
    v=VmInstances.getInstance().lookup(request.getInstanceId());
  }
 catch (  final NoSuchElementException e2) {
    try {
      v=VmInstances.getInstance().lookupDisabled(request.getInstanceId());
      final GetConsoleOutputResponseType reply=request.getReply();
      reply.setInstanceId(request.getInstanceId());
      reply.setTimestamp(new Date());
      reply.setOutput(v.getConsoleOutputString());
      ServiceContext.response(reply);
    }
 catch (    final NoSuchElementException ex) {
      throw new EucalyptusCloudException("No such instance: " + request.getInstanceId());
    }
  }
  if (!Types.checkPrivilege(request,PolicySpec.VENDOR_EC2,PolicySpec.EC2_RESOURCE_INSTANCE,request.getInstanceId(),v.getOwner())) {
    throw new EucalyptusCloudException("Permission denied for vm: " + request.getInstanceId());
  }
 else   if (!VmState.RUNNING.equals(v.getState())) {
    final GetConsoleOutputResponseType reply=request.getReply();
    reply.setInstanceId(request.getInstanceId());
    reply.setTimestamp(new Date());
    reply.setOutput(v.getConsoleOutputString());
    ServiceContext.response(reply);
  }
 else {
    Cluster cluster=null;
    try {
      cluster=Clusters.getInstance().lookup(v.getClusterName());
    }
 catch (    final NoSuchElementException e1) {
      throw new EucalyptusCloudException("Failed to find cluster info for '" + v.getClusterName() + "' related to vm: "+ request.getInstanceId());
    }
    RequestContext.getEventContext().setStopFurtherProcessing(true);
    AsyncRequests.newRequest(new ConsoleOutputCallback(request)).dispatch(cluster.getConfiguration());
  }
}
