{
  final DescribeInstanceAttributeResponseType reply=request.getReply();
  final String instanceId=normalizeIdentifier(request.getInstanceId());
  reply.setInstanceId(instanceId);
  final EntityTransaction tx=Entities.get(VmInstance.class);
  try {
    final VmInstance vm=RestrictedTypes.doPrivileged(instanceId,VmInstance.class);
    if (request.getAttribute().equals("kernel")) {
      if (vm.getKernelId() != null) {
        reply.getKernel().add(vm.getKernelId());
      }
    }
 else     if (request.getAttribute().equals("ramdisk")) {
      if (vm.getRamdiskId() != null) {
        reply.getRamdisk().add(vm.getRamdiskId());
      }
    }
 else     if (request.getAttribute().equals("instanceType")) {
      if (vm.getBootRecord().getVmType().getDisplayName() != null) {
        reply.getInstanceType().add(vm.getBootRecord().getVmType().getDisplayName());
      }
    }
 else     if (request.getAttribute().equals("userData")) {
      if (vm.getUserData() != null) {
        reply.getUserData().add(Base64.toBase64String(vm.getUserData()));
      }
    }
 else     if (request.getAttribute().equals("rootDeviceName")) {
      if (vm.getBootRecord().getMachine() != null && vm.getBootRecord().getMachine().getRootDeviceName() != null) {
        reply.getRootDeviceName().add((vm.getBootRecord().getMachine().getRootDeviceName()));
      }
    }
 else     if (request.getAttribute().equals("blockDeviceMapping")) {
      if (vm.getBootRecord().getMachine() instanceof BlockStorageImageInfo) {
        BlockStorageImageInfo bfebsInfo=(BlockStorageImageInfo)vm.getBootRecord().getMachine();
        Set<VmVolumeAttachment> persistentVolumes=vm.getBootRecord().getPersistentVolumes();
        for (        VmVolumeAttachment volumeAttachment : persistentVolumes) {
          if (volumeAttachment.getIsRootDevice()) {
            reply.getBlockDeviceMapping().add(new InstanceBlockDeviceMapping(bfebsInfo.getRootDeviceName(),volumeAttachment.getVolumeId(),volumeAttachment.getStatus(),volumeAttachment.getAttachTime(),volumeAttachment.getDeleteOnTerminate()));
          }
 else {
            reply.getBlockDeviceMapping().add(new InstanceBlockDeviceMapping(volumeAttachment.getDevice(),volumeAttachment.getVolumeId(),volumeAttachment.getStatus(),volumeAttachment.getAttachTime(),volumeAttachment.getDeleteOnTerminate()));
          }
        }
      }
    }
 else     if (request.getAttribute().equals("groupSet")) {
      Set<NetworkGroupId> networkGroups=vm.getNetworkGroupIds();
      for (      NetworkGroupId networkGroup : networkGroups) {
        reply.getGroupSet().add(new GroupItemType(networkGroup.getGroupId(),networkGroup.getGroupName()));
      }
    }
 else {
    }
  }
 catch (  Exception ex) {
    LOG.error(ex);
    throw new ClientComputeException("InvalidInstanceID.NotFound","The instance ID '" + instanceId + "' does not exist");
  }
 finally {
    if (tx.isActive())     tx.rollback();
  }
  return reply;
}
