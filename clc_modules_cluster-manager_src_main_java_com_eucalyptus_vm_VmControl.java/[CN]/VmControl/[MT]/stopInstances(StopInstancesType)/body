{
  final StopInstancesResponseType reply=request.getReply();
  try {
    final Context ctx=Contexts.lookup();
    final List<TerminateInstancesItemType> results=reply.getInstancesSet();
    Iterables.all(request.getInstancesSet(),new Predicate<String>(){
      @Override public boolean apply(      final String instanceId){
        try {
          final VmInstance v=VmInstances.lookup(instanceId);
          if (RestrictedTypes.filterPrivileged().apply(v)) {
            final int oldCode=v.getState().getCode(), newCode=VmState.SHUTTING_DOWN.getCode();
            final String oldState=v.getState().getName(), newState=VmState.SHUTTING_DOWN.getName();
            results.add(new TerminateInstancesItemType(v.getInstanceId(),oldCode,oldState,newCode,newState));
            if (VmState.RUNNING.equals(v.getState()) || VmState.PENDING.equals(v.getState())) {
              v.setState(VmState.STOPPING,Reason.USER_STOPPED);
            }
          }
          return true;
        }
 catch (        final NoSuchElementException e) {
          try {
            VmInstances.terminate(instanceId);
            return true;
          }
 catch (          final NoSuchElementException e1) {
            return false;
          }
        }
      }
    }
);
    reply.set_return(!reply.getInstancesSet().isEmpty());
    return reply;
  }
 catch (  final Throwable e) {
    LOG.error(e);
    LOG.debug(e,e);
    throw new EucalyptusCloudException(e.getMessage());
  }
}
