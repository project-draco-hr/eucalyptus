{
  DescribeAvailabilityZonesResponseType reply=(DescribeAvailabilityZonesResponseType)request.getReply();
  if (request.isAdministrator() && request.getAvailabilityZoneSet().lastIndexOf("help") == 0) {
    reply.getAvailabilityZoneInfo().addAll(this.addHelpInfo());
    return reply;
  }
  for (  String clusterName : request.getAvailabilityZoneSet()) {
    try {
      Cluster c=Clusters.getInstance().lookup(clusterName);
    }
 catch (    NoSuchElementException e) {
      for (      Cluster c : Clusters.getInstance().listValues()) {
        reply.getAvailabilityZoneInfo().add(new ClusterInfoType(c.getConfiguration().getName(),c.getConfiguration().getHostName()));
        NavigableSet<String> tagList=new ConcurrentSkipListSet<String>(request.getAvailabilityZoneSet());
        if (tagList.size() == 1)         tagList=c.getNodeTags();
 else         tagList.retainAll(c.getNodeTags());
        if (request.isAdministrator() && clusterName.equals("verbose")) {
          reply.getAvailabilityZoneInfo().addAll(this.addSystemInfo(c));
        }
 else         if (request.isAdministrator() && clusterName.equals("certs")) {
          for (          String tag : tagList) {
            reply.getAvailabilityZoneInfo().addAll(this.addCertInfo(tag,c));
          }
        }
 else         if (request.isAdministrator() && clusterName.equals("logs")) {
          for (          String tag : tagList) {
            reply.getAvailabilityZoneInfo().addAll(this.addLogInfo(tag,c));
          }
        }
      }
      if (request.isAdministrator() && clusterName.equals("coredump")) {
        DebugUtil.printDebugDetails();
        reply.getAvailabilityZoneInfo().addAll(this.dumpState());
      }
    }
  }
  return reply;
}
