{
  boolean inputIsLocal=Internets.testLocal(input.getHostName());
  State goalState;
  if (input.getComponentId().isAlwaysLocal()) {
    goalState=State.ENABLED;
  }
 else   if (BootstrapArgs.isCloudController()) {
    if (inputIsLocal && Hosts.isCoordinator()) {
      goalState=State.ENABLED;
    }
 else     if (!inputIsLocal && !Hosts.isCoordinator()) {
      goalState=State.ENABLED;
    }
 else {
      goalState=State.DISABLED;
    }
  }
 else   if (Hosts.isCoordinator(input.getInetAddress())) {
    goalState=State.ENABLED;
  }
 else {
    goalState=State.DISABLED;
  }
  LOG.info((State.ENABLED.equals(goalState) ? "Enabling" : "Disabling") + " " + (inputIsLocal ? "local" : "remote")+ " "+ (input.getComponentId().isAlwaysLocal() ? "bootstrap" : "cloud")+ " services"+ (Hosts.isCoordinator(input.getInetAddress()) ? " (coordinator)" : "")+ ": "+ input.getFullName());
  try {
    return ServiceTransitions.pathTo(input,goalState).get();
  }
 catch (  final ExecutionException ex) {
    Exceptions.trace(ex.getCause());
  }
catch (  final InterruptedException ex) {
    Thread.currentThread().interrupt();
    Exceptions.trace(ex.getCause());
  }
  return input;
}
