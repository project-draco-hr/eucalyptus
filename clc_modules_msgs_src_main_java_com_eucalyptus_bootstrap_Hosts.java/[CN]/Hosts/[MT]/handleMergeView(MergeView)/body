{
  final Host preMergeCoordinator=Coordinator.INSTANCE.get();
  LOG.info("Hosts.viewChange(): merge   : pre-merge-coordinator=" + preMergeCoordinator);
  Runnable mergeViews=new Runnable(){
    /** 
 * Was this host the coordinator when the merge view arrived (i.e., before the partiton has been resolved)?
 */
    private final boolean coordinator=preMergeCoordinator.isLocalHost();
    /** 
 * Which host was the coordinator for the partition this host belongs to.
 */
    private final String coordinatorAddress=preMergeCoordinator != null ? preMergeCoordinator.getDisplayName() : "NONE";
    private String logPrefix(    final View v){
      final ViewId viewId=v == null ? null : v.getViewId();
      final String id=viewId == null ? "?" : Objects.toString(viewId.getId());
      final String creator=viewId == null ? "?" : Objects.toString(viewId.getCreator(),"?");
      return "Hosts.viewChange(): merge   [" + id + ":"+ creator+ "]=> ";
    }
    @Override public void run(){
      try {
        for (        View v : ((MergeView)mergeView).getSubgroups()) {
          LOG.info(logPrefix(v) + " localhost-member=" + v.containsMember(Hosts.getLocalGroupAddress())+ "coordinator=[ group="+ v.getViewId().getCreator()+ ", system="+ this.coordinatorAddress+ ", localhost="+ this.coordinator+ "]");
          LOG.info(logPrefix(v) + Joiner.on(", ").join(v.getMembers()));
          try {
            HostManager.getMembershipChannel().getState(v.getMembers().get(0),0L);
          }
 catch (          Exception e) {
            LOG.error(logPrefix(v) + " failed to merge partition state: " + e.getMessage());
            Logs.extreme().error(e,e);
          }
        }
      }
 catch (      Exception ex) {
        LOG.error(ex,ex);
      }
    }
  }
;
  Threads.newThread(mergeViews).start();
}
