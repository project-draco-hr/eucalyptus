{
  for (  final PeriodicMembershipChecks runner : PeriodicMembershipChecks.values()) {
    Runnable safeRunner=new Runnable(){
      @Override public void run(){
        if (!Bootstrap.isLoaded() || Bootstrap.isShuttingDown()) {
          return;
        }
 else         if (PeriodicMembershipChecks.canHasChecks.tryLock()) {
          try {
            Logs.extreme().debug(runner.toString() + ": RUNNING");
            try {
              runner.run();
            }
 catch (            Exception ex) {
              LOG.error(runner.toString() + ": FAILED because of: " + ex.getMessage());
              Logs.extreme().error(runner.toString() + ": FAILED because of: " + ex.getMessage(),ex);
            }
          }
  finally {
            PeriodicMembershipChecks.canHasChecks.unlock();
          }
        }
      }
    }
;
    LOG.info("Registering " + runner + " for execution every "+ runner.getInterval()+ " seconds");
    hostPruner.scheduleAtFixedRate(safeRunner,0L,runner.getInterval(),TimeUnit.SECONDS);
  }
}
