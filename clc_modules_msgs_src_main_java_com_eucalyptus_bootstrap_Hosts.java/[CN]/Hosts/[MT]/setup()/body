{
  for (  final PeriodicMembershipChecks runner : PeriodicMembershipChecks.values()) {
    Runnable safeRunner=new Runnable(){
      @Override public void run(){
        try {
          runner.run();
        }
 catch (        Exception ex) {
          Logs.extreme().error("Failed running: " + runner + " because of: "+ ex,ex);
          LOG.error("Failed running: " + runner + " because of: "+ ex);
        }
      }
    }
;
    hostPruner.scheduleAtFixedRate(safeRunner,0L,runner.getInterval(),TimeUnit.SECONDS);
  }
}
