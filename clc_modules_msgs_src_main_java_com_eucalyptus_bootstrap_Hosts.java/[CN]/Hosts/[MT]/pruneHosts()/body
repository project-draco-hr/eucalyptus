{
  try {
    Set<Address> currentMembers=Sets.newHashSet(hostMap.getChannel().getView().getMembers());
    Map<String,Host> hostCopy=Maps.newHashMap(hostMap);
    Set<Address> currentHosts=Sets.newHashSet(Collections2.transform(hostCopy.values(),GroupAddressTransform.INSTANCE));
    Set<Address> strayHosts=Sets.difference(currentHosts,currentMembers);
    if (!strayHosts.isEmpty()) {
      LOG.info("Pruning orphan host entries: " + strayHosts);
    }
    for (    Address strayHost : strayHosts) {
      Host h=hostCopy.get(strayHost.toString());
      if (h == null) {
        LOG.debug("Pruning failed to find host copy for orphan host: " + h);
        h=Hosts.lookup(strayHost.toString());
        LOG.debug("Pruning fell back to underlying host map for orphan host: " + h);
      }
      if (h != null) {
        LOG.info("Pruning orphan host: " + h);
        BootstrapComponent.TEARDOWN.apply(h);
      }
 else {
        LOG.info("Pruning failed for orphan host: " + strayHost + " with local-copy value: "+ hostCopy.get(strayHost.toString())+ " and underlying host map value: "+ Hosts.lookup(strayHost));
      }
    }
  }
 catch (  Exception ex) {
    LOG.debug(ex);
    Logs.extreme().debug(ex,ex);
  }
  try {
    if (!Topology.isEnabled(Eucalyptus.class) && Hosts.getCoordinator() != null) {
      LOG.info("Setting up new coordinator: " + Hosts.getCoordinator());
      BootstrapComponent.SETUP.apply(Hosts.getCoordinator());
    }
  }
 catch (  Exception ex) {
    LOG.debug(ex);
    Logs.extreme().debug(ex,ex);
  }
}
