{
  if (Bootstrap.isShuttingDown()) {
    return;
  }
 else {
    LOG.info("Hosts.entrySet(): " + hostKey + " => "+ host);
    try {
      if (host.isLocalHost() && Bootstrap.isFinished()) {
        final boolean wasSynched=Databases.isSynchronized();
        dbActivation.submit(new Runnable(){
          @Override public void run(){
            if (!Databases.isSynchronized() && host.hasDatabase() && Databases.enable(host)) {
              UpdateEntry.INSTANCE.apply(Hosts.lookup(hostKey));
            }
 else {
              Host currentHost=Hosts.lookup(hostKey);
              if (!wasSynched && currentHost != null && !currentHost.hasSynced() && Databases.enable(host)) {
                UpdateEntry.INSTANCE.apply(currentHost);
              }
 else               if (currentHost != null && currentHost.hasSynced()) {
                BootstrapComponent.SETUP.apply(currentHost);
                UpdateEntry.INSTANCE.apply(currentHost);
              }
            }
          }
        }
);
      }
 else       if (Bootstrap.isFinished() && !host.isLocalHost() && host.hasSynced()) {
        BootstrapComponent.REMOTESETUP.apply(host);
      }
 else       if (InitializeAsCloudController.INSTANCE.apply(host)) {
        LOG.info("Hosts.entrySet(): INITIALIZED CLC => " + host);
      }
 else {
        LOG.debug("Hosts.entrySet(): UPDATED HOST => " + host);
      }
    }
 catch (    Exception ex) {
      LOG.error(ex,ex);
    }
    LOG.info("Hosts.entrySet(): " + hostKey + " finished.");
  }
}
