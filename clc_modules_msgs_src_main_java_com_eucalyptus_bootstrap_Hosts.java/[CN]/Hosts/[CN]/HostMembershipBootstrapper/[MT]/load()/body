{
  try {
    HostManager.getInstance();
    LOG.info("Started membership channel " + SystemIds.membershipGroupName());
    hostMap=new ReplicatedHashMap<String,Host>(HostManager.getMembershipChannel());
    hostMap.setDeadlockDetection(true);
    hostMap.setBlockingUpdates(true);
    hostMap.addNotifier(HostMapStateListener.INSTANCE);
    hostMap.start(STATE_TRANSFER_TIMEOUT);
    OrderedShutdown.register(Empyrean.class,new Runnable(){
      @Override public void run(){
        try {
          hostMap.remove(Internets.localHostIdentifier());
          hostMap.stop();
        }
 catch (        Exception ex) {
          LOG.error(ex,ex);
        }
      }
    }
);
    LOG.info("Added localhost to system state: " + localHost());
    Coordinator.INSTANCE.initialize(hostMap.values());
    final Host local=Coordinator.INSTANCE.createLocalHost();
    hostMap.putIfAbsent(local.getDisplayName(),local);
    Listeners.register(HostBootstrapEventListener.INSTANCE);
    LOG.info("System view:\n" + HostMapStateListener.INSTANCE.printMap());
    if (!BootstrapArgs.isCloudController()) {
      while (Hosts.listDatabases().isEmpty()) {
        TimeUnit.SECONDS.sleep(5);
        LOG.info("Waiting for system view with database...");
      }
      if (shouldInitialize()) {
        doInitialize();
      }
    }
 else {
    }
    LOG.info("Membership address for localhost: " + Hosts.localHost());
    return true;
  }
 catch (  final Exception ex) {
    LOG.fatal(ex,ex);
    BootstrapException.throwFatal("Failed to connect membership channel because of " + ex.getMessage(),ex);
    return false;
  }
}
