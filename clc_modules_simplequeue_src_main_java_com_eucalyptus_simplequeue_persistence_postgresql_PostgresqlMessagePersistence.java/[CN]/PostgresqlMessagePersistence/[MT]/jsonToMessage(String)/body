{
  if (messageJson == null)   return null;
  Message message=new Message();
  try {
    ObjectNode messageNode=(ObjectNode)new ObjectMapper().readTree(messageJson);
    if (messageNode.has(BODY)) {
      message.setBody(messageNode.get(BODY).textValue());
    }
    if (messageNode.has(MD5_OF_BODY)) {
      message.setmD5OfBody(messageNode.get(MD5_OF_BODY).textValue());
    }
    if (messageNode.has(MESSAGE_ATTRIBUTES)) {
      ObjectNode messageAttributesNode=(ObjectNode)messageNode.get(MESSAGE_ATTRIBUTES);
      for (      String name : Lists.newArrayList(messageAttributesNode.fieldNames())) {
        ObjectNode messageAttributeValueNode=(ObjectNode)messageAttributesNode.get(name);
        MessageAttributeValue messageAttributeValue=new MessageAttributeValue();
        if (messageAttributeValueNode.has(DATA_TYPE)) {
          messageAttributeValue.setDataType(messageAttributeValueNode.get(DATA_TYPE).textValue());
        }
        if (messageAttributeValueNode.has(STRING_VALUE)) {
          messageAttributeValue.setStringValue(messageAttributeValueNode.get(STRING_VALUE).textValue());
        }
        if (messageAttributeValueNode.has(BINARY_VALUE)) {
          messageAttributeValue.setBinaryValue(messageAttributeValueNode.get(BINARY_VALUE).textValue());
        }
        if (messageAttributeValueNode.has(STRING_LIST_VALUE)) {
          for (int i=0; i < messageAttributeValueNode.get(STRING_LIST_VALUE).size(); i++) {
            messageAttributeValue.getStringListValue().add(messageAttributeValueNode.get(STRING_LIST_VALUE).get(i).textValue());
          }
        }
        if (messageAttributeValueNode.has(BINARY_LIST_VALUE)) {
          for (int i=0; i < messageAttributeValueNode.get(BINARY_LIST_VALUE).size(); i++) {
            messageAttributeValue.getBinaryListValue().add(messageAttributeValueNode.get(BINARY_LIST_VALUE).get(i).textValue());
          }
        }
        MessageAttribute messageAttribute=new MessageAttribute();
        messageAttribute.setName(name);
        messageAttribute.setValue(messageAttributeValue);
        message.getMessageAttribute().add(messageAttribute);
      }
    }
    if (messageNode.has(MD5_OF_MESSAGE_ATTRIBUTES)) {
      message.setmD5OfMessageAttributes(messageNode.get(MD5_OF_MESSAGE_ATTRIBUTES).textValue());
    }
    if (messageNode.has(ATTRIBUTES)) {
      ObjectNode attributesNode=(ObjectNode)messageNode.get(ATTRIBUTES);
      for (      String name : Lists.newArrayList(attributesNode.fieldNames())) {
        message.getAttribute().add(new Attribute(name,attributesNode.get(name).textValue()));
      }
    }
  }
 catch (  IOException|ClassCastException e) {
    throw new InternalFailureException("Invalid JSON");
  }
  return message;
}
