{
  List<Message> messages=Lists.newArrayList();
  try (TransactionResource db=Entities.transactionFor(MessageEntity.class)){
    Criteria criteria=Entities.createCriteria(MessageEntity.class).add(Restrictions.eq("accountId",accountId)).add(Restrictions.eq("queueName",queueName));
    List<MessageEntity> messageEntityList=criteria.list();
    if (messageEntityList != null) {
      for (      MessageEntity messageEntity : messageEntityList) {
        Message message=jsonToMessage(messageEntity.getMessageJson());
        message.setMessageId(messageEntity.getMessageId());
        if (messageEntity.getReceiveCount() == 0) {
          message.getAttribute().add(new Attribute(SimpleQueueService.MessageAttributeName.ApproximateFirstReceiveTimestamp.toString(),"" + System.currentTimeMillis()));
          messageEntity.setMessageJson(messageToJson(message));
        }
        messageEntity.setLocalReceiveCount(messageEntity.getLocalReceiveCount() + 1);
        messageEntity.setReceiveCount(messageEntity.getReceiveCount() + 1);
        message.getAttribute().add(new Attribute(SimpleQueueService.MessageAttributeName.ApproximateReceiveCount.toString(),"" + messageEntity.getReceiveCount()));
        message.getAttribute().add(new Attribute(SimpleQueueService.EucaInternalMessageAttributeName.EucaLocalReceiveCount.toString(),"" + messageEntity.getLocalReceiveCount()));
        message.getAttribute().add(new Attribute(SimpleQueueService.MessageAttributeName.SentTimestamp.toString(),"" + messageEntity.getSentTimestamp()));
        message.setReceiptHandle(messageEntity.getAccountId() + ":" + messageEntity.getQueueName()+ ":"+ messageEntity.getMessageId()+ ":"+ messageEntity.getLocalReceiveCount());
        messages.add(message);
      }
    }
    db.commit();
    return messages;
  }
 }
