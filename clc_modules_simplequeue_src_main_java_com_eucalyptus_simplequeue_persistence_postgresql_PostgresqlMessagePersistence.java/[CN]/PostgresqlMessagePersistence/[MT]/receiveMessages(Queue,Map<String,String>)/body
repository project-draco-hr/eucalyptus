{
  List<MessageWithReceiveCounts> messagesWithExtraInfo=Lists.newArrayList();
  long now=SimpleQueueService.currentTimeSeconds();
  try (TransactionResource db=Entities.transactionFor(MessageEntity.class)){
    List<MessageEntity> messageEntityList=Entities.criteriaQuery(MessageEntity.class).whereEqual(MessageEntity_.accountId,queue.getAccountId()).whereEqual(MessageEntity_.queueName,queue.getQueueName()).where(Entities.restriction(MessageEntity.class).gt(MessageEntity_.expiredTimestampSecs,now)).where(Entities.restriction(MessageEntity.class).le(MessageEntity_.visibleTimestampSecs,now)).list();
    if (messageEntityList != null) {
      for (      MessageEntity messageEntity : messageEntityList) {
        Message message=jsonToMessage(messageEntity.getMessageJson());
        message.setMessageId(messageEntity.getMessageId());
        if (messageEntity.getReceiveCount() == 0) {
          message.getAttribute().add(new Attribute(Constants.APPROXIMATE_FIRST_RECEIVE_TIMESTAMP,"" + now));
          messageEntity.setMessageJson(messageToJson(message));
        }
        int visibilityTimeout=queue.getVisibilityTimeout();
        if (receiveAttributes.containsKey(Constants.VISIBILITY_TIMEOUT)) {
          visibilityTimeout=Integer.parseInt(receiveAttributes.get(Constants.VISIBILITY_TIMEOUT));
        }
        messageEntity.setVisibleTimestampSecs(now + visibilityTimeout);
        messageEntity.setLocalReceiveCount(messageEntity.getLocalReceiveCount() + 1);
        messageEntity.setReceiveCount(messageEntity.getReceiveCount() + 1);
        message.getAttribute().add(new Attribute(Constants.APPROXIMATE_RECEIVE_COUNT,"" + messageEntity.getReceiveCount()));
        message.getAttribute().add(new Attribute(Constants.SENT_TIMESTAMP,"" + (messageEntity.getSentTimestampSecs())));
        message.setReceiptHandle(messageEntity.getAccountId() + ":" + messageEntity.getQueueName()+ ":"+ messageEntity.getMessageId()+ ":"+ messageEntity.getLocalReceiveCount());
        MessageWithReceiveCounts messageWithReceiveCounts=new MessageWithReceiveCounts();
        messageWithReceiveCounts.setMessage(message);
        messageWithReceiveCounts.setLocalReceiveCount(messageEntity.getLocalReceiveCount());
        messageWithReceiveCounts.setReceiveCount(messageEntity.getReceiveCount());
        messagesWithExtraInfo.add(messageWithReceiveCounts);
      }
    }
    db.commit();
    return messagesWithExtraInfo;
  }
 }
