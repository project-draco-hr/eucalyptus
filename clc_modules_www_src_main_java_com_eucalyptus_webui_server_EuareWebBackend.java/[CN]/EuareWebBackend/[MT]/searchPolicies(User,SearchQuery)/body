{
  if ((query.has(USER) || query.has(USERID)) && (query.has(GROUP) && query.has(GROUPID))) {
    throw new EucalyptusServiceException("Invalid policy search: can not have both user and group conditions.");
  }
  List<SearchResultRow> results=Lists.newArrayList();
  try {
    if (query.hasOnlySingle(USERID)) {
      User user=Accounts.lookupUserById(query.getSingle(USERID).getValue());
      Account account=user.getAccount();
      if (Privileged.allowListAndReadUserPolicy(requestUser,account,user)) {
        for (        Policy policy : user.getPolicies()) {
          results.add(serializePolicy(policy,account,null,user));
        }
      }
    }
 else     if (query.hasOnlySingle(GROUPID)) {
      Group group=Accounts.lookupGroupById(query.getSingle(GROUPID).getValue());
      Account account=group.getAccount();
      if (Privileged.allowReadGroupPolicy(requestUser,account,group)) {
        for (        Policy policy : Privileged.listGroupPolicies(requestUser,account,group)) {
          results.add(serializePolicy(policy,account,group,null));
        }
      }
    }
 else {
      for (      Account account : getAccounts(query)) {
        try {
          for (          User user : getUsers(account,query)) {
            try {
              if (Privileged.allowListAndReadUserPolicy(requestUser,account,user)) {
                for (                Policy policy : user.getPolicies()) {
                  if (policyMatchQuery(policy,query)) {
                    results.add(serializePolicy(policy,account,null,user));
                  }
                }
              }
            }
 catch (            Exception e) {
              LOG.error(e,e);
            }
          }
        }
 catch (        Exception e) {
          LOG.error(e,e);
        }
        try {
          for (          Group group : getGroups(account,query)) {
            try {
              if (Privileged.allowReadGroupPolicy(requestUser,account,group)) {
                for (                Policy policy : Privileged.listGroupPolicies(requestUser,account,group)) {
                  if (policyMatchQuery(policy,query)) {
                    results.add(serializePolicy(policy,account,group,null));
                  }
                }
              }
            }
 catch (            Exception e) {
              LOG.error(e,e);
            }
          }
        }
 catch (        Exception e) {
          LOG.error(e,e);
        }
      }
    }
  }
 catch (  Exception e) {
    LOG.error("Failed to get policies",e);
    LOG.debug(e,e);
    throw new EucalyptusServiceException("Failed to get policies for query " + query + ": "+ e.getMessage());
  }
  return results;
}
