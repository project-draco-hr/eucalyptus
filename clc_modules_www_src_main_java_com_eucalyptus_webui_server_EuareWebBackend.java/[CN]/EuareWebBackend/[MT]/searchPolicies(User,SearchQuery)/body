{
  if ((query.has(USER) || query.has(USERID)) && (query.has(GROUP) && query.has(GROUPID))) {
    throw new EucalyptusServiceException("Invalid policy search: can not have both user and group conditions.");
  }
  List<SearchResultRow> results=Lists.newArrayList();
  try {
    if (query.hasOnlySingle(USERID)) {
      User user=Accounts.lookupUserById(query.getSingle(USERID).getValue());
      Account account=user.getAccount();
      for (      Policy policy : user.getPolicies()) {
        if (EuarePermission.allowReadUserPolicy(requestUser,account,user)) {
          results.add(serializePolicy(policy,account,null,user));
        }
      }
    }
 else     if (query.hasOnlySingle(GROUPID)) {
      Group group=Accounts.lookupGroupById(query.getSingle(GROUPID).getValue());
      Account account=group.getAccount();
      for (      Policy policy : group.getPolicies()) {
        if (EuarePermission.allowReadGroupPolicy(requestUser,account,group)) {
          results.add(serializePolicy(policy,account,group,null));
        }
      }
    }
 else     if (query.hasOnlySingle(ACCOUNTID)) {
      Account account=Accounts.lookupAccountById(query.getSingle(ACCOUNTID).getValue());
      User admin=account.lookupUserByName(User.ACCOUNT_ADMIN);
      for (      Policy policy : admin.getPolicies()) {
        if (EuarePermission.allowReadAccountPolicy(requestUser,account)) {
          results.add(serializePolicy(policy,account,null,null));
        }
      }
    }
 else {
      for (      Account account : getAccounts(query)) {
        for (        User user : getUsers(account,query)) {
          for (          Policy policy : user.getPolicies()) {
            if (policyMatchQuery(policy,query)) {
              if (EuarePermission.allowReadUserPolicy(requestUser,account,user)) {
                if (user.isAccountAdmin()) {
                  results.add(serializePolicy(policy,account,null,null));
                }
 else {
                  results.add(serializePolicy(policy,account,null,user));
                }
              }
            }
          }
        }
        for (        Group group : getGroups(account,query)) {
          for (          Policy policy : group.getPolicies()) {
            if (policyMatchQuery(policy,query)) {
              if (EuarePermission.allowReadGroupPolicy(requestUser,account,group)) {
                results.add(serializePolicy(policy,account,group,null));
              }
            }
          }
        }
      }
    }
  }
 catch (  Exception e) {
    LOG.error("Failed to get policies",e);
    LOG.debug(e,e);
    throw new EucalyptusServiceException("Failed to get policies for query " + query + ": "+ e.getMessage());
  }
  return results;
}
