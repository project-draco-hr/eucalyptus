{
  try {
    int i=0;
    String userId=values.get(i++);
    String userName=values.get(i++);
    String path=values.get(i++);
    i++;
    String enabled=values.get(i++);
    i++;
    i++;
    i++;
    i++;
    i++;
    i++;
    Long expiration=Long.parseLong(values.get(i++));
    i++;
    i++;
    Map<String,String> newInfo=Maps.newHashMap();
    for (int k=i; k < values.size(); k++) {
      String key=keys.get(k);
      String value=values.get(k);
      if (!Strings.isNullOrEmpty(key)) {
        newInfo.put(key,value);
      }
    }
    User user=Accounts.lookupUserById(userId);
    EuarePermission.authorizeModifyUser(requestUser,user.getAccount(),user);
    if (!user.getName().equals(userName)) {
      user.setName(ValueCheckerFactory.createUserAndGroupNameChecker().check(userName));
    }
    if (user.getPath() != null && !user.getPath().equals(path)) {
      user.setPath(path);
    }
    if (!user.isEnabled().toString().equalsIgnoreCase(enabled)) {
      user.setEnabled(!user.isEnabled());
    }
    if (!user.getPasswordExpires().equals(expiration)) {
      user.setPasswordExpires(expiration);
    }
    user.setInfo(newInfo);
  }
 catch (  Exception e) {
    LOG.error("Failed to modify user " + keys + " = "+ values,e);
    LOG.debug(e,e);
    if (e instanceof EucalyptusServiceException) {
      throw (EucalyptusServiceException)e;
    }
    throw new EucalyptusServiceException("Failed to modify user " + keys + " = "+ values+ ": "+ e.getMessage());
  }
}
