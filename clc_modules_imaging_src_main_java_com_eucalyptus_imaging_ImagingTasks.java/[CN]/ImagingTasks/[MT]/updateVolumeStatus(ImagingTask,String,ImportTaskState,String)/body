{
  try (final TransactionResource db=Entities.transactionFor(ImagingTask.class)){
    try {
      final ImagingTask entity=Entities.uniqueResult(imagingTask);
      final ConversionTask task=entity.getTask();
      if (task.getImportInstance() != null) {
        final List<ImportInstanceVolumeDetail> volumes=task.getImportInstance().getVolumes();
        for (        final ImportInstanceVolumeDetail volumeDetail : volumes) {
          if (volumeDetail.getVolume() != null && volumeId.equals(volumeDetail.getVolume().getId())) {
            volumeDetail.setStatus(state.getExternalVolumeStateName());
            if (statusMessage != null)             volumeDetail.setStatusMessage(statusMessage);
 else             volumeDetail.setStatusMessage("");
            break;
          }
 else           if (imagingTask instanceof InstanceStoreImagingTask) {
            volumeDetail.setStatus(state.getExternalVolumeStateName());
            if (statusMessage != null)             volumeDetail.setStatusMessage(statusMessage);
 else             volumeDetail.setStatusMessage("");
          }
        }
        entity.serializeTaskToJSON();
        Entities.persist(entity);
        db.commit();
      }
    }
 catch (    final Exception ex) {
      throw Exceptions.toUndeclared(ex);
    }
  }
 }
