{
synchronized (lock) {
    try (final TransactionResource db=Entities.transactionFor(ImagingTask.class)){
      try {
        final ImagingTask task=Entities.uniqueResult(ImagingTask.named(owner,taskId));
        task.setState(state);
        if (stateReason != null)         task.setStateReason(stateReason);
        final String externalState=state.getExternalTaskStateName();
        task.getTask().setState(externalState);
        if (stateReason != null)         task.getTask().setStatusMessage(stateReason);
        task.serializeTaskToJSON();
        task.updateTimeStamps();
        Entities.persist(task);
        db.commit();
      }
 catch (      final TransactionException ex) {
        throw Exceptions.toUndeclared(ex);
      }
    }
   }
}
