{
switch (stepNum) {
case 0:
    ServiceConfiguration configuration=Topology.lookup(Compute.class);
  AssociateAddressType associateAddressType=new AssociateAddressType();
associateAddressType.setEffectiveUserId(info.getEffectiveUserId());
if (properties.getInstanceId() != null) {
DescribeInstancesType describeInstancesType=new DescribeInstancesType();
describeInstancesType.setInstancesSet(Lists.newArrayList(properties.getInstanceId()));
describeInstancesType.setEffectiveUserId(info.getEffectiveUserId());
DescribeInstancesResponseType describeInstancesResponseType=AsyncRequests.<DescribeInstancesType,DescribeInstancesResponseType>sendSync(configuration,describeInstancesType);
if (describeInstancesResponseType.getReservationSet() == null || describeInstancesResponseType.getReservationSet().isEmpty()) {
  throw new ValidationErrorException("No such instance " + properties.getInstanceId());
}
associateAddressType.setInstanceId(properties.getInstanceId());
}
if (properties.getEip() != null) {
DescribeAddressesType describeAddressesType=new DescribeAddressesType();
describeAddressesType.setPublicIpsSet(Lists.newArrayList(properties.getEip()));
describeAddressesType.setEffectiveUserId(info.getEffectiveUserId());
DescribeAddressesResponseType describeAddressesResponseType=AsyncRequests.<DescribeAddressesType,DescribeAddressesResponseType>sendSync(configuration,describeAddressesType);
if (describeAddressesResponseType.getAddressesSet() == null || describeAddressesResponseType.getAddressesSet().isEmpty()) {
throw new ValidationErrorException("No such EIP " + properties.getEip());
}
associateAddressType.setPublicIp(properties.getEip());
}
AsyncRequests.<AssociateAddressType,AssociateAddressResponseType>sendSync(configuration,associateAddressType);
info.setPhysicalResourceId(getDefaultPhysicalResourceId());
info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(info.getPhysicalResourceId())));
break;
default :
throw new IllegalStateException("Invalid step " + stepNum);
}
}
