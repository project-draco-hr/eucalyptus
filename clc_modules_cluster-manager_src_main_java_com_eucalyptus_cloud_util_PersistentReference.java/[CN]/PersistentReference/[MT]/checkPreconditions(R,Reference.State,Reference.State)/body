{
  if ((!Entities.hasTransaction(this))) {
    throw new RuntimeException("Error allocating resource " + PersistentReference.this.getClass().getSimpleName() + " with id "+ this.getDisplayName()+ " as there is no ongoing transaction.");
  }
  State currentState=this.getState();
  boolean matchPrecondition=preconditionState == null || (currentState != null && preconditionState.equals(currentState));
  boolean matchFinal=(finalState == null && currentState == null) || (finalState != null && currentState != null && finalState.equals(currentState));
  boolean matchReferer=(this.getReference() == null) || (referer != null && this.getReference() != null && referer.equals(this.getReference()));
  if (!((matchFinal && matchReferer) || matchPrecondition)) {
    throw new RuntimeException("Error allocating resource " + PersistentReference.this.getClass().getSimpleName() + " with id "+ this.getDisplayName()+ " as the state is not either the precondition "+ preconditionState.name()+ " or the final state "+ Objects.toString(finalState)+ " (currently "+ Objects.toString(currentState)+ ", referer "+ this.getReference()+ ", passed referer "+ referer+ ")");
  }
}
