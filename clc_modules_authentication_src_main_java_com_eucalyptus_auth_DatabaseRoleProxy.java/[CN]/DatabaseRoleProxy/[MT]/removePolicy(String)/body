{
  if (Strings.isNullOrEmpty(name)) {
    throw new AuthException(AuthException.EMPTY_POLICY_NAME);
  }
  final EntityWrapper<RoleEntity> db=EntityWrapper.get(RoleEntity.class);
  try {
    final RoleEntity roleEntity=getRoleEntity(db);
    final PolicyEntity policy=DatabaseAuthUtils.removeNamedPolicy(roleEntity.getPolicies(),name);
    if (policy != null) {
      db.recast(PolicyEntity.class).delete(policy);
    }
    db.commit();
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to remove policy " + name + " in "+ this.delegate);
    throw new AuthException("Failed to remove policy",e);
  }
 finally {
    if (db.isActive())     db.rollback();
  }
}
