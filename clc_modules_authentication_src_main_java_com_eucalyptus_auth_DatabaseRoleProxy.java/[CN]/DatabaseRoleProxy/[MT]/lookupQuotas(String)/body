{
  try (final TransactionResource db=Entities.transactionFor(AuthorizationEntity.class)){
    @SuppressWarnings("unchecked") final List<AuthorizationEntity> authorizations=(List<AuthorizationEntity>)Entities.createCriteria(AuthorizationEntity.class).add(Restrictions.and(Restrictions.eq("type",resourceType),Restrictions.eq("effect",Authorization.EffectType.Limit))).createCriteria("statement").createCriteria("policy").createCriteria("role").add(Restrictions.eq("roleId",getRoleId())).setCacheable(true).list();
    final List<Authorization> results=Lists.newArrayList();
    for (    AuthorizationEntity auth : authorizations) {
      results.add(new DatabaseAuthorizationProxy(auth));
    }
    return results;
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to lookup quotas for user with ID " + getRoleId() + ", type="+ resourceType);
    throw new AuthException("Failed to lookup quota",e);
  }
}
