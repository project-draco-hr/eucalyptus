{
  check(POLICY_NAME_CHECKER,AuthException.INVALID_NAME,name);
  if (DatabaseAuthUtils.policyNameinList(name,this.getPolicies())) {
    Debugging.logError(LOG,null,"Policy name already used: " + name);
    throw new AuthException(AuthException.INVALID_NAME);
  }
  final PolicyEntity parsedPolicy=PolicyParser.getInstance().parse(policy);
  parsedPolicy.setName(name);
  try (final TransactionResource db=Entities.transactionFor(RoleEntity.class)){
    final RoleEntity roleEntity=getRoleEntity();
    parsedPolicy.setRole(roleEntity);
    roleEntity.getPolicies().add(parsedPolicy);
    final PolicyEntity persistedPolicyEntity=Entities.persist(parsedPolicy);
    db.commit();
    return new DatabasePolicyProxy(persistedPolicyEntity);
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to attach policy for " + this.delegate.getName());
    throw new AuthException("Failed to attach policy",e);
  }
}
