{
  final List<Policy> results=Lists.newArrayList();
  final EntityWrapper<RoleEntity> db=EntityWrapper.get(RoleEntity.class);
  try {
    final RoleEntity role=getRoleEntity(db);
    for (    final PolicyEntity policyEntity : role.getPolicies()) {
      results.add(new DatabasePolicyProxy(policyEntity));
    }
    return results;
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to get policies for " + this.delegate);
    throw new AuthException("Failed to get policies",e);
  }
 finally {
    db.rollback();
  }
}
