{
  long startTime=System.currentTimeMillis();
  try {
    LOG.debug("Initiating object-storage object reaper task");
    List<ObjectEntity> entitiesToClean=ObjectManagers.getInstance().getFailedOrDeleted();
    DeleteObjectType deleteRequest=null;
    DeleteObjectResponseType deleteResponse=null;
    ObjectStorageProviderClient client=ObjectStorageProviders.getInstance();
    if (client == null) {
      LOG.error("Provider client for ObjectReaperTask is null. Cannot execute.");
      return;
    }
    LOG.trace("Reaping " + entitiesToClean.size() + " objects from backend");
    for (    ObjectEntity obj : entitiesToClean) {
      try {
        reapObject(obj);
      }
 catch (      final Throwable f) {
        LOG.error("Error during object reaper cleanup for object: " + obj.getBucketName() + "/"+ obj.getObjectKey()+ "versionId="+ obj.getVersionId()+ " uuid= "+ obj.getObjectUuid(),f);
      }
    }
  }
 catch (  final Throwable f) {
    LOG.error("Error during object reaper execution. Will retry later",f);
  }
 finally {
    try {
      long endTime=System.currentTimeMillis();
      LOG.debug("Object reaper execution task took " + Long.toString(endTime - startTime) + "ms to complete");
    }
 catch (    final Throwable f) {
    }
  }
}
