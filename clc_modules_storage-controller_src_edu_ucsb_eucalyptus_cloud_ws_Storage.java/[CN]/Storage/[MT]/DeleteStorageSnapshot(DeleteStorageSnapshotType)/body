{
  DeleteStorageSnapshotResponseType reply=(DeleteStorageSnapshotResponseType)request.getReply();
  if (!sharedMode) {
    if (!enableSnapshots || !enableStorage) {
      checkWalrusConnection();
      if (!enableSnapshots)       LOG.error("Snapshots have been disabled. Please check connection to Walrus.");
      return reply;
    }
  }
  String snapshotId=request.getSnapshotId();
  EntityWrapper<SnapshotInfo> db=new EntityWrapper<SnapshotInfo>();
  SnapshotInfo snapshotInfo=new SnapshotInfo(snapshotId);
  List<SnapshotInfo> snapshotInfos=db.query(snapshotInfo);
  reply.set_return(true);
  if (snapshotInfos.size() > 0) {
    SnapshotInfo foundSnapshotInfo=snapshotInfos.get(0);
    String status=foundSnapshotInfo.getStatus();
    if (status.equals(StorageProperties.Status.available.toString()) || status.equals(StorageProperties.Status.failed.toString())) {
      try {
        SnapshotInfo snapInfo=new SnapshotInfo();
        snapInfo.setVolumeId(foundSnapshotInfo.getVolumeId());
        List<SnapshotInfo> snapInfos=db.query(snapInfo);
        String dupedVolumeId=null;
        if (snapInfos.size() == 1) {
          dupedVolumeId=foundSnapshotInfo.getDupedVolumeId();
        }
        blockManager.deleteSnapshot(snapshotId);
        if (dupedVolumeId != null) {
          blockManager.deleteVolume(dupedVolumeId);
          volumeStorageManager.deleteObject("",dupedVolumeId);
        }
        snapshotStorageManager.deleteObject("",snapshotId);
        db.delete(foundSnapshotInfo);
        db.commit();
        if (!sharedMode) {
          SnapshotDeleter snapshotDeleter=new SnapshotDeleter(snapshotId);
          snapshotDeleter.start();
        }
      }
 catch (      IOException ex) {
        LOG.error(ex);
      }
    }
 else {
      reply.set_return(false);
      db.rollback();
      throw new SnapshotInUseException(snapshotId);
    }
  }
 else {
    db.rollback();
  }
  return reply;
}
