{
  long size=0;
  String volumeFileName=StorageProperties.storageRootDirectory + "/" + volumeId;
  String snapshotFileName=StorageProperties.storageRootDirectory + "/" + snapshotId;
  File volumeFile=new File(volumeFileName);
  File snapshotFile=new File(snapshotFileName);
  String volumeBucket="";
  EntityWrapper<VolumeInfo> db=new EntityWrapper<VolumeInfo>();
  VolumeInfo volumeInfo=new VolumeInfo(volumeId);
  List<VolumeInfo> volumeInfos=db.query(volumeInfo);
  if (volumeInfos.size() > 0) {
    VolumeInfo foundVolumeInfo=volumeInfos.get(0);
    volumeBucket=foundVolumeInfo.getVolumeBucket();
  }
 else {
    db.rollback();
    throw new EucalyptusCloudException();
  }
  db.commit();
  assert(snapshotFile.exists() && volumeFile.exists());
  size+=shouldTransferVolume ? snapshotFile.length() + volumeFile.length() : snapshotFile.length();
  SnapshotProgressCallback callback=new SnapshotProgressCallback(snapshotId,size,StorageProperties.TRANSFER_CHUNK_SIZE);
  Map<String,String> httpParamaters=new HashMap<String,String>();
  HttpWriter httpWriter;
  if (shouldTransferVolume) {
    try {
      List<String> returnValues=ebsManager.getSnapshotValues(volumeId);
      if (returnValues.size() > 0) {
        httpParamaters.put("SnapshotVgName",returnValues.get(0));
        httpParamaters.put("SnapshotLvName",returnValues.get(1));
      }
    }
 catch (    Exception ex) {
      LOG.warn(ex,ex);
    }
    httpWriter=new HttpWriter("PUT",volumeFile,callback,volumeBucket,volumeId,"StoreSnapshot",null,httpParamaters);
    try {
      httpWriter.run();
    }
 catch (    Exception ex) {
      ex.printStackTrace();
      return;
    }
  }
  try {
    List<String> returnValues=ebsManager.getSnapshotValues(snapshotId);
    if (returnValues.size() > 0) {
      httpParamaters.put("SnapshotVgName",returnValues.get(0));
      httpParamaters.put("SnapshotLvName",returnValues.get(1));
    }
  }
 catch (  Exception ex) {
    LOG.warn(ex,ex);
  }
  httpWriter=new HttpWriter("PUT",snapshotFile,callback,volumeBucket,snapshotId,"StoreSnapshot",null,httpParamaters);
  try {
    httpWriter.run();
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
}
