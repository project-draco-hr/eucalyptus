{
  long size=0;
  File volumeFile=new File(volumeFileName);
  File snapshotFile=new File(snapshotFileName);
  assert(snapshotFile.exists() && volumeFile.exists());
  size+=shouldTransferVolume ? snapshotFile.length() + volumeFile.length() : snapshotFile.length();
  SnapshotProgressCallback callback=new SnapshotProgressCallback(snapshotId,size,StorageProperties.TRANSFER_CHUNK_SIZE);
  Map<String,String> httpParamaters=new HashMap<String,String>();
  httpParamaters.put("SnapshotVgName",snapshotValues.get(0));
  httpParamaters.put("SnapshotLvName",snapshotValues.get(1));
  HttpWriter httpWriter;
  if (shouldTransferVolume) {
    httpWriter=new HttpWriter("PUT",volumeFile,callback,volumeBucket,volumeKey,"StoreSnapshot",null,httpParamaters);
    httpWriter.run();
    try {
      httpWriter.join();
    }
 catch (    Exception ex) {
      ex.printStackTrace();
      return;
    }
  }
  httpParamaters.remove("VolumeId");
  httpWriter=new HttpWriter("PUT",snapshotFile,callback,volumeBucket,snapshotId,"StoreSnapshot",null,httpParamaters);
  httpWriter.run();
  try {
    httpWriter.join();
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
}
