{
  final Object o=event.getMessage();
  if (o instanceof MappingHttpRequest) {
    final MappingHttpRequest httpRequest=(MappingHttpRequest)o;
    final StAXOMBuilder doomBuilder=new StAXOMBuilder(DOOMAbstractFactory.getOMFactory(),httpRequest.getSoapEnvelope().getXMLStreamReader());
    final OMElement elem=doomBuilder.getDocumentElement();
    elem.build();
    final Document doc=((Element)elem).getOwnerDocument();
    final Vector v=new Vector();
    final WSSecHeader wsheader=new WSSecHeader("",false);
    wsheader.insertSecurityHeader(doc);
    final WSSecSignature signer=new WSSecSignature();
    signer.setKeyIdentifierType(WSConstants.BST_DIRECT_REFERENCE);
    signer.setSigCanonicalization(WSConstants.C14N_EXCL_OMIT_COMMENTS);
    signer.prepare(doc,this.credentials,wsheader);
    if (this.shouldTimeStamp()) {
      final WSSecTimestamp ts=new WSSecTimestamp();
      ts.setTimeToLive(300);
      ts.prepare(doc);
      ts.prependToHeader(wsheader);
    }
    v.addAll(this.getSignatureParts());
    signer.appendBSTElementToHeader(wsheader);
    signer.appendToHeader(wsheader);
    signer.addReferencesToSign(v,wsheader);
    signer.computeSignature();
    final StAXSOAPModelBuilder stAXSOAPModelBuilder=new StAXSOAPModelBuilder(elem.getXMLStreamReader(),null);
    final SOAPEnvelope envelope=stAXSOAPModelBuilder.getSOAPEnvelope();
    envelope.build();
    httpRequest.setSoapEnvelope(envelope);
  }
}
