def getDeviceAddresses(dev):
    'Get all address/netmask pairs for a device\n \n    :param dev: The network interface to query\n    :type dev: str\n    :return: A list of addresses bound to this interface\n    :rtype: list of 2-tuples of strings\n\n    .. note::\n\n       Expected output format from the "ip" command:\n       1: lo    inet 127.0.0.1/8 scope host lo\n       2: eth0    inet 10.0.2.15/24 brd 10.0.2.255 scope global eth0\n       3: br0    inet 169.254.169.254/32 scope link br0\n       3: br0    inet 172.31.252.1/32 brd 172.31.252.1 scope global br0\n    '
    addresses = []
    po = subprocess.Popen('ip -4 -o addr show'.split(), stdout=subprocess.PIPE)
    out = po.communicate()[0]
    for line in out.strip().split('\n'):
        m = re.match('(\\d+):\\s+(\\S+)\\s+inet\\s+(\\S+)(\\s+brd (\\S+))?\\s+scope\\s+(host|link|global)\\s+(\\S+)', line)
        if (not m):
            pass
        else:
            match = m.groups()
            if ((match[5] != 'host') and (match[1] == dev)):
                addresses.append(match[2].split('/'))
    return addresses
