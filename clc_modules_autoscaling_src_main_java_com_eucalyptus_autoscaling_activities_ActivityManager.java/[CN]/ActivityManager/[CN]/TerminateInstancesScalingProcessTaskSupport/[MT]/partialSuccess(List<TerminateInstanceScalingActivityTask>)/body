{
  int terminatedCount=0;
  for (  final TerminateInstanceScalingActivityTask task : tasks) {
    terminatedCount+=task.wasTerminated() ? 1 : 0;
  }
  this.terminatedCount=terminatedCount;
  try {
    final Boolean scalingRequired=!persist ? null : getGroup().getDesiredCapacity() != getGroup().getCapacity() - terminatedCount;
    autoScalingGroups.update(getOwner(),getGroup().getAutoScalingGroupName(),new Callback<AutoScalingGroup>(){
      @Override public void fire(      final AutoScalingGroup autoScalingGroup){
        if (scalingRequired != null && getGroup().getVersion().equals(autoScalingGroup.getVersion())) {
          autoScalingGroup.setScalingRequired(scalingRequired);
        }
        autoScalingGroup.setCapacity(Math.max(0,getCurrentCapacity() - TerminateInstancesScalingProcessTaskSupport.this.terminatedCount));
      }
    }
);
  }
 catch (  AutoScalingMetadataNotFoundException e) {
  }
catch (  AutoScalingMetadataException e) {
    logger.error(e,e);
  }
}
