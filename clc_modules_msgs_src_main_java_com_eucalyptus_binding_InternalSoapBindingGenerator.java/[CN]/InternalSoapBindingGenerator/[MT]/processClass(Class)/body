{
  if (this.out == null) {
    if (this.outFile.exists()) {
      this.outFile.delete();
    }
    try {
      this.out=new PrintWriter(this.outFile);
    }
 catch (    FileNotFoundException e) {
      e.printStackTrace(System.err);
      System.exit(-1);
    }
    this.bindingName=this.ns.replaceAll("(http://)|(/$)","").replaceAll("[./-]","_");
    this.out.write("<binding xmlns:euca=\"" + this.ns + "\" name=\""+ this.bindingName+ "\">\n");
    this.out.write("  <namespace uri=\"" + this.ns + "\" default=\"elements\" prefix=\"euca\"/>\n");
    this.out.flush();
  }
  if (!classNames.contains(klass.getName())) {
    classNames.add(klass.getName());
    if (BindingGenerator.DATA_TYPE.isAssignableFrom(klass) || BindingGenerator.MSG_TYPE.isAssignableFrom(klass)) {
      String mapping=new RootObjectTypeBinding(klass).process();
      this.out.write(mapping);
      this.out.flush();
    }
  }
 else {
    System.err.println("Skipping duplicate class: " + klass);
  }
}
