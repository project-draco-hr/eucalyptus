def _read_eof(self):
    if (len(self.decompobj.unused_data) < 8):
        unused = (self.decompobj.unused_data + self.fileobj.read((8 - len(self.decompobj.unused_data))))
        if (len(unused) < 8):
            raise IOError, 'Unexpected EOF'
    else:
        unused = self.decompobj.unused_data
    crc32 = struct.unpack('<L', unused[0:4])[0]
    isize = struct.unpack('<L', unused[4:8])[0]
    if (crc32 != LOWU32(self.crcval)):
        raise IOError, 'CRC check failed'
    if (isize != LOWU32(self.size)):
        raise IOError, 'Incorrect length of data produced'
    if (len(unused) > 8):
        f = PaddedFile(unused[8:], self.fileobj)
    else:
        f = self.fileobj
    try:
        self._read_gzip_header(f)
    except IOError:
        return ''
    if (len(unused) > 8):
        return f.unused()
    else:
        return ''
