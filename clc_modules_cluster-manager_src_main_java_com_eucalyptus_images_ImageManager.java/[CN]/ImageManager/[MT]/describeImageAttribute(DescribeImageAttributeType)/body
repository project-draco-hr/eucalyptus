{
  DescribeImageAttributeResponseType reply=(DescribeImageAttributeResponseType)request.getReply();
  reply.setImageId(request.getImageId());
  final Context ctx=Contexts.lookup();
  final String requestAccountId=ctx.getUserFullName().getAccountNumber();
  if (request.getAttribute() != null)   request.applyAttribute();
  final EntityWrapper<ImageInfo> db=EntityWrapper.get(ImageInfo.class);
  try {
    final ImageInfo imgInfo=db.getUnique(Images.exampleWithImageId(imageIdentifier(request.getImageId())));
    if (!ctx.hasAdministrativePrivileges() && (!imgInfo.getOwnerAccountNumber().equals(requestAccountId) || !RestrictedTypes.filterPrivileged().apply(imgInfo))) {
      throw new EucalyptusCloudException("Not authorized to describe image attribute");
    }
    if (request.getKernel() != null) {
      reply.setRealResponse(reply.getKernel());
      if (imgInfo instanceof MachineImageInfo) {
        if (((MachineImageInfo)imgInfo).getKernelId() != null) {
          reply.getKernel().add(((MachineImageInfo)imgInfo).getKernelId());
        }
      }
    }
 else     if (request.getRamdisk() != null) {
      reply.setRealResponse(reply.getRamdisk());
      if (imgInfo instanceof MachineImageInfo) {
        if (((MachineImageInfo)imgInfo).getRamdiskId() != null) {
          reply.getRamdisk().add(((MachineImageInfo)imgInfo).getRamdiskId());
        }
      }
    }
 else     if (request.getLaunchPermission() != null) {
      reply.setRealResponse(reply.getLaunchPermission());
      if (imgInfo.getImagePublic()) {
        reply.getLaunchPermission().add(LaunchPermissionItemType.newGroupLaunchPermission());
      }
      for (      final String permission : imgInfo.getPermissions())       reply.getLaunchPermission().add(LaunchPermissionItemType.newUserLaunchPermission(permission));
    }
 else     if (request.getProductCodes() != null) {
      reply.setRealResponse(reply.getProductCodes());
      reply.getProductCodes().addAll(imgInfo.getProductCodes());
    }
 else     if (request.getBlockDeviceMapping() != null) {
      reply.setRealResponse(reply.getBlockDeviceMapping());
      if (imgInfo instanceof BlockStorageImageInfo) {
        BlockStorageImageInfo bfebsImage=(BlockStorageImageInfo)imgInfo;
        reply.getBlockDeviceMapping().add(new BlockDeviceMappingItemType("emi",bfebsImage.getRootDeviceName()));
        reply.getBlockDeviceMapping().add(new BlockDeviceMappingItemType("root",bfebsImage.getRootDeviceName()));
        int i=0;
        for (        DeviceMapping mapping : bfebsImage.getDeviceMappings()) {
          if (mapping.getDeviceName().equalsIgnoreCase(bfebsImage.getRootDeviceName())) {
            continue;
          }
switch (mapping.getDeviceMappingType()) {
case blockstorage:
            BlockStorageDeviceMapping bsdm=(BlockStorageDeviceMapping)mapping;
          BlockDeviceMappingItemType bdmItem=new BlockDeviceMappingItemType("ebs" + (++i),mapping.getDeviceName());
        EbsDeviceMapping ebsItem=new EbsDeviceMapping();
      ebsItem.setSnapshotId(bsdm.getSnapshotId());
    ebsItem.setVolumeSize(bsdm.getSize());
  ebsItem.setDeleteOnTermination(bsdm.getDelete());
bdmItem.setEbs(ebsItem);
reply.getBlockDeviceMapping().add(bdmItem);
break;
case ephemeral:
reply.getBlockDeviceMapping().add(new BlockDeviceMappingItemType(mapping.getVirtualName(),mapping.getDeviceName()));
break;
default :
break;
}
}
}
 else {
reply.getBlockDeviceMapping().add(ImageUtil.EMI);
reply.getBlockDeviceMapping().add(ImageUtil.EPHEMERAL);
reply.getBlockDeviceMapping().add(ImageUtil.SWAP);
reply.getBlockDeviceMapping().add(ImageUtil.ROOT);
}
}
 else if (request.getDescription() != null) {
reply.setRealResponse(reply.getDescription());
if (imgInfo.getDescription() != null) {
reply.getDescription().add(imgInfo.getDescription());
}
}
 else {
throw new EucalyptusCloudException("invalid image attribute request.");
}
}
  finally {
db.commit();
}
return reply;
}
