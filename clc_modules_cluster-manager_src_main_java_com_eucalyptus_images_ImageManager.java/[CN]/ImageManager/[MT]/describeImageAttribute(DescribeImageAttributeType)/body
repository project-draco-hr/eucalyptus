{
  DescribeImageAttributeResponseType reply=(DescribeImageAttributeResponseType)request.getReply();
  reply.setImageId(request.getImageId());
  if (request.getAttribute() != null)   request.applyAttribute();
  EntityWrapper<ImageInfo> db=EntityWrapper.get(ImageInfo.class);
  try {
    ImageInfo imgInfo=db.getUnique(Images.exampleWithImageId(request.getImageId()));
    if (!imgInfo.isAllowed(request.getUser()))     throw new EucalyptusCloudException("image attribute: not authorized.");
    if (request.getKernel() != null) {
      reply.setRealResponse(reply.getKernel());
      if (imgInfo instanceof MachineImageInfo) {
        if (((MachineImageInfo)imgInfo).getKernelId() != null) {
          reply.getKernel().add(((MachineImageInfo)imgInfo).getKernelId());
        }
      }
    }
 else     if (request.getRamdisk() != null) {
      reply.setRealResponse(reply.getRamdisk());
      if (imgInfo instanceof MachineImageInfo) {
        if (((MachineImageInfo)imgInfo).getRamdiskId() != null) {
          reply.getRamdisk().add(((MachineImageInfo)imgInfo).getRamdiskId());
        }
      }
    }
 else     if (request.getLaunchPermission() != null) {
      reply.setRealResponse(reply.getLaunchPermission());
      for (      ImageAuthorization auth : imgInfo.getUserGroups())       reply.getLaunchPermission().add(LaunchPermissionItemType.getGroup(auth.getValue()));
      for (      ImageAuthorization auth : imgInfo.getPermissions())       reply.getLaunchPermission().add(LaunchPermissionItemType.getUser(auth.getValue()));
    }
 else     if (request.getProductCodes() != null) {
      reply.setRealResponse(reply.getProductCodes());
      for (      ProductCode p : imgInfo.getProductCodes()) {
        reply.getProductCodes().add(p.getValue());
      }
    }
 else     if (request.getBlockDeviceMapping() != null) {
      reply.setRealResponse(reply.getBlockDeviceMapping());
      reply.getBlockDeviceMapping().add(ImageUtil.EMI);
      reply.getBlockDeviceMapping().add(ImageUtil.EPHEMERAL);
      reply.getBlockDeviceMapping().add(ImageUtil.SWAP);
      reply.getBlockDeviceMapping().add(ImageUtil.ROOT);
    }
 else {
      throw new EucalyptusCloudException("invalid image attribute request.");
    }
  }
 catch (  EucalyptusCloudException e) {
    db.commit();
    throw e;
  }
  return reply;
}
