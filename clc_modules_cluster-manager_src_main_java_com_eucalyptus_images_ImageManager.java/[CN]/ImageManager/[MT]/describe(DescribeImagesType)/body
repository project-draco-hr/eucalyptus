{
  DescribeImagesResponseType reply=(DescribeImagesResponseType)request.getReply();
  ImageUtil.cleanDeregistered();
  List<ImageInfo> imgList=Lists.newArrayList();
  EntityWrapper<ImageInfo> db=new EntityWrapper<ImageInfo>();
  for (  String imageId : request.getImagesSet()) {
    try {
      imgList.add(db.getUnique(ImageInfo.named(imageId)));
    }
 catch (    Throwable e) {
    }
  }
  db.commit();
  ArrayList<String> imageList=request.getImagesSet();
  ArrayList<String> owners=request.getOwnersSet();
  ArrayList<String> executable=request.getExecutableBySet();
  if (owners.isEmpty() && executable.isEmpty()) {
    executable.add("self");
  }
  Set<ImageDetails> repList=Sets.newHashSet();
  if (!owners.isEmpty()) {
    repList.addAll(ImageUtil.getImagesByOwner(imgList,request.getUser(),owners));
  }
  if (!executable.isEmpty()) {
    if (executable.remove("self")) {
      repList.addAll(ImageUtil.getImageOwnedByUser(imgList,request.getUser()));
    }
    repList.addAll(ImageUtil.getImagesByExec(request.getUser(),executable));
  }
  reply.getImagesSet().addAll(repList);
  return reply;
}
