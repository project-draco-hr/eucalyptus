{
  DeregisterImageResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final String requestAccountId=ctx.getUserFullName().getAccountNumber();
  final User requestUser=Contexts.lookup().getUser();
  final String action=PolicySpec.requestToAction(request);
  EntityWrapper<ImageInfo> db=EntityWrapper.get(ImageInfo.class);
  try {
    ImageInfo imgInfo=db.getUnique(Images.exampleWithImageId(request.getImageId()));
    if (!ctx.hasAdministrativePrivileges() && (!imgInfo.getOwnerAccountNumber().equals(requestAccountId) || !RestrictedTypes.filterPrivileged().apply(imgInfo))) {
      throw new EucalyptusCloudException("Not authorized to deregister image");
    }
    Images.deregisterImage(imgInfo.getDisplayName());
    return reply;
  }
 catch (  NoSuchImageException ex) {
    LOG.trace(ex);
    reply.set_return(false);
    return reply;
  }
catch (  NoSuchElementException ex) {
    LOG.trace(ex);
    reply.set_return(false);
    return reply;
  }
catch (  InstanceNotTerminatedException re) {
    throw new EucalyptusCloudException(re);
  }
 finally {
    db.commit();
  }
}
