{
  DeregisterImageResponseType reply=request.getReply();
  EntityTransaction tx=Entities.get(ImageInfo.class);
  try {
    ImageInfo imgInfo=Entities.uniqueResult(Images.exampleWithImageId(imageIdentifier(request.getImageId())));
    if (!canModifyImage(imgInfo)) {
      throw new EucalyptusCloudException("Not authorized to deregister image");
    }
    Images.deregisterImage(imgInfo.getDisplayName());
    tx.commit();
    return reply;
  }
 catch (  NoSuchImageException|NoSuchElementException ex) {
    throw new ClientComputeException("InvalidAMIID.NotFound","The image ID '" + request.getImageId() + "' does not exist");
  }
catch (  InstanceNotTerminatedException|ConstraintViolationException re) {
    throw new ClientComputeException("InvalidAMIID.Unavailable","The image ID '" + request.getImageId() + "' is no longer available");
  }
catch (  TransactionException ex) {
    if (ex.getCause() instanceof NoSuchElementException)     throw new ClientComputeException("InvalidAMIID.NotFound","The image ID '" + request.getImageId() + "' does not exist");
 else     throw new EucalyptusCloudException(ex);
  }
 finally {
    if (tx.isActive())     tx.rollback();
  }
}
