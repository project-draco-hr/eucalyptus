{
  DeregisterImageResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final String requestAccountId=ctx.getUserFullName().getAccountNumber();
  EntityTransaction tx=Entities.get(ImageInfo.class);
  try {
    ImageInfo imgInfo=Entities.uniqueResult(Images.exampleWithImageId(imageIdentifier(request.getImageId())));
    if (!ctx.hasAdministrativePrivileges() && (!imgInfo.getOwnerAccountNumber().equals(requestAccountId) || !RestrictedTypes.filterPrivileged().apply(imgInfo))) {
      throw new EucalyptusCloudException("Not authorized to deregister image");
    }
    Images.deregister(imgInfo.getDisplayName());
    return reply;
  }
 catch (  NoSuchImageException ex) {
    LOG.trace(ex);
    reply.set_return(false);
    return reply;
  }
catch (  NoSuchElementException ex) {
    LOG.trace(ex);
    reply.set_return(false);
    return reply;
  }
catch (  InstanceNotTerminatedException re) {
    throw new EucalyptusCloudException(re);
  }
catch (  EucalyptusCloudException ex) {
    if (ex.getCause() instanceof NoSuchElementException)     throw new EucalyptusCloudException("The image id '[" + request.getImageId() + "]' does not exist");
 else     throw ex;
  }
catch (  Exception ex) {
    throw new EucalyptusCloudException("The image id '[" + request.getImageId() + "]' does not exist");
  }
 finally {
    tx.commit();
  }
}
