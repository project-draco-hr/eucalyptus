{
  final Context ctx=Contexts.lookup();
  User requestUser=Contexts.lookup().getUser();
  String action=PolicySpec.requestToAction(request);
  if (!ctx.hasAdministrativePrivileges()) {
    if (!Permissions.isAuthorized(PolicySpec.VENDOR_EC2,PolicySpec.EC2_RESOURCE_IMAGE,"",ctx.getAccount(),action,requestUser)) {
      throw new EucalyptusCloudException("Register image is not allowed for " + requestUser.getName());
    }
    if (!Permissions.canAllocate(PolicySpec.VENDOR_EC2,PolicySpec.EC2_RESOURCE_IMAGE,"",action,requestUser,1L)) {
      throw new EucalyptusCloudException("Quota exceeded in registering image for " + requestUser.getName());
    }
  }
  ImageInfo imageInfo=null;
  final String rootDevName=request.getRootDeviceName();
  Predicate<BlockDeviceMappingItemType> checkEbsRoot=new Predicate<BlockDeviceMappingItemType>(){
    @Override public boolean apply(    BlockDeviceMappingItemType input){
      return rootDevName.equals(input.getDeviceName());
    }
  }
;
  if (request.getImageLocation() != null) {
    ImageManifest manifest=ImageManifests.lookup(request.getImageLocation());
    LOG.debug("Obtained manifest information for requested image registration: " + manifest);
    imageInfo=Images.createFromManifest(ctx.getUserFullName(),manifest);
  }
 else   if (rootDevName != null && Iterables.any(request.getBlockDeviceMappings(),checkEbsRoot)) {
    BlockDeviceMappingItemType rootBlockDevice=Iterables.find(request.getBlockDeviceMappings(),checkEbsRoot);
  }
 else {
    throw new EucalyptusCloudException("Malformed registration. A request must specify either " + "a manifest path or a snapshot to use for BFE. Provided values are: imageLocation=" + request.getImageLocation() + " blockDeviceMappings="+ request.getBlockDeviceMappings());
  }
  RegisterImageResponseType reply=(RegisterImageResponseType)request.getReply();
  reply.setImageId(imageInfo.getDisplayName());
  return reply;
}
