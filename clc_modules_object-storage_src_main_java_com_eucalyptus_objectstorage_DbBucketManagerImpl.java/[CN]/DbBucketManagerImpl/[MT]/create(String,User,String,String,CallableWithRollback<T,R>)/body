{
  Bucket newBucket=new Bucket(bucketName);
  try {
    Bucket foundBucket=Transactions.find(newBucket);
    if (foundBucket != null) {
      if (foundBucket.getOwnerCanonicalId().equals(owner.getAccount().getCanonicalId())) {
        throw new BucketAlreadyOwnedByYouException(bucketName);
      }
 else {
        throw new BucketAlreadyExistsException(bucketName);
      }
    }
  }
 catch (  NoSuchElementException e) {
  }
catch (  S3Exception e) {
    throw e;
  }
catch (  Exception e) {
    LOG.error("Lookup for bucket " + bucketName + " failed during creation checks. Cannot proceed.",e);
    throw new InternalErrorException(bucketName);
  }
  newBucket.setOwnerCanonicalId(owner.getAccount().getCanonicalId());
  newBucket.setOwnerDisplayName(owner.getAccount().getName());
  newBucket.setOwnerIamUserId(owner.getUserId());
  newBucket.setBucketSize(0L);
  newBucket.setHidden(false);
  newBucket.setAcl(acl);
  newBucket.setLocation(location);
  newBucket.setLoggingEnabled(false);
  newBucket.setVersioning(ObjectStorageProperties.VersioningStatus.Disabled.toString());
  newBucket.setCreationDate(new Date());
  T result=null;
  try {
    if (resourceModifier != null) {
      result=resourceModifier.call();
    }
  }
 catch (  Exception e) {
    LOG.error("Error creating bucket in backend",e);
    throw new InternalErrorException(bucketName);
  }
  try {
    Transactions.saveDirect(newBucket);
  }
 catch (  TransactionException ex) {
    LOG.error("Error persisting bucket record for bucket " + bucketName,ex);
    if (resourceModifier != null) {
      try {
        R rollbackResult=resourceModifier.rollback(result);
      }
 catch (      Exception e) {
        LOG.error("Backend rollback of operation failed",e);
      }
    }
    throw ex;
  }
  return result;
}
