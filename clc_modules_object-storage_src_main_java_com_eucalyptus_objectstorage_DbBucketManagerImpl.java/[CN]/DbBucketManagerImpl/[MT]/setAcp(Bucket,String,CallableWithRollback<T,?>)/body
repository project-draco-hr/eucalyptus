{
  EntityTransaction db=Entities.get(Bucket.class);
  T result=null;
  try {
    Bucket bucket=Entities.uniqueResult(bucketEntity);
    bucket.setAcl(acl);
    if (resourceModifier != null) {
      try {
        result=resourceModifier.call();
      }
 catch (      Exception ex) {
        LOG.error("Resource modifier call (backend) for setAcl failed. Rolling back",ex);
        try {
          resourceModifier.rollback(result);
        }
 catch (        Exception ex2) {
          LOG.error("Resource rollback failed on setAcl rollback.",ex2);
        }
      }
    }
 else {
      result=null;
    }
    db.commit();
    return result;
  }
 catch (  NoSuchElementException e) {
    throw new NoSuchBucketException(bucketEntity.getBucketName());
  }
catch (  TransactionException e) {
    LOG.error("Transaction error updating acl for bucket " + bucketEntity.getBucketName(),e);
    try {
      resourceModifier.rollback(result);
    }
 catch (    Exception e2) {
      LOG.error("Rollback after transaction exception failed for resource modififer",e2);
    }
    throw e;
  }
 finally {
    if (db != null && db.isActive()) {
      db.rollback();
    }
  }
}
