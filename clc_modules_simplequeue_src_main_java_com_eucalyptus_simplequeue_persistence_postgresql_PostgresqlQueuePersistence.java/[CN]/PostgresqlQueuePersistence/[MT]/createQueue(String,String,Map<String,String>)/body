{
  try (TransactionResource db=Entities.transactionFor(QueueEntity.class)){
    Optional<QueueEntity> queueEntityOptional=Entities.criteriaQuery(QueueEntity.class).whereEqual(QueueEntity_.accountId,accountId).whereEqual(QueueEntity_.queueName,queueName).uniqueResultOption();
    if (queueEntityOptional.isPresent()) {
      throw new QueueAlreadyExistsException("Queue " + queueName + " already exists");
    }
 else {
      QueueEntity queueEntity=new QueueEntity();
      queueEntity.setAccountId(accountId);
      queueEntity.setQueueName(queueName);
      queueEntity.setAttributes(convertAttributeMapToJson(attributes));
      queueEntity.setLastLookupTimestampSecs(SimpleQueueService.currentTimeSeconds());
      queueEntity.setPartitionToken(String.valueOf(random.nextInt(NUM_PARTITIONS)));
      Entities.persist(queueEntity);
      db.commit();
      return queueFromQueueEntity(queueEntity);
    }
  }
 }
