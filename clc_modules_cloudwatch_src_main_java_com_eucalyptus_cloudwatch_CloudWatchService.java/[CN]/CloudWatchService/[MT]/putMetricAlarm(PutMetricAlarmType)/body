{
  PutMetricAlarmResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  if (!hasActionPermission(PolicySpec.CLOUDWATCH_PUTMETRICALARM,ctx)) {
    throw new EucalyptusCloudException();
  }
  final OwnerFullName ownerFullName=ctx.getUserFullName();
  final String accountId=ownerFullName.getAccountNumber();
  final Boolean actionsEnabled=(request.getActionsEnabled() == null) ? Boolean.TRUE : request.getActionsEnabled();
  final Collection<String> alarmActions=(request.getAlarmActions() != null) ? request.getAlarmActions().getMember() : null;
  final String alarmDescription=request.getAlarmDescription();
  final String alarmName=request.getAlarmName();
  final ComparisonOperator comparisonOperator=ComparisonOperator.valueOf(request.getComparisonOperator());
  final Map<String,String> dimensionMap=transform(request.getDimensions());
  Integer evaluationPeriods=request.getEvaluationPeriods();
  final Collection<String> insufficientDataActions=(request.getInsufficientDataActions() != null) ? request.getInsufficientDataActions().getMember() : null;
  final String metricName=request.getMetricName();
  final String namespace=request.getNamespace();
  final Collection<String> okActions=(request.getOkActions() != null) ? request.getOkActions().getMember() : null;
  final Integer period=request.getPeriod();
  final Statistic statistic=Statistic.valueOf(request.getStatistic());
  final Double threshold=request.getThreshold();
  final Units unit=Units.fromValue(request.getUnit());
  AlarmManager.putMetricAlarm(accountId,actionsEnabled,alarmActions,alarmDescription,alarmName,comparisonOperator,dimensionMap,evaluationPeriods,insufficientDataActions,metricName,MetricType.Custom,namespace,okActions,period,statistic,threshold,unit);
  return reply;
}
