{
  DescribeAlarmsForMetricResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  if (!hasActionPermission(PolicySpec.CLOUDWATCH_DESCRIBEALARMSFORMETRIC,ctx)) {
    throw new EucalyptusCloudException();
  }
  final OwnerFullName ownerFullName=ctx.getUserFullName();
  final String accountId=ownerFullName.getAccountNumber();
  final Map<String,String> dimensionMap=transform(request.getDimensions());
  final String metricName=request.getMetricName();
  final String namespace=request.getNamespace();
  final Integer period=request.getPeriod();
  final Statistic statistic=request.getStatistic() == null ? null : Statistic.valueOf(request.getStatistic());
  final Units unit=Units.fromValue(request.getUnit());
  Collection<AlarmEntity> results=AlarmManager.describeAlarmsForMetric(accountId,dimensionMap,metricName,namespace,period,statistic,unit);
  MetricAlarms metricAlarms=new MetricAlarms();
  metricAlarms.setMember(Lists.newArrayList(Collections2.<AlarmEntity,MetricAlarm>transform(results,AlarmEntityFunction.INSTANCE)));
  reply.getDescribeAlarmsForMetricResult().setMetricAlarms(metricAlarms);
  return reply;
}
