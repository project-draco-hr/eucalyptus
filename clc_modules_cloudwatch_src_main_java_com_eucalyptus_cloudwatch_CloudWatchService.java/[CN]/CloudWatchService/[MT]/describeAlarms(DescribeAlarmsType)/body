{
  DescribeAlarmsResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  if (!hasActionPermission(PolicySpec.CLOUDWATCH_DESCRIBEALARMS,ctx)) {
    throw new EucalyptusCloudException();
  }
  final OwnerFullName ownerFullName=ctx.getUserFullName();
  final String accountId=ownerFullName.getAccountNumber();
  final String actionPrefix=request.getActionPrefix();
  final String alarmNamePrefix=request.getAlarmNamePrefix();
  final Collection<String> alarmNames=(request.getAlarmNames() != null) ? request.getAlarmNames().getMember() : null;
  final Integer maxRecords=request.getMaxRecords();
  final StateValue stateValue=(request.getStateValue() != null) ? StateValue.valueOf(request.getStateValue()) : null;
  Collection<AlarmEntity> results=AlarmManager.describeAlarms(accountId,actionPrefix,alarmNamePrefix,alarmNames,maxRecords,stateValue);
  MetricAlarms metricAlarms=new MetricAlarms();
  metricAlarms.setMember(Lists.newArrayList(Collections2.<AlarmEntity,MetricAlarm>transform(results,AlarmEntityFunction.INSTANCE)));
  reply.getDescribeAlarmsResult().setMetricAlarms(metricAlarms);
  return reply;
}
