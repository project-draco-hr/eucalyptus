def main(self, **args):
    self.args.update(args)
    self.process_args()
    euca_home = self.request_params.get('euca_home', None)
    cfg_file = self.request_params.get('configfile', None)
    edit_flg = self.request_params.get('edit', False)
    generate_flg = self.request_params.get('generate', False)
    prop = self.get_prop_name(self.request_params.get('Partition', None))
    self.verbose_flg = self.request_params.get('verbose', False)
    if (not euca_home):
        euca_home = os.environ.get('EUCALYPTUS', None)
        if (not euca_home):
            if os.path.exists(os.path.join(self.ServiceClass.InstallPath, VMwareCommand)):
                euca_home = self.ServiceClass.InstallPath
            else:
                print 'EUCALYPTUS is not defined or you are not running this on a VMware Broker host'
                sys.exit(1)
    if cfg_file:
        self.validate_file(euca_home, cfg_file)
        self.save_new_value(cfg_file, prop)
    elif edit_flg:
        value = self.get_current_value(prop)
        path = self.save_to_file(value)
        self.edit_file(path)
        self.validate_file(euca_home, path)
        self.save_new_value(path, prop)
    elif generate_flg:
        path = self.save_to_file('')
        self.create_file(euca_home, path)
        print ('New config file was saved to %s' % path)
    elif (prop and self.get_current_value(prop) and (self.get_current_value(prop) != '<!-- Eucalyptus VMware Broker configuration file -->')):
        value = self.get_current_value(prop)
        path = self.save_to_file(value)
        self.validate_file(euca_home, path)
        self.save_new_value(path, prop)
    else:
        path = self.save_to_file('')
        self.create_file(euca_home, path)
        self.validate_file(euca_home, path)
        self.save_new_value(path, prop)
