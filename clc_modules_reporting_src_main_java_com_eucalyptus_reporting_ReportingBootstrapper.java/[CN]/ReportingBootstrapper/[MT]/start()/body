{
  try {
    QueueBroker.getInstance().startup();
    log.info("Queue broker started");
    queueFactory=QueueFactory.getInstance();
    queueFactory.startup();
    final StorageEventPoller poller;
    if (this.storagePoller == null) {
      QueueReceiver storageReceiver=queueFactory.getReceiver(QueueIdentifier.STORAGE);
      poller=new StorageEventPoller(storageReceiver);
      this.storagePoller=poller;
    }
 else {
      poller=this.storagePoller;
    }
    timer=new Timer(true);
    timer.schedule(new TimerTask(){
      @Override public void run(){
        poller.writeEvents();
      }
    }
,0,POLLER_DELAY_MS);
    log.info("Storage queue poller started");
    QueueReceiver instanceReceiver=queueFactory.getReceiver(QueueIdentifier.INSTANCE);
    if (instanceListener == null) {
      instanceListener=new InstanceEventListener();
      log.info("New instance listener instantiated");
    }
 else {
      log.info("Used existing instance listener");
    }
    instanceReceiver.addEventListener(instanceListener);
    log.info("ReportingBootstrapper started");
    return true;
  }
 catch (  Exception ex) {
    ex.printStackTrace();
    log.error("ReportingBootstrapper failed to start",ex);
    return false;
  }
}
