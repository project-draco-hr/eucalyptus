{
  Preconditions.checkNotNull(event,"Event is required");
  final long timeInMs=getCurrentTimeMillis();
  try {
    final User user=Accounts.lookupUserById(event.getOwner().getUserId());
    getReportingAccountCrud().createOrUpdateAccount(user.getAccount().getName(),user.getAccount().getAccountNumber());
    getReportingUserCrud().createOrUpdateUser(user.getUserId(),user.getAccount().getAccountNumber(),user.getName());
    final ReportingVolumeEventStore eventStore=getReportingVolumeEventStore();
switch (event.getActionInfo().getAction()) {
case VOLUMECREATE:
      eventStore.insertCreateEvent(event.getUuid(),event.getDisplayName(),timeInMs,event.getOwner().getUserId(),event.getAvailabilityZone(),event.getSizeGB());
    break;
case VOLUMEDELETE:
  eventStore.insertDeleteEvent(event.getUuid(),timeInMs);
break;
case VOLUMEATTACH:
eventStore.insertAttachEvent(event.getUuid(),((InstanceActionInfo)event.getActionInfo()).getInstanceUuid(),event.getSizeGB(),timeInMs);
break;
case VOLUMEDETACH:
eventStore.insertDetachEvent(event.getUuid(),((InstanceActionInfo)event.getActionInfo()).getInstanceUuid(),event.getSizeGB(),timeInMs);
break;
}
}
 catch (AuthException e) {
LOG.error("Unable to fire volume reporting event.",e.getCause());
}
}
