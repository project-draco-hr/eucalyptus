{
  String message=getMessageString(httpRequest);
  if (message.length() > 0) {
    try {
      XMLParser xmlParser=new XMLParser(message);
      String targetBucket=xmlParser.getValue("//TargetBucket");
      if (targetBucket == null || targetBucket.length() == 0)       return;
      String targetPrefix=xmlParser.getValue("//TargetPrefix");
      ArrayList<Grant> grants=new ArrayList<Grant>();
      List<String> permissions=xmlParser.getValues("//TargetGrants/Grant/Permission");
      if (permissions == null)       throw new MalformedACLErrorException("/TargetGrants/Grant/Permission");
      DTMNodeList grantees=xmlParser.getNodes("//TargetGrants/Grant/Grantee");
      if (grantees == null)       throw new MalformedACLErrorException("//TargetGrants/Grant/Grantee");
      for (int i=0; i < grantees.getLength(); ++i) {
        String id=xmlParser.getValue(grantees.item(i),"ID");
        if (id.length() > 0) {
          String canonicalUserName=xmlParser.getValue(grantees.item(i),"DisplayName");
          Grant grant=new Grant();
          Grantee grantee=new Grantee();
          grantee.setCanonicalUser(new CanonicalUser(id,canonicalUserName));
          grant.setGrantee(grantee);
          grant.setPermission(permissions.get(i));
          grants.add(grant);
        }
 else {
          String groupUri=xmlParser.getValue(grantees.item(i),"URI");
          if (groupUri.length() == 0)           throw new MalformedACLErrorException("ACL group URI");
          Grant grant=new Grant();
          Grantee grantee=new Grantee();
          grantee.setGroup(new Group(groupUri));
          grant.setGrantee(grantee);
          grant.setPermission(permissions.get(i));
          grants.add(grant);
        }
      }
      TargetGrants targetGrants=new TargetGrants(grants);
      LoggingEnabled loggingEnabled=new LoggingEnabled(targetBucket,targetPrefix,new TargetGrants(grants));
      operationParams.put("LoggingEnabled",loggingEnabled);
    }
 catch (    S3Exception e) {
      throw e;
    }
catch (    Exception ex) {
      MalformedXMLException malEx=new MalformedXMLException("//TargetBucket");
      malEx.initCause(ex);
      throw malEx;
    }
  }
}
