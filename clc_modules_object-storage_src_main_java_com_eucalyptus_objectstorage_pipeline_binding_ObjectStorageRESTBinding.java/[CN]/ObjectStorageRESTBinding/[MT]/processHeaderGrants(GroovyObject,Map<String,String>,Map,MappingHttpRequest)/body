{
  if (paramFieldMap.containsKey("AccessControlList") || paramFieldMap.containsKey("AccessControlPolicy")) {
    ArrayList<Grant> grants=new ArrayList<Grant>();
    String cannedACLString=httpRequest.getAndRemoveHeader(ObjectStorageProperties.AMZ_ACL);
    if (!Strings.isNullOrEmpty(cannedACLString)) {
      validateCannedAcl(cannedACLString);
      grants.add(new Grant(new Grantee(new CanonicalUser("","")),cannedACLString));
    }
    for (    Map.Entry<X_AMZ_GRANT,Permission> mapEntry : ObjectStorageProperties.HEADER_PERMISSION_MAP.entrySet()) {
      String headerValue=httpRequest.getAndRemoveHeader(mapEntry.getKey().toString());
      if (StringUtils.isNotBlank(headerValue)) {
        if (ObjectStorageProperties.GRANT_HEADER_PATTERN.matcher(headerValue).matches()) {
          List<String[]> gpList=null;
          try {
            gpList=ObjectStorageProperties.GRANT_HEADER_PARSER.apply(headerValue);
          }
 catch (          Exception e) {
            LOG.debug("Ignoring header: " + mapEntry.getKey().toString() + ". Unable to parse value: "+ headerValue,e);
            throw new InvalidArgumentException().withArgumentName(mapEntry.getKey().toString()).withArgumentValue(headerValue);
          }
          if (gpList != null && !gpList.isEmpty()) {
            for (            String[] gp : gpList) {
switch (gp[0]) {
case "emailAddress":
                grants.add(new Grant(new Grantee(gp[1]),mapEntry.getValue().toString()));
              break;
case "id":
            grants.add(new Grant(new Grantee(new CanonicalUser(gp[1],"")),mapEntry.getValue().toString()));
          break;
case "uri":
        grants.add(new Grant(new Grantee(new Group(gp[1])),mapEntry.getValue().toString()));
      break;
default :
    throw new InvalidArgumentException().withArgumentName(mapEntry.getKey().toString()).withArgumentValue(headerValue);
}
}
}
 else {
LOG.debug("Ignoring header: " + mapEntry.getKey().toString() + ". Value is invalid: "+ headerValue);
throw new InvalidArgumentException().withArgumentName(mapEntry.getKey().toString()).withArgumentValue(headerValue);
}
}
 else {
LOG.debug("Cannot parse header: " + mapEntry.getKey().toString() + ", value:  "+ headerValue+ ". Value does not match pattern: "+ ObjectStorageProperties.GRANT_HEADER_PATTERN.toString());
throw new InvalidArgumentException().withArgumentName(mapEntry.getKey().toString()).withArgumentValue(headerValue);
}
}
 else {
}
}
if (!grants.isEmpty()) {
if (paramFieldMap.containsKey("AccessControlList")) {
AccessControlList accessControlList;
if (bindingMap.containsKey("AccessControlList")) {
accessControlList=(AccessControlList)bindingMap.get("AccessControlList");
}
 else {
accessControlList=new AccessControlList();
bindingMap.put("AccessControlList",accessControlList);
}
accessControlList.getGrants().addAll(grants);
}
 else {
AccessControlPolicy accessControlPolicy;
if (bindingMap.containsKey("AccessControlPolicy")) {
accessControlPolicy=(AccessControlPolicy)bindingMap.get("AccessControlPolicy");
}
 else {
accessControlPolicy=new AccessControlPolicy(new CanonicalUser("",""),new AccessControlList());
bindingMap.put("AccessControlPolicy",accessControlPolicy);
}
accessControlPolicy.getAccessControlList().getGrants().addAll(grants);
}
}
 else {
}
}
 else {
}
}
