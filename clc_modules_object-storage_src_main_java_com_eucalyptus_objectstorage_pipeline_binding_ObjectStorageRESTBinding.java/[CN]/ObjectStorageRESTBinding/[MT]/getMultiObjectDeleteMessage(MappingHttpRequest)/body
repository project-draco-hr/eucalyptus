{
  DeleteMultipleObjectsMessage message=new DeleteMultipleObjectsMessage();
  String rawMessage=httpRequest.getContent().toString(StandardCharsets.UTF_8);
  if (rawMessage.length() > 0) {
    try {
      XMLParser xmlParser=new XMLParser(rawMessage);
      String quietVal=xmlParser.getValue("//Delete/Quiet");
      if (quietVal != null && !"".equals(quietVal) && quietVal.trim().startsWith("true")) {
        message.setQuiet(Boolean.TRUE);
      }
 else {
        message.setQuiet(Boolean.FALSE);
      }
      DTMNodeList deletes=xmlParser.getNodes("//Delete/Object");
      if (deletes == null) {
        throw new MalformedXMLException("/Delete/Object");
      }
      List<DeleteMultipleObjectsEntry> deleteObjList=Lists.newArrayList();
      for (int idx=0; idx < deletes.getLength(); idx++) {
        deleteObjList.add(extractDeleteObjectEntry(xmlParser,deletes.item(idx)));
      }
      message.setObjects(deleteObjList);
    }
 catch (    S3Exception e) {
      throw e;
    }
catch (    Exception ex) {
      MalformedXMLException e=new MalformedXMLException("/LifecycleConfiguration");
      ex.initCause(ex);
      throw e;
    }
  }
  return message;
}
