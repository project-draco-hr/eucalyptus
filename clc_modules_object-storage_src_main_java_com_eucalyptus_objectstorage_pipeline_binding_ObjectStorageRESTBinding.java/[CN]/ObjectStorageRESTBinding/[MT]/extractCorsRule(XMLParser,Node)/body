{
  CorsRule corsRule=new CorsRule();
  LOG.debug("In extractCorsRule");
  try {
    String id=parser.getValue(node,"ID");
    if (id != null && id.length() > 0) {
      corsRule.setId(id);
    }
    String maxAgeSecondsString=parser.getValue(node,"MaxAgeSeconds");
    if (maxAgeSecondsString != null) {
      try {
        int maxAgeSeconds=Integer.parseInt(maxAgeSecondsString);
        if (maxAgeSeconds > 0) {
          corsRule.setMaxAgeSeconds(maxAgeSeconds);
        }
      }
 catch (      NumberFormatException nfe) {
      }
    }
    String[] corsElementArray=null;
    corsElementArray=extractCorsElementArray(parser,node,"AllowedMethod");
    corsRule.setAllowedMethods(corsElementArray);
    corsElementArray=extractCorsElementArray(parser,node,"AllowedOrigin");
    corsRule.setAllowedOrigins(corsElementArray);
    corsElementArray=extractCorsElementArray(parser,node,"AllowedHeader");
    corsRule.setAllowedHeaders(corsElementArray);
    corsElementArray=extractCorsElementArray(parser,node,"ExposeHeader");
    corsRule.setExposeHeaders(corsElementArray);
  }
 catch (  S3Exception e) {
    throw e;
  }
catch (  Exception ex) {
    MalformedXMLException e=new MalformedXMLException("/CORSConfiguration/CORSRule");
    e.initCause(ex);
    throw e;
  }
  return corsRule;
}
