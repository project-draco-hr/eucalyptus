{
  final DescribeServicesResponseType reply=request.getReply();
  final List<Predicate<ServiceConfiguration>> filters=new ArrayList<Predicate<ServiceConfiguration>>(){
{
      this.add(Filters.publicService());
      if (request.getByPartition() != null) {
        this.add(Filters.partition(request.getByPartition()));
      }
      if (request.getByState() != null) {
        this.add(Filters.state(Component.State.valueOf(request.getByState().toUpperCase())));
      }
    }
  }
;
  final Predicate<Component> componentFilter=(Predicate<Component>)(request.getByServiceType() != null ? Filters.componentType(ComponentIds.lookup(request.getByServiceType().toLowerCase())) : Predicates.alwaysTrue());
  final Predicate<ServiceConfiguration> configPredicate=Predicates.and(filters);
  for (  final Component comp : Iterables.filter(Components.list(),componentFilter)) {
    for (    final ServiceConfiguration config : Iterables.filter(comp.services(),configPredicate)) {
      reply.getServiceStatuses().add(ServiceConfigurations.asServiceStatus(false,false).apply(config));
    }
  }
  return reply;
}
