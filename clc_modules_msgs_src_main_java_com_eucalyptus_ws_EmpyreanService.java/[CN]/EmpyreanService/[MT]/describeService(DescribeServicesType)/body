{
  final DescribeServicesResponseType reply=request.getReply();
  for (  Component comp : Components.list()) {
    if (!Boolean.TRUE.equals(request.getListAll())) {
      if (comp.hasLocalService()) {
        final ServiceConfiguration config=comp.getLocalServiceConfiguration();
        reply.getServiceStatuses().add(new ServiceStatusType(){
{
            setServiceId(TypeMappers.transform(config,ServiceId.class));
            setLocalEpoch(reply.getBaseEpoch());
            setLocalState(config.lookupStateMachine().getState().toString());
            if (Boolean.TRUE.equals(request.getShowDetails())) {
              getDetails().addAll(Collections2.transform(config.lookupDetails(),Functions.toStringFunction()));
            }
          }
        }
);
      }
    }
 else {
      for (      final ServiceConfiguration config : comp.lookupServiceConfigurations()) {
        reply.getServiceStatuses().add(new ServiceStatusType(){
{
            setServiceId(TypeMappers.transform(config,ServiceId.class));
            setLocalEpoch(reply.getBaseEpoch());
            try {
              setLocalState(config.lookupStateMachine().getState().toString());
            }
 catch (            Exception ex) {
              setLocalState("n/a: " + ex.getMessage());
            }
            getDetails().addAll(Collections2.transform(config.lookupDetails(),Functions.toStringFunction()));
          }
        }
);
      }
    }
  }
  return reply;
}
