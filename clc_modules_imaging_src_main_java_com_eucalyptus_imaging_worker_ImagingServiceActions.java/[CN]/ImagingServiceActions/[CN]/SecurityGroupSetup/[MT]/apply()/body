{
  final String groupName=String.format("euca-internal-imaging-%s",this.getGroupId());
  final String groupDesc=String.format("group for imaging service workers");
  boolean groupFound=false;
  try {
    List<SecurityGroupItemType> groups=EucalyptusActivityTasks.getInstance().describeSecurityGroups(Lists.newArrayList(groupName));
    if (groups != null && groups.size() > 0) {
      final SecurityGroupItemType current=groups.get(0);
      if (groupName.equals(current.getGroupName())) {
        groupFound=true;
        this.createdGroup=groupName;
        this.createdGroupId=current.getGroupId();
        this.groupOwnerAccountId=current.getAccountId();
      }
    }
  }
 catch (  Exception ex) {
    groupFound=false;
  }
  if (!groupFound) {
    try {
      EucalyptusActivityTasks.getInstance().createSecurityGroup(groupName,groupDesc);
      createdGroup=groupName;
      List<SecurityGroupItemType> groups=EucalyptusActivityTasks.getInstance().describeSecurityGroups(Lists.newArrayList(groupName));
      if (groups != null && groups.size() > 0) {
        final SecurityGroupItemType current=groups.get(0);
        if (groupName.equals(current.getGroupName())) {
          this.groupOwnerAccountId=current.getAccountId();
          this.createdGroupId=current.getGroupId();
        }
      }
    }
 catch (    Exception ex) {
      throw new ImagingServiceActionException("Failed to create the security group for imaging service",ex);
    }
  }
 else {
    createdGroup=groupName;
  }
  if (this.createdGroup == null || this.groupOwnerAccountId == null)   throw new ImagingServiceActionException("Failed to create the security group for loadbalancer");
  return true;
}
