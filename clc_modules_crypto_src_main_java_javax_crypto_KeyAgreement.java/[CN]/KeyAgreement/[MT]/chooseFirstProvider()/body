{
  if (spi != null) {
    return;
  }
synchronized (lock) {
    if (spi != null) {
      return;
    }
    if (debug != null) {
      int w=--warnCount;
      if (w >= 0) {
        debug.println("KeyAgreement.init() not first method " + "called, disabling delayed provider selection");
        if (w == 0) {
          debug.println("Further warnings of this type will " + "be suppressed");
        }
        new Exception("Call trace").printStackTrace();
      }
    }
    Exception lastException=null;
    while ((firstService != null) || serviceIterator.hasNext()) {
      Service s;
      if (firstService != null) {
        s=firstService;
        firstService=null;
      }
 else {
        s=(Service)serviceIterator.next();
      }
      if (JceSecurity.canUseProvider(s.getProvider()) == false) {
        continue;
      }
      try {
        Object obj=s.newInstance(null);
        if (obj instanceof KeyAgreementSpi == false) {
          continue;
        }
        spi=(KeyAgreementSpi)obj;
        provider=s.getProvider();
        firstService=null;
        serviceIterator=null;
        return;
      }
 catch (      Exception e) {
        lastException=e;
      }
    }
    ProviderException e=new ProviderException("Could not construct KeyAgreementSpi instance");
    if (lastException != null) {
      e.initCause(lastException);
    }
    throw e;
  }
}
