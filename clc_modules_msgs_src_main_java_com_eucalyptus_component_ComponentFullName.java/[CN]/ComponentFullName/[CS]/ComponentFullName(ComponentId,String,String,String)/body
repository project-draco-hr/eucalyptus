{
  assertThat(componentType,notNullValue());
  this.realComponentId=componentType;
  this.name=name != null ? name : "null";
  partition=partition != null ? partition : "null";
  boolean hasParentComponent=this.realComponentId.partitionParent() != null;
  ComponentId tempComponentId=Empyrean.INSTANCE;
  String tempPartition="";
  if (hasParentComponent || this.realComponentId.isPartitioned()) {
    if (this.realComponentId.isCloudLocal()) {
      tempComponentId=Eucalyptus.INSTANCE;
    }
 else     if (this.realComponentId.isAlwaysLocal()) {
      tempComponentId=Empyrean.INSTANCE;
    }
    tempPartition=partition;
  }
 else   if (!hasParentComponent && !this.realComponentId.isPartitioned()) {
    tempComponentId=this.realComponentId;
    tempPartition=this.realComponentId.name();
  }
 else   if (!this.realComponentId.isPartitioned() && hasParentComponent) {
    ComponentId parentId=this.realComponentId.partitionParent();
    if (parentId.getClass().equals(Eucalyptus.class)) {
      tempComponentId=Eucalyptus.INSTANCE;
      tempPartition=tempComponentId.name();
    }
 else {
      tempComponentId=Empyrean.INSTANCE;
      tempPartition=tempComponentId.name();
    }
  }
  this.componentId=tempComponentId;
  this.partition=tempPartition;
  String displayPartition=(this.componentId.name().equals(this.partition)) ? "" : this.partition;
  String displayCompType=(this.realComponentId.equals(this.componentId)) ? "" : this.realComponentId.name();
  this.authority=Joiner.on(SEP).join(PREFIX,this.componentId.name(),displayPartition,displayCompType,this.name);
  this.relativeId=Joiner.on(SEP_PATH).join(pathPartsArray);
  this.qName=this.authority + this.relativeId;
}
