{
  BucketLifecycleConfiguration bucketLifecycleConfiguration=new BucketLifecycleConfiguration();
  if (lifecycleConfiguration.getRules() != null) {
    List<BucketLifecycleConfiguration.Rule> rules=Lists.newArrayList();
    for (    S3LifecycleRule s3LifecycleRule : lifecycleConfiguration.getRules()) {
      BucketLifecycleConfiguration.Rule rule=new BucketLifecycleConfiguration.Rule();
      rule.setId(s3LifecycleRule.getId());
      if (s3LifecycleRule.getExpirationDate() != null) {
        rule.setExpirationDate(Timestamps.parseIso8601Timestamp(s3LifecycleRule.getExpirationDate()));
      }
      if (s3LifecycleRule.getExpirationInDays() != null) {
        rule.setExpirationInDays(s3LifecycleRule.getExpirationInDays());
      }
      rule.setPrefix(s3LifecycleRule.getPrefix());
      rule.setStatus(s3LifecycleRule.getStatus());
      if (s3LifecycleRule.getTransition() != null) {
        BucketLifecycleConfiguration.Transition transition=new BucketLifecycleConfiguration.Transition();
        if (s3LifecycleRule.getTransition().getStorageClass() != null) {
          transition.setStorageClass(StorageClass.valueOf(s3LifecycleRule.getTransition().getStorageClass()));
        }
        if (s3LifecycleRule.getExpirationDate() != null) {
          transition.setDate(Timestamps.parseIso8601Timestamp(s3LifecycleRule.getExpirationDate()));
        }
        if (s3LifecycleRule.getExpirationInDays() != null) {
          transition.setDays(s3LifecycleRule.getExpirationInDays());
        }
        rule.setTransition(transition);
      }
      rules.add(rule);
    }
    bucketLifecycleConfiguration.setRules(rules);
  }
  return bucketLifecycleConfiguration;
}
