{
  URI serviceURI=ServiceUris.remotePublicify(ObjectStorage.class);
  User user=Accounts.lookupUserById(getResourceInfo().getEffectiveUserId());
  final EucaS3Client s3c=EucaS3ClientFactory.getEucaS3Client(user);
  String bucketName;
switch (stepNum) {
case 0:
    bucketName=properties.getBucketName() != null ? properties.getBucketName() : getDefaultPhysicalResourceId(63).toLowerCase();
  if (s3c.doesBucketExist(bucketName)) {
    throw new Exception("Bucket " + bucketName + " exists");
  }
s3c.createBucket(bucketName);
info.setPhysicalResourceId(bucketName);
break;
case 1:
bucketName=info.getPhysicalResourceId();
if (properties.getAccessControl() != null) {
s3c.setBucketAcl(bucketName,CannedAccessControlList.valueOf(properties.getAccessControl()));
}
if (properties.getCorsConfiguration() != null) {
s3c.setBucketCrossOriginConfiguration(bucketName,convertCrossOriginConfiguration(properties.getCorsConfiguration()));
}
if (properties.getLifecycleConfiguration() != null) {
s3c.setBucketLifecycleConfiguration(bucketName,convertLifecycleConfiguration(properties.getLifecycleConfiguration()));
}
if (properties.getLoggingConfiguration() != null) {
s3c.setBucketLoggingConfiguration(convertLoggingConfiguration(bucketName,properties.getLoggingConfiguration()));
}
if (properties.getNotificationConfiguration() != null) {
s3c.setBucketNotificationConfiguration(bucketName,convertNotificationConfiguration(properties.getNotificationConfiguration()));
}
List<CloudFormationResourceTag> tags=TagHelper.getCloudFormationResourceStackTags(info,getStackEntity());
if (properties.getTags() != null && !properties.getTags().isEmpty()) {
TagHelper.checkReservedCloudFormationResourceTemplateTags(properties.getTags());
tags.addAll(properties.getTags());
}
s3c.setBucketTaggingConfiguration(bucketName,convertTags(tags));
if (properties.getVersioningConfiguration() != null) {
s3c.setBucketVersioningConfiguration(convertVersioningConfiguration(bucketName,properties.getVersioningConfiguration()));
}
if (properties.getWebsiteConfiguration() != null) {
s3c.setBucketWebsiteConfiguration(bucketName,convertWebsiteConfiguration(properties.getWebsiteConfiguration()));
}
String domainName=null;
if ((serviceURI.getPath() == null || serviceURI.getPath().replace("/","").isEmpty())) {
domainName=bucketName + "." + serviceURI.getHost()+ (serviceURI.getPort() != -1 ? ":" + serviceURI.getPort() : "");
}
 else {
domainName=serviceURI.getHost() + (serviceURI.getPort() != -1 ? ":" + serviceURI.getPort() : "") + serviceURI.getPath()+ "/"+ bucketName;
}
info.setDomainName(JsonHelper.getStringFromJsonNode(new TextNode(domainName)));
info.setWebsiteURL(JsonHelper.getStringFromJsonNode(new TextNode("http://" + domainName)));
info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(info.getPhysicalResourceId())));
break;
default :
throw new IllegalStateException("Invalid step " + stepNum);
}
}
