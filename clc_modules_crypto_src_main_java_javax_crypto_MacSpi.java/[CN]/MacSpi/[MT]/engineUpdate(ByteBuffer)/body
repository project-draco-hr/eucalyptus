{
  if (input.hasRemaining() == false) {
    return;
  }
  if (input.hasArray()) {
    byte[] b=input.array();
    int ofs=input.arrayOffset();
    int pos=input.position();
    int lim=input.limit();
    engineUpdate(b,ofs + pos,lim - pos);
    input.position(lim);
  }
 else {
    int len=input.remaining();
    byte[] b=new byte[CipherSpi.getTempArraySize(len)];
    while (len > 0) {
      int chunk=Math.min(len,b.length);
      input.get(b,0,chunk);
      engineUpdate(b,0,chunk);
      len-=chunk;
    }
  }
}
