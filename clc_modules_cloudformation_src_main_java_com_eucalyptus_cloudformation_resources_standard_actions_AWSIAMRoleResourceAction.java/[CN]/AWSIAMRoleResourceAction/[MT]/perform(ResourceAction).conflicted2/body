{
  AWSIAMRoleResourceAction action=(AWSIAMRoleResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Euare.class);
  if (action.info.getCreatedEnoughToDelete() != Boolean.TRUE)   return action;
  if (!IAMHelper.roleExists(configuration,action.info.getPhysicalResourceId(),action.info.getEffectiveUserId()))   return action;
  if (action.properties.getPolicies() != null) {
    for (    EmbeddedIAMPolicy policy : action.properties.getPolicies()) {
      DeleteRolePolicyType deleteRolePolicyType=MessageHelper.createMessage(DeleteRolePolicyType.class,action.info.getEffectiveUserId());
      deleteRolePolicyType.setRoleName(action.info.getPhysicalResourceId());
      deleteRolePolicyType.setPolicyName(policy.getPolicyName());
      AsyncRequests.<DeleteRolePolicyType,DeleteRolePolicyResponseType>sendSync(configuration,deleteRolePolicyType);
    }
  }
  DeleteRoleType deleteRoleType=MessageHelper.createMessage(DeleteRoleType.class,action.info.getEffectiveUserId());
  deleteRoleType.setRoleName(action.info.getPhysicalResourceId());
  AsyncRequests.<DeleteRoleType,DeleteRoleResponseType>sendSync(configuration,deleteRoleType);
  return action;
}
