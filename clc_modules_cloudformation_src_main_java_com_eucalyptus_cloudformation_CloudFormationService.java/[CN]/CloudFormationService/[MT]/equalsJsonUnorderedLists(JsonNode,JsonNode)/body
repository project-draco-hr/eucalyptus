{
  if (node1 == null && node2 == null)   return true;
  if (node1 != null && node2 == null)   return false;
  if (node1 == null && node2 != null)   return false;
  if (node1.isObject()) {
    if (!node2.isObject())     return false;
    Set<String> node1FieldNames=Sets.newHashSet(node1.fieldNames());
    Set<String> node2FieldNames=Sets.newHashSet(node2.fieldNames());
    if (node1FieldNames == null && node2FieldNames == null)     return true;
    if (node1FieldNames != null && node2FieldNames == null)     return false;
    if (node1FieldNames == null && node2FieldNames != null)     return false;
    for (    String fieldName : node1FieldNames) {
      if (!equalsJsonUnorderedLists(node1.get(fieldName),node2.get(fieldName))) {
        return false;
      }
    }
    return true;
  }
 else   if (node1.isArray()) {
    if (!node2.isArray())     return false;
    if (node1.size() != node2.size())     return false;
    List<JsonNode> node1Elements=Lists.newArrayList(node1.elements());
    List<JsonNode> node2Elements=Lists.newArrayList(node2.elements());
    Iterator<JsonNode> node1ElementsIter=node1Elements.iterator();
    while (node1ElementsIter.hasNext()) {
      JsonNode node1Element=node1ElementsIter.next();
      boolean foundMatchThisTime=false;
      Iterator<JsonNode> node2ElementsIter=node2Elements.iterator();
      while (node2ElementsIter.hasNext()) {
        if (equalsJsonUnorderedLists(node1Element,node2ElementsIter.next())) {
          foundMatchThisTime=true;
          node2ElementsIter.remove();
          break;
        }
      }
      if (!foundMatchThisTime)       return false;
    }
    return true;
  }
 else {
    return node1.asText().equals(node2.asText());
  }
}
