{
  ValidateTemplateResponseType reply=request.getReply();
  try {
    final Context ctx=Contexts.lookup();
    checkActionPermission(CloudFormationPolicySpec.CLOUDFORMATION_VALIDATETEMPLATE,ctx);
    final User user=ctx.getUser();
    final String userId=user.getUserId();
    final String accountId=user.getAccountNumber();
    final String templateBody=request.getTemplateBody();
    final String templateUrl=request.getTemplateURL();
    String stackName="stackName";
    if (templateBody == null && templateUrl == null)     throw new ValidationErrorException("Either TemplateBody or TemplateURL must be set.");
    if (templateBody != null && templateUrl != null)     throw new ValidationErrorException("Exactly one of TemplateBody or TemplateURL must be set.");
    if (templateBody != null) {
      if (templateBody.getBytes().length > Limits.REQUEST_TEMPLATE_BODY_MAX_LENGTH_BYTES) {
        throw new ValidationErrorException("Template body may not exceed " + Limits.REQUEST_TEMPLATE_BODY_MAX_LENGTH_BYTES + " bytes in a request.");
      }
    }
    String templateText=(templateBody != null) ? templateBody : extractTemplateTextFromURL(templateUrl,user);
    final String stackIdLocal=UUID.randomUUID().toString();
    final String stackId="arn:aws:cloudformation:" + REGION + ":"+ accountId+ ":stack/"+ stackName+ "/"+ stackIdLocal;
    final PseudoParameterValues pseudoParameterValues=new PseudoParameterValues();
    pseudoParameterValues.setAccountId(accountId);
    pseudoParameterValues.setStackName(stackName);
    pseudoParameterValues.setStackId(stackId);
    ArrayList<String> notificationArns=Lists.newArrayList();
    pseudoParameterValues.setRegion(REGION);
    final List<String> defaultRegionAvailabilityZones=describeAvailabilityZones(userId);
    final Map<String,List<String>> availabilityZones=Maps.newHashMap();
    availabilityZones.put(REGION,defaultRegionAvailabilityZones);
    availabilityZones.put("",defaultRegionAvailabilityZones);
    pseudoParameterValues.setAvailabilityZones(availabilityZones);
    List<Parameter> parameters=Lists.newArrayList();
    final ValidateTemplateResult validateTemplateResult=new TemplateParser().validateTemplate(templateText,parameters,pseudoParameterValues);
    reply.setValidateTemplateResult(validateTemplateResult);
  }
 catch (  Exception ex) {
    handleException(ex);
  }
  return reply;
}
