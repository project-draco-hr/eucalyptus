{
  if (nextStackPolicy == null)   return false;
  if (previousStackPolicy == null && previousStackPolicy != null)   return true;
  ObjectMapper objectMapper=new ObjectMapper();
  JsonNode previousStackPolicyNode=null;
  try {
    previousStackPolicyNode=objectMapper.readTree(previousStackPolicy);
  }
 catch (  IOException ex) {
    throw new ValidationErrorException("Current stack policy is invalid");
  }
  if (!previousStackPolicyNode.isObject()) {
    throw new ValidationErrorException("Current stack policy is invalid");
  }
  JsonNode nextStackPolicyNode=null;
  try {
    nextStackPolicyNode=objectMapper.readTree(nextStackPolicy);
  }
 catch (  IOException ex) {
    throw new ValidationErrorException("stack policy is invalid");
  }
  if (!nextStackPolicyNode.isObject()) {
    throw new ValidationErrorException("stack policy is invalid");
  }
  return equalsJsonUnorderedLists(previousStackPolicyNode,nextStackPolicyNode);
}
