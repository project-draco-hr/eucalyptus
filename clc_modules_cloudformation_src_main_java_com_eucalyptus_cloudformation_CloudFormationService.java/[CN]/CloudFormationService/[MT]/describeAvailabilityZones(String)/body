{
  final ComponentId componentId=ComponentIds.lookup(Eucalyptus.class);
  ServiceConfiguration configuration;
  if (componentId.isAlwaysLocal() || (BootstrapArgs.isCloudController() && componentId.isCloudLocal() && !componentId.isRegisterable())) {
    configuration=ServiceConfigurations.createEphemeral(componentId);
  }
 else {
    configuration=Topology.lookup(Eucalyptus.class);
  }
  DescribeAvailabilityZonesType describeAvailabilityZonesType=new DescribeAvailabilityZonesType();
  describeAvailabilityZonesType.setEffectiveUserId(userId);
  DescribeAvailabilityZonesResponseType describeAvailabilityZonesResponseType=AsyncRequests.<DescribeAvailabilityZonesType,DescribeAvailabilityZonesResponseType>sendSync(configuration,describeAvailabilityZonesType);
  List<String> availabilityZones=Lists.newArrayList();
  for (  ClusterInfoType clusterInfoType : describeAvailabilityZonesResponseType.getAvailabilityZoneInfo()) {
    availabilityZones.add(clusterInfoType.getZoneName());
  }
  return availabilityZones;
}
