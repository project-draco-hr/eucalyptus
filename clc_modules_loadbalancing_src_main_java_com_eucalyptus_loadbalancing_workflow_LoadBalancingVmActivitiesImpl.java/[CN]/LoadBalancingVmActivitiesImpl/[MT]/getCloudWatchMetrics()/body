{
  try {
    getCloudwatchMetricsClient.publish(new Supplier<String>(){
      @Override public String get(){
        return "GetCloudWatchMetrics";
      }
    }
);
  }
 catch (  final NoSubscriberException ex) {
    throw new LoadBalancingActivityException("No subscriber is found to send the cloudwatch metrics");
  }
  String output=null;
  try {
    output=getCloudwatchMetricsReplyClient.pop();
  }
 catch (  final Exception ex) {
    throw new LoadBalancingActivityException("Failed to receive cloudwatch metrics");
  }
  LOG.debug(String.format("get-cloudwatch-metric result: %n%s",output));
  return output;
}
