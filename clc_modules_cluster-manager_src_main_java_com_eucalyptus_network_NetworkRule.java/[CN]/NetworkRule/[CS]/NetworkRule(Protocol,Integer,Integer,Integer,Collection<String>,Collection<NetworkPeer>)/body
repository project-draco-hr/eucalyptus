{
  this.egress=false;
  this.protocol=protocol;
  this.protocolNumber=protocolNumber;
  if (Protocol.tcp.equals(protocol) || Protocol.udp.equals(protocol)) {
    if (lowPort < RULE_MIN_PORT || highPort < RULE_MIN_PORT) {
      throw new IllegalArgumentException("Provided ports must be greater than " + RULE_MIN_PORT + ": lowPort="+ lowPort+ " highPort="+ highPort);
    }
 else     if (lowPort > RULE_MAX_PORT || highPort > RULE_MAX_PORT) {
      throw new IllegalArgumentException("Provided ports must be less than " + RULE_MAX_PORT + ": lowPort="+ lowPort+ " highPort="+ highPort);
    }
 else     if (lowPort > highPort) {
      throw new IllegalArgumentException("Provided lowPort is greater than highPort: lowPort=" + lowPort + " highPort="+ highPort);
    }
  }
  this.lowPort=lowPort;
  this.highPort=highPort;
  if (ipRanges != null) {
    this.ipRanges.addAll(ipRanges);
  }
  if (peers != null) {
    this.networkPeers.addAll(peers);
  }
}
