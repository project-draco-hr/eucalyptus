{
  Function<PartEntity,PartEntity> transitionFunction;
switch (destState) {
case creating:
    transitionFunction=MpuPartStateTransitions.TRANSITION_TO_CREATING;
  break;
case extant:
transitionFunction=MpuPartStateTransitions.TRANSITION_TO_EXTANT;
break;
case deleting:
transitionFunction=MpuPartStateTransitions.TRANSITION_TO_DELETING;
break;
default :
LOG.error("Unexpected destination state: " + destState);
throw new IllegalArgumentException();
}
try {
return Entities.asTransaction(PartEntity.class,transitionFunction).apply(entity);
}
 catch (ObjectStorageInternalException e) {
throw e;
}
catch (Exception e) {
throw new MetadataOperationFailureException(e);
}
}
