{
  PartEntity searchExample=new PartEntity(bucket,objectKey,uploadId).withPartNumber(partNumber);
  searchExample=searchExample.withState(ObjectState.extant);
  final Predicate<PartEntity> repairPredicate=new Predicate<PartEntity>(){
    public boolean apply(    PartEntity example){
      try {
        Criteria search=Entities.createCriteria(PartEntity.class);
        List<PartEntity> results=search.add(Example.create(example)).addOrder(Order.desc("objectModifiedTimestamp")).list();
        if (results != null && results.size() > 0) {
          try {
            for (            PartEntity partEntity : results.subList(1,results.size())) {
              LOG.trace("Marking part " + partEntity.getBucket().getBucketName() + " uploadId: "+ partEntity.getUploadId()+ " partNumber: "+ partEntity.getPartNumber()+ " for deletion because it is not latest.");
              partEntity.setState(ObjectState.deleting);
            }
          }
 catch (          IndexOutOfBoundsException e) {
          }
        }
      }
 catch (      NoSuchElementException e) {
      }
catch (      Exception e) {
        LOG.error("Error consolidationg Part records for " + example.getBucket().getBucketName() + " uploadId: "+ example.getUploadId()+ " partNumber: "+ example.getPartNumber());
        return false;
      }
      return true;
    }
  }
;
  try {
    Entities.asTransaction(repairPredicate).apply(searchExample);
  }
 catch (  final Throwable f) {
    LOG.error("Error in part repair",f);
  }
}
