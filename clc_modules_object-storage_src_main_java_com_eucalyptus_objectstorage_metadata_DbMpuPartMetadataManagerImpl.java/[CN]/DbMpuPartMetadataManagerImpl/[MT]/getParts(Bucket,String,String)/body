{
  HashMap<Integer,PartEntity> parts=new HashMap<>();
  try (TransactionResource trans=Entities.transactionFor(PartEntity.class)){
    Criteria search=Entities.createCriteria(PartEntity.class);
    PartEntity searchExample=new PartEntity(bucket,objectKey,uploadId).withState(ObjectState.extant);
    search.add(Example.create(searchExample));
    search=getSearchByBucket(search,bucket);
    List<PartEntity> results=search.list();
    trans.commit();
    for (    PartEntity result : results) {
      parts.put(result.getPartNumber(),result);
    }
    return parts;
  }
 catch (  Exception e) {
    LOG.warn("Error looking up parts for MPU id : " + uploadId);
    throw e;
  }
}
