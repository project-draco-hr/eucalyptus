{
  EntityTransaction db=Entities.get(PartEntity.class);
  try {
    Criteria search=Entities.createCriteria(PartEntity.class);
    PartEntity searchExample=new PartEntity().withBucket(searchBucket).withKey(searchKey).withUploadId(uploadId).withState(state);
    search.add(Example.create(searchExample));
    if (searchBucket != null) {
      search=getSearchByBucket(search,searchBucket);
    }
    List<PartEntity> results=search.list();
    db.commit();
    return results;
  }
  finally {
    if (db != null && db.isActive()) {
      db.rollback();
    }
  }
}
