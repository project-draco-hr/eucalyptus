{
  final Matcher matcher=PolicySpec.ACTION_PATTERN.matcher(action);
  if (!matcher.matches()) {
    throw new JSONException("'" + action + "' is not a valid action");
  }
  if (PolicySpec.ALL_ACTION.equals(action)) {
    return PolicySpec.ALL_ACTION;
  }
  final String prefix=matcher.group(1);
  final String pattern=matcher.group(2);
  final Optional<Set<String>> actionsOption=PolicySpec.getActionsForVendor(prefix);
  if (!actionsOption.isPresent()) {
    throw new JSONException("'" + action + "' is not a valid action");
  }
  if (actionsOption.get().isEmpty())   return prefix;
  for (  final String defined : actionsOption.get()) {
    if (Pattern.matches(PatternUtils.toJavaPattern(pattern),defined)) {
      return prefix;
    }
  }
  throw new JSONException("'" + pattern + "' does not match any defined action");
}
