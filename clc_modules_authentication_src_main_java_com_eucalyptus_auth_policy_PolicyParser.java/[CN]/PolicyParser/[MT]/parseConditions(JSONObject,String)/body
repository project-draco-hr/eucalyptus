{
  JSONObject condsObj=JsonUtils.getByType(JSONObject.class,statement,PolicySpecConstants.CONDITION);
  boolean isQuota=EffectType.Limit.name().equals(effect);
  List<ConditionEntity> results=Lists.newArrayList();
  if (condsObj != null) {
    for (    Object t : condsObj.keySet()) {
      String type=(String)t;
      if (isQuota && !Conditions.QUOTA.equals(type)) {
        continue;
      }
      checkConditionType(type);
      JSONObject paramsObj=JsonUtils.getByType(JSONObject.class,condsObj,type);
      for (      Object k : paramsObj.keySet()) {
        String key=(String)k;
        checkConditionKey(key);
        Set<String> values=Sets.newHashSet();
        values.addAll(JsonUtils.parseStringOrStringList(paramsObj,key));
        results.add(new ConditionEntity(type,key,values));
      }
    }
  }
  return results;
}
