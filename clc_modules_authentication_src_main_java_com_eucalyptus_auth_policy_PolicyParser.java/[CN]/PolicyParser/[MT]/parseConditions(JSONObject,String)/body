{
  JSONObject condsObj=JsonUtils.getByType(JSONObject.class,statement,PolicySpec.CONDITION);
  boolean isQuota=EffectType.Limit.name().equals(effect);
  List<ConditionEntity> results=Lists.newArrayList();
  if (condsObj != null) {
    for (    Object t : condsObj.keySet()) {
      String type=(String)t;
      Class<? extends ConditionOp> typeClass=checkConditionType(type);
      JSONObject paramsObj=JsonUtils.getByType(JSONObject.class,condsObj,type);
      for (      Object k : paramsObj.keySet()) {
        String key=((String)k).toLowerCase();
        Set<String> values=Sets.newHashSet();
        values.addAll(JsonUtils.parseStringOrStringList(paramsObj,key));
        checkConditionKeyAndValues(key,values,typeClass,isQuota);
        results.add(new ConditionEntity(type,key,values));
      }
    }
  }
  return results;
}
