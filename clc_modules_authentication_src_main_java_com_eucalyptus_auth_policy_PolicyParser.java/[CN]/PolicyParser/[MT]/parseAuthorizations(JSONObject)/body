{
  JsonUtils.checkRequired(statement,PolicySpecConstants.EFFECT);
  String effect=JsonUtils.getByType(String.class,statement,PolicySpecConstants.EFFECT);
  checkEffect(effect);
  String actionElement=JsonUtils.checkBinaryOption(statement,PolicySpecConstants.ACTION,PolicySpecConstants.NOTACTION);
  List<String> actions=JsonUtils.parseStringOrStringList(statement,actionElement);
  String resourceElement=JsonUtils.checkBinaryOption(statement,PolicySpecConstants.RESOURCE,PolicySpecConstants.NOTRESOURCE);
  List<String> resources=JsonUtils.parseStringOrStringList(statement,resourceElement);
  List<AuthorizationEntity> results=Lists.newArrayList();
  for (  String action : actions) {
    checkAction(action);
    for (    String resource : resources) {
      String resType=checkResourceType(resource);
      if (actionMatchesResourceType(action,resType)) {
        results.add(new AuthorizationEntity(EffectType.valueOf(effect),action,resType,resource,Boolean.valueOf(PolicySpecConstants.NOTRESOURCE.equals(resourceElement))));
      }
    }
  }
  return results;
}
