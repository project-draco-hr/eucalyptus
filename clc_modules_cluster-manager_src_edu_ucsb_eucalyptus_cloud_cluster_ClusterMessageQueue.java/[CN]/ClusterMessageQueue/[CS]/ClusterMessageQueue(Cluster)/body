{
  this.parent=parent;
  this.finished=new AtomicBoolean(false);
  this.msgQueue=new LinkedBlockingQueue<QueuedEvent>(messageQueueSize);
  OutboundEndpoint endpoint=Defaults.getDefaultOutboundEndpoint(this.parent.getClusterInfo().getUri(),ClusterInfo.NAMESPACE,15,10,20);
  Axis2MessageDispatcherFactory clientFactory=new Axis2MessageDispatcherFactory();
  try {
    Axis2MessageDispatcher dispatcher=(Axis2MessageDispatcher)clientFactory.create(endpoint);
    this.client=dispatcher.getClient();
  }
 catch (  MuleException e) {
    LOG.error(e,e);
  }
  OutboundEndpoint logEndpoint=Defaults.getDefaultOutboundEndpoint(this.parent.getClusterInfo().getUri().replaceAll("EucalyptusCC","EucalyptusGL"),ClusterInfo.NAMESPACE,15,10,20);
  logEndpoint.getProperties().remove(Key.WSSEC_POLICY.getKey());
  logEndpoint.getProperties().put(Key.WSSEC_POLICY.getKey(),BaseDirectory.CONF.toString() + File.separator + "off-policy.xml");
  try {
    Axis2MessageDispatcher dispatcher=(Axis2MessageDispatcher)clientFactory.create(logEndpoint);
    this.logClient=dispatcher.getClient();
  }
 catch (  MuleException e) {
    LOG.error(e,e);
  }
  LOG.info("Created message queue for cluster " + this.parent.getClusterInfo().getName());
}
