{
  final Service service=config.lookupService();
  Callable<CheckedListenableFuture<ServiceConfiguration>> transition=null;
switch (service.getState()) {
case NOTREADY:
case DISABLED:
case ENABLED:
    break;
case LOADED:
case STOPPED:
  transition=ServiceTransitions.newServiceTransitionCallable(config,Component.State.LOADED,Component.State.NOTREADY);
break;
case INITIALIZED:
transition=ServiceTransitions.newServiceTransitionCallable(config,Component.State.INITIALIZED,Component.State.LOADED,Component.State.NOTREADY);
break;
default :
throw new IllegalStateException("Failed to find transition for current component state: " + config.lookupComponent().toString());
}
CheckedListenableFuture<ServiceConfiguration> transitionResult=null;
try {
transitionResult=Threads.lookup(Empyrean.class).submit(transition).get();
}
 catch (InterruptedException ex) {
LOG.error(ex,ex);
transitionResult=Futures.predestinedFailedFuture(ex);
}
catch (ExecutionException ex) {
LOG.error(ex,ex);
transitionResult=Futures.predestinedFailedFuture(ex);
}
return transitionResult;
}
