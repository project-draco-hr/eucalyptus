{
  if (!State.NOTREADY.equals(config.lookupState()) && !State.DISABLED.equals(config.lookupState())) {
    Callable<CheckedListenableFuture<ServiceConfiguration>> transition=Automata.sequenceTransitions(config,Component.State.INITIALIZED,Component.State.LOADED,Component.State.NOTREADY,Component.State.DISABLED);
    Future<CheckedListenableFuture<ServiceConfiguration>> result=Threads.lookup(Empyrean.class,ServiceTransitions.class,config.getFullName().toString()).submit(transition);
    try {
      return result.get();
    }
 catch (    InterruptedException ex) {
      LOG.error(ex,ex);
      throw new UndeclaredThrowableException(ex);
    }
catch (    ExecutionException ex) {
      LOG.error(ex,ex);
      throw new UndeclaredThrowableException(ex.getCause());
    }
  }
 else {
    return Futures.predestinedFuture(config);
  }
}
