{
  if (parent.isVmLocal() || parent.isHostLocal()) {
    try {
      if (State.LOADED.ordinal() < parent.lookupComponent().getState().ordinal()) {
        parent.lookupComponent().getBootstrapper().check();
        if (parent.lookupComponent().hasLocalService()) {
          parent.lookupComponent().getBuilder().fireCheck(parent);
        }
      }
      transitionCallback.fire();
    }
 catch (    Throwable ex) {
      if (ServiceTransitions.filterExceptions(parent,ex,errorFilterCheckTransition(parent))) {
        transitionCallback.fireException(ex);
      }
 else {
        transitionCallback.fire();
      }
    }
  }
 else {
    try {
      DescribeServicesResponseType response=AsyncRequests.sendSync(ServiceConfigurations.createEphemeral(Empyrean.INSTANCE,parent.getInetAddress()),new DescribeServicesType());
      Iterables.find(response.getServiceStatuses(),new Predicate<ServiceStatusType>(){
        @Override public boolean apply(        ServiceStatusType arg0){
          return parent.getName().equals(arg0.getServiceId().getName());
        }
      }
);
      transitionCallback.fire();
    }
 catch (    Throwable ex) {
      if (ServiceTransitions.filterExceptions(parent,ex,errorFilterCheckTransition(parent))) {
        transitionCallback.fireException(ex);
      }
 else {
        transitionCallback.fire();
      }
    }
  }
}
