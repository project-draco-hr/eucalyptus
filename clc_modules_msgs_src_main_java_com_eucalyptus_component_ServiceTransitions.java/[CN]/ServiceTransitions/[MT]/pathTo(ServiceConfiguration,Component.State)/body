{
  try {
    State[] path=null;
switch (goalState) {
case LOADED:
      path=pathToLoaded(configuration.lookupState());
    break;
case DISABLED:
  path=pathToDisabled(configuration.lookupState());
break;
case ENABLED:
path=pathToEnabled(configuration.lookupState());
break;
case STOPPED:
path=pathToStopped(configuration.lookupState());
break;
case NOTREADY:
path=pathToStarted(configuration.lookupState());
break;
case PRIMORDIAL:
path=pathToPrimordial(configuration.lookupState());
break;
case BROKEN:
path=pathToBroken(configuration.lookupState());
break;
case INITIALIZED:
path=pathToInitialized(configuration.lookupState());
break;
}
LOG.debug(configuration.getFullName() + " transitioning => " + Arrays.toString(path));
CheckedListenableFuture<ServiceConfiguration> result=executeTransition(configuration,Automata.sequenceTransitions(configuration,path));
return result;
}
 catch (RuntimeException ex) {
Logs.extreme().error(ex,ex);
LOG.error(configuration.getFullName() + " failed to transition to " + goalState+ " because of: "+ Exceptions.causeString(ex));
throw ex;
}
}
