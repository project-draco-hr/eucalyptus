{
  if (goalState.equals(configuration.lookupState())) {
    return Futures.predestinedFuture(configuration);
  }
 else {
    try {
      CheckedListenableFuture<ServiceConfiguration> result=null;
switch (goalState) {
case LOADED:
        result=executeTransition(configuration,Automata.sequenceTransitions(configuration,pathToLoaded(configuration.lookupState())));
      break;
case DISABLED:
    result=executeTransition(configuration,Automata.sequenceTransitions(configuration,pathToDisabled(configuration.lookupState())));
  break;
case ENABLED:
result=executeTransition(configuration,Automata.sequenceTransitions(configuration,pathToEnabled(configuration.lookupState())));
break;
case STOPPED:
result=executeTransition(configuration,Automata.sequenceTransitions(configuration,pathToStopped(configuration.lookupState())));
break;
case NOTREADY:
result=executeTransition(configuration,Automata.sequenceTransitions(configuration,pathToStarted(configuration.lookupState())));
break;
case PRIMORDIAL:
result=executeTransition(configuration,Automata.sequenceTransitions(configuration,pathToPrimordial(configuration.lookupState())));
break;
case BROKEN:
result=executeTransition(configuration,Automata.sequenceTransitions(configuration,pathToBroken(configuration.lookupState())));
break;
case INITIALIZED:
result=executeTransition(configuration,Automata.sequenceTransitions(configuration,pathToInitialized(configuration.lookupState())));
break;
}
return result;
}
 catch (RuntimeException ex) {
Logs.extreme().error(ex,ex);
LOG.error(configuration.getFullName() + " failed to transition to " + goalState+ " because of: "+ Exceptions.causeString(ex));
throw ex;
}
}
}
