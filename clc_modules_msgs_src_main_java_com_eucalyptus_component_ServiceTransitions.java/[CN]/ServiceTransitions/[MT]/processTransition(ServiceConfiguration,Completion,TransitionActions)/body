{
  ServiceTransitionCallback trans=null;
  try {
    if (parent.isVmLocal() || (parent.isHostLocal() && BootstrapArgs.isCloudController())) {
      try {
        trans=ServiceLocalTransitionCallbacks.valueOf(transitionAction.name());
      }
 catch (      Exception ex) {
        LOG.error(ex,ex);
        throw ex;
      }
    }
 else     if (!BootstrapArgs.isCloudController()) {
      try {
        trans=ServiceRemoteTransitionNotification.valueOf(transitionAction.name());
      }
 catch (      Exception ex) {
        LOG.error(ex,ex);
        throw ex;
      }
    }
 else     if (BootstrapArgs.isCloudController()) {
      try {
        trans=CloudRemoteTransitionCallbacks.valueOf(transitionAction.name());
      }
 catch (      Exception ex) {
        LOG.error(ex,ex);
        throw ex;
      }
    }
 else {
      LOG.debug("Silentlty accepting remotely inferred state transition for " + parent);
    }
    if (trans != null) {
      Logs.extreme().debug("Executing transition: " + trans.getClass() + "."+ transitionAction.name()+ " for "+ parent);
      trans.fire(parent);
    }
    transitionCallback.fire();
  }
 catch (  Exception ex) {
    if (ServiceExceptions.filterExceptions(parent,ex)) {
      transitionCallback.fireException(ex);
      throw new UndeclaredThrowableException(ex);
    }
 else {
      transitionCallback.fire();
    }
  }
}
