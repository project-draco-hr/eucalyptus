{
  if (parent.getComponentId().isAlwaysLocal() || parent.getComponentId().isCloudLocal()) {
    return;
  }
 else {
    DescribeServicesResponseType response=ServiceTransitions.sendEmpyreanRequest(parent,new DescribeServicesType(){
{
        this.getServices().add(TypeMappers.transform(parent,ServiceId.class));
      }
    }
);
    ServiceStatusType status=Iterables.find(response.getServiceStatuses(),new Predicate<ServiceStatusType>(){
      @Override public boolean apply(      final ServiceStatusType arg0){
        return parent.getName().equals(arg0.getServiceId().getName());
      }
    }
);
    CheckException errors=Faults.transformToExceptions().apply(status);
    Faults.persist(errors);
    if (errors != null) {
      if (Faults.Severity.FATAL.equals(errors.getSeverity())) {
      }
 else       if (errors.getSeverity().ordinal() < Faults.Severity.ERROR.ordinal()) {
        Logs.extreme().error(errors,errors);
      }
 else {
        if (Component.State.ENABLED.equals(parent.lookupState())) {
          try {
            DISABLE.fire(parent);
          }
 catch (          Exception ex) {
            LOG.error(ex,ex);
          }
        }
      }
      throw errors;
    }
  }
}
