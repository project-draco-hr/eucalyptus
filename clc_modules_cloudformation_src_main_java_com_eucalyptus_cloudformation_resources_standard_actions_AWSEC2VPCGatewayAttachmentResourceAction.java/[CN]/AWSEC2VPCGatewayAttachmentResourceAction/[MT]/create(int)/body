{
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
switch (stepNum) {
case 0:
    if (properties.getVpcId() != null && properties.getVpnGatewayId() != null) {
      throw new ValidationErrorException("Both VpcId and VpnGatewayId can not be set.");
    }
  if (properties.getVpcId() == null && properties.getVpnGatewayId() == null) {
    throw new ValidationErrorException("One of VpcId or VpnGatewayId must be set.");
  }
if (properties.getVpcId() != null) {
  AttachInternetGatewayType attachInternetGatewayType=new AttachInternetGatewayType();
  attachInternetGatewayType.setEffectiveUserId(info.getEffectiveUserId());
  attachInternetGatewayType.setInternetGatewayId(properties.getInternetGatewayId());
  attachInternetGatewayType.setVpcId(properties.getVpcId());
  AsyncRequests.<AttachInternetGatewayType,AttachInternetGatewayResponseType>sendSync(configuration,attachInternetGatewayType);
}
 else {
  AttachVpnGatewayType attachVpnGatewayType=new AttachVpnGatewayType();
  attachVpnGatewayType.setEffectiveUserId(info.getEffectiveUserId());
  attachVpnGatewayType.setVpnGatewayId(properties.getVpnGatewayId());
  AsyncRequests.<AttachVpnGatewayType,AttachVpnGatewayResponseType>sendSync(configuration,attachVpnGatewayType);
}
info.setPhysicalResourceId(getDefaultPhysicalResourceId());
info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(info.getPhysicalResourceId())));
break;
default :
throw new IllegalStateException("Invalid step " + stepNum);
}
}
