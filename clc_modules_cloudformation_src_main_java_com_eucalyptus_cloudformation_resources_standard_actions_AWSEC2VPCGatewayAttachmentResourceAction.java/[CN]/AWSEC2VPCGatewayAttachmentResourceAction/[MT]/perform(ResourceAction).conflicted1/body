{
  AWSEC2VPCGatewayAttachmentResourceAction action=(AWSEC2VPCGatewayAttachmentResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  if (action.info.getCreatedEnoughToDelete() != Boolean.TRUE)   return action;
  DescribeInternetGatewaysType describeInternetGatewaysType=MessageHelper.createMessage(DescribeInternetGatewaysType.class,action.info.getEffectiveUserId());
  describeInternetGatewaysType.getFilterSet().add(Filter.filter("internet-gateway-id",action.properties.getInternetGatewayId()));
  DescribeInternetGatewaysResponseType describeInternetGatewaysResponseType=AsyncRequests.sendSync(configuration,describeInternetGatewaysType);
  if (describeInternetGatewaysResponseType.getInternetGatewaySet() == null || describeInternetGatewaysResponseType.getInternetGatewaySet().getItem() == null || describeInternetGatewaysResponseType.getInternetGatewaySet().getItem().isEmpty()) {
    return action;
  }
  if (action.properties.getVpcId() != null) {
    DescribeVpcsType describeVpcsType=MessageHelper.createMessage(DescribeVpcsType.class,action.info.getEffectiveUserId());
    describeVpcsType.getFilterSet().add(Filter.filter("vpc-id",action.properties.getVpcId()));
    DescribeVpcsResponseType describeVpcsResponseType=AsyncRequests.sendSync(configuration,describeVpcsType);
    if (describeVpcsResponseType.getVpcSet() == null || describeVpcsResponseType.getVpcSet().getItem() == null || describeVpcsResponseType.getVpcSet().getItem().isEmpty()) {
      return action;
    }
    DetachInternetGatewayType detachInternetGatewayType=MessageHelper.createMessage(DetachInternetGatewayType.class,action.info.getEffectiveUserId());
    detachInternetGatewayType.setVpcId(action.properties.getVpcId());
    detachInternetGatewayType.setInternetGatewayId(action.properties.getInternetGatewayId());
    AsyncRequests.<DetachInternetGatewayType,DetachInternetGatewayResponseType>sendSync(configuration,detachInternetGatewayType);
  }
 else {
    DescribeVpnGatewaysType describeVpnGatewaysType=MessageHelper.createMessage(DescribeVpnGatewaysType.class,action.info.getEffectiveUserId());
    action.setVpnGatewayId(describeVpnGatewaysType,action.properties.getVpnGatewayId());
    DescribeVpnGatewaysResponseType describeVpnGatewaysResponseType=AsyncRequests.<DescribeVpnGatewaysType,DescribeVpnGatewaysResponseType>sendSync(configuration,describeVpnGatewaysType);
    if (describeVpnGatewaysResponseType.getVpnGatewaySet() == null || describeVpnGatewaysResponseType.getVpnGatewaySet().getItem() == null || describeVpnGatewaysResponseType.getVpnGatewaySet().getItem().isEmpty()) {
      return action;
    }
    DetachVpnGatewayType detachVpnGatewayType=MessageHelper.createMessage(DetachVpnGatewayType.class,action.info.getEffectiveUserId());
    detachVpnGatewayType.setVpcId(action.properties.getVpcId());
    detachVpnGatewayType.setVpnGatewayId(action.properties.getVpnGatewayId());
    AsyncRequests.<DetachVpnGatewayType,DetachVpnGatewayResponseType>sendSync(configuration,detachVpnGatewayType);
  }
  return action;
}
