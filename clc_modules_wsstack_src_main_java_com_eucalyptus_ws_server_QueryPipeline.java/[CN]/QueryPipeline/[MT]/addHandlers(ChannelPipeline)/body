{
  pipeline.addLast("aggregator",Handlers.newQueryHttpChunkAggregator());
  pipeline.addLast("parse-query-parameters",new MessageStackHandler(){
    @Override public void incomingMessage(    final MessageEvent event) throws Exception {
      if (event.getMessage() instanceof MappingHttpRequest) {
        final MappingHttpRequest httpRequest=(MappingHttpRequest)event.getMessage();
        if (httpRequest.getMethod().equals(HttpMethod.POST)) {
          final Map<String,String> parameters=new HashMap<String,String>(httpRequest.getParameters());
          final Set<String> nonQueryParameters=Sets.newHashSet();
          final String query=httpRequest.getContentAsString(true);
          for (          String p : query.split("&")) {
            String[] splitParam=p.split("=",2);
            String lhs=splitParam[0];
            String rhs=splitParam.length == 2 ? splitParam[1] : null;
            try {
              if (lhs != null)               lhs=new URLCodec().decode(lhs);
            }
 catch (            DecoderException e) {
            }
            try {
              if (rhs != null)               rhs=new URLCodec().decode(rhs);
            }
 catch (            DecoderException e) {
            }
            parameters.put(lhs,rhs);
            nonQueryParameters.add(lhs);
          }
          httpRequest.getParameters().putAll(parameters);
          httpRequest.addNonQueryParameterKeys(nonQueryParameters);
        }
      }
    }
  }
);
  getAuthenticationStage().unrollStage(pipeline);
  return null;
}
