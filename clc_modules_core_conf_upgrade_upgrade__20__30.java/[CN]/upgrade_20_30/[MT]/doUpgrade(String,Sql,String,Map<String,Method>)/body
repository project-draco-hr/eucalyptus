{
  List<GroovyRowResult> rowResults;
  try {
    rowResults=conn.rows("SELECT * FROM " + entityKey);
    EntityWrapper db=EntityWrapper.get(entityMap.get(entityKey));
    for (    GroovyRowResult rowResult : rowResults) {
      Set<String> columns=rowResult.keySet();
      Object dest;
      try {
        dest=ClassLoader.getSystemClassLoader().loadClass(entityMap.get(entityKey).getCanonicalName()).newInstance();
      }
 catch (      ClassNotFoundException e1) {
        LOG.error(e1);
        break;
      }
catch (      InstantiationException e) {
        LOG.error(e);
        break;
      }
catch (      IllegalAccessException e) {
        LOG.error(e);
        break;
      }
      for (      String column : columns) {
        Method setter=setterMap.get(column);
        if (setter != null) {
          Object o=rowResult.get(column);
          if (o != null) {
            try {
              if (dest instanceof Volume && (setter.getName().equals("setRemoteDevice"))) {
                ((Volume)dest).setRemoteDevice(null);
              }
 else {
                setter.invoke(dest,o);
              }
            }
 catch (            IllegalArgumentException e) {
              LOG.error(dest.getClass().getName() + " " + column+ " "+ e);
            }
catch (            IllegalAccessException e) {
              LOG.error(dest.getClass().getName() + " " + column+ " "+ e);
            }
catch (            InvocationTargetException e) {
              LOG.error(dest.getClass().getName() + " " + column+ " "+ e);
            }
          }
        }
      }
      db.add(dest);
    }
    LOG.debug("Upgraded: " + entityKey);
    db.commit();
  }
 catch (  SQLException e) {
    LOG.error(e);
    return;
  }
}
