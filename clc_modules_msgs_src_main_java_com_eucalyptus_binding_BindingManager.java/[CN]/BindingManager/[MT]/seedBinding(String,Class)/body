{
  boolean seeded=trySeed(key(bindingName),seedClass);
  if (BaseMessage.class.isAssignableFrom(seedClass)) {
    Class<?> messageClass=seedClass;
    while (messageClass != BaseMessage.class) {
      final ComponentMessage componentMessage=messageClass.getAnnotation(ComponentMessage.class);
      if (componentMessage != null) {
        seeded=seeded || trySeed(key(Optional.<Class<? extends ComponentId>>fromNullable(componentMessage.value()),bindingName),seedClass);
        break;
      }
      messageClass=messageClass.getSuperclass();
    }
  }
  return seeded;
}
