{
  if (lastRet == null)   throw new IllegalStateException();
  final ReentrantLock putLock=LinkedBlockingQueue.this.putLock;
  final ReentrantLock takeLock=LinkedBlockingQueue.this.takeLock;
  putLock.lock();
  takeLock.lock();
  try {
    Node<E> node=lastRet;
    lastRet=null;
    Node<E> trail=head;
    Node<E> p=head.next;
    while (p != null && p != node) {
      trail=p;
      p=p.next;
    }
    if (p == node) {
      p.item=null;
      trail.next=p.next;
      if (last == p)       last=trail;
      int c=count.getAndDecrement();
      if (c == capacity)       notFull.signalAll();
    }
  }
  finally {
    takeLock.unlock();
    putLock.unlock();
  }
}
