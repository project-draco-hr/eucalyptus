{
  if (Bootstrap.isFinished() && Topology.isEnabledLocally(CloudWatch.class)) {
    LOG.debug("Kicking off alarm state evaluation for " + alarmName);
    EntityTransaction db=Entities.get(AlarmEntity.class);
    try {
      Criteria criteria=Entities.createCriteria(AlarmEntity.class).add(Restrictions.eq("accountId",accountId)).add(Restrictions.eq("alarmName",alarmName));
      AlarmEntity alarmEntity=(AlarmEntity)criteria.uniqueResult();
      if (alarmEntity == null)       return;
      AlarmState currentState=evaluateState(alarmEntity);
      Date evaluationDate=new Date();
      if (currentState.getStateValue() != alarmEntity.getStateValue()) {
        AlarmManager.changeAlarmState(alarmEntity,currentState,evaluationDate);
        AlarmManager.executeActions(alarmEntity,currentState,true,evaluationDate);
      }
 else       if (moreThanOnePeriodHasPassed(alarmEntity,evaluationDate)) {
        AlarmManager.executeActions(alarmEntity,currentState,false,evaluationDate);
      }
      db.commit();
    }
 catch (    RuntimeException ex) {
      Logs.extreme().error(ex,ex);
      throw ex;
    }
 finally {
      if (db.isActive())       db.rollback();
    }
  }
}
