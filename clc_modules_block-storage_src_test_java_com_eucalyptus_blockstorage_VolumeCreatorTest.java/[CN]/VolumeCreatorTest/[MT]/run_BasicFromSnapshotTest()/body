{
  final int volSz=1;
  SnapshotInfo goodSnap=new SnapshotInfo();
  goodSnap.setStatus(StorageProperties.Status.available.toString());
  goodSnap.setProgress("100");
  goodSnap.setSizeGb(new Integer(volSz));
  goodSnap.setShouldTransfer(Boolean.FALSE);
  goodSnap.setSnapPointId(null);
  goodSnap.setStartTime(new Date());
  goodSnap.setUserName("unittestuser0");
  goodSnap.setVolumeId("vol-0000");
  goodSnap.setSnapshotId("snap-0000");
  goodSnap.setSnapshotLocation("http://osg.host/snaps/goodSnap");
  try (TransactionResource tran=Entities.transactionFor(SnapshotInfo.class)){
    Entities.persist(goodSnap);
    tran.commit();
  }
   final LogicalStorageManager storageManager=context.mock(LogicalStorageManager.class);
  context.checking(new Expectations(){
{
      oneOf(storageManager).createVolume("vol-0000","snap-0000",1);
      will(createVolume(volSz));
    }
  }
);
  VolumeCreator bscvc=new VolumeCreator("vol-0000",null,"snap-0000",null,1,storageManager);
  bscvc.run();
  List<VolumeInfo> remaining;
  try (TransactionResource tran=Entities.transactionFor(VolumeInfo.class)){
    remaining=Entities.query(new VolumeInfo());
    tran.commit();
  }
   assertTrue("expected to have a result set querying the eucalyptus_storage persistence context",remaining != null);
  assertTrue("expected one VolumeInfo to exist, but there are " + remaining.size(),remaining.size() == 1);
  assertTrue("expected volumeinfo to be vol-0000 but was " + remaining.get(0).getVolumeId(),"vol-0000".equals(remaining.get(0).getVolumeId()));
}
