{
  EventRecord.here(this.getClass(),EventType.MSG_REPLY,LogUtil.dumpObject(o));
  if (o instanceof MappingHttpResponse) {
    MappingHttpResponse httpResponse=(MappingHttpResponse)o;
    if (httpResponse.getMessage() != null) {
      o=httpResponse.getMessage();
    }
 else {
      o=new EucalyptusClusterException(httpResponse.getMessageString());
    }
  }
  if (o == null) {
    return;
  }
  this.canHas.lock();
  try {
    if (!this.response.compareAndSet(null,o)) {
      if (!(o instanceof Throwable)) {
        LOG.debug(LogUtil.subheader("Received spurious second response: " + LogUtil.dumpObject(o)));
      }
      o=this.response.getAndSet(o);
      LOG.debug(LogUtil.subheader("Previous response was: " + LogUtil.dumpObject(this.response.get())));
    }
 else {
      if (o instanceof Throwable) {
        LOG.error("Caught exception in asynchronous response handler.",(Throwable)o);
      }
 else {
        LOG.debug(this.getClass().getSimpleName() + " Got response of: " + LogUtil.dumpObject(o));
      }
    }
    LOG.debug("Setting value of response to be: " + this.response.get());
    this.ready.signalAll();
  }
  finally {
    this.canHas.unlock();
  }
  EventRecord.here(this.getClass(),EventType.MSG_REPLY,LogUtil.dumpObject(this.response.get()));
  this.clientBootstrap.releaseExternalResources();
}
