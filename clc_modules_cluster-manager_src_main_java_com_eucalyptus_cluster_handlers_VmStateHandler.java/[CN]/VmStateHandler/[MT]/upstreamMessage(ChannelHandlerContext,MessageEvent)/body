{
  if (e.getMessage() instanceof MappingHttpResponse) {
    MappingHttpResponse resp=(MappingHttpResponse)e.getMessage();
    VmDescribeResponseType reply=(VmDescribeResponseType)resp.getMessage();
    if (reply != null)     reply.setOriginCluster(this.getCluster().getConfiguration().getName());
    for (    VmInfo vmInfo : reply.getVms()) {
      vmInfo.setPlacement(this.getCluster().getConfiguration().getName());
      VmTypeInfo typeInfo=vmInfo.getInstanceType();
      if (typeInfo.getName() == null || "".equals(typeInfo.getName())) {
        for (        VmType t : VmTypes.list()) {
          if (t.getCpu().equals(typeInfo.getCores()) && t.getDisk().equals(typeInfo.getDisk()) && t.getMemory().equals(typeInfo.getMemory())) {
            typeInfo.setName(t.getName());
          }
        }
      }
    }
    SystemState.handle(reply);
    if (this.init.compareAndSet(false,true)) {
      try {
        ClusterUtil.registerClusterStateHandler(this.getCluster(),new AddressStateHandler(this.getCluster()));
      }
 catch (      Exception e1) {
        LOG.error(e1,e1);
      }
      this.getCluster().start();
      LOG.info(LogUtil.header("Starting threads for cluster: " + this.getCluster()));
    }
  }
}
