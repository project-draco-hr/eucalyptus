{
  if (event.getMessage() instanceof MappingHttpResponse) {
    MappingHttpResponse httpResponse=(MappingHttpResponse)event.getMessage();
    EucalyptusMessage msg=(EucalyptusMessage)httpResponse.getMessage();
    if (msg instanceof GetObjectResponseType) {
      GetObjectResponseType getObjectResponse=(GetObjectResponseType)msg;
      Long size=getObjectResponse.getSize();
      String etag=getObjectResponse.getEtag();
      httpResponse.addHeader(HttpHeaders.Names.CONTENT_LENGTH,String.valueOf(size));
      httpResponse.addHeader(HttpHeaders.Names.CONTENT_TYPE,"binary/octet-stream");
      Channel channel=event.getChannel();
      channel.write(httpResponse);
      WalrusDataMessenger messenger=getReadMessenger();
      LinkedBlockingQueue<WalrusDataMessage> getQueue=messenger.getQueue(getObjectType.getKey(),getObjectType.getRandomKey());
      WalrusDataMessage dataMessage;
      try {
        while ((dataMessage=getQueue.take()) != null) {
          if (WalrusDataMessage.isStart(dataMessage)) {
          }
 else           if (WalrusDataMessage.isData(dataMessage)) {
            byte[] data=dataMessage.getPayload();
            channel.write(data);
          }
 else {
          }
        }
      }
 catch (      InterruptedException ex) {
        LOG.error(ex,ex);
      }
    }
 else {
      Binding binding=BindingManager.getBinding(BindingManager.sanitizeNamespace(namespace));
      OMElement omMsg=binding.toOM(httpResponse.getMessage());
      ByteArrayOutputStream byteOut=new ByteArrayOutputStream();
      omMsg.serialize(byteOut);
      byte[] req=byteOut.toByteArray();
      ChannelBuffer buffer=ChannelBuffers.copiedBuffer(req);
      httpResponse.addHeader(HttpHeaders.Names.CONTENT_LENGTH,String.valueOf(buffer.readableBytes()));
      httpResponse.addHeader(HttpHeaders.Names.CONTENT_TYPE,"text/plain");
      httpResponse.setContent(buffer);
    }
  }
}
