{
  final GenerateReportResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  final Context ctx=Contexts.lookup();
  final User requestUser=ctx.getUser();
  if (!requestUser.isSystemAdmin()) {
    throw new ReportingException(HttpResponseStatus.UNAUTHORIZED,ReportingException.NOT_AUTHORIZED,"Not authorized");
  }
  final Period period=Period.defaultPeriod();
  long startTime=period.getBeginningMs();
  long endTime=period.getEndingMs();
  if (request.getStartDate() != null) {
    startTime=parseDate(request.getStartDate());
  }
  if (request.getEndDate() != null) {
    endTime=parseDate(request.getEndDate());
  }
  final String reportData;
  try {
    reportData=ReportGenerationFacade.generateReport(Objects.firstNonNull(request.getType(),"instance"),Objects.firstNonNull(request.getFormat(),"html"),units(request),startTime,endTime);
  }
 catch (  final ReportGenerationArgumentException e) {
    throw new ReportingException(HttpResponseStatus.BAD_REQUEST,ReportingException.BAD_REQUEST,"Bad request: Invalid start or end date");
  }
catch (  final Exception e) {
    logger.error(e,e);
    throw new ReportingException(HttpResponseStatus.INTERNAL_SERVER_ERROR,ReportingException.INTERNAL_SERVER_ERROR,"Error generating report");
  }
  reply.setResult(new GenerateReportResultType(reportData));
  return reply;
}
