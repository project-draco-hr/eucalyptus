{
  final GenerateReportResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  final Context ctx=Contexts.lookup();
  final User requestUser=ctx.getUser();
  if (!requestUser.isSystemAdmin()) {
    throw new ReportingException(HttpResponseStatus.UNUATHORIZED,ReportingException.NOT_AUTHORIZED,"Not authorized");
  }
  long startTime=yesterday();
  long endTime=startTime + TimeUnit.DAYS.toMillis(1L);
  if (request.getStartDate() != null) {
    startTime=request.getStartDate().getTime();
  }
  if (request.getEndDate() != null) {
    endTime=request.getStartDate().getTime();
  }
  if (endTime <= startTime) {
    throw new ReportingException(HttpResponseStatus.BAD_REQUEST,ReportingException.BAD_REQUEST,"Bad request: Invalid start or end date");
  }
  final ReportGenerator generator=ReportGenerator.getInstance();
  final ByteArrayOutputStream reportOutput=new ByteArrayOutputStream(10240);
  try {
    reportOutput.write(("REPORT CONTENT HERE\n type:" + request.getTypes() + ", start="+ startTime+ ", end="+ endTime).getBytes(Charsets.UTF_8));
  }
 catch (  final Exception e) {
    logger.error(e,e);
    throw new ReportingException(HttpResponseStatus.INTERNAL_SERVER_ERROR,ReportingException.INTERNAL_SERVER_ERROR,"Error generating report");
  }
  reply.setResult(new GenerateReportResultType(new String(reportOutput.toByteArray(),Charsets.UTF_8)));
  return reply;
}
