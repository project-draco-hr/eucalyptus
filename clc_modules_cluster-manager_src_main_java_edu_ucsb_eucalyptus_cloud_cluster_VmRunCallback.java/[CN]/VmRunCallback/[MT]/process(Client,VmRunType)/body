{
  LOG.info(String.format(EucalyptusProperties.DEBUG_FSTRING,EucalyptusProperties.TokenState.submitted,token));
  Clusters.getInstance().lookup(token.getCluster()).getNodeState().submitToken(token);
  for (  String vmId : msg.getInstanceIds())   parent.msgMap.put(ClusterAllocator.State.ROLLBACK,QueuedEvent.make(new TerminateCallback(),new TerminateInstancesType(vmId,msg)));
  VmRunResponseType reply=null;
  try {
    reply=(VmRunResponseType)clusterClient.send(msg);
    Clusters.getInstance().lookup(token.getCluster()).getNodeState().redeemToken(token);
    LOG.info(String.format(EucalyptusProperties.DEBUG_FSTRING,EucalyptusProperties.TokenState.redeemed,token));
    if (reply.get_return()) {
      for (      VmInfo vmInfo : reply.getVms()) {
        VmInstance vm=VmInstances.getInstance().lookup(vmInfo.getInstanceId());
        vm.getNetworkConfig().setIpAddress(vmInfo.getNetParams().getIpAddress());
      }
      this.parent.setupAddressMessages(Lists.newArrayList(this.token.getAddresses()),Lists.newArrayList(reply.getVms()));
      for (      VmInfo vmInfo : reply.getVms()) {
        VmInstance vm=VmInstances.getInstance().lookup(vmInfo.getInstanceId());
        if (VmInstance.DEFAULT_IP.equals(vm.getNetworkConfig().getIgnoredPublicIp()))         vm.getNetworkConfig().setIgnoredPublicIp(vmInfo.getNetParams().getIgnoredPublicIp());
      }
    }
 else {
      this.parent.getRollback().lazySet(true);
    }
  }
 catch (  Exception e) {
    throw e;
  }
}
