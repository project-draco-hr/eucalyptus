{
  if (Topology.isEnabledLocally(Storage.class) && Bootstrap.isFinished() && Hosts.isCoordinator()) {
    final List<Availability> resourceAvailability=Lists.newArrayList();
    final Set<String> partitions=Sets.newHashSet(Iterables.transform(Clusters.getInstance().listValues(),HasFullName.GET_PARTITION));
    for (    final String partition : partitions) {
      long total=0;
      try {
        total=Transactions.find(new StorageInfo(partition)).getMaxTotalVolumeSizeInGb();
      }
 catch (      TransactionException e) {
        logger.debug("Error finding capacity for " + partition,e);
      }
      resourceAvailability.add(new Availability(total,Math.max(total - StorageUtil.getBlockStorageTotalSize(partition),0),Lists.<Tag>newArrayList(new ResourceAvailabilityEvent.Dimension("availabilityZone",partition))));
    }
    try {
      ListenerRegistry.getInstance().fireEvent(new ResourceAvailabilityEvent(StorageEBS,resourceAvailability));
    }
 catch (    Exception ex) {
      logger.error(ex,ex);
    }
  }
}
