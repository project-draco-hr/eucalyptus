{
  super(request);
  final Function<String,VmInstance> removeVolAttachment=new Function<String,VmInstance>(){
    public VmInstance apply(    final String input){
      String volumeId=VolumeDetachCallback.this.getRequest().getVolumeId();
      VmInstance vm=VmInstances.lookup(input);
      VmVolumeAttachment volumeAttachment=vm.lookupVolumeAttachment(volumeId);
      if (VmVolumeAttachment.AttachmentState.detaching.equals(volumeAttachment.getAttachmentState())) {
        throw Exceptions.toUndeclared("Failed to detach volume which is already detaching: " + volumeId);
      }
 else       if (VmVolumeAttachment.AttachmentState.attaching.equals(volumeAttachment.getAttachmentState())) {
        throw Exceptions.toUndeclared("Failed to detach volume which is currently attaching: " + volumeId);
      }
      vm.updateVolumeAttachment(volumeId,AttachmentState.detaching);
      return vm;
    }
  }
;
  Entities.asTransaction(VmInstance.class,removeVolAttachment).apply(this.getRequest().getInstanceId());
}
