{
  return new Function<BucketInfo,Bucket>(){
    @Override @Nullable public Bucket apply(    @Nonnull BucketInfo walrusBucket){
      Bucket osgBucket=null;
      try {
        AccountIdentifiers owningAccount=null;
        User owningUser=null;
        if (walrusSnapshotBuckets.contains(walrusBucket.getBucketName())) {
          LOG.warn("Changing the ownership of snapshot bucket " + walrusBucket.getBucketName() + " to blockstorage system account");
          owningAccount=getBlockStorageAccount();
          owningUser=getBlockStorageAdmin();
        }
 else         if (accountIdAccountMap.containsKey(walrusBucket.getOwnerId())) {
          owningAccount=accountIdAccountMap.get(walrusBucket.getOwnerId());
        }
 else         if (deletedAccountIds.contains(walrusBucket.getOwnerId())) {
          LOG.warn("Account ID " + walrusBucket.getOwnerId() + " does not not exist. Changing the ownership of bucket "+ walrusBucket.getBucketName()+ " to eucalyptus admin account");
          owningAccount=getEucalyptusAccount();
          owningUser=getEucalyptusAdmin();
        }
 else         if (noCanonicalIdAccountIds.contains(walrusBucket.getOwnerId())) {
          LOG.warn("Account ID " + walrusBucket.getOwnerId() + " does not have a canonical ID. Changing the ownership of bucket "+ walrusBucket.getBucketName()+ " to eucalyptus admin account");
          owningAccount=getEucalyptusAccount();
          owningUser=getEucalyptusAdmin();
        }
 else {
          try {
            owningAccount=Accounts.lookupAccountIdentifiersById(walrusBucket.getOwnerId());
            if (StringUtils.isBlank(owningAccount.getCanonicalId())) {
              LOG.warn("Account ID " + walrusBucket.getOwnerId() + " does not have a canonical ID. Changing the ownership of bucket "+ walrusBucket.getBucketName()+ " to eucalyptus admin account");
              owningAccount=getEucalyptusAccount();
              owningUser=getEucalyptusAdmin();
              noCanonicalIdAccountIds.add(walrusBucket.getOwnerId());
            }
 else {
              accountIdAccountMap.put(walrusBucket.getOwnerId(),owningAccount);
            }
          }
 catch (          AuthException e) {
            LOG.warn("Account ID " + walrusBucket.getOwnerId() + " does not not exist. Changing the ownership of bucket "+ walrusBucket.getBucketName()+ " to eucalyptus admin account");
            owningAccount=getEucalyptusAccount();
            owningUser=getEucalyptusAdmin();
            deletedAccountIds.add(walrusBucket.getOwnerId());
            deletedUserIds.add(walrusBucket.getUserId());
          }
        }
        if (owningUser == null) {
          if (userIdUserMap.containsKey(walrusBucket.getUserId())) {
            owningUser=userIdUserMap.get(walrusBucket.getUserId());
          }
 else           if (deletedUserIds.contains(walrusBucket.getUserId()) && accountIdAdminMap.containsKey(walrusBucket.getOwnerId())) {
            LOG.warn("User ID " + walrusBucket.getUserId() + " does not exist. Changing the IAM ownership of bucket "+ walrusBucket.getBucketName()+ " to the account admin");
            owningUser=accountIdAdminMap.get(walrusBucket.getOwnerId());
          }
 else           if (deletedUserIds.contains(walrusBucket.getUserId()) && deletedAdminAccountIds.contains(walrusBucket.getOwnerId())) {
            LOG.warn("User ID " + walrusBucket.getUserId() + " and the account admin do not exist. Changing the IAM ownership of bucket "+ walrusBucket.getBucketName()+ " to the eucalyptus account admin");
            owningUser=getEucalyptusAdmin();
          }
 else {
            if (walrusBucket.getUserId() != null) {
              try {
                owningUser=Accounts.lookupPrincipalByUserId(walrusBucket.getUserId());
                userIdUserMap.put(walrusBucket.getUserId(),owningUser);
              }
 catch (              AuthException e) {
                deletedUserIds.add(walrusBucket.getUserId());
                try {
                  owningUser=Accounts.lookupPrincipalByAccountNumber(owningAccount.getAccountNumber());
                  accountIdAdminMap.put(walrusBucket.getOwnerId(),owningUser);
                  LOG.warn("User ID " + walrusBucket.getUserId() + " does not exist. Changing the IAM ownership of bucket "+ walrusBucket.getBucketName()+ " to the account admin");
                }
 catch (                AuthException ie) {
                  LOG.warn("User ID " + walrusBucket.getUserId() + " and the account admin do not exist. Changing the IAM ownership of bucket "+ walrusBucket.getBucketName()+ " to the eucalyptus account admin");
                  owningUser=getEucalyptusAdmin();
                  deletedAdminAccountIds.add(walrusBucket.getOwnerId());
                }
              }
            }
 else {
              if (accountIdAdminMap.containsKey(walrusBucket.getOwnerId())) {
                LOG.warn("No user ID listed for bucket " + walrusBucket.getBucketName() + ". Changing the IAM ownership of bucket to the account admin");
                owningUser=accountIdAdminMap.get(walrusBucket.getBucketName());
              }
 else {
                try {
                  owningUser=Accounts.lookupPrincipalByAccountNumber(owningAccount.getAccountNumber());
                  accountIdAdminMap.put(walrusBucket.getOwnerId(),owningUser);
                  LOG.warn("No user ID listed for bucket " + walrusBucket.getBucketName() + ". Changing the IAM ownership of bucket to the account admin");
                }
 catch (                AuthException ie) {
                  LOG.warn("No user ID listed for bucket " + walrusBucket.getBucketName() + " and account admin does not exist. Changing the IAM ownership of bucket to the eucalyptus account admin");
                  owningUser=getEucalyptusAdmin();
                }
              }
            }
          }
        }
        osgBucket=new Bucket();
        osgBucket.setBucketName(walrusBucket.getBucketName());
        osgBucket.withUuid(walrusBucket.getBucketName());
        osgBucket.setBucketSize(walrusBucket.getBucketSize());
        osgBucket.setLocation(walrusBucket.getLocation());
        osgBucket.setLoggingEnabled(walrusBucket.getLoggingEnabled());
        osgBucket.setState(BucketState.extant);
        osgBucket.setLastState(BucketState.creating);
        osgBucket.setTargetBucket(walrusBucket.getTargetBucket());
        osgBucket.setTargetPrefix(walrusBucket.getTargetPrefix());
        osgBucket.setVersioning(VersioningStatus.valueOf(walrusBucket.getVersioning()));
        osgBucket.setOwnerCanonicalId(owningAccount.getCanonicalId());
        osgBucket.setOwnerDisplayName(owningAccount.getAccountAlias());
        osgBucket.setOwnerIamUserId(owningUser.getUserId());
        osgBucket.setOwnerIamUserDisplayName(owningUser.getName());
        AccessControlList acl=new AccessControlList();
        if (walrusSnapshotBuckets.contains(walrusBucket.getBucketName())) {
          acl.setGrants(new ArrayList<Grant>());
        }
 else {
          acl.setGrants(getBucketGrants(walrusBucket));
        }
        AccessControlPolicy acp=new AccessControlPolicy(new CanonicalUser(owningAccount.getCanonicalId(),owningAccount.getAccountAlias()),acl);
        osgBucket.setAcl(acp);
      }
 catch (      Exception e) {
        LOG.error("Failed to transform Walrus bucket " + walrusBucket.getBucketName() + " to objectstorage bucket",e);
        Exceptions.toUndeclared("Failed to transform Walrus bucket " + walrusBucket.getBucketName() + " to objectstorage bucket",e);
      }
      return osgBucket;
    }
  }
;
}
