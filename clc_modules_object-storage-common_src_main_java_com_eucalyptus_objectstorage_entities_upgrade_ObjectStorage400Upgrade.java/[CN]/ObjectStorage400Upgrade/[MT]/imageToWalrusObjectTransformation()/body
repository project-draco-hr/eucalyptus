{
  return new Function<ImageCacheInfo,ObjectInfo>(){
    @Override @Nullable public ObjectInfo apply(    @Nonnull ImageCacheInfo image){
      try {
        ObjectInfo walrusObject=new ObjectInfo(image.getBucketName(),image.getImageName());
        walrusObject.setDeleted(Boolean.FALSE);
        walrusObject.setLast(Boolean.TRUE);
        walrusObject.setLastModified(new Date());
        walrusObject.setObjectName(image.getImageName());
        walrusObject.setOwnerId(getEucalyptusAccount().getAccountNumber());
        walrusObject.setSize(image.getSize());
        walrusObject.setStorageClass(ObjectStorageProperties.STORAGE_CLASS.STANDARD.toString());
        walrusObject.setVersionId(WalrusProperties.NULL_VERSION_ID);
        walrusObject.resetGlobalGrants();
        List<GrantInfo> grantInfos=new ArrayList<GrantInfo>();
        GrantInfo.setFullControl(walrusObject.getOwnerId(),grantInfos);
        walrusObject.setGrants(grantInfos);
        return walrusObject;
      }
 catch (      Exception e) {
        LOG.error("Failed to create Walrus object for cached image " + image.getManifestName(),e);
        return null;
      }
    }
  }
;
}
