{
  return new Function<ImageCacheInfo,ObjectEntity>(){
    @Override @Nullable public ObjectEntity apply(    @Nonnull ImageCacheInfo image){
      ObjectEntity osgObject=null;
      try {
        Bucket osgBucket=null;
        if (bucketMap.containsKey(image.getBucketName())) {
          osgBucket=bucketMap.get(image.getBucketName());
        }
 else {
          osgBucket=Transactions.find(new Bucket(image.getBucketName()));
          bucketMap.put(image.getBucketName(),osgBucket);
        }
        osgObject=new ObjectEntity(osgBucket,image.getManifestName(),ObjectStorageProperties.NULL_VERSION_ID);
        osgObject.setIsDeleteMarker(Boolean.FALSE);
        osgObject.setIsLatest(Boolean.TRUE);
        osgObject.setObjectUuid(image.getImageName());
        osgObject.setObjectModifiedTimestamp(new Date());
        osgObject.setSize(image.getSize());
        osgObject.setStorageClass(ObjectStorageProperties.STORAGE_CLASS.STANDARD.toString());
        osgObject.setState(ObjectState.deleting);
        osgObject.setLastState(ObjectState.extant);
        osgObject.setOwnerCanonicalId(getEucalyptusAccount().getCanonicalId());
        osgObject.setOwnerDisplayName(getEucalyptusAccount().getAccountAlias());
        osgObject.setOwnerIamUserDisplayName(getEucalyptusAdmin().getName());
        osgObject.setOwnerIamUserId(getEucalyptusAdmin().getUserId());
        AccessControlList acl=new AccessControlList();
        acl.setGrants(new ArrayList<Grant>());
        AccessControlPolicy acp=new AccessControlPolicy(new CanonicalUser(osgObject.getOwnerCanonicalId(),osgObject.getOwnerDisplayName()),acl);
        osgObject.setAcl(acp);
      }
 catch (      Exception e) {
        LOG.error("Failed to create objectstorage object for cached image " + image.getManifestName(),e);
        Exceptions.toUndeclared("Failed to create objectstorage object for cached image " + image.getManifestName(),e);
      }
      return osgObject;
    }
  }
;
}
