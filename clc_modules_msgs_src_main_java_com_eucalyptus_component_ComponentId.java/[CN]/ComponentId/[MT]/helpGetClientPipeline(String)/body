{
  if (clientPipelines.containsKey(fqName)) {
    try {
      return clientPipelines.get(fqName).newInstance();
    }
 catch (    final InstantiationException ex) {
      LOG.error(ex,ex);
    }
catch (    final IllegalAccessException ex) {
      LOG.error(ex,ex);
    }
  }
 else {
    try {
      clientPipelines.putIfAbsent(fqName,(Class<ChannelPipelineFactory>)ClassLoader.getSystemClassLoader().loadClass(fqName));
      return clientPipelines.get(fqName).newInstance();
    }
 catch (    final InstantiationException ex) {
      LOG.error(ex,ex);
    }
catch (    final IllegalAccessException ex) {
      LOG.error(ex,ex);
    }
catch (    final ClassNotFoundException ex) {
      LOG.error(ex,ex);
    }
  }
  return new ChannelPipelineFactory(){
    @Override public ChannelPipeline getPipeline() throws Exception {
      return Channels.pipeline();
    }
  }
;
}
