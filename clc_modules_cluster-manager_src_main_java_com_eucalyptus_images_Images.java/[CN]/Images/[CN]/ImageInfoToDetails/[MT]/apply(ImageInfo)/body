{
  ImageDetails i=new ImageDetails();
  i.setName(arg0.getName());
  i.setDescription(arg0.getDescription());
  i.setArchitecture(arg0.getArchitecture().toString());
  i.setImageId(arg0.getDisplayName());
  if (arg0 instanceof Image.StaticDiskImage) {
    i.setImageLocation(((StaticDiskImage)arg0).getImageLocation());
  }
  i.setImageOwnerId(arg0.getOwnerAccountId().toString());
  i.setImageState(arg0.getState().toString());
  i.setIsPublic(arg0.getImagePublic());
  if (arg0 instanceof MachineImageInfo) {
    i.setImageType(((MachineImageInfo)arg0).getImageType().toString());
    i.setKernelId(((MachineImageInfo)arg0).getKernelId());
    i.setRamdiskId(((MachineImageInfo)arg0).getRamdiskId());
    i.setPlatform(((MachineImageInfo)arg0).getPlatform().toString());
  }
  if (arg0 instanceof BlockStorageImageInfo) {
    i.setRootDeviceType("ebs");
  }
  i.getBlockDeviceMappings().addAll(Collections2.transform(arg0.getDeviceMappings(),new Function<DeviceMapping,BlockDeviceMappingItemType>(){
    @Override public BlockDeviceMappingItemType apply(    DeviceMapping input){
      BlockDeviceMappingItemType ret=new BlockDeviceMappingItemType();
      ret.setDeviceName(input.getDeviceName());
      if (input instanceof BlockStorageDeviceMapping) {
        final BlockStorageDeviceMapping ebsDev=(BlockStorageDeviceMapping)input;
        ret.setEbs(new EbsDeviceMapping(){
{
            this.setVirtualName(ebsDev.getVirtualName());
            this.setSnapshotId(ebsDev.getSnapshotId());
            this.setVolumeSize(ebsDev.getSize());
            this.setDeleteOnTermination(ebsDev.getDelete());
          }
        }
);
      }
 else {
        ret.setVirtualName(input.getVirtualName());
      }
      return null;
    }
  }
));
  return i;
}
