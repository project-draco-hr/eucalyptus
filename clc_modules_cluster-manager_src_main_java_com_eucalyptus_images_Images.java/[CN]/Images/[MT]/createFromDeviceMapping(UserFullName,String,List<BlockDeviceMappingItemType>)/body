{
  Context ctx=Contexts.lookup();
  BlockDeviceMappingItemType rootBlockDevice=Iterables.find(blockDeviceMappings,findEbsRoot(rootDeviceName));
  String snapshotId=rootBlockDevice.getEbs().getSnapshotId();
  try {
    Snapshot snap=Snapshots.lookup(userFullName,snapshotId);
    if (!userFullName.getUserId().equals(snap.getOwnerUserId())) {
      throw new EucalyptusCloudException("Failed to create image from specified block device mapping: " + rootBlockDevice + " because of: you must the owner of the source snapshot.");
    }
    Integer snapVolumeSize=snap.getVolumeSize();
    Integer suppliedVolumeSize=rootBlockDevice.getEbs().getVolumeSize();
    suppliedVolumeSize=(suppliedVolumeSize == null) ? rootBlockDevice.getSize() : suppliedVolumeSize;
    Integer targetVolumeSize=(snapVolumeSize <= suppliedVolumeSize) ? suppliedVolumeSize : snapVolumeSize;
    Boolean targetDeleteOnTermination=Boolean.TRUE.equals(rootBlockDevice.getEbs().getDeleteOnTermination());
    BlockStorageImageInfo ret=new BlockStorageImageInfo(generateImageId(Image.Type.machine.getTypePrefix(),snapshotId),snap.getDisplayName(),targetVolumeSize,targetDeleteOnTermination);
    ret=Transactions.save(ret,new Callback<BlockStorageImageInfo>(){
      @Override public void fire(      BlockStorageImageInfo t){
        t.getDeviceMappings().addAll(Lists.transform(blockDeviceMappings,Images.deviceMappingGenerator(t)));
      }
    }
);
    return ret;
  }
 catch (  TransactionFireException ex) {
    throw new EucalyptusCloudException("Failed to create image from specified block device mapping: " + rootBlockDevice + " because of: "+ ex.getMessage());
  }
catch (  ExecutionException ex) {
    LOG.error(ex,ex);
    throw new EucalyptusCloudException("Failed to create image from specified block device mapping: " + rootBlockDevice + " because of: "+ ex.getMessage());
  }
}
