{
  PutGetImageInfo ret=null;
  String imageName=(imageNameArg != null) ? imageNameArg : manifest.getName();
  eki=(eki != null) ? eki : manifest.getKernelId();
  eri=(eri != null) ? eri : manifest.getRamdiskId();
  ImageMetadata.Architecture imageArch=(requestArch != null) ? requestArch : manifest.getArchitecture();
  final ImageMetadata.Platform imagePlatform=platform;
switch (manifest.getImageType()) {
case kernel:
    ret=new KernelImageInfo(creator,ResourceIdentifiers.generateString(ImageMetadata.Type.kernel.getTypePrefix()),imageName,imageDescription,manifest.getSize(),imageArch,imagePlatform,manifest.getImageLocation(),manifest.getBundledSize(),manifest.getChecksum(),manifest.getChecksumType());
  break;
case ramdisk:
ret=new RamdiskImageInfo(creator,ResourceIdentifiers.generateString(ImageMetadata.Type.ramdisk.getTypePrefix()),imageName,imageDescription,manifest.getSize(),imageArch,imagePlatform,manifest.getImageLocation(),manifest.getBundledSize(),manifest.getChecksum(),manifest.getChecksumType());
break;
case machine:
if (ImageMetadata.Platform.windows.equals(imagePlatform)) {
virtType=ImageMetadata.VirtualizationType.hvm;
}
ret=new MachineImageInfo(creator,ResourceIdentifiers.generateString(ImageMetadata.Type.machine.getTypePrefix()),imageName,imageDescription,manifest.getSize(),imageArch,imagePlatform,manifest.getImageLocation(),manifest.getBundledSize(),manifest.getChecksum(),manifest.getChecksumType(),eki,eri,virtType);
ret.setImageFormat(format.toString());
if (ImageMetadata.VirtualizationType.hvm.equals(virtType)) {
((MachineImageInfo)ret).setRunManifestLocation(manifest.getImageLocation());
}
break;
}
if (ret == null) {
throw new IllegalArgumentException("Failed to prepare image using the provided image manifest: " + manifest);
}
 else {
ret.setSignature(manifest.getSignature());
return ret;
}
}
