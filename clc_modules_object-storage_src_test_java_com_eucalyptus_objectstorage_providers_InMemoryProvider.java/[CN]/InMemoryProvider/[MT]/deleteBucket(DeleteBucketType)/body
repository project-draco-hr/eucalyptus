{
switch (failBucketDelete) {
case INTERNAL_ERROR:
    throw new InternalErrorException(request.getBucket());
case NOT_FOUND:
  throw new NoSuchBucketException(request.getBucket());
default :
}
DeleteBucketResponseType response=request.getReply();
response.setStatus(HttpResponseStatus.NO_CONTENT);
response.setStatusMessage("NoContent");
try {
MemoryBucket b=getBucket(request.getBucket(),request.getEffectiveUserId());
if (b != null) {
  if (b.objects.size() > 0) {
    throw new BucketNotEmptyException(request.getBucket());
  }
 else {
    this.myBuckets.remove(b.name);
  }
}
}
 catch (NoSuchBucketException e) {
}
return response;
}
