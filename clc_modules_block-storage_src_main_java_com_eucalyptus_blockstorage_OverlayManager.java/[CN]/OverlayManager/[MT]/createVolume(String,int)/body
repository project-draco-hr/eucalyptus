{
  VolumeMetadataManager volumeManager=new VolumeMetadataManager();
  LVMVolumeInfo lvmVolumeInfo=null;
  lvmVolumeInfo=new ISCSIVolumeInfo();
  volumeManager.finish();
  String rawFileName=DirectStorageInfo.getStorageInfo().getVolumesDir() + "/" + volumeId;
  long absoluteSize=size * StorageProperties.GB + LVM_HEADER_LENGTH;
  try {
    String vgName=generateVGName(volumeId);
    String lvName=generateLVName(volumeId);
    String loDevName=createLoopback(rawFileName,absoluteSize);
    lvmVolumeInfo.setVolumeId(volumeId);
    lvmVolumeInfo.setLoDevName(loDevName);
    createLogicalVolume(volumeId,loDevName,vgName,lvName);
    lvmVolumeInfo.setVgName(vgName);
    lvmVolumeInfo.setLvName(lvName);
    lvmVolumeInfo.setStatus(StorageProperties.Status.available.toString());
    lvmVolumeInfo.setSize(size);
    String absoluteLVName=lvmRootDirectory + PATH_SEPARATOR + vgName+ PATH_SEPARATOR+ lvName;
    LVMWrapper.disableLogicalVolume(absoluteLVName);
    removeLoopback(loDevName);
    lvmVolumeInfo.setLoDevName(null);
    volumeManager=new VolumeMetadataManager();
    volumeManager.add(lvmVolumeInfo);
  }
 catch (  EucalyptusCloudException ex) {
    String error="Unable to run command: " + ex.getMessage();
    LOG.error(error);
    throw new EucalyptusCloudException(error);
  }
 finally {
    try {
      if (volumeManager != null) {
        volumeManager.finish();
      }
 else {
        LOG.error("Cannot commit to db. MetadataManager is null");
      }
    }
 catch (    final Throwable e) {
      LOG.error("Volume: " + volumeId + " db commit error: "+ e.getMessage());
    }
  }
}
