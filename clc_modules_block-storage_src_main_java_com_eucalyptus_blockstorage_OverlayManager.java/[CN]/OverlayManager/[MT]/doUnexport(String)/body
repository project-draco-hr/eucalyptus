{
  try {
    VolumeMetadataManager volumeManager=new VolumeMetadataManager();
    LVMVolumeInfo volume=volumeManager.getVolumeInfo(volumeId);
    VolumeOpMonitor monitor=getMonitor(volume.getVolumeId());
synchronized (monitor) {
      try {
        LOG.info("Cleaning up volume: " + volume.getVolumeId());
        String path=lvmRootDirectory + PATH_SEPARATOR + volume.getVgName()+ PATH_SEPARATOR+ volume.getLvName();
        try {
          if (LVMWrapper.logicalVolumeExists(path)) {
            LOG.debug("Found logical volume at " + path + " for "+ volume.getVolumeId()+ ". Now cleaning up");
            exportManager.cleanup(volume);
          }
 else {
            LOG.debug("Failed to find logical volume at " + path + " for "+ volume.getVolumeId()+ ". Skipping cleanup for tgt and lvm");
          }
        }
 catch (        EucalyptusCloudException ee) {
          LOG.error("Error cleaning up volume iscsi state " + volume.getVolumeId(),ee);
          throw ee;
        }
 finally {
          volumeManager.finish();
        }
        volumeManager=new VolumeMetadataManager();
        try {
          volume=volumeManager.getVolumeInfo(volumeId);
          String loDevName=volume.getLoDevName();
          if (loDevName != null) {
            if (volume != null) {
              if (!volumeManager.areSnapshotsPending(volume.getVolumeId())) {
                LVMWrapper.disableLogicalVolume(path);
                LOG.info("Detaching loop device: " + loDevName + " for volume "+ volume.getVolumeId());
                removeLoopback(loDevName);
                volume.setLoDevName(null);
                LOG.info("Done cleaning up: " + volume.getVolumeId());
                volume.setCleanup(false);
              }
 else {
                LOG.info("Snapshot in progress. Not detaching loop device.");
              }
            }
          }
        }
 catch (        EucalyptusCloudException e) {
          LOG.error(e,e);
          throw e;
        }
 finally {
          volumeManager.finish();
        }
      }
  finally {
        monitor.notifyAll();
      }
    }
  }
 catch (  Exception ex) {
    LOG.error("Error unexporting " + volumeId + " from all hosts",ex);
    throw new EucalyptusCloudException(ex);
  }
}
