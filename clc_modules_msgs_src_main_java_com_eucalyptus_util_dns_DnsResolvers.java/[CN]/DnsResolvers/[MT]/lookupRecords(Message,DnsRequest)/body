{
  final Record query=request.getQuery();
  final InetAddress source=request.getRemoteAddress();
  final Name name=query.getName();
  final int type=query.getType();
  response.getHeader().setFlag(Flags.RA);
  for (  final DnsResolver r : DnsResolvers.resolversFor(request)) {
    try {
      final DnsResponse reply=r.lookupRecords(request);
      if (reply == null) {
        LOG.debug("DnsResolver: returned null " + name + " using "+ r);
        continue;
      }
      if (reply.isAuthoritative()) {
        response.getHeader().setFlag(Flags.AA);
      }
      if (reply.isNxdomain()) {
        addRRset(name,response,new Record[]{DomainNameRecords.sourceOfAuthority(name)},type);
        response.getHeader().setRcode(Rcode.NXDOMAIN);
        return SetResponse.ofType(SetResponse.NXDOMAIN);
      }
 else       if (reply.hasAnswer()) {
        for (        ResponseSection s : ResponseSection.values()) {
          Record[] records=reply.section(s);
          if (records != null) {
            addRRset(name,response,records,s.section());
          }
        }
        return SetResponse.ofType(SetResponse.SUCCESSFUL);
      }
    }
 catch (    final Exception ex) {
      LOG.debug("DnsResolver: failed for " + name + " using "+ r+ " because of: "+ ex.getMessage(),ex);
    }
  }
  return SetResponse.ofType(SetResponse.UNKNOWN);
}
