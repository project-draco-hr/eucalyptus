{
  List<String> attrNames=Lists.newArrayList();
  attrNames.addAll(lic.getUserInfoAttributes().keySet());
  if (!lic.getUserInfoAttributes().keySet().contains(lic.getUserIdAttribute())) {
    attrNames.add(lic.getUserIdAttribute());
  }
  List<Attributes> attrsList=retrieveSelection(ldap,lic.getUserBaseDn(),lic.getUsersSelection(),attrNames.toArray(new String[0]));
  try {
    Map<String,Map<String,String>> userMap=Maps.newHashMap();
    for (    Attributes attrs : attrsList) {
      if (VERBOSE) {
        LOG.debug("Retrieved user: " + attrs);
      }
      Map<String,String> infoMap=Maps.newHashMap();
      for (      String attr : lic.getUserInfoAttributes().keySet()) {
        infoMap.put(lic.getUserInfoAttributes().get(attr),(String)attrs.get(attr).get());
      }
      userMap.put(getId(lic.getUserIdAttribute(),attrs),infoMap);
    }
    return userMap;
  }
 catch (  NamingException e) {
    LOG.error(e,e);
    throw new LdapException("Error reading users",e);
  }
}
