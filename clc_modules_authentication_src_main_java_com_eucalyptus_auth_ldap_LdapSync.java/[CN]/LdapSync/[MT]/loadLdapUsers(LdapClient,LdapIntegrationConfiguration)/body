{
  List<String> attrNames=Lists.newArrayList();
  attrNames.addAll(lic.getUserInfoAttributes().keySet());
  if (!lic.getUserInfoAttributes().keySet().contains(lic.getUserIdAttribute())) {
    attrNames.add(lic.getUserIdAttribute());
  }
  final Map<String,Map<String,String>> userMap=Maps.newHashMap();
  retrieveSelection(ldap,lic.getUserBaseDn(),lic.getUsersSelection(),attrNames.toArray(new String[0]),new LdapEntryProcessor(){
    @Override public void processLdapEntry(    String dn,    Attributes attrs) throws NamingException {
      if (VERBOSE) {
        LOG.debug("Retrieved user: " + dn + " -> "+ attrs);
      }
      Map<String,String> infoMap=Maps.newHashMap();
      for (      String attrName : lic.getUserInfoAttributes().keySet()) {
        infoMap.put(lic.getUserInfoAttributes().get(attrName),(String)attrs.get(attrName).get());
      }
      infoMap.put(User.DN,dn);
      userMap.put(getId(lic.getUserIdAttribute(),attrs),infoMap);
    }
  }
);
  return userMap;
}
