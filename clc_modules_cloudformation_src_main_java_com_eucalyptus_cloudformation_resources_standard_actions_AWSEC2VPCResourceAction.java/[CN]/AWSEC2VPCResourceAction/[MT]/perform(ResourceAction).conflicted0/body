{
  AWSEC2VPCResourceAction action=(AWSEC2VPCResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  CreateVpcType createVpcType=MessageHelper.createMessage(CreateVpcType.class,action.info.getEffectiveUserId());
  createVpcType.setCidrBlock(action.properties.getCidrBlock());
  if (action.properties.getInstanceTenancy() == null) {
    createVpcType.setInstanceTenancy("default");
  }
 else   if (!"default".equals(action.properties.getInstanceTenancy()) && !"dedicated".equals(action.properties.getInstanceTenancy())) {
    throw new ValidationErrorException("InstanceTenancy must be 'dedicated' or 'default");
  }
 else {
    createVpcType.setInstanceTenancy(action.properties.getInstanceTenancy());
  }
  CreateVpcResponseType createVpcResponseType=AsyncRequests.<CreateVpcType,CreateVpcResponseType>sendSync(configuration,createVpcType);
  action.info.setPhysicalResourceId(createVpcResponseType.getVpc().getVpcId());
  action.info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(action.info.getPhysicalResourceId())));
  return action;
}
