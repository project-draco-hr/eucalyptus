{
  AWSEC2VPCResourceAction action=(AWSEC2VPCResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  if (action.info.getPhysicalResourceId() == null)   return action;
  DescribeVpcsType describeVpcsType=MessageHelper.createMessage(DescribeVpcsType.class,action.info.getEffectiveUserId());
  action.setVpcId(describeVpcsType,action.info.getPhysicalResourceId());
  DescribeVpcsResponseType describeVpcsResponseType=AsyncRequests.<DescribeVpcsType,DescribeVpcsResponseType>sendSync(configuration,describeVpcsType);
  if (describeVpcsResponseType.getVpcSet() == null || describeVpcsResponseType.getVpcSet().getItem() == null || describeVpcsResponseType.getVpcSet().getItem().isEmpty()) {
    return action;
  }
  DeleteVpcType deleteVpcType=MessageHelper.createMessage(DeleteVpcType.class,action.info.getEffectiveUserId());
  deleteVpcType.setVpcId(action.info.getPhysicalResourceId());
  AsyncRequests.<DeleteVpcType,DeleteVpcResponseType>sendSync(configuration,deleteVpcType);
  return action;
}
