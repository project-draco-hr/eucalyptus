{
  if (networkToken != null) {
    QueuedEventCallback callback=new StartNetworkCallback(networkToken).regardingUserRequest(vmAllocInfo.getRequest());
    this.messages.addRequest(State.CREATE_NETWORK,callback);
    LOG.debug(EventRecord.here(ClusterAllocator.class,EventType.VM_PREPARE,callback.getClass().getSimpleName(),networkToken.toString()));
  }
  try {
    RunInstancesType request=this.vmAllocInfo.getRequest();
    if (networkToken != null) {
      Network network=Networks.getInstance().lookup(networkToken.getName());
      LOG.debug(LogUtil.header("Setting up rules for: " + network.getName()));
      LOG.debug(LogUtil.subheader(network.toString()));
      ConfigureNetworkType msg=new ConfigureNetworkType(network.getRules()).regardingUserRequest(vmAllocInfo.getRequest());
      if (!network.getRules().isEmpty()) {
        this.messages.addRequest(State.CREATE_NETWORK_RULES,new ConfigureNetworkCallback(msg));
      }
      for (      Network otherNetwork : Networks.getInstance().listValues()) {
        if (otherNetwork.isPeer(network.getUserName(),network.getNetworkName())) {
          LOG.warn("Need to refresh rules for incoming named network ingress on: " + otherNetwork.getName());
          LOG.debug(otherNetwork);
          ConfigureNetworkType omsg=new ConfigureNetworkType(otherNetwork.getRules());
          omsg.setUserId(otherNetwork.getUserName());
          omsg.setEffectiveUserId(Component.eucalyptus.name());
          if (!otherNetwork.getRules().isEmpty()) {
            this.messages.addRequest(State.CREATE_NETWORK_RULES,new ConfigureNetworkCallback(omsg));
          }
        }
      }
    }
  }
 catch (  NoSuchElementException e) {
  }
}
