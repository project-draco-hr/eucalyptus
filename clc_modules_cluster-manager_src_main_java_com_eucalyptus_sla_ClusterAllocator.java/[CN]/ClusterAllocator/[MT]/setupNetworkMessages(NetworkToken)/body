{
  if (networkToken != null) {
    Request<StartNetworkType,StartNetworkResponseType> callback=Callbacks.newRequest(new StartNetworkCallback(networkToken).regardingUserRequest(vmAllocInfo.getRequest()));
    this.messages.addRequest(State.CREATE_NETWORK,callback);
    EventRecord.here(ClusterAllocator.class,EventType.VM_PREPARE,callback.getClass().getSimpleName(),networkToken.toString()).debug();
  }
  try {
    RunInstancesType request=this.vmAllocInfo.getRequest();
    if (networkToken != null) {
      Network network=Networks.getInstance().lookup(networkToken.getName());
      EventRecord.here(ClusterAllocator.class,EventType.VM_PREPARE,ConfigureNetworkCallback.class.getSimpleName(),network.getRules().toString()).debug();
      if (!network.getRules().isEmpty()) {
        this.messages.addRequest(State.CREATE_NETWORK_RULES,Callbacks.newRequest(new ConfigureNetworkCallback(this.vmAllocInfo.getRequest().getUserId(),network.getRules())));
      }
      for (      Network otherNetwork : Networks.getInstance().listValues()) {
        if (otherNetwork.isPeer(network.getUserName(),network.getNetworkName())) {
          LOG.warn("Need to refresh rules for incoming named network ingress on: " + otherNetwork.getName());
          LOG.debug(otherNetwork);
          if (!otherNetwork.getRules().isEmpty()) {
            this.messages.addRequest(State.CREATE_NETWORK_RULES,Callbacks.newRequest(new ConfigureNetworkCallback(otherNetwork.getUserName(),otherNetwork.getRules())));
          }
        }
      }
    }
  }
 catch (  NoSuchElementException e) {
  }
}
