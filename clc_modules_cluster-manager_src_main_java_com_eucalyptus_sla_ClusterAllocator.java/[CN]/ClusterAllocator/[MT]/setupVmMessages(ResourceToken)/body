{
  Integer vlan=null;
  List<String> networkNames=null;
  ArrayList<String> networkIndexes=Lists.newArrayList();
  if (token.getPrimaryNetwork() != null) {
    vlan=token.getPrimaryNetwork().getVlan();
    if (vlan < 0)     vlan=9;
    networkNames=Lists.newArrayList(token.getPrimaryNetwork().getNetworkName());
    for (    Integer index : token.getPrimaryNetwork().getIndexes()) {
      networkIndexes.add(index.toString());
    }
  }
 else {
    vlan=-1;
    networkNames=Lists.newArrayList(Collections.nCopies(token.getAmount(),"default"));
    networkIndexes=Lists.newArrayList(Collections.nCopies(token.getAmount(),"-1"));
  }
  final List<String> addresses=Lists.newArrayList(token.getAddresses());
  RunInstancesType request=this.vmAllocInfo.getRequest();
  String rsvId=this.vmAllocInfo.getReservationId();
  VmKeyInfo keyInfo=this.vmAllocInfo.getKeyInfo();
  VmTypeInfo vmInfo=this.vmAllocInfo.getVmTypeInfo();
  String userData=this.vmAllocInfo.getRequest().getUserData();
  Request cb=null;
  int index=0;
  try {
    for (    ResourceToken childToken : this.cluster.getNodeState().splitToken(token)) {
      cb=makeRunRequest(request,childToken,this.vmAllocInfo.getOwnerFullName(),rsvId,keyInfo,vmInfo,this.vmAllocInfo.getPlatform(),vlan,networkNames,userData);
      this.messages.addRequest(State.CREATE_VMS,cb);
      index++;
    }
  }
 catch (  NoSuchTokenException ex) {
    throw new RuntimeException(ex);
  }
}
