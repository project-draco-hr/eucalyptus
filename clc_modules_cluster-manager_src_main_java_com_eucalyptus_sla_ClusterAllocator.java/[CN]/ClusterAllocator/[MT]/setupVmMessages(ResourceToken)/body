{
  Integer vlan=null;
  List<String> networkNames=null;
  ArrayList<String> networkIndexes=Lists.newArrayList();
  if (token.getPrimaryNetwork() != null) {
    vlan=token.getPrimaryNetwork().getVlan();
    if (vlan < 0)     vlan=9;
    networkNames=Lists.newArrayList(token.getPrimaryNetwork().getNetworkName());
    for (    Integer index : token.getPrimaryNetwork().getIndexes()) {
      networkIndexes.add(index.toString());
    }
  }
 else {
    vlan=-1;
    networkNames=Lists.newArrayList(Collections.nCopies(token.getAmount(),"default"));
    networkIndexes=Lists.newArrayList(Collections.nCopies(token.getAmount(),"-1"));
  }
  final List<String> addresses=Lists.newArrayList(token.getAddresses());
  RunInstancesType request=this.vmAllocInfo.getRequest();
  String rsvId=this.vmAllocInfo.getReservationId();
  VmImageInfo imgInfo=this.vmAllocInfo.getImageInfo();
  VmKeyInfo keyInfo=this.vmAllocInfo.getKeyInfo();
  VmTypeInfo vmInfo=this.vmAllocInfo.getVmTypeInfo();
  byte[] userData=this.vmAllocInfo.getUserData();
  QueuedEventCallback cb=null;
  try {
    int index=0;
    for (    ResourceToken childToken : this.cluster.getNodeState().splitToken(token)) {
      List<String> instanceIds=Lists.newArrayList(token.getInstanceIds().get(index));
      List<String> netIndexes=Lists.newArrayList(networkIndexes.get(index));
      List<String> addrList=Lists.newArrayList();
      List<String> netNames=Lists.newArrayList(networkNames.get(index));
      if (!addresses.isEmpty()) {
        addrList.add(addresses.get(index));
      }
      cb=makeRunRequest(request,childToken,rsvId,instanceIds,imgInfo,keyInfo,vmInfo,vlan,netNames,netIndexes,addrList,userData);
      this.messages.addRequest(State.CREATE_VMS,cb);
      index++;
    }
  }
 catch (  NoSuchTokenException e) {
    cb=makeRunRequest(request,token,rsvId,token.getInstanceIds(),imgInfo,keyInfo,vmInfo,vlan,networkNames,networkIndexes,addresses,userData);
  }
  if (cb != null) {
    this.messages.addRequest(State.CREATE_VMS,cb);
  }
}
