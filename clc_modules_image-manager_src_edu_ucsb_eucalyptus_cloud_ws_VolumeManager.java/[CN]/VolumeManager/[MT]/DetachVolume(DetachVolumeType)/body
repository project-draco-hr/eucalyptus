{
  DetachVolumeResponseType reply=(DetachVolumeResponseType)request.getReply();
  EntityWrapper<Volume> db=VolumeManager.getEntityWrapper();
  String userName=request.isAdministrator() ? null : request.getUserId();
  try {
    db.getUnique(Volume.named(userName,request.getVolumeId()));
  }
 catch (  EucalyptusCloudException e) {
    LOG.debug(e,e);
    db.rollback();
    throw new EucalyptusCloudException("Volume does not exist: " + request.getVolumeId());
  }
  db.commit();
  VmInstance vm=null;
  AttachedVolume volume=null;
  for (  VmInstance v : VmInstances.getInstance().listValues()) {
    for (    AttachedVolume vol : v.getVolumes()) {
      if (vol.getVolumeId().equals(request.getVolumeId())) {
        volume=vol;
        vm=v;
      }
    }
  }
  if (volume == null || vm == null) {
    throw new EucalyptusCloudException("Volume is not attached: " + request.getVolumeId());
  }
  if (!vm.getInstanceId().equals(request.getInstanceId()) && request.getInstanceId() != null && !request.getInstanceId().equals("")) {
    throw new EucalyptusCloudException("Volume is not attached to instance: " + request.getInstanceId());
  }
  if (request.getDevice() != null && !request.getDevice().equals("") && !volume.getDevice().equals(request.getDevice())) {
    throw new EucalyptusCloudException("Volume is not attached to device: " + request.getDevice());
  }
  Cluster cluster=null;
  try {
    cluster=Clusters.getInstance().lookup(vm.getPlacement());
  }
 catch (  NoSuchElementException e) {
    LOG.debug(e,e);
    throw new EucalyptusCloudException("Cluster does not exist: " + vm.getPlacement());
  }
  request.setVolumeId(volume.getVolumeId());
  request.setRemoteDevice(volume.getRemoteDevice().replaceAll("/unknown",""));
  request.setDevice(volume.getDevice());
  request.setInstanceId(vm.getInstanceId());
  QueuedEvent<DetachVolumeType> event=QueuedEvent.make(new VolumeDetachCallback(),request);
  cluster.getMessageQueue().enqueue(event);
  reply.setDetachedVolume(volume);
  return reply;
}
