{
  if (!Clusters.getInstance().contains(request.getAvailabilityZone())) {
    throw new EucalyptusCloudException("Zone does not exist: " + request.getAvailabilityZone());
  }
  EntityWrapper<Volume> db=getEntityWrapper();
  String newId=null;
  while (true) {
    newId=Hashes.generateId(request.getUserId(),ID_PREFIX);
    try {
      db.getUnique(new Volume(null,newId));
      break;
    }
 catch (    EucalyptusCloudException e) {
    }
  }
  CreateStorageVolumeType scRequest=new CreateStorageVolumeType(newId,request.getSize(),request.getSnapshotId());
  CreateStorageVolumeResponseType scReply=null;
  try {
    scReply=(CreateStorageVolumeResponseType)Messaging.send(StorageProperties.STORAGE_REF,scRequest);
  }
 catch (  EucalyptusCloudException e) {
    LOG.debug(e,e);
    throw new EucalyptusCloudException("Error calling CreateStorageVolume:" + e.getMessage());
  }
  Volume newVol=new Volume(request.getUserId(),newId,new Integer(request.getSize()),request.getAvailabilityZone(),request.getSnapshotId());
  db.add(newVol);
  db.commit();
  CreateVolumeResponseType reply=(CreateVolumeResponseType)request.getReply();
  reply.setVolume(newVol.morph(new edu.ucsb.eucalyptus.msgs.Volume()));
  return reply;
}
