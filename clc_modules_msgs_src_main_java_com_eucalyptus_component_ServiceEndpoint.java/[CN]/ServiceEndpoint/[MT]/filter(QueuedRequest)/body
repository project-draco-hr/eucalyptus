{
  if (!(event.getCallback() instanceof Expendable)) {
    return false;
  }
 else   if (event.getCallback() instanceof NOOP) {
    RuntimeException ex=new RuntimeException("Operation returning a NOOP.");
    LOG.debug(ex,ex);
    return true;
  }
 else {
    final Expendable cb=(Expendable)event.getCallback();
    Iterables.filter(Lists.newArrayList(this.msgQueue),new Predicate<QueuedRequest>(){
      @Override public boolean apply(      QueuedRequest arg0){
        if (arg0.getClass().isAssignableFrom(event.getClass()) && arg0 instanceof Expendable && cb.duplicateOf(arg0.getCallback())) {
          EventRecord.caller(event.getCallback().getClass(),EventType.QUEUE,ServiceEndpoint.this.parent.getName()).append(EventType.MSG_REJECTED.toString(),EventType.QUEUE_LENGTH.name(),Long.toString(ServiceEndpoint.this.msgQueue.size())).info();
          return true;
        }
 else {
          return false;
        }
      }
    }
);
  }
  return false;
}
