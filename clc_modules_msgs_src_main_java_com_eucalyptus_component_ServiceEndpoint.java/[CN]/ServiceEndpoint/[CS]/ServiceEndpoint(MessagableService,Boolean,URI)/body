{
  super(uri);
  this.parent=parent;
  this.local=local;
  Assertions.assertNotNull(uri);
  try {
    uri.parseServerAuthority();
  }
 catch (  URISyntaxException e) {
    LOG.error(e,e);
    throw new TransitionException("Failed to initalize service: " + parent + " because of: "+ e.getMessage(),e);
  }
  this.running=new AtomicBoolean(false);
  this.msgQueue=new LinkedBlockingQueue<QueuedRequest>();
  this.workers=Threads.lookup(parent.getComponentId().getClass(),ServiceEndpoint.class,uri.getHost() + "-queue").limitTo(NUM_WORKERS);
}
