{
  LOG.info("Starting message queue: " + Thread.currentThread().getName() + " for endpoint: "+ ServiceEndpoint.this.get());
  while (!ServiceEndpoint.this.finished.get()) {
    try {
      QueuedRequest event;
      if ((event=ServiceEndpoint.this.msgQueue.poll(ServiceEndpoint.this.pollInterval,TimeUnit.MILLISECONDS)) != null) {
        EventRecord.here(ServiceEndpointWorker.class,EventType.DEQUEUE,event.getCallback().getClass().getSimpleName(),event.getRequest().getRequest().toSimpleString()).debug();
        final long start=System.nanoTime();
        event.getRequest().sendSync(ServiceEndpoint.this);
        EventRecord.here(ServiceEndpointWorker.class,EventType.QUEUE,ServiceEndpoint.this.getParent().getName()).append(event.getCallback().getClass().getSimpleName()).append(EventType.QUEUE_TIME.name(),Long.toString(start - event.getStartTime())).append(EventType.SERVICE_TIME.name(),Long.toString(System.currentTimeMillis() - start)).append(EventType.QUEUE_LENGTH.name(),Long.toString(ServiceEndpoint.this.msgQueue.size())).append(EventType.MSG_SENT.name(),event.getRequest().getRequest().toSimpleString()).info();
      }
    }
 catch (    InterruptedException e1) {
      return;
    }
catch (    final ExecutionException e) {
      LOG.error(e.getCause(),e.getCause());
    }
catch (    final Throwable e) {
      LOG.error(e,e);
    }
  }
  LOG.debug("Shutting down cluster message queue: " + Thread.currentThread().getName());
}
