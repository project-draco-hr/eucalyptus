{
  final String[] parts=path.split(":",2);
  try {
    final String requestIpOrInstanceId=ResourceIdentifiers.tryNormalize().apply(parts[0]);
    final boolean isInstanceId=requestIpOrInstanceId.startsWith("i-");
    final MetadataRequest request=new MetadataRequest(isInstanceId ? "127.0.0.1" : requestIpOrInstanceId,parts.length == 2 ? parts[1] : "/",isInstanceId ? Optional.of(requestIpOrInstanceId) : ipToVmIdCache.get(requestIpOrInstanceId));
    if (instanceMetadataEndpoints.containsKey(request.getMetadataName()) && request.isInstance()) {
      if ((isInstanceId && !networkingFeatureSupplier.get().contains(NetworkingFeature.Vpc)) || (!isInstanceId && !networkingFeatureSupplier.get().contains(NetworkingFeature.Classic))) {
        throw new NoSuchElementException("Metadata request failed (invalid for platform): " + path);
      }
      return instanceMetadataEndpoints.get(request.getMetadataName()).apply(request).getBytes();
    }
 else     if (systemMetadataEndpoints.containsKey(request.getMetadataName()) && request.isSystem()) {
      return systemMetadataEndpoints.get(request.getMetadataName()).apply(request).getBytes();
    }
 else     if (publicMetadataEndpoints.containsKey(request.getMetadataName())) {
      return publicMetadataEndpoints.get(request.getMetadataName()).apply(request).getBytes();
    }
 else {
      return "Metadata request failed: " + path;
    }
  }
 catch (  Exception ex) {
    NoSuchElementException noSuchElementException=Exceptions.findCause(ex,NoSuchElementException.class);
    if (noSuchElementException != null)     throw noSuchElementException;
    String errorMsg="Metadata request failed: " + path + (Logs.isExtrrreeeme() ? " cause: " + ex.getMessage() : "");
    LOG.error(errorMsg,ex);
    throw Exceptions.toUndeclared(ex);
  }
}
