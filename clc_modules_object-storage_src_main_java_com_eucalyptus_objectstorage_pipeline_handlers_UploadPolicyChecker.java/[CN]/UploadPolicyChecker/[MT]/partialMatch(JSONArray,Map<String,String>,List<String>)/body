{
  boolean returnValue=false;
  String key;
  if (jsonArray.size() != 3)   return false;
  try {
    String condition=(String)jsonArray.get(0);
    key=(String)jsonArray.get(1);
    key=key.replaceAll("\\$","");
    policyItemNames.add(key);
    String value=(String)jsonArray.get(2);
    if (condition.contains("eq")) {
      if (value.equals(formFields.get(key).trim()))       returnValue=true;
    }
 else     if (condition.contains("starts-with")) {
      if (!formFields.containsKey(key))       return false;
      if (formFields.get(key).trim().startsWith(value))       returnValue=true;
    }
 else     if (condition.equals("content-length-range")) {
      long lower, upper, size;
      String[] rangeValues=value.split(",");
      if (rangeValues.length != 2) {
        throw new InvalidPolicyDocumentException(value,"content-length-range value could not be parsed properly");
      }
      lower=Long.valueOf(rangeValues[0]);
      upper=Long.valueOf(rangeValues[1]);
      size=Long.valueOf(formFields.get(ObjectStorageProperties.FormField.x_ignore_filecontentlength.toString()));
      returnValue=(lower <= size && size <= upper);
    }
  }
 catch (  Exception ex) {
    LOG.error("Unexpected error evaluating the policy for a partial match",ex);
    return false;
  }
  if (!returnValue)   LOG.trace("POST upload policy partial match on " + key + " failed");
  return returnValue;
}
