{
  final Map<String,Map<String,SummaryInfo>> infoMap=new HashMap<String,Map<String,SummaryInfo>>();
  Iterator<StorageUsageSnapshot> iter=scanLog(period);
  while (iter.hasNext()) {
    StorageUsageSnapshot snapshot=iter.next();
    long timestampMs=snapshot.getSnapshotKey().getTimestampMs().longValue();
    String outerCritVal=getAttributeValue(outerCriterion,snapshot.getSnapshotKey());
    Map<String,SummaryInfo> innerMap=null;
    if (infoMap.containsKey(outerCritVal)) {
      innerMap=infoMap.get(outerCritVal);
    }
 else {
      innerMap=new HashMap<String,SummaryInfo>();
      infoMap.put(outerCritVal,innerMap);
    }
    String innerCritVal=getAttributeValue(innerCriterion,snapshot.getSnapshotKey());
    if (innerMap.containsKey(innerCritVal)) {
      SummaryInfo info=innerMap.get(innerCritVal);
      long durationMs=timestampMs - info.getLastTimestamp();
      info.getSummary().addUsage(info.getLastData(),durationMs);
      info.setLastTimestamp(timestampMs);
      info.setLastData(snapshot.getUsageData());
    }
 else {
      SummaryInfo info=new SummaryInfo(timestampMs,new StorageUsageSummary(),snapshot.getUsageData());
      innerMap.put(innerCritVal,info);
    }
  }
  return convertTwoCriteria(infoMap);
}
