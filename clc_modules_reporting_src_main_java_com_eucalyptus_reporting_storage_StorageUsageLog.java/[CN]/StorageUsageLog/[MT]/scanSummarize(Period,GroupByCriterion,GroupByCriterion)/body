{
  final Map<String,Map<String,StorageUsageSummary>> results=new HashMap<String,Map<String,StorageUsageSummary>>();
  Iterator<StorageUsageSnapshot> iter=scanLog(period);
  while (iter.hasNext()) {
    StorageUsageSnapshot snapshot=iter.next();
    String outerCritVal=getAttributeValue(outerCriterion,snapshot);
    Map<String,StorageUsageSummary> innerMap=null;
    if (results.containsKey(outerCritVal)) {
      innerMap=results.get(outerCritVal);
    }
 else {
      innerMap=new HashMap<String,StorageUsageSummary>();
      results.put(outerCritVal,innerMap);
    }
    String innerCritVal=getAttributeValue(innerCriterion,snapshot);
    StorageUsageSummary summary=null;
    if (innerMap.containsKey(innerCritVal)) {
      summary=innerMap.get(innerCritVal);
    }
 else {
      summary=new StorageUsageSummary();
      innerMap.put(innerCritVal,summary);
    }
    summary.sumFrom(snapshot);
  }
  return results;
}
