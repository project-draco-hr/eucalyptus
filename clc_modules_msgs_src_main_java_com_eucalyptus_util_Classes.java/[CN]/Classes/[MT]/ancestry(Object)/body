{
  Function<Class,Class> parent=new Function<Class,Class>(){
    @Override public Class apply(    Class arg0){
      return arg0.getSuperclass();
    }
  }
;
  Function<Class,Class[]> parentInterfaces=new Function<Class,Class[]>(){
    @Override public Class[] apply(    Class arg0){
      return arg0.getInterfaces();
    }
  }
;
  List<Class> ret=Lists.newArrayList();
  for (Class t=(o instanceof Class ? (Class)o : o.getClass()); t != Object.class && ret.add(t); t=parent.apply(t)) {
    ret.addAll(Lists.newArrayList(parentInterfaces.apply(t)));
  }
  return ret;
}
