{
  final DiskImageDetail imageDetails=request.getImage();
  final DiskImageVolume volumeDetails=request.getVolume();
  Context ctx=Contexts.lookup();
  String conversionTaskId=ResourceIdentifiers.generateString("import-vol");
  conversionTaskId=conversionTaskId.toLowerCase();
  ConversionTask conversionTask=new ConversionTask();
  conversionTask.setConversionTaskId(conversionTaskId);
  conversionTask.setExpirationTime(new Date(Dates.daysFromNow(30).getTime()).toString());
  conversionTask.setState(ImportTaskState.NEW.getExternalVolumeStatusMessage());
  conversionTask.setStatusMessage(ImportTaskState.NEW.getExternalVolumeStatusMessage());
  final DiskImageVolumeDescription volumeImageDescription=new DiskImageVolumeDescription(){
{
      this.setSize(volumeDetails.getSize());
    }
  }
;
  final DiskImageDescription diskImageDescription=new DiskImageDescription(){
{
      this.setImportManifestUrl(imageDetails.getImportManifestUrl());
      this.setFormat(imageDetails.getFormat());
      this.setSize(imageDetails.getBytes());
    }
  }
;
  ImportVolumeTaskDetails volumeTaskDetails=new ImportVolumeTaskDetails(){
{
      this.setAvailabilityZone(request.getAvailabilityZone());
      this.setBytesConverted(0L);
      this.setDescription(request.getDescription());
    }
  }
;
  volumeTaskDetails.setImage(diskImageDescription);
  volumeTaskDetails.setVolume(volumeImageDescription);
  conversionTask.setImportVolume(volumeTaskDetails);
  return create(ctx.getUserFullName(),conversionTask);
}
