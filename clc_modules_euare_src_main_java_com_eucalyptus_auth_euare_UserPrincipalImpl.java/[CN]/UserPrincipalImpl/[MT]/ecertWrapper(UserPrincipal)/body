{
  return new NonNullFunction<CertificateEntity,Certificate>(){
    @Nonnull @Override public Certificate apply(    final CertificateEntity accessKey){
      return new Certificate(){
        @Override public String getCertificateId(){
          return accessKey.getCertificateId();
        }
        @Override public Boolean isActive(){
          return accessKey.isActive();
        }
        @Override public Boolean isRevoked(){
          return accessKey.isRevoked();
        }
        @Override public String getPem(){
          return accessKey.getPem();
        }
        @Override public X509Certificate getX509Certificate(){
          return X509CertHelper.toCertificate(getPem());
        }
        @Override public Date getCreateDate(){
          return accessKey.getCreateDate();
        }
        @Override public UserPrincipal getPrincipal(){
          return userPrincipal;
        }
      }
;
    }
  }
;
}
