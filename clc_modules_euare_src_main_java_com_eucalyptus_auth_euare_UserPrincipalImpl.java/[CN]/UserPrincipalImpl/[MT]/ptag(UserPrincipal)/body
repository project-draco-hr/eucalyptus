{
  final List<CharSequence> sequences=Lists.newArrayList();
  sequences.add(userPrincipal.getAccountAlias());
  sequences.add(userPrincipal.getAccountNumber());
  sequences.add(userPrincipal.getAuthenticatedId());
  sequences.add(userPrincipal.getCanonicalId());
  sequences.add(userPrincipal.getName());
  sequences.add(String.valueOf(userPrincipal.getPassword()));
  sequences.add(String.valueOf(userPrincipal.getPasswordExpires()));
  sequences.add(userPrincipal.getPath());
  sequences.add(userPrincipal.getUserId());
  sequences.add(String.valueOf(userPrincipal.isAccountAdmin()));
  sequences.add(String.valueOf(userPrincipal.isEnabled()));
  sequences.add(String.valueOf(userPrincipal.isSystemAdmin()));
  sequences.add(String.valueOf(userPrincipal.isSystemUser()));
  for (  final AccessKey key : userPrincipal.getKeys()) {
    sequences.add(key.getAccessKey());
    sequences.add(String.valueOf(key.isActive()));
  }
  for (  final Certificate certificate : userPrincipal.getCertificates()) {
    sequences.add(certificate.getCertificateId());
    sequences.add(String.valueOf(certificate.isActive()));
  }
  for (  final PolicyVersion policyVersion : userPrincipal.getPrincipalPolicies()) {
    sequences.add(policyVersion.getPolicyVersionId());
    sequences.add(policyVersion.getPolicyHash());
  }
  return BaseEncoding.base64().encode(Digest.SHA256.digestBinary(StandardCharsets.UTF_8.encode(CharBuffer.wrap(Strings.concat(sequences)))));
}
