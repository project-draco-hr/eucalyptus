{
  try {
    CreateAutoScalingGroupType msg=new CreateAutoScalingGroupType();
    msg.setAutoScalingGroupName(groupName);
    AvailabilityZones zones=new AvailabilityZones(availabilityZones);
    msg.setAvailabilityZones(zones);
    msg.setDesiredCapacity(capacity);
    msg.setMaxSize(capacity);
    msg.setMinSize(capacity);
    msg.setHealthCheckType("EC2");
    msg.setLaunchConfigurationName(launchConfigName);
    final Tags tags=new Tags();
    final TagType tag=new TagType();
    tag.setKey(tagKey);
    tag.setValue(tagValue);
    tag.setPropagateAtLaunch(true);
    tag.setResourceType("auto-scaling-group");
    tag.setResourceId(groupName);
    tags.setMember(Lists.newArrayList(tag));
    msg.setTags(tags);
    sendSyncToComonent(AutoScaling.class,msg);
  }
 catch (  Exception e) {
    LOG.warn(String.format("Failed to create auto scalling group name:%s, capacity:%d, launch config name:%s," + "tagKey:%s, tagValue:%s",groupName,capacity,launchConfigName,tagKey,tagValue));
    throw new EucalyptusCloudException("Failed to create auto scalling group",e);
  }
}
