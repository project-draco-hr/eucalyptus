{
  final long receivedEventMs=System.currentTimeMillis();
  if (e instanceof InstanceEvent) {
    InstanceEvent event=(InstanceEvent)e;
    final String uuid=event.getUuid();
    EntityWrapper entityWrapper=EntityWrapper.get(InstanceAttributes.class);
    try {
      InstanceAttributes insAttrs=new InstanceAttributes(uuid,event.getInstanceId(),event.getInstanceType(),event.getUserId(),event.getClusterName(),event.getAvailabilityZone());
      UsageData usageData=new UsageData(event.getCumulativeNetworkIoMegs(),event.getCumulativeDiskIoMegs());
      UsageSnapshot usageSnapshot=new UsageSnapshot(receivedEventMs,usageData);
      InstanceUsageSnapshot insUsageSnapshot=new InstanceUsageSnapshot(uuid,usageSnapshot);
      if (!recentlySeenUuids.contains(uuid)) {
        if (null != entityWrapper.get(InstanceAttributes.class,uuid)) {
          entityWrapper.save(insAttrs);
          log.debug("Wrote Reporting Instance:" + uuid);
        }
        recentlySeenUuids.add(uuid);
      }
      recentUsageSnapshots.add(insUsageSnapshot);
      if (receivedEventMs > (lastWriteMs + WRITE_INTERVAL_SECS * 1000)) {
        for (        InstanceUsageSnapshot ius : recentUsageSnapshots) {
          entityWrapper.save(ius);
          log.debug("Wrote Instance Usage:" + uuid);
        }
        recentUsageSnapshots.clear();
      }
      entityWrapper.commit();
    }
 catch (    Exception ex) {
      entityWrapper.rollback();
      log.error(ex);
    }
  }
}
