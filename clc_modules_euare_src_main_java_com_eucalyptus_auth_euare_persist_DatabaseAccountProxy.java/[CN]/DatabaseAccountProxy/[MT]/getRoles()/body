{
  final List<EuareRole> results=Lists.newArrayList();
  try (final TransactionResource db=Entities.transactionFor(RoleEntity.class)){
    List<RoleEntity> roles=Entities.criteriaQuery(RoleEntity.class).join(RoleEntity_.account).whereEqual(AccountEntity_.name,this.delegate.getName()).list();
    for (    final RoleEntity role : roles) {
      results.add(new DatabaseRoleProxy(role));
    }
    return results;
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to get roles for " + this.delegate.getName());
    throw new AuthException("Failed to get roles",e);
  }
}
