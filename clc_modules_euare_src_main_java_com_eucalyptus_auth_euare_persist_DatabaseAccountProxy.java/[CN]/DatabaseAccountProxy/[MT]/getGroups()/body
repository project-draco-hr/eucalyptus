{
  List<EuareGroup> results=Lists.newArrayList();
  try (final TransactionResource db=Entities.transactionFor(GroupEntity.class)){
    List<GroupEntity> groups=Entities.criteriaQuery(GroupEntity.class).whereEqual(GroupEntity_.userGroup,Boolean.FALSE).join(GroupEntity_.account).whereEqual(AccountEntity_.name,this.delegate.getName()).list();
    db.commit();
    for (    GroupEntity g : groups) {
      results.add(new DatabaseGroupProxy(g,Suppliers.ofInstance(getAccountNumber())));
    }
    return results;
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to get groups for " + this.delegate.getName());
    throw new AuthException("Failed to get groups",e);
  }
}
