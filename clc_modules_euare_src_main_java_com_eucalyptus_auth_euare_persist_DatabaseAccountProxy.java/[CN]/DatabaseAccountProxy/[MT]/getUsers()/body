{
  List<EuareUser> results=Lists.newArrayList();
  try (final TransactionResource db=Entities.transactionFor(GroupEntity.class)){
    List<UserEntity> users=Entities.criteriaQuery(UserEntity.class).join(UserEntity_.groups).whereEqual(GroupEntity_.userGroup,Boolean.TRUE).join(GroupEntity_.account).whereEqual(AccountEntity_.name,this.delegate.getName()).list();
    db.commit();
    for (    UserEntity u : users) {
      results.add(new DatabaseUserProxy(u));
    }
    return results;
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to get users for " + this.delegate.getName());
    throw new AuthException("Failed to get users for account",e);
  }
}
