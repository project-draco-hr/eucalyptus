{
synchronized (getLock()) {
    try {
      GROUP_NAME_CHECKER.check(instanceProfileName);
    }
 catch (    InvalidValueException e) {
      Debugging.logError(LOG,e,"Invalid instance profile name " + instanceProfileName);
      throw new AuthException(AuthException.INVALID_NAME,e);
    }
    try {
      PATH_CHECKER.check(path);
    }
 catch (    InvalidValueException e) {
      Debugging.logError(LOG,e,"Invalid path " + path);
      throw new AuthException(AuthException.INVALID_PATH,e);
    }
    if (DatabaseAuthUtils.checkInstanceProfileExists(instanceProfileName,this.delegate.getName())) {
      throw new AuthException(AuthException.INSTANCE_PROFILE_ALREADY_EXISTS);
    }
    try (final TransactionResource db=Entities.transactionFor(AccountEntity.class)){
      final AccountEntity account=DatabaseAuthUtils.getUnique(AccountEntity.class,"name",this.delegate.getName());
      final InstanceProfileEntity newInstanceProfile=new InstanceProfileEntity(instanceProfileName);
      newInstanceProfile.setPath(path);
      newInstanceProfile.setAccount(account);
      final InstanceProfileEntity persistedInstanceProfile=Entities.persist(newInstanceProfile);
      db.commit();
      return new DatabaseInstanceProfileProxy(persistedInstanceProfile);
    }
 catch (    Exception e) {
      Debugging.logError(LOG,e,"Failed to add instance profile: " + instanceProfileName + " in "+ this.delegate.getName());
      throw new AuthException(AuthException.INSTANCE_PROFILE_CREATE_FAILURE,e);
    }
  }
}
