{
  Cluster cluster=Clusters.getInstance().lookup(config.getName());
  ClusterCertificateHandler cc;
  try {
    ClusterUtil.deregisterClusterStateHandler(cluster,new ClusterCertificateHandler(cluster));
    ClusterUtil.deregisterClusterStateHandler(cluster,new NetworkStateHandler(cluster));
    ClusterUtil.deregisterClusterStateHandler(cluster,new LogStateHandler(cluster));
    ClusterUtil.deregisterClusterStateHandler(cluster,new ResourceStateHandler(cluster));
    ClusterUtil.deregisterClusterStateHandler(cluster,new VmStateHandler(cluster));
    ClusterUtil.deregisterClusterStateHandler(cluster,new AddressStateHandler(cluster));
  }
 catch (  BindingException e) {
    LOG.error(e,e);
  }
catch (  EventVetoedException e) {
    LOG.error(e,e);
  }
  for (  Group g : Groups.listAllGroups()) {
    for (    Authorization auth : g.getAuthorizations()) {
      if (auth instanceof AvailabilityZonePermission && config.getName().equals(auth.getValue())) {
        g.removeAuthorization(auth);
      }
    }
  }
  String directory=SubDirectory.KEYS.toString() + File.separator + config.getName();
  File keyDir=new File(directory);
  if (keyDir.exists()) {
    for (    File f : keyDir.listFiles()) {
      if (f.delete()) {
        LOG.info("Removing cluster key file: " + f.getAbsolutePath());
      }
 else {
        LOG.info("Failed to remove cluster key file: " + f.getAbsolutePath());
      }
    }
    if (keyDir.delete()) {
      LOG.info("Removing cluster key directory: " + keyDir.getAbsolutePath());
    }
 else {
      LOG.info("Failed to remove cluster key directory: " + keyDir.getAbsolutePath());
    }
  }
  super.fireStop(config);
}
