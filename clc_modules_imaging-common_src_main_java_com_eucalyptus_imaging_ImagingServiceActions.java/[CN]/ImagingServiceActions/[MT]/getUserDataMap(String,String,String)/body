{
  Map<String,String> kvMap=new HashMap<String,String>();
  if (ntpServer != null)   kvMap.put("ntp_server",ntpServer);
  if (logServer != null)   kvMap.put("log_server",logServer);
  if (logServerPort != null)   kvMap.put("log_server_port",logServerPort);
  kvMap.put("imaging_service_url",String.format("imaging.%s",DNSProperties.DOMAIN));
  kvMap.put("euare_service_url",String.format("euare.%s",DNSProperties.DOMAIN));
  kvMap.put("compute_service_url",String.format("compute.%s",DNSProperties.DOMAIN));
  final List<String> dnsHosts=Lists.newArrayList(Iterables.transform(ServiceConfigurations.list(Eucalyptus.class),new Function<ServiceConfiguration,String>(){
    @Override public String apply(    ServiceConfiguration arg0){
      return arg0.getInetAddress().getHostAddress();
    }
  }
));
  final List<String> enabledDns=Lists.newArrayList(Collections2.transform(Topology.enabledServices(Eucalyptus.class),new Function<ServiceConfiguration,String>(){
    @Override public String apply(    ServiceConfiguration arg0){
      return arg0.getInetAddress().getHostAddress();
    }
  }
));
  final StringBuilder sbDns=new StringBuilder();
  for (  final String address : enabledDns) {
    if (sbDns.length() <= 0)     sbDns.append(address);
 else     sbDns.append("," + address);
  }
  for (  final String address : dnsHosts) {
    if (!enabledDns.contains(address)) {
      if (sbDns.length() <= 0)       sbDns.append(address);
 else       sbDns.append("," + address);
    }
  }
  kvMap.put("dns_server",sbDns.toString());
  final StringBuilder sb=new StringBuilder();
  for (  String key : kvMap.keySet()) {
    String value=kvMap.get(key);
    sb.append(String.format("%s=%s;",key,value));
  }
  return sb.toString();
}
