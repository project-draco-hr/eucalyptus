{
  AWSEC2NetworkInterfaceResourceAction action=(AWSEC2NetworkInterfaceResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  DescribeNetworkInterfacesType describeNetworkInterfacesType=MessageHelper.createMessage(DescribeNetworkInterfacesType.class,action.info.getEffectiveUserId());
  NetworkInterfaceIdSetType networkInterfaceIdSet=action.getNetworkInterfaceIdSetType(action.info.getPhysicalResourceId());
  describeNetworkInterfacesType.setNetworkInterfaceIdSet(networkInterfaceIdSet);
  DescribeNetworkInterfacesResponseType describeNetworkInterfacesResponseType=AsyncRequests.<DescribeNetworkInterfacesType,DescribeNetworkInterfacesResponseType>sendSync(configuration,describeNetworkInterfacesType);
  if (describeNetworkInterfacesResponseType.getNetworkInterfaceSet().getItem().size() == 0) {
    throw new ValidationFailedException("Network interface " + action.info.getPhysicalResourceId() + " not yet available");
  }
  if (!"available".equals(describeNetworkInterfacesResponseType.getNetworkInterfaceSet().getItem().get(0).getStatus())) {
    throw new ValidationFailedException("Volume " + action.info.getPhysicalResourceId() + " not yet available");
  }
  return action;
}
