{
  AWSEC2NetworkInterfaceResourceAction action=(AWSEC2NetworkInterfaceResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  List<EC2Tag> tags=TagHelper.getEC2StackTags(action.info,action.getStackEntity());
  if (action.properties.getTags() != null && !action.properties.getTags().isEmpty()) {
    TagHelper.checkReservedEC2TemplateTags(action.properties.getTags());
    tags.addAll(action.properties.getTags());
  }
  CreateTagsType createTagsType=MessageHelper.createPrivilegedMessage(CreateTagsType.class,action.info.getEffectiveUserId());
  createTagsType.setResourcesSet(Lists.newArrayList(action.info.getPhysicalResourceId()));
  createTagsType.setTagSet(EC2Helper.createTagSet(tags));
  AsyncRequests.<CreateTagsType,CreateTagsResponseType>sendSync(configuration,createTagsType);
  return action;
}
