{
  DescribeSubnetsType describeSubnetsType=MessageHelper.createMessage(DescribeSubnetsType.class,info.getEffectiveUserId());
  describeSubnetsType.setSubnetSet(makeSubnetSet(properties.getSubnetId()));
  DescribeSubnetsResponseType describeSubnetsResponseType=AsyncRequests.sendSync(configuration,describeSubnetsType);
  if (describeSubnetsResponseType == null || describeSubnetsResponseType.getSubnetSet() == null || describeSubnetsResponseType.getSubnetSet().getItem() == null || describeSubnetsResponseType.getSubnetSet().getItem().size() != 1) {
    throw new ValidationErrorException("Subnet id " + properties.getSubnetId() + " matches either zero or more than one subnet");
  }
  String vpcId=describeSubnetsResponseType.getSubnetSet().getItem().get(0).getVpcId();
  DescribeSecurityGroupsType describeSecurityGroupsType=MessageHelper.createMessage(DescribeSecurityGroupsType.class,info.getEffectiveUserId());
  describeSecurityGroupsType.getFilterSet().add(Filter.filter("vpc-id",vpcId));
  describeSecurityGroupsType.getFilterSet().add(Filter.filter("groupName","default"));
  DescribeSecurityGroupsResponseType describeSecurityGroupsResponseType=AsyncRequests.sendSync(configuration,describeSecurityGroupsType);
  if (describeSecurityGroupsResponseType == null || describeSecurityGroupsResponseType.getSecurityGroupInfo() == null || describeSecurityGroupsResponseType.getSecurityGroupInfo().size() != 1) {
    throw new ValidationErrorException("Could not find unique default security group for vpc " + vpcId);
  }
  return describeSecurityGroupsResponseType.getSecurityGroupInfo().get(0).getGroupId();
}
