{
  List<String> macs=new ArrayList<String>();
  List<String> networkNames=new ArrayList<String>();
  for (  String instanceId : token.getInstanceIds())   macs.add(VmInstances.getAsMAC(instanceId));
  int vlan=-1;
  for (  Network net : vmAllocInfo.getNetworks()) {
    networkNames.add(net.getNetworkName());
    if (vlan < 0)     vlan=Networks.getInstance().lookup(net.getName()).getToken(token.getCluster()).getVlan();
  }
  if (vlan < 0)   vlan=9;
  RunInstancesType request=this.vmAllocInfo.getRequest();
  VmImageInfo imgInfo=this.vmAllocInfo.getImageInfo();
  VmTypeInfo vmInfo=this.vmAllocInfo.getVmTypeInfo();
  String rsvId=this.vmAllocInfo.getReservationId();
  VmKeyInfo keyInfo=this.vmAllocInfo.getKeyInfo();
  ArrayList<String> networkIndexes=Lists.newArrayList();
  for (  Integer index : token.getPrimaryNetwork().getIndexes()) {
    networkIndexes.add(index.toString());
  }
  VmRunType run=new VmRunType(request,rsvId,request.getUserData(),token.getAmount(),imgInfo,vmInfo,keyInfo,token.getInstanceIds(),macs,vlan,networkNames,networkIndexes);
  LOG.debug(LogUtil.subheader(run.toString()));
  this.msgMap.put(State.CREATE_VMS,QueuedEvent.make(new VmRunCallback(this,token),run));
}
