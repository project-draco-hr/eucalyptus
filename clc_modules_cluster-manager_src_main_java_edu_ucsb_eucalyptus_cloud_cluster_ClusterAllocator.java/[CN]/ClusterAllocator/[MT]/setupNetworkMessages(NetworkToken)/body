{
  if (networkToken != null) {
    StartNetworkType msg=new StartNetworkType(this.vmAllocInfo.getRequest(),networkToken.getVlan(),networkToken.getNetworkName());
    msg.setClusterControllers(Lists.newArrayList(Clusters.getInstance().getClusterAddresses()));
    StartNetworkCallback callback=new StartNetworkCallback(this.cluster.getConfiguration(),this,networkToken);
    QueuedEvent<StartNetworkType> event=new QueuedEvent<StartNetworkType>(callback,msg);
    this.msgMap.put(State.CREATE_NETWORK,event);
  }
  try {
    Network network=Networks.getInstance().lookup(networkToken.getName());
    LOG.warn("Setting up rules for: " + network.getName());
    LOG.debug(network);
    if (!network.getRules().isEmpty()) {
      QueuedEvent event=new QueuedEvent<ConfigureNetworkType>(new ConfigureNetworkCallback(this.cluster.getConfiguration()),new ConfigureNetworkType(this.vmAllocInfo.getRequest(),network.getRules()));
      this.msgMap.put(State.CREATE_NETWORK_RULES,event);
    }
    for (    Network otherNetwork : Networks.getInstance().listValues()) {
      if (otherNetwork.isPeer(network.getUserName(),network.getNetworkName())) {
        LOG.warn("Need to refresh rules for incoming named network ingress on: " + otherNetwork.getName());
        LOG.debug(otherNetwork);
        ConfigureNetworkType msg=new ConfigureNetworkType(otherNetwork.getRules());
        msg.setUserId(otherNetwork.getUserName());
        msg.setEffectiveUserId(Component.eucalyptus.name());
        this.msgMap.put(State.CREATE_NETWORK_RULES,new QueuedEvent<ConfigureNetworkType>(new ConfigureNetworkCallback(this.cluster.getConfiguration()),msg));
      }
    }
  }
 catch (  NoSuchElementException e) {
  }
}
