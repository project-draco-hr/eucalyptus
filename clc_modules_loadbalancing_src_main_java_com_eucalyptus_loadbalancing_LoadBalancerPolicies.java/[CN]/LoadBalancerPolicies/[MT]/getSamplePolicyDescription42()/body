{
  if (samplePolicyDescription.isEmpty()) {
    samplePolicyDescription=getSamplePolicyDescription40();
    PolicyDescription policyDesc=null;
    String[] policyFiles=null;
    final Set<String> policyNames=Sets.newHashSet();
    final String dir=String.format("%s/elb-security-policy",BaseDirectory.CONF);
    try {
      final File policyDirectory=new File(dir);
      policyFiles=policyDirectory.list(new FilenameFilter(){
        @Override public boolean accept(        File dir,        String name){
          if (name != null && name.toLowerCase().endsWith(".json"))           return true;
 else           return false;
        }
      }
);
      if (policyFiles == null)       throw new Exception("The directory '" + dir + "' is not found");
    }
 catch (    final Exception ex) {
      LOG.error("Failed to find ELB security policy files",ex);
    }
    Date latest=new Date(Long.MIN_VALUE);
    for (    final String policyFileName : policyFiles) {
      final String policyFilePath=String.format("%s/%s",dir,policyFileName);
      if ((policyDesc=getPolicyDescription(policyFilePath)) != null) {
        if (!policyNames.contains(policyDesc.getPolicyName())) {
          samplePolicyDescription.add(policyDesc);
          policyNames.add(policyDesc.getPolicyName());
          try {
            final SimpleDateFormat df=new SimpleDateFormat("yyyy-MM");
            final Date policyDate=df.parse(policyDesc.getPolicyName().substring(policyDesc.getPolicyName().length() - 7));
            if (policyDate.after(latest)) {
              latest=policyDate;
              LATEST_SECURITY_POLICY_NAME=policyDesc.getPolicyName();
            }
          }
 catch (          final Exception ex) {
            ;
          }
        }
 else {
          LOG.warn("Policy with dupilcate policy name found: " + policyDesc.getPolicyName());
        }
      }
    }
  }
  return samplePolicyDescription;
}
