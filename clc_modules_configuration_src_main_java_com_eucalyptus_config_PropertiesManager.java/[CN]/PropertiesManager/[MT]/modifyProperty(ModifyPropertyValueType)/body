{
  ModifyPropertyValueResponseType reply=request.getReply();
  if (INTERNAL_OP.equals(request.getName())) {
    if (!Contexts.lookup().hasAdministrativePrivileges()) {
      throw new EucalyptusCloudException("You are not authorized to interact with this service.");
    }
    LOG.debug("Performing euca operation: \n" + request.getValue());
    try {
      reply.setName(INTERNAL_OP);
      reply.setValue("" + Groovyness.eval(request.getValue()));
      reply.setOldValue("executed successfully.");
    }
 catch (    Exception ex) {
      LOG.error(ex,ex);
      reply.setName(INTERNAL_OP);
      reply.setOldValue("euca operation failed because of: " + ex.getMessage());
      reply.setValue(Exceptions.string(ex));
    }
  }
 else {
    try {
      ConfigurableProperty entry=PropertyDirectory.getPropertyEntry(request.getName());
      String oldValue="********";
      if (!entry.getWidgetType().equals(ConfigurableFieldType.KEYVALUEHIDDEN)) {
        oldValue=entry.getValue();
      }
      reply.setOldValue(oldValue);
      Boolean reset=request.getReset();
      if (reset != null) {
        if (Boolean.TRUE.equals(reset)) {
          entry.setValue(entry.getDefaultValue());
        }
      }
 else {
        try {
          String inValue=request.getValue();
          entry.setValue((inValue == null) ? "" : inValue);
        }
 catch (        Exception e) {
          entry.setValue(oldValue);
          Exceptions.findAndRethrow(e,EucalyptusCloudException.class);
          throw e;
        }
      }
      reply.setValue(entry.getValue());
      reply.setName(request.getName());
    }
 catch (    IllegalAccessException e) {
      throw new EucalyptusCloudException("Failed to set property: " + e.getMessage());
    }
catch (    EucalyptusCloudException e) {
      throw e;
    }
catch (    Throwable e) {
      throw new EucalyptusCloudException(e);
    }
  }
  return reply;
}
