{
  final DescribeAccountAttributesResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final AccountFullName accountFullName=ctx.getUserFullName().asAccountFullName();
  final List<String> platforms=Lists.newArrayList();
  final Set<NetworkingFeature> features=Networking.getInstance().describeFeatures();
  if (features.contains(NetworkingFeature.Classic))   platforms.add("EC2");
  if (features.contains(NetworkingFeature.Vpc))   platforms.add("VPC");
  String vpcId="none";
  try {
    vpcId=vpcs.lookupDefault(accountFullName,CloudMetadatas.toDisplayName());
  }
 catch (  VpcMetadataNotFoundException e) {
  }
catch (  Exception e) {
    throw handleException(e);
  }
  final Map<String,List<String>> attributes=ImmutableMap.of("supported-platforms",platforms,"default-vpc",Lists.newArrayList(vpcId));
  final Set<String> requestedAttributes=Sets.newHashSet(request.attributeNames());
  for (  final Map.Entry<String,List<String>> attributeEntry : attributes.entrySet()) {
    if (requestedAttributes.isEmpty() || requestedAttributes.contains(attributeEntry.getKey())) {
      reply.getAccountAttributeSet().getItem().add(new AccountAttributeSetItemType(attributeEntry.getKey(),attributeEntry.getValue()));
    }
  }
  return reply;
}
