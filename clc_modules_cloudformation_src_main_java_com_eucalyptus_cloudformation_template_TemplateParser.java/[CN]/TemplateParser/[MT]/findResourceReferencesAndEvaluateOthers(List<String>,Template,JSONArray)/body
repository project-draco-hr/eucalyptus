{
  for (int i=0; i < parentArray.size(); i++) {
    Object jsonArrayIndexObj=parentArray.get(i);
    if (jsonArrayIndexObj instanceof JSONArray) {
      findResourceReferencesAndEvaluateOthers(resourceReferences,template,(JSONArray)jsonArrayIndexObj);
    }
 else     if (jsonArrayIndexObj instanceof JSONObject) {
      JSONObject jsonObject=(JSONObject)jsonArrayIndexObj;
      if (jsonObject.keySet().size() == 1 && jsonObject.containsKey("Ref")) {
        Object refKeyObj=jsonObject.get("Ref");
        if (!(refKeyObj instanceof String)) {
          throw new ValidationErrorException("All References must be of type string");
        }
        String refKey=(String)refKeyObj;
        if (!template.getReferenceMap().containsKey(refKey)) {
          throw new ValidationErrorException("Undefined reference " + refKey);
        }
        Template.Reference reference=template.getReferenceMap().get(refKey);
        if (reference.getReferenceType() == Template.ReferenceType.Resource) {
          resourceReferences.add(refKey);
        }
 else {
          parentArray.set(i,reference.getReferenceValue());
        }
      }
 else {
        findResourceReferencesAndEvaluateOthers(resourceReferences,template,jsonObject);
      }
    }
 else {
    }
  }
}
