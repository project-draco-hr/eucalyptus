{
  Map<String,Map<String,Map<String,String>>> mapping=template.getMapping();
  JsonNode mappingsJsonNode=JsonHelper.checkObject(templateJsonNode,TemplateSection.Mappings.toString());
  if (mappingsJsonNode == null)   return;
  for (  String mapName : Lists.newArrayList(mappingsJsonNode.fieldNames())) {
    if (mapName.length() > Limits.MAPPING_NAME_MAX_LENGTH_CHARS) {
      throw new ValidationErrorException("Mapping name " + mapName + " exceeds the maximum number of allowed characters ("+ Limits.MAPPING_NAME_MAX_LENGTH_CHARS+ ")");
    }
    JsonNode mappingJsonNode=JsonHelper.checkObject(mappingsJsonNode,mapName,"Every " + TemplateSection.Mappings + " member "+ mapName+ " must be a map");
    for (    String mapKey : Lists.newArrayList(mappingJsonNode.fieldNames())) {
      if (mapKey.length() > Limits.MAPPING_NAME_MAX_LENGTH_CHARS) {
        throw new ValidationErrorException("Mapping key " + mapKey + " exceeds the maximum number of allowed characters ("+ Limits.MAPPING_NAME_MAX_LENGTH_CHARS+ ")");
      }
      JsonNode attributesJsonNode=JsonHelper.checkObject(mappingJsonNode,mapKey,"Every " + TemplateSection.Mappings + " member "+ mapKey+ " must be a map");
      if (Lists.newArrayList(attributesJsonNode.fieldNames()).size() > Limits.MAX_ATTRIBUTES_PER_MAPPING) {
        throw new ValidationErrorException("Mapping with key " + mapKey + " has more than "+ Limits.MAX_ATTRIBUTES_PER_MAPPING+ ", the max allowed.");
      }
      for (      String attribute : Lists.newArrayList(attributesJsonNode.fieldNames())) {
        if (attribute.length() > Limits.MAPPING_NAME_MAX_LENGTH_CHARS) {
          throw new ValidationErrorException("Attribute " + attribute + " exceeds the maximum number of allowed characters ("+ Limits.MAPPING_NAME_MAX_LENGTH_CHARS+ ")");
        }
        JsonNode valueJsonNode=JsonHelper.checkStringOrArray(attributesJsonNode,attribute,"Every " + TemplateSection.Mappings + " attribute must be a String or a List.");
        if (!mapping.containsKey(mapName)) {
          mapping.put(mapName,Maps.<String,Map<String,String>>newLinkedHashMap());
        }
        if (!mapping.get(mapName).containsKey(mapKey)) {
          mapping.get(mapName).put(mapKey,Maps.<String,String>newLinkedHashMap());
        }
        mapping.get(mapName).get(mapKey).put(attribute,JsonHelper.getStringFromJsonNode(valueJsonNode));
      }
    }
  }
  if (mapping.keySet().size() > Limits.MAX_MAPPINGS_PER_TEMPLATE) {
    throw new ValidationErrorException("Mappings exceed maximum allowed of " + Limits.MAX_MAPPINGS_PER_TEMPLATE + " mappings per template");
  }
  template.setMapping(mapping);
}
