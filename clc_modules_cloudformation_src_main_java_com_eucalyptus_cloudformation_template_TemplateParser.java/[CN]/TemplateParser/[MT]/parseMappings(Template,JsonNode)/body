{
  JsonNode mappingsJsonNode=JsonHelper.checkObject(templateJsonNode,TemplateSection.Mappings.toString());
  if (mappingsJsonNode == null)   return;
  for (  String mapName : Lists.newArrayList(mappingsJsonNode.fieldNames())) {
    JsonNode mappingJsonNode=JsonHelper.checkObject(mappingsJsonNode,mapName,"Every " + TemplateSection.Mappings + " member "+ mapName+ " must be a map");
    for (    String mapKey : Lists.newArrayList(mappingJsonNode.fieldNames())) {
      JsonNode attributesJsonNode=JsonHelper.checkObject(mappingJsonNode,mapKey,"Every " + TemplateSection.Mappings + " member "+ mapKey+ " must be a map");
      for (      String attribute : Lists.newArrayList(attributesJsonNode.fieldNames())) {
        JsonNode valueJsonNode=JsonHelper.checkStringOrArray(attributesJsonNode,attribute,"Every " + TemplateSection.Mappings + " attribute must be a String or a List.");
        if (!template.getMapping().containsKey(mapName)) {
          template.getMapping().put(mapName,Maps.<String,Map<String,String>>newHashMap());
        }
        if (!template.getMapping().get(mapName).containsKey(mapKey)) {
          template.getMapping().get(mapName).put(mapKey,Maps.<String,String>newHashMap());
        }
        template.getMapping().get(mapName).get(mapKey).put(attribute,JsonHelper.getStringFromJsonNode(valueJsonNode));
      }
    }
  }
}
