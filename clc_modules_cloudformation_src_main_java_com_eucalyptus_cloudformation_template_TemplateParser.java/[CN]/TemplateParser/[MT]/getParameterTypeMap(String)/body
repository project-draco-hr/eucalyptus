{
  Map<String,ParameterType> returnVal=Maps.newHashMap();
  JsonNode templateJsonNode=null;
  try {
    templateJsonNode=objectMapper.readTree(templateBody);
  }
 catch (  IOException ex) {
    throw new ValidationErrorException(ex.getMessage());
  }
  if (!templateJsonNode.isObject()) {
    throw new ValidationErrorException("Template body is not a JSON object");
  }
  JsonNode parametersJsonNode=JsonHelper.checkObject(templateJsonNode,TemplateParser.TemplateSection.Parameters.toString());
  if (parametersJsonNode != null) {
    for (    String parameterKey : Lists.newArrayList(parametersJsonNode.fieldNames())) {
      JsonNode parameterJsonNode=JsonHelper.checkObject(parametersJsonNode,parameterKey,"Any " + TemplateParser.TemplateSection.Parameters + " member must be a JSON object.");
      if (parameterJsonNode != null) {
        ParameterParser.validateParameterKeys(parameterJsonNode);
        returnVal.put(parameterKey,ParameterParser.parseType(parameterJsonNode));
      }
    }
  }
  return returnVal;
}
