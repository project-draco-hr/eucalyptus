{
  if (templateParameter.getMinLength() != null) {
    throw new ValidationErrorException("Template error: Parameter '" + parameterKey + "' "+ ParameterKey.MinLength+ " must be on a parameter of type String");
  }
  if (templateParameter.getMaxLength() != null) {
    throw new ValidationErrorException("Template error: Parameter '" + parameterKey + "' "+ ParameterKey.MaxLength+ " must be on a parameter of type String");
  }
  if (templateParameter.getAllowedPattern() != null) {
    throw new ValidationErrorException("Template error: Parameter '" + parameterKey + "' "+ ParameterKey.AllowedPattern+ " must be on a parameter of type String");
  }
  if (templateParameter.getMaxValue() != null && templateParameter.getMinValue() != null && templateParameter.getMaxValue() < templateParameter.getMinValue()) {
    throw new ValidationErrorException("Template error: Parameter '" + parameterKey + "' "+ ParameterKey.MinValue+ " must be less than "+ ParameterKey.MaxValue+ ".");
  }
  Double valueDouble=null;
  try {
    valueDouble=Double.parseDouble(templateParameter.getParameterValue());
  }
 catch (  NumberFormatException ex) {
    throw new ValidationErrorException(templateParameter.getConstraintDescription() != null ? templateParameter.getConstraintDescription() : "Template error: Parameter '" + parameterKey + "' must be a number");
  }
  if (templateParameter.getMinValue() != null && templateParameter.getMinValue() > valueDouble) {
    throw new ValidationErrorException(templateParameter.getConstraintDescription() != null ? templateParameter.getConstraintDescription() : "Template error: Parameter '" + parameterKey + "' must be a number not less than "+ templateParameter.getMinValue());
  }
  if (templateParameter.getMaxValue() != null && templateParameter.getMaxValue() < valueDouble) {
    throw new ValidationErrorException(templateParameter.getConstraintDescription() != null ? templateParameter.getConstraintDescription() : "Template error: Parameter '" + parameterKey + "' must be a number not greater than "+ templateParameter.getMaxValue());
  }
}
