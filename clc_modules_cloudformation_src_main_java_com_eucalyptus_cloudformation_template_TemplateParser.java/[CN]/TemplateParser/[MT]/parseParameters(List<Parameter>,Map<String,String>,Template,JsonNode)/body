{
  if (userParameters != null) {
    for (    Parameter userParameter : userParameters) {
      paramMap.put(userParameter.getParameterKey(),userParameter.getParameterValue());
    }
  }
  JsonNode parametersJsonNode=JsonHelper.checkObject(templateJsonNode,TemplateSection.Parameters.toString());
  if (parametersJsonNode == null)   return;
  Set<String> parameterNames=Sets.newHashSet(parametersJsonNode.fieldNames());
  Set<String> noValueParameters=Sets.newHashSet();
  for (  String parameterName : parameterNames) {
    JsonNode parameterJsonNode=JsonHelper.checkObject(parametersJsonNode,parameterName,"Any " + TemplateSection.Parameters + " member must be a JSON object.");
    parseParameter(parameterName,parameterJsonNode,paramMap,template,noValueParameters);
  }
  if (!noValueParameters.isEmpty()) {
    throw new ValidationErrorException("Parameters: " + noValueParameters + " must have values");
  }
  Set<String> userParamKeys=Sets.newHashSet();
  Set<String> templateParamKeys=Sets.newHashSet();
  if (userParameters != null) {
    userParamKeys.addAll(paramMap.keySet());
  }
  if (parametersJsonNode != null) {
    templateParamKeys.addAll(Sets.newHashSet(parametersJsonNode.fieldNames()));
  }
  userParamKeys.removeAll(templateParamKeys);
  if (!userParamKeys.isEmpty()) {
    throw new ValidationErrorException("Parameters: " + userParamKeys + " do not exist in the template");
  }
}
