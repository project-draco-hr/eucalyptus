{
  if (templateParameter.getParameterValue() != null) {
    if (templateParameter.getAllowedValues() != null && !Arrays.asList(templateParameter.getAllowedValues()).contains(templateParameter.getParameterValue())) {
      throw new ValidationErrorException(templateParameter.getConstraintDescription() != null ? templateParameter.getConstraintDescription() : "Template error: Parameter '" + parameterName + "' must be one of "+ ParameterKey.AllowedValues);
    }
  }
  JsonNode referenceValue=null;
switch (parameterType) {
case Number:
    parseNumberParameter(parameterName,templateParameter);
  referenceValue=new TextNode(templateParameter.getParameterValue());
break;
case String:
parseStringParameter(parameterName,templateParameter);
referenceValue=new TextNode(templateParameter.getParameterValue());
break;
case CommaDelimitedList:
parseCommaDelimitedListParameter(parameterName,templateParameter);
referenceValue=objectMapper.createArrayNode();
StringTokenizer tokenizer=new StringTokenizer(templateParameter.getParameterValue(),",");
while (tokenizer.hasMoreTokens()) {
((ArrayNode)referenceValue).add(tokenizer.nextToken());
}
break;
default :
throw new ValidationErrorException("Template format error: Unrecognized parameter type: " + parameterType);
}
return referenceValue;
}
