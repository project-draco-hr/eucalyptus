{
  Map<String,Method> setterMap=new HashMap<String,Method>();
  try {
    Object firstRow=conn.firstRow("SELECT * FROM " + entityKey);
    if (firstRow == null) {
      LOG.error("Unable to find table: " + entityKey);
      return null;
    }
    if (firstRow instanceof Map) {
      Set<String> columnNames=((Map)firstRow).keySet();
      Class definingClass=entityMap.get(entityKey);
      Field[] fields=definingClass.getDeclaredFields();
      for (      String column : columnNames) {
        for (        Field f : fields) {
          if (f.isAnnotationPresent(Column.class)) {
            Column annotClass=(Column)f.getAnnotation(Column.class);
            if (((String)column).toLowerCase().equals(annotClass.name().toLowerCase())) {
              String baseMethodName=f.getName().substring(0,1).toUpperCase() + f.getName().substring(1);
              try {
                Class[] classes=new Class[1];
                classes[0]=f.getType();
                Method setMethod=definingClass.getDeclaredMethod("set" + baseMethodName,classes);
                setterMap.put(column,setMethod);
              }
 catch (              SecurityException e) {
                LOG.error(e);
              }
catch (              NoSuchMethodException e) {
                LOG.error(e);
              }
              break;
            }
          }
        }
        if (setterMap.containsKey(column)) {
          LOG.info(column + " is set by: " + setterMap.get(column).getName());
        }
 else {
          LOG.info("No corresponding field found for: " + column);
        }
      }
    }
  }
 catch (  SQLException e) {
    LOG.error(e);
  }
  return setterMap;
}
