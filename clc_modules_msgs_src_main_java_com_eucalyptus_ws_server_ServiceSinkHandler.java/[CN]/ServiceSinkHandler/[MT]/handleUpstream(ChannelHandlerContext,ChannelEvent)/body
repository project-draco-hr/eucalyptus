{
  if (Logs.EXTREME)   LOG.trace(this.getClass().getSimpleName() + "[incoming]: " + e);
  if (e instanceof ExceptionEvent) {
    this.exceptionCaught(ctx,(ExceptionEvent)e);
  }
 else   if (e instanceof MessageEvent) {
    this.startTime.compareAndSet(0l,System.currentTimeMillis());
    final MessageEvent event=(MessageEvent)e;
    if (event.getMessage() instanceof MappingHttpMessage) {
      final MappingHttpMessage request=(MappingHttpMessage)event.getMessage();
      final User user=Contexts.lookup(request.getCorrelationId()).getUser();
      final BaseMessage msg=(BaseMessage)request.getMessage();
      final String userAgent=request.getHeader(HttpHeaders.Names.USER_AGENT);
      if (msg.getCorrelationId() == null) {
        try {
        }
 catch (        Exception e1) {
        }
      }
      if ((userAgent != null) && userAgent.matches(".*EucalyptusAdminAccess") && msg.getClass().getSimpleName().startsWith("Describe")) {
      }
 else       if ((user != null) && (this.msgReceiver == null)) {
      }
      EventRecord.here(ServiceSinkHandler.class,EventType.MSG_RECEIVED,msg.getClass().getSimpleName()).trace();
      if (this.msgReceiver == null) {
        ServiceSinkHandler.dispatchRequest(msg);
      }
 else       if ((user == null) || ((user != null) && user.isSystemAdmin())) {
        ServiceSinkHandler.dispatchRequest(msg);
      }
 else {
        Contexts.clear(Contexts.lookup(msg.getCorrelationId()));
        ctx.getChannel().write(new MappingHttpResponse(request.getProtocolVersion(),HttpResponseStatus.FORBIDDEN));
      }
    }
 else     if (e instanceof IdleStateEvent) {
      LOG.warn("Closing idle connection: " + e);
      e.getFuture().addListener(ChannelFutureListener.CLOSE);
      ctx.sendUpstream(e);
    }
  }
}
