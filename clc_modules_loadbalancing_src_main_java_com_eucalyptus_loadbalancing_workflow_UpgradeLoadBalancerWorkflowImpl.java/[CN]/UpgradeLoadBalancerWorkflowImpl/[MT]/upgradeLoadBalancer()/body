{
  final Settable<Boolean> exception=new Settable<Boolean>();
  task=new TryCatchFinally(){
    @Override protected void doTry() throws Throwable {
      client.upgrade4_4();
    }
    @Override protected void doCatch(    final Throwable ex) throws Throwable {
      if (ex instanceof ActivityTaskTimedOutException) {
        LOG.warn("Workflow for upgrading loadbalancers has timed-out");
      }
 else       if (ex instanceof CancellationException) {
        LOG.warn("Workflow for upgrading loadbalancers has been cancelled");
      }
 else {
        LOG.warn("Workflow for upgrading loadbalancers has failed");
      }
      state=ElbWorkflowState.WORKFLOW_FAILED;
      exception.set(true);
      throw ex;
    }
    @Override protected void doFinally() throws Throwable {
      if (state == ElbWorkflowState.WORKFLOW_RUNNING)       state=ElbWorkflowState.WORKFLOW_SUCCESS;
    }
  }
;
}
