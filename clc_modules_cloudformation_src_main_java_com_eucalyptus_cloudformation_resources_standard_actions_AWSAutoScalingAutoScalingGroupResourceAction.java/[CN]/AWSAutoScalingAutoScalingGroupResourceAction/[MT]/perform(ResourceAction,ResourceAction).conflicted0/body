{
  AWSAutoScalingAutoScalingGroupResourceAction oldAction=(AWSAutoScalingAutoScalingGroupResourceAction)oldResourceAction;
  AWSAutoScalingAutoScalingGroupResourceAction newAction=(AWSAutoScalingAutoScalingGroupResourceAction)newResourceAction;
  ServiceConfiguration configuration=Topology.lookup(AutoScaling.class);
  String autoScalingGroupName=newAction.info.getPhysicalResourceId();
  UpdateAutoScalingGroupType updateAutoScalingGroupType=MessageHelper.createMessage(UpdateAutoScalingGroupType.class,newAction.info.getEffectiveUserId());
  updateAutoScalingGroupType.setAutoScalingGroupName(autoScalingGroupName);
  if (newAction.properties.getInstanceId() != null) {
    throw new ValidationErrorException("InstanceId not supported");
  }
  if (newAction.properties.getLaunchConfigurationName() == null) {
    throw new ValidationErrorException("LaunchConfiguration required (as InstanceId not supported)");
  }
  if (newAction.properties.getAvailabilityZones() != null) {
    updateAutoScalingGroupType.setAvailabilityZones(new AvailabilityZones(newAction.properties.getAvailabilityZones()));
  }
  if (newAction.info.getUpdatePolicyJson() != null) {
    UpdatePolicy updatePolicy=UpdatePolicy.parse(newAction.info.getUpdatePolicyJson());
    if (updatePolicy != null && updatePolicy.getAutoScalingRollingUpdate() != null && updatePolicy.getAutoScalingRollingUpdate().getMinInstancesInService() >= newAction.properties.getMaxSize()) {
      throw new ValidationErrorException("MinInstancesInService must be less than the autoscaling group's MaxSize");
    }
  }
  updateAutoScalingGroupType.setDefaultCooldown(newAction.properties.getCooldown());
  updateAutoScalingGroupType.setDesiredCapacity(newAction.properties.getDesiredCapacity());
  updateAutoScalingGroupType.setHealthCheckGracePeriod(newAction.properties.getHealthCheckGracePeriod());
  updateAutoScalingGroupType.setHealthCheckType(newAction.properties.getHealthCheckType());
  updateAutoScalingGroupType.setLaunchConfigurationName(newAction.properties.getLaunchConfigurationName());
  updateAutoScalingGroupType.setMaxSize(newAction.properties.getMaxSize());
  updateAutoScalingGroupType.setMinSize(newAction.properties.getMinSize());
  if (newAction.properties.getTerminationPolicies() != null) {
    updateAutoScalingGroupType.setTerminationPolicies(new TerminationPolicies(newAction.properties.getTerminationPolicies()));
  }
  if (newAction.properties.getVpcZoneIdentifier() != null) {
    updateAutoScalingGroupType.setVpcZoneIdentifier(Strings.emptyToNull(Joiner.on(",").join(newAction.properties.getVpcZoneIdentifier())));
  }
  sendSyncWithRetryOnScalingEvent(configuration,updateAutoScalingGroupType);
  return newAction;
}
