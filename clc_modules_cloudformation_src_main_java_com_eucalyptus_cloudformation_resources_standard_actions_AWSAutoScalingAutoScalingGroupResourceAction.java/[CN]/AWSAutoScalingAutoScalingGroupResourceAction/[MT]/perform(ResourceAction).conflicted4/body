{
  AWSAutoScalingAutoScalingGroupResourceAction action=(AWSAutoScalingAutoScalingGroupResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(AutoScaling.class);
  String effectiveAdminUserId=Accounts.lookupPrincipalByAccountNumber(Accounts.lookupPrincipalByUserId(action.info.getEffectiveUserId()).getAccountNumber()).getUserId();
  CreateOrUpdateTagsType createSystemTagsType=MessageHelper.createPrivilegedMessage(CreateOrUpdateTagsType.class,effectiveAdminUserId);
  createSystemTagsType.setTags(convertAutoScalingTagsToCreateOrUpdateTags(action.info.getPhysicalResourceId(),TagHelper.getAutoScalingSystemTags(action.info,action.getStackEntity())));
  sendSyncWithRetryOnScalingEvent(configuration,createSystemTagsType);
  List<AutoScalingTag> tags=TagHelper.getAutoScalingStackTags(action.getStackEntity());
  if (action.properties.getTags() != null && !action.properties.getTags().isEmpty()) {
    TagHelper.checkReservedAutoScalingTemplateTags(action.properties.getTags());
    tags.addAll(action.properties.getTags());
  }
  if (!tags.isEmpty()) {
    CreateOrUpdateTagsType createOrUpdateTagsType=MessageHelper.createMessage(CreateOrUpdateTagsType.class,action.info.getEffectiveUserId());
    createOrUpdateTagsType.setTags(convertAutoScalingTagsToCreateOrUpdateTags(action.info.getPhysicalResourceId(),tags));
    sendSyncWithRetryOnScalingEvent(configuration,createOrUpdateTagsType);
  }
  return action;
}
