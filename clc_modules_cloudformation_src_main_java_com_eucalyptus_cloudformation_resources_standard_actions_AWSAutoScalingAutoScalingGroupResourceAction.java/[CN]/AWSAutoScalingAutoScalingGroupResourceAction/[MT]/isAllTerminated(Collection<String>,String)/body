{
  Map<String,String> stateMap=Maps.newHashMap();
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  DescribeInstancesType describeInstancesType=MessageHelper.createMessage(DescribeInstancesType.class,effectiveUserId);
  describeInstancesType.getFilterSet().add(com.eucalyptus.compute.common.Filter.filter("instance-id",instanceIds));
  DescribeInstancesResponseType describeInstancesResponseType=AsyncRequests.sendSync(configuration,describeInstancesType);
  if (describeInstancesResponseType.getReservationSet() != null) {
    for (    ReservationInfoType reservationInfoType : describeInstancesResponseType.getReservationSet()) {
      if (reservationInfoType.getInstancesSet() != null) {
        for (        RunningInstancesItemType runningInstancesItemType : reservationInfoType.getInstancesSet()) {
          stateMap.put(runningInstancesItemType.getInstanceId(),runningInstancesItemType.getStateName());
        }
      }
    }
  }
  for (  String instanceId : instanceIds) {
    if (stateMap.containsKey(instanceId) && !"terminated".equals(stateMap.get(instanceId))) {
      return false;
    }
  }
  return true;
}
