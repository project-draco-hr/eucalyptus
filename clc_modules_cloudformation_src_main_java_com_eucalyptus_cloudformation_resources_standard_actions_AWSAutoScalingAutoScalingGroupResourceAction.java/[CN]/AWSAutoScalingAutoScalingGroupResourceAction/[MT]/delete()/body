{
  if (info.getPhysicalResourceId() == null)   return;
  ServiceConfiguration configuration=Topology.lookup(AutoScaling.class);
  DescribeAutoScalingGroupsType describeAutoScalingGroupsType=new DescribeAutoScalingGroupsType();
  AutoScalingGroupNames autoScalingGroupNames=new AutoScalingGroupNames();
  ArrayList<String> member=Lists.newArrayList(info.getPhysicalResourceId());
  autoScalingGroupNames.setMember(member);
  describeAutoScalingGroupsType.setAutoScalingGroupNames(autoScalingGroupNames);
  describeAutoScalingGroupsType.setEffectiveUserId(info.getEffectiveUserId());
  DescribeAutoScalingGroupsResponseType describeAutoScalingGroupsResponseType=AsyncRequests.<DescribeAutoScalingGroupsType,DescribeAutoScalingGroupsResponseType>sendSync(configuration,describeAutoScalingGroupsType);
  if (doesGroupNotExist(describeAutoScalingGroupsResponseType)) {
    return;
  }
  UpdateAutoScalingGroupType updateAutoScalingGroupType=new UpdateAutoScalingGroupType();
  updateAutoScalingGroupType.setMinSize(0);
  updateAutoScalingGroupType.setMaxSize(0);
  updateAutoScalingGroupType.setDesiredCapacity(0);
  updateAutoScalingGroupType.setAutoScalingGroupName(info.getPhysicalResourceId());
  updateAutoScalingGroupType.setEffectiveUserId(info.getEffectiveUserId());
  AsyncRequests.<UpdateAutoScalingGroupType,UpdateAutoScalingGroupResponseType>sendSync(configuration,updateAutoScalingGroupType);
  boolean zeroInstances=false;
  for (int i=0; i < 60; i++) {
    Thread.sleep(5000L);
    DescribeAutoScalingGroupsType describeAutoScalingGroupsType2=new DescribeAutoScalingGroupsType();
    AutoScalingGroupNames autoScalingGroupNames2=new AutoScalingGroupNames();
    ArrayList<String> member2=Lists.newArrayList(info.getPhysicalResourceId());
    autoScalingGroupNames2.setMember(member2);
    describeAutoScalingGroupsType2.setAutoScalingGroupNames(autoScalingGroupNames2);
    describeAutoScalingGroupsType2.setEffectiveUserId(info.getEffectiveUserId());
    DescribeAutoScalingGroupsResponseType describeAutoScalingGroupsResponseType2=AsyncRequests.<DescribeAutoScalingGroupsType,DescribeAutoScalingGroupsResponseType>sendSync(configuration,describeAutoScalingGroupsType2);
    if (doesGroupNotExist(describeAutoScalingGroupsResponseType2)) {
      return;
    }
 else {
      AutoScalingGroupType firstGroup=describeAutoScalingGroupsResponseType2.getDescribeAutoScalingGroupsResult().getAutoScalingGroups().getMember().get(0);
      if (firstGroup.getInstances() == null || firstGroup.getInstances().getMember() == null || firstGroup.getInstances().getMember().isEmpty()) {
        zeroInstances=true;
        break;
      }
    }
  }
  if (!zeroInstances)   throw new Exception("Timeout (waiting for 0 instances)");
  DeleteAutoScalingGroupType deleteAutoScalingGroupType=new DeleteAutoScalingGroupType();
  deleteAutoScalingGroupType.setAutoScalingGroupName(info.getPhysicalResourceId());
  deleteAutoScalingGroupType.setEffectiveUserId(info.getEffectiveUserId());
  AsyncRequests.<DeleteAutoScalingGroupType,DeleteAutoScalingGroupResponseType>sendSync(configuration,deleteAutoScalingGroupType);
  for (int i=0; i < 60; i++) {
    Thread.sleep(5000L);
    DescribeAutoScalingGroupsType describeAutoScalingGroupsType2=new DescribeAutoScalingGroupsType();
    AutoScalingGroupNames autoScalingGroupNames2=new AutoScalingGroupNames();
    ArrayList<String> member2=Lists.newArrayList(info.getPhysicalResourceId());
    autoScalingGroupNames2.setMember(member2);
    describeAutoScalingGroupsType2.setAutoScalingGroupNames(autoScalingGroupNames2);
    describeAutoScalingGroupsType2.setEffectiveUserId(info.getEffectiveUserId());
    DescribeAutoScalingGroupsResponseType describeAutoScalingGroupsResponseType2=AsyncRequests.<DescribeAutoScalingGroupsType,DescribeAutoScalingGroupsResponseType>sendSync(configuration,describeAutoScalingGroupsType2);
    if (doesGroupNotExist(describeAutoScalingGroupsResponseType2)) {
      return;
    }
  }
  throw new Exception("Timeout (waiting for group to be deleted)");
}
