{
  final Record query=request.getQuery();
  final Name name=query.getName();
  if (RequestType.SOA.apply(query)) {
    if (DomainNames.externalSubdomain().equals(name)) {
      final Record soaRec=DomainNameRecords.sourceOfAuthorityStaticSerial(name);
      return DnsResponse.forName(name).answer(soaRec);
    }
  }
 else   if (RequestType.ANY.apply(query)) {
    if (DomainNames.externalSubdomain().equals(name)) {
      final List<Record> answers=Lists.newArrayList();
      answers.add(DomainNameRecords.sourceOfAuthorityStaticSerial(name));
      NavigableSet<ServiceConfiguration> nsServers=Components.lookup(Eucalyptus.class).services();
      List<Record> additional=Lists.newArrayList();
      Name domain=DomainNames.isInternalSubdomain(name) ? DomainNames.internalSubdomain() : DomainNames.externalSubdomain();
      int idx=1;
      for (      ServiceConfiguration conf : nsServers) {
        additional.add(DomainNameRecords.addressRecord(Name.fromConstantString("ns" + (idx++) + "."+ domain),NameserverResolver.maphost(request.getLocalAddress(),conf.getInetAddress())));
      }
      answers.addAll(DomainNameRecords.nameservers(name));
      return DnsResponse.forName(name).withAdditional(additional).answer(answers);
    }
  }
  return null;
}
