{
  if (!(this instanceof RESTfulDispatcher))   return null;
  RESTfulDispatcher dispatcher=(RESTfulDispatcher)this;
  HttpRequest httpRequest=(HttpRequest)messageContext.getProperty(HTTP_REQUEST);
  if (httpRequest == null)   return null;
  if (!dispatcher.accepts(httpRequest,messageContext))   return null;
  String maybeVersion=httpRequest.getParameters().get(Axis2QueryDispatcher.RequiredQueryParams.Version.toString());
  String nameSpace=dispatcher.getNamespace();
  if (maybeVersion != null)   nameSpace=nameSpace.replaceAll(dispatcher.getBinding().getName(),maybeVersion);
  String operationName;
  try {
    operationName=dispatcher.getOperation(httpRequest,messageContext);
  }
 catch (  Exception ex) {
    throw new AxisFault("Could not process operation\n" + ex.getMessage());
  }
  httpRequest.setOperation(operationName);
  httpRequest.setBindingName(BindingUtil.sanitizeNamespace(dispatcher.getNamespace()));
  QuerySecurityHandler securityHandler=dispatcher.getSecurityHandler();
  UserInfo user=securityHandler.authenticate(httpRequest);
  if (httpRequest.getOperation() == null)   throw new AxisFault("Protocol failure: Could not identify the operation component of the request.");
  AxisOperation operation=service.getOperationByAction(httpRequest.getOperation());
  if (operation == null)   throw new AxisFault("Failed to process the request: Operation doesnt exist: " + httpRequest.getOperation());
  QueryBinding binding=dispatcher.getBinding();
  OMElement msg=binding.bind(user,httpRequest,messageContext);
  messageContext.getEnvelope().getBody().addChild(msg);
  Policy p=new Policy();
  messageContext.setProperty(RampartMessageData.KEY_RAMPART_POLICY,p);
  return operation;
}
