{
  try {
    EndpointReference endpoint=messageContext.getTo();
    URL url=new URL("http://my.flavourite.host.com" + endpoint.getAddress());
    HttpRequest httpRequest=new HttpRequest();
    httpRequest.setRequestURL(messageContext.getTo().getAddress());
    String serviceContextPath=messageContext.getConfigurationContext().getServiceContextPath();
    String serviceBasePath=url.toURI().getPath().substring(serviceContextPath.length());
    String serviceName=serviceBasePath.split("/")[1];
    httpRequest.setService(serviceName);
    String serviceAddress=serviceContextPath + "/" + serviceName;
    httpRequest.setServicePath(serviceAddress);
    messageContext.setTo(endpoint);
    String restQuery=url.toURI().getQuery();
    Map<String,String> httpParams=new HashMap<String,String>();
    if (restQuery != null)     for (    String p : restQuery.split("&")) {
      String[] splitParam=p.split("=");
      httpParams.put(splitParam[0],splitParam.length == 2 ? splitParam[1] : null);
    }
    httpRequest.setParameters(httpParams);
    String restPath=url.toURI().getPath().replaceAll(serviceAddress,"");
    httpRequest.setOperationPath(restPath);
    httpRequest.setInStream((InputStream)messageContext.getProperty(MessageContext.TRANSPORT_IN));
    httpRequest.setHeaders((Map<String,String>)messageContext.getProperty(MessageContext.TRANSPORT_HEADERS));
    httpRequest.setHttpMethod((String)messageContext.getProperty(HTTPConstants.HTTP_METHOD));
    if (messageContext.getExecutionChain().size() > 2)     messageContext.getExecutionChain().remove(2);
    messageContext.setProperty(HTTP_REQUEST,httpRequest);
  }
 catch (  Exception e) {
    LOG.error(e,e);
    throw AxisFault.makeFault(e);
  }
}
