{
  doc.setWriter(new OutputStreamWriter(os));
  doc.open();
  doc.textLine("Capacity Report",1);
  doc.textLine("Begin:" + new Date(report.getBeginMs()).toString(),4);
  doc.textLine("End:" + new Date(report.getEndMs()).toString(),4);
  doc.textLine("Resource Usage Section",3);
  doc.tableOpen();
  doc.newRow().addValCol("Resource").addValCol("Available").addValCol("Total");
  doc.newRow().addLabelCol(1,"Cloud");
  final ComputeCapacityArtEntity entity=report.getUsageTotals().getComputeCapacityArtEntity();
  doc.addValCol("S3 Storage").addValCol(entity.getSizeS3ObjectAvailableGB()).addValCol(entity.getSizeS3ObjectTotalGB()).newRow();
  doc.addValCol("Elastic IP").addValCol(entity.getNumPublicIpsAvailable().longValue()).addValCol(entity.getNumPublicIpsTotal().longValue()).newRow();
  outputZoneCapacities(entity);
  for (  final Map.Entry<String,AvailabilityZoneArtEntity> azEntry : report.getZones().entrySet()) {
    final ComputeCapacityArtEntity zoneEntity=azEntry.getValue().getUsageTotals().getComputeCapacityArtEntity();
    doc.addLabelCol(1,"Availability Zone: " + azEntry.getKey());
    outputZoneCapacities(zoneEntity);
  }
  doc.tableClose();
  doc.close();
}
