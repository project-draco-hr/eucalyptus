{
  final Channel ch=e.getChannel();
  final Throwable cause=e.getCause();
  try {
    if (ch != null) {
      Contexts.clear(Contexts.lookup(ch));
    }
  }
 catch (  Throwable ex) {
    LOG.error(ex,ex);
  }
  if (cause instanceof ReadTimeoutException) {
    LOG.debug(cause,cause);
    this.sendError(ctx,HttpResponseStatus.REQUEST_TIMEOUT,cause);
  }
 else   if (cause instanceof WriteTimeoutException) {
    LOG.debug(cause,cause);
    Channels.fireExceptionCaught(ctx,cause);
    ctx.getChannel().close();
  }
 else   if (cause instanceof TooLongFrameException) {
    this.sendError(ctx,HttpResponseStatus.BAD_REQUEST,cause);
  }
 else   if (cause instanceof IllegalArgumentException) {
    this.sendError(ctx,HttpResponseStatus.BAD_REQUEST,cause);
  }
 else   if (cause instanceof LoginException) {
    this.sendError(ctx,HttpResponseStatus.FORBIDDEN,cause);
  }
 else {
    LOG.error("Internal Error.",cause);
    if (ch.isConnected()) {
      if (e.getCause() instanceof WebServicesException) {
        this.sendError(ctx,((WebServicesException)e.getCause()).getStatus(),cause);
      }
 else {
        this.sendError(ctx,HttpResponseStatus.INTERNAL_SERVER_ERROR,cause);
      }
    }
  }
}
