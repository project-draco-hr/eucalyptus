import os
from pprint import pprint
import subprocess
import argparse
import sys
WORKFLOWS = {'down-bundle-fs/up-bundle': WF_DownBundleFS_UpBundle(), 'down-bundle/write-raw': WF_DownBundle_WriteRaw(), 'down-bundle/up-vmdk': WF_DownBundle_UpVMDK(), 'read-raw/up-bundle': WF_ReadRaw_UpBundle(), 'down-vmdk/up-bundle': WF_DownVMDK_UpBundle(), 'down-parts/write-raw': WF_DownParts_WriteRaw(), }
parser = argparse.ArgumentParser(prog='euca-run-workflow', description='Run an Imaging Toolkit workflow.')
parser.add_argument('-l', '--list', required=False, help='Lists the available workflows', action='store_true')
subparsers = parser.add_subparsers(dest='name', help='Workflows help')
for name in WORKFLOWS:
    WORKFLOWS[name].add_arguments(name, subparsers)
args = parser.parse_args()
for name in WORKFLOWS:
    WORKFLOWS[name].check_deps(args)
if args.list:
    for name in WORKFLOWS:
        if (len(WORKFLOWS[name].problems) == 0):
            print ('%30s: %s' % (name, WORKFLOWS[name].description))
    sys.exit(0)
try:
    WORKFLOWS[args.name].execute(args)
except KeyError:
    print (("unknown workflow '" + args.name) + "'")
    sys.exit(2)
except WF_InsufficientArguments as e:
    print (("insufficient arguments for workflow '" + args.name) + "'")
except WF_InsufficientDependencies as e:
    print (("workflow '" + args.name) + "' is unavailable! Problems:")
    for problem in e.args[0]:
        print ('\t - ' + problem)
