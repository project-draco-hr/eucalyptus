{
  final UserFullName ownerFullName=allocInfo.getOwnerFullName();
  final String instanceProfileArn=allocInfo.getRequest().getIamInstanceProfileArn();
  final String instanceProfileName=allocInfo.getRequest().getIamInstanceProfileName();
  if (!Strings.isNullOrEmpty(instanceProfileArn) || !Strings.isNullOrEmpty(instanceProfileName)) {
    final InstanceProfile profile;
    if (!Strings.isNullOrEmpty(instanceProfileArn))     try {
      final Ern name=Ern.parse(instanceProfileArn);
      if (!(name instanceof EuareResourceName)) {
        throw new InvalidInstanceProfileMetadataException("Invalid IAM instance profile ARN: " + instanceProfileArn);
      }
      profile=Accounts.lookupAccountById(name.getNamespace()).lookupInstanceProfileByName(((EuareResourceName)name).getName());
      if (!Strings.isNullOrEmpty(instanceProfileName) && !instanceProfileName.equals(profile.getName())) {
        throw new InvalidInstanceProfileMetadataException(String.format("Invalid IAM instance profile name '%s' for ARN: %s",name,instanceProfileArn));
      }
    }
 catch (    AuthException|JSONException e) {
      throw new InvalidInstanceProfileMetadataException("Invalid IAM instance profile ARN: " + instanceProfileArn,e);
    }
 else     if (!Strings.isNullOrEmpty(instanceProfileName))     try {
      profile=Accounts.lookupAccountById(ownerFullName.getAccountNumber()).lookupInstanceProfileByName(instanceProfileName);
    }
 catch (    AuthException e) {
      throw new InvalidInstanceProfileMetadataException("Invalid IAM instance profile name: " + instanceProfileName,e);
    }
 else {
      profile=null;
    }
    if (profile != null)     try {
      final String profileArn=Accounts.getInstanceProfileArn(profile);
      final AuthContextSupplier user=allocInfo.getAuthContext();
      if (!Permissions.isAuthorized(PolicySpec.VENDOR_IAM,PolicySpec.IAM_RESOURCE_INSTANCE_PROFILE,Accounts.getInstanceProfileFullName(profile),profile.getAccount(),PolicySpec.IAM_LISTINSTANCEPROFILES,user)) {
        throw new IllegalMetadataAccessException(String.format("Not authorized to access instance profile with ARN %s for %s",profileArn,ownerFullName));
      }
      final Role role=profile.getRole();
      final String roleArn=role == null ? null : Accounts.getRoleArn(role);
      if (role != null && !Permissions.isAuthorized(PolicySpec.VENDOR_IAM,PolicySpec.IAM_RESOURCE_ROLE,Accounts.getRoleFullName(role),role.getAccount(),PolicySpec.IAM_PASSROLE,user)) {
        throw new IllegalMetadataAccessException(String.format("Not authorized to pass role with ARN %s for %s",roleArn,ownerFullName));
      }
      if (role != null) {
        allocInfo.setInstanceProfileArn(profileArn);
        allocInfo.setIamInstanceProfileId(profile.getInstanceProfileId());
        allocInfo.setIamRoleArn(roleArn);
      }
 else {
        throw new InvalidInstanceProfileMetadataException("Role not found for IAM instance profile ARN: " + instanceProfileArn);
      }
    }
 catch (    AuthException e) {
      throw new MetadataException("IAM instance profile error",e);
    }
  }
  return true;
}
