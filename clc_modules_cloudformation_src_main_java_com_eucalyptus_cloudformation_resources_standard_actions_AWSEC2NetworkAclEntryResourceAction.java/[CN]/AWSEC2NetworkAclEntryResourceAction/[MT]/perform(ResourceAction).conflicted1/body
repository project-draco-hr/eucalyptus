{
  AWSEC2NetworkAclEntryResourceAction action=(AWSEC2NetworkAclEntryResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  if (action.info.getCreatedEnoughToDelete() != Boolean.TRUE)   return action;
  DescribeNetworkAclsType describeNetworkAclsType=MessageHelper.createMessage(DescribeNetworkAclsType.class,action.info.getEffectiveUserId());
  describeNetworkAclsType.getFilterSet().add(Filter.filter("network-acl-id",action.properties.getNetworkAclId()));
  DescribeNetworkAclsResponseType describeNetworkAclsResponseType=AsyncRequests.sendSync(configuration,describeNetworkAclsType);
  if (describeNetworkAclsResponseType.getNetworkAclSet() == null || describeNetworkAclsResponseType.getNetworkAclSet().getItem() == null || describeNetworkAclsResponseType.getNetworkAclSet().getItem().isEmpty()) {
    return action;
  }
  boolean foundEntry=false;
  for (  NetworkAclType networkAclType : describeNetworkAclsResponseType.getNetworkAclSet().getItem()) {
    if (networkAclType.getEntrySet() == null || networkAclType.getEntrySet().getItem() == null)     continue;
    for (    NetworkAclEntryType networkAclEntryType : networkAclType.getEntrySet().getItem()) {
      if (action.properties.getRuleNumber().equals(networkAclEntryType.getRuleNumber()) && action.properties.getEgress().equals(networkAclEntryType.getEgress())) {
        foundEntry=true;
        break;
      }
    }
  }
  if (!foundEntry)   return action;
  DeleteNetworkAclEntryType deleteNetworkAclEntryType=MessageHelper.createMessage(DeleteNetworkAclEntryType.class,action.info.getEffectiveUserId());
  deleteNetworkAclEntryType.setNetworkAclId(action.properties.getNetworkAclId());
  deleteNetworkAclEntryType.setEgress(action.properties.getEgress());
  deleteNetworkAclEntryType.setRuleNumber(action.properties.getRuleNumber());
  DeleteNetworkAclEntryResponseType deleteNetworkAclEntryResponseType=AsyncRequests.<DeleteNetworkAclEntryType,DeleteNetworkAclEntryResponseType>sendSync(configuration,deleteNetworkAclEntryType);
  return action;
}
