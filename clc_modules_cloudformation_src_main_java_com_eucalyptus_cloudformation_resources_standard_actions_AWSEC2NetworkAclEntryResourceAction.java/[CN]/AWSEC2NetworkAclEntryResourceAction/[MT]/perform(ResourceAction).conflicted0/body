{
  AWSEC2NetworkAclEntryResourceAction action=(AWSEC2NetworkAclEntryResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  if (action.properties.getNetworkAclId().isEmpty()) {
    throw new ValidationErrorException("NetworkAclId is a required field");
  }
  DescribeNetworkAclsType describeNetworkAclsType=MessageHelper.createMessage(DescribeNetworkAclsType.class,action.info.getEffectiveUserId());
  NetworkAclIdSetType networkAclIdSet=new NetworkAclIdSetType();
  NetworkAclIdSetItemType networkAclIdSetItem=new NetworkAclIdSetItemType();
  networkAclIdSetItem.setNetworkAclId(action.properties.getNetworkAclId());
  networkAclIdSet.setItem(Lists.newArrayList(networkAclIdSetItem));
  describeNetworkAclsType.setNetworkAclIdSet(networkAclIdSet);
  DescribeNetworkAclsResponseType describeNetworkAclsResponseType=AsyncRequests.<DescribeNetworkAclsType,DescribeNetworkAclsResponseType>sendSync(configuration,describeNetworkAclsType);
  if (describeNetworkAclsResponseType.getNetworkAclSet() == null || describeNetworkAclsResponseType.getNetworkAclSet().getItem() == null || describeNetworkAclsResponseType.getNetworkAclSet().getItem().isEmpty()) {
    throw new ValidationErrorException("No such network acl with id '" + action.properties.getNetworkAclId());
  }
  CreateNetworkAclEntryType createNetworkAclEntryType=MessageHelper.createMessage(CreateNetworkAclEntryType.class,action.info.getEffectiveUserId());
  createNetworkAclEntryType.setCidrBlock(action.properties.getCidrBlock());
  createNetworkAclEntryType.setEgress(action.properties.getEgress());
  createNetworkAclEntryType.setIcmpTypeCode(action.convertIcmpTypeCode(action.properties.getIcmp()));
  createNetworkAclEntryType.setNetworkAclId(action.properties.getNetworkAclId());
  createNetworkAclEntryType.setPortRange(action.convertPortRange(action.properties.getPortRange()));
  createNetworkAclEntryType.setProtocol(action.properties.getProtocol() == null ? null : String.valueOf(action.properties.getProtocol()));
  createNetworkAclEntryType.setRuleAction(action.properties.getRuleAction());
  createNetworkAclEntryType.setRuleNumber(action.properties.getRuleNumber());
  CreateNetworkAclEntryResponseType CreateNetworkAclEntryResponseType=AsyncRequests.<CreateNetworkAclEntryType,CreateNetworkAclEntryResponseType>sendSync(configuration,createNetworkAclEntryType);
  action.info.setPhysicalResourceId(action.getDefaultPhysicalResourceId());
  action.info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(action.info.getPhysicalResourceId())));
  return action;
}
