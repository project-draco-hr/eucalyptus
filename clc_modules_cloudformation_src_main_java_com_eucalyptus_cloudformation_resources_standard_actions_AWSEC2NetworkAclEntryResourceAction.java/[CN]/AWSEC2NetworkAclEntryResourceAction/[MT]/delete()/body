{
  if (info.getPhysicalResourceId() == null)   return;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  DescribeNetworkAclsType describeNetworkAclsType=new DescribeNetworkAclsType();
  describeNetworkAclsType.setEffectiveUserId(info.getEffectiveUserId());
  NetworkAclIdSetType networkAclIdSet=new NetworkAclIdSetType();
  NetworkAclIdSetItemType networkAclIdSetItem=new NetworkAclIdSetItemType();
  networkAclIdSetItem.setNetworkAclId(properties.getNetworkAclId());
  networkAclIdSet.setItem(Lists.newArrayList(networkAclIdSetItem));
  describeNetworkAclsType.setNetworkAclIdSet(networkAclIdSet);
  DescribeNetworkAclsResponseType describeNetworkAclsResponseType=AsyncRequests.<DescribeNetworkAclsType,DescribeNetworkAclsResponseType>sendSync(configuration,describeNetworkAclsType);
  if (describeNetworkAclsResponseType.getNetworkAclSet() == null || describeNetworkAclsResponseType.getNetworkAclSet().getItem() == null || describeNetworkAclsResponseType.getNetworkAclSet().getItem().isEmpty()) {
    return;
  }
  boolean foundEntry=false;
  for (  NetworkAclType networkAclType : describeNetworkAclsResponseType.getNetworkAclSet().getItem()) {
    if (networkAclType.getEntrySet() == null || networkAclType.getEntrySet().getItem() == null)     continue;
    for (    NetworkAclEntryType networkAclEntryType : networkAclType.getEntrySet().getItem()) {
      if (properties.getRuleNumber().equals(networkAclEntryType.getRuleNumber()) && properties.getEgress().equals(networkAclEntryType.getEgress())) {
        foundEntry=true;
        break;
      }
    }
  }
  if (!foundEntry)   return;
  DeleteNetworkAclEntryType deleteNetworkAclEntryType=new DeleteNetworkAclEntryType();
  deleteNetworkAclEntryType.setEffectiveUserId(info.getEffectiveUserId());
  deleteNetworkAclEntryType.setNetworkAclId(properties.getNetworkAclId());
  deleteNetworkAclEntryType.setEgress(properties.getEgress());
  deleteNetworkAclEntryType.setRuleNumber(properties.getRuleNumber());
  DeleteNetworkAclEntryResponseType deleteNetworkAclEntryResponseType=AsyncRequests.<DeleteNetworkAclEntryType,DeleteNetworkAclEntryResponseType>sendSync(configuration,deleteNetworkAclEntryType);
}
