{
  try {
    if (!NetworkUtil.testGoodAddress(host)) {
      throw new EucalyptusCloudException("Components cannot be registered using local, link-local, or multicast addresses.");
    }
 else     if (NetworkUtil.testLocal(host) && !this.getComponent().isEnabled()) {
      throw new EucalyptusCloudException("You do not have a local " + this.newInstance().getClass().getSimpleName().replaceAll("Configuration","") + " enabled (or it is not installed).");
    }
  }
 catch (  EucalyptusCloudException e) {
    throw new ServiceRegistrationException(e.getMessage(),e);
  }
catch (  Exception e) {
    throw new ServiceRegistrationException("Service registration failed: " + e.getMessage(),e);
  }
  ServiceConfiguration existingName=null;
  try {
    existingName=this.lookupByName(name);
  }
 catch (  ServiceRegistrationException ex1) {
    LOG.trace("Failed to find existing component registration for name: " + name);
  }
  ServiceConfiguration existingHost=null;
  try {
    existingHost=this.lookupByHost(host);
  }
 catch (  ServiceRegistrationException ex1) {
    LOG.trace("Failed to find existing component registration for host: " + host);
  }
  if (existingName != null && existingHost != null) {
    return false;
  }
 else   if (existingName == null && existingHost == null) {
    return true;
  }
 else   if (existingName != null) {
    throw new ServiceRegistrationException("Component with name=" + name + " already exists with host="+ existingName.getHostName());
  }
 else   if (existingHost != null) {
    throw new ServiceRegistrationException("Component with host=" + host + " already exists with name="+ existingHost.getName());
  }
 else {
    throw new ServiceRegistrationException("BUG: This is a logical impossibility.");
  }
}
