{
  final List<Promise<Void>> result=Lists.newArrayList();
  final Settable<String> failure=new Settable<String>();
  new TryCatchFinally(){
    protected void doTry() throws Throwable {
      final ActivitySchedulingOptions scheduler=new ActivitySchedulingOptions();
      scheduler.setTaskList(instanceId);
      scheduler.setScheduleToCloseTimeoutSeconds(120L);
      scheduler.setStartToCloseTimeoutSeconds(10L);
      for (      final PolicyDescription p : policies.get()) {
        result.add(vmClient.setPolicy(encodePolicy(p),scheduler));
      }
    }
    protected void doCatch(    Throwable e){
      failure.set(instanceId);
    }
    protected void doFinally() throws Throwable {
      if (!failure.isReady()) {
        failure.set(null);
      }
    }
  }
;
  return checkInstanceFailure(failure);
}
