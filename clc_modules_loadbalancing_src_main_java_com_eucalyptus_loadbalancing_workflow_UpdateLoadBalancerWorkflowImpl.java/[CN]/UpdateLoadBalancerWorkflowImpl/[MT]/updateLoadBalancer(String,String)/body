{
  this.accountId=accountId;
  this.loadbalancer=loadbalancer;
  final Settable<Boolean> exception=new Settable<Boolean>();
  task=new TryCatchFinally(){
    @Override protected void doTry() throws Throwable {
      updateInstancesPeriodic(0);
    }
    @Override protected void doCatch(    final Throwable ex) throws Throwable {
      if (ex instanceof ActivityTaskTimedOutException) {
        ;
      }
 else       if (ex instanceof CancellationException) {
        ;
      }
 else {
        ;
      }
      exception.set(true);
      throw ex;
    }
    @Override protected void doFinally() throws Throwable {
      if (exception.isReady() && exception.get())       return;
 else       if (task.isCancelRequested())       return;
 else {
        selfClient.getSchedulingOptions().setTagList(Lists.newArrayList(String.format("account:%s",accountId),String.format("loadbalancer:%s",loadbalancer)));
        selfClient.updateLoadBalancer(accountId,loadbalancer);
      }
    }
  }
;
}
