{
  Parameters.checkParam("originatingAccessKeyId",originatingAccessKeyId,notNullValue());
  Parameters.checkParam("originatingUserId",originatingUserId,notNullValue());
  Parameters.checkParam("originatingRoleId",originatingRoleId,notNullValue());
  Parameters.checkParam("nonce",nonce,not(isEmptyOrNullString()));
  if (Iterables.size(Optional.presentInstances(Arrays.asList(originatingAccessKeyId,originatingUserId,originatingRoleId))) != 1) {
    throw new IllegalArgumentException("One originating identifier expected");
  }
  this.originatingAccessKeyId=originatingAccessKeyId;
  this.originatingUserId=originatingUserId;
  this.originatingRoleId=originatingRoleId;
  this.nonce=nonce;
  this.created=created;
  this.expires=expires;
}
