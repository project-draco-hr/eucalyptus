{
  Parameters.checkParamNotNull("originatingAccessKeyId",originatingAccessKeyId);
  Parameters.checkParamNotNull("originatingUserId",originatingUserId);
  Parameters.checkParamNotNull("originatingRoleId",originatingRoleId);
  Parameters.checkParamNotNullOrEmpty("nonce",nonce);
  Parameters.checkParamNotNull("attributes",attributes);
  if (Iterables.size(Optional.presentInstances(Arrays.asList(originatingAccessKeyId,originatingUserId,originatingRoleId))) != 1) {
    throw new IllegalArgumentException("One originating identifier expected");
  }
  this.originatingAccessKeyId=originatingAccessKeyId;
  this.originatingUserId=originatingUserId;
  this.originatingRoleId=originatingRoleId;
  this.nonce=nonce;
  this.created=created;
  this.expires=expires;
  this.attributes=ImmutableMap.copyOf(attributes);
}
