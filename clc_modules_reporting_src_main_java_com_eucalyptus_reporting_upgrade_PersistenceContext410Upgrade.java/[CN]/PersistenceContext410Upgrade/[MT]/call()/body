{
  LOG.debug("Deleting duplicate tables from eucalyptus_reporting");
  Sql sql=null;
  try {
    final String context="eucalyptus_reporting";
    sql=Databases.getBootstrapper().getConnection(PersistenceContexts.toDatabaseName().apply(context),PersistenceContexts.toSchemaName().apply(context));
    final String[] backend_tables={"reporting_elastic_ip_attach_events","reporting_elastic_ip_create_events","reporting_elastic_ip_delete_events","reporting_elastic_ip_detach_events","reporting_instance_create_events","reporting_instance_usage_events","reporting_s3_object_create_events","reporting_s3_object_delete_events","reporting_volume_attach_events","reporting_volume_create_events","reporting_volume_delete_events","reporting_volume_detach_events","reporting_volume_snapshot_create_events","reporting_volume_snapshot_delete_events"};
    final String sqlExec=String.format("DROP TABLE IF EXISTS %s CASCADE",Joiner.on(",").join(backend_tables));
    sql.execute(sqlExec);
    return true;
  }
 catch (  Exception ex) {
    LOG.error(ex,ex);
    return false;
  }
 finally {
    if (sql != null) {
      sql.close();
    }
  }
}
