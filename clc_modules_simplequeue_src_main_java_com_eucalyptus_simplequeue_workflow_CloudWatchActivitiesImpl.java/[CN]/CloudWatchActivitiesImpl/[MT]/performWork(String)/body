{
  if (SimpleQueueProperties.ENABLE_METRICS_COLLECTION) {
    ServiceConfiguration cwConfiguration=Topology.lookup(CloudWatch.class);
    for (    Queue queue : PersistenceFactory.getQueuePersistence().listActiveQueues(partitionInfo)) {
      PutMetricDataType putMetricDataType=null;
      try {
        putMetricDataType=CloudWatchClient.getSQSPutMetricDataType(queue);
      }
 catch (      AuthException e) {
        LOG.warn("Unable to get account info for queue " + queue.getArn() + ", skipping metrics");
        continue;
      }
      try {
        Date now=new Date();
        CloudWatchClient.addSQSMetricDatum(putMetricDataType,queue,now,Constants.APPROXIMATE_AGE_OF_OLDEST_MESSAGE,(double)PersistenceFactory.getMessagePersistence().getApproximateAgeOfOldestMessage(queue),"Seconds");
        Map<String,String> messageCounts=PersistenceFactory.getMessagePersistence().getApproximateMessageCounts(queue);
        CloudWatchClient.addSQSMetricDatum(putMetricDataType,queue,now,Constants.APPROXIMATE_NUMBER_OF_MESSAGES_DELAYED,(double)Long.parseLong(messageCounts.get(Constants.APPROXIMATE_NUMBER_OF_MESSAGES_DELAYED)),"Count");
        CloudWatchClient.addSQSMetricDatum(putMetricDataType,queue,now,Constants.APPROXIMATE_NUMBER_OF_MESSAGES_VISIBLE,(double)Long.parseLong(messageCounts.get(Constants.APPROXIMATE_NUMBER_OF_MESSAGES)),"Count");
        CloudWatchClient.addSQSMetricDatum(putMetricDataType,queue,now,Constants.APPROXIMATE_NUMBER_OF_MESSAGES_NOT_VISIBLE,(double)Long.parseLong(messageCounts.get(Constants.APPROXIMATE_NUMBER_OF_MESSAGES_NOT_VISIBLE)),"Count");
        CloudWatchClient.addSQSMetricDatum(putMetricDataType,queue,now,Constants.NUMBER_OF_EMPTY_RECEIVES,0.0,"Count");
        CloudWatchClient.addSQSMetricDatum(putMetricDataType,queue,now,Constants.NUMBER_OF_MESSAGES_DELETED,0.0,"Count");
        CloudWatchClient.addSQSMetricDatum(putMetricDataType,queue,now,Constants.NUMBER_OF_MESSAGES_RECEIVED,0.0,"Count");
        CloudWatchClient.addSQSMetricDatum(putMetricDataType,queue,now,Constants.NUMBER_OF_MESSAGES_SENT,0.0,"Count");
        CloudWatchClient.putMetricData(putMetricDataType);
      }
 catch (      Exception ex) {
        LOG.warn("Unable to send metrics for " + queue.getArn() + ", Reason: "+ ex.getMessage());
      }
    }
  }
}
