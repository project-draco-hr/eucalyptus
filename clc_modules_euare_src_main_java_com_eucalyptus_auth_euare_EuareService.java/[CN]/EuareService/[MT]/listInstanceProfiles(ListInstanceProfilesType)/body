{
  final ListInstanceProfilesResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  final Context ctx=Contexts.lookup();
  final AuthContext requestUser=getAuthContext(ctx);
  final Account account=getRealAccount(ctx,request.getDelegateAccount());
  String path="/";
  if (!Strings.isNullOrEmpty(request.getPathPrefix())) {
    path=request.getPathPrefix();
  }
  if (!Permissions.perhapsAuthorized(PolicySpec.VENDOR_IAM,PolicySpec.IAM_LISTINSTANCEPROFILES,ctx.getAuthContext())) {
    throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to list instance profiles");
  }
  reply.getListInstanceProfilesResult().setIsTruncated(false);
  final ArrayList<InstanceProfileType> instanceProfiles=reply.getListInstanceProfilesResult().getInstanceProfiles().getMember();
  try {
    for (    final EuareInstanceProfile instanceProfile : account.getInstanceProfiles()) {
      if (instanceProfile.getPath().startsWith(path)) {
        if (Privileged.allowListInstanceProfile(requestUser,account,instanceProfile)) {
          instanceProfiles.add(fillInstanceProfileResult(new InstanceProfileType(),instanceProfile));
        }
      }
    }
  }
 catch (  Exception e) {
    LOG.error(e,e);
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
