{
  CreateLoginProfileResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  Context ctx=Contexts.lookup();
  AuthContext requestUser=getAuthContext(ctx);
  Account account=getRealAccount(ctx,request.getDelegateAccount());
  User userFound=lookupUserByName(account,request.getUserName());
  if (userFound.getPassword() != null) {
    throw new EuareException(HttpResponseStatus.CONFLICT,EuareException.ENTITY_ALREADY_EXISTS,"User " + userFound.getName() + " already has a login profile");
  }
  try {
    Privileged.createLoginProfile(requestUser,account,userFound,request.getPassword());
    reply.getCreateLoginProfileResult().getLoginProfile().setUserName(ctx.getUser().getName());
    return reply;
  }
 catch (  Exception e) {
    LOG.error(e,e);
    if (e instanceof AuthException) {
      if (AuthException.ACCESS_DENIED.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to create login profile for " + request.getUserName() + " by "+ ctx.getUser().getName());
      }
 else       if (AuthException.INVALID_PASSWORD.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.BAD_REQUEST,"Invalid password","Invalid password");
      }
    }
    throw new EucalyptusCloudException(e);
  }
}
