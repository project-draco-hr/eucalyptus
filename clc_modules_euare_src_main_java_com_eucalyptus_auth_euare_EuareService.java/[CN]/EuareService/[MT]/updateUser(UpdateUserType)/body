{
  UpdateUserResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  String action=PolicySpec.requestToAction(request);
  Context ctx=Contexts.lookup();
  User requestUser=ctx.getUser();
  Account account=getRealAccount(ctx,request.getDelegateAccount());
  User userFound=null;
  if (Strings.isNullOrEmpty(request.getNewUserName())) {
    try {
      USER_AND_GROUP_NAME_CHECKER.check(request.getNewUserName());
    }
 catch (    InvalidValueException e) {
      throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.INVALID_NAME,"New group name: " + request.getNewUserName() + " is invalid.");
    }
  }
  if (Strings.isNullOrEmpty(request.getNewPath())) {
    try {
      PATH_CHECKER.check(request.getNewPath());
    }
 catch (    InvalidValueException e) {
      throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.INVALID_NAME,"New path: " + request.getNewPath() + " is invalid.");
    }
  }
  try {
    userFound=account.lookupUserByName(request.getUserName());
    if (userFound.isSystemAdmin() && userFound.isAccountAdmin()) {
      throw new AuthException("admin@eucalyptus can not be updated");
    }
  }
 catch (  Exception e) {
    LOG.debug(e,e);
    if (e instanceof AuthException && AuthException.NO_SUCH_USER.equals(e.getMessage())) {
      throw new EuareException(HttpResponseStatus.NOT_FOUND,EuareException.NO_SUCH_ENTITY,"Can not find user " + request.getUserName());
    }
 else {
      throw new EucalyptusCloudException(e);
    }
  }
  if (!userFound.getName().equals(requestUser.getName())) {
    if (!Permissions.isAuthorized(PolicySpec.VENDOR_IAM,PolicySpec.IAM_RESOURCE_USER,Accounts.getUserFullName(userFound),account,action,requestUser)) {
      throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to update user by " + requestUser.getName());
    }
  }
  try {
    if (Strings.isNullOrEmpty(request.getNewUserName())) {
      userFound.setName(request.getNewUserName());
    }
    if (Strings.isNullOrEmpty(request.getNewPath())) {
      userFound.setPath(sanitizePath(request.getNewPath()));
    }
  }
 catch (  Exception e) {
    LOG.debug(e,e);
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
