{
  UploadSigningCertificateResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  Context ctx=Contexts.lookup();
  User requestUser=ctx.getUser();
  Account account=getRealAccount(ctx,request.getDelegateAccount());
  User userFound=requestUser;
  if (!Strings.isNullOrEmpty(request.getUserName())) {
    userFound=lookupUserByName(account,request.getUserName());
  }
  try {
    Certificate cert=Privileged.uploadSigningCertificate(requestUser,account,userFound,request.getCertificateBody());
    SigningCertificateType result=reply.getUploadSigningCertificateResult().getCertificate();
    result.setUserName(userFound.getName());
    result.setCertificateId(cert.getCertificateId());
    result.setCertificateBody(request.getCertificateBody());
    result.setStatus("Active");
    result.setUploadDate(cert.getCreateDate());
  }
 catch (  Exception e) {
    LOG.error(e,e);
    if (e instanceof AuthException) {
      if (AuthException.ACCESS_DENIED.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to upload signing certificate of " + request.getUserName() + "by "+ requestUser.getName());
      }
 else       if (AuthException.CONFLICT.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.CONFLICT,EuareException.DUPLICATE_CERTIFICATE,"Trying to upload duplicate certificate");
      }
 else       if (AuthException.INVALID_CERT.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.INVALID_CERTIFICATE,"Invalid certificate " + request.getCertificateBody());
      }
 else       if (AuthException.EMPTY_CERT.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.MALFORMED_CERTIFICATE,"Empty certificate body");
      }
    }
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
