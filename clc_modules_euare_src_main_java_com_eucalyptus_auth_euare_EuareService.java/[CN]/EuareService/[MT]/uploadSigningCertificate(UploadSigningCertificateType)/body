{
  UploadSigningCertificateResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  String action=PolicySpec.requestToAction(request);
  Context ctx=Contexts.lookup();
  User requestUser=ctx.getUser();
  Account account=ctx.getAccount();
  User userFound=null;
  try {
    userFound=account.lookupUserByName(request.getUserName());
  }
 catch (  Exception e) {
    if (e instanceof AuthException && AuthException.NO_SUCH_USER.equals(e.getMessage())) {
      throw new EuareException(HttpResponseStatus.NOT_FOUND,EuareException.NO_SUCH_ENTITY,"Can not find user " + request.getUserName());
    }
 else {
      throw new EucalyptusCloudException(e);
    }
  }
  if (!Permissions.isAuthorized(PolicySpec.VENDOR_IAM,PolicySpec.IAM_RESOURCE_USER,getUserFullName(userFound),account,action,requestUser)) {
    throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to upload signing certificate of " + request.getUserName() + "by "+ requestUser.getName());
  }
  String encodedPem=B64.url.encString(request.getCertificateBody());
  Certificate cert=null;
  try {
    for (    Certificate c : userFound.getCertificates()) {
      if (c.getPem().equals(encodedPem)) {
        if (!c.isRevoked()) {
          throw new EuareException(HttpResponseStatus.CONFLICT,EuareException.DUPLICATE_CERTIFICATE,"Trying to upload duplicate certificate: " + c.getId());
        }
 else {
          userFound.removeCertificate(c.getId());
        }
      }
    }
    X509Certificate x509=X509CertHelper.toCertificate(encodedPem);
    if (x509 == null) {
      throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.INVALID_CERTIFICATE,"Invalid certificate " + request.getCertificateBody());
    }
    cert=userFound.addCertificate(x509);
  }
 catch (  Exception e) {
    throw new EucalyptusCloudException(e);
  }
  SigningCertificateType result=reply.getUploadSigningCertificateResult().getCertificate();
  result.setUserName(userFound.getName());
  result.setCertificateId(cert.getId());
  result.setCertificateBody(request.getCertificateBody());
  result.setStatus("Active");
  result.setUploadDate(cert.getCreateDate());
  return reply;
}
