{
  GetUserPolicyResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  String action=PolicySpec.requestToAction(request);
  User requestUser=Permissions.getUserById(request.getUserId());
  Account account=Permissions.getUserAccount(requestUser);
  User userFound=null;
  try {
    userFound=account.lookupUserByName(request.getUserName());
  }
 catch (  AuthException e) {
    if (AuthException.NO_SUCH_USER.equals(request.getUserName())) {
      throw new EuareException(404,EuareException.NO_SUCH_ENTITY,"Can not find user " + request.getUserName());
    }
 else {
      throw new EucalyptusCloudException(e);
    }
  }
  if (!Permissions.isAuthorized(PolicySpec.IAM_RESOURCE_USER,getUserFullName(userFound),account,action,requestUser)) {
    throw new EuareException(403,EuareException.NOT_AUTHORIZED,"Not authorized to get user policies for " + request.getUserName() + " by "+ requestUser.getName());
  }
  try {
    Policy policy=null;
    for (    Policy p : userFound.getPolicies()) {
      if (p.getName().equals(request.getPolicyName())) {
        policy=p;
        break;
      }
    }
    if (policy != null) {
      GetUserPolicyResultType result=reply.getGetUserPolicyResult();
      result.setUserName(request.getUserName());
      result.setPolicyName(request.getPolicyName());
      result.setPolicyDocument(policy.getText());
    }
 else {
      throw new EuareException(404,EuareException.NO_SUCH_ENTITY,"Can not find policy " + request.getPolicyName());
    }
  }
 catch (  AuthException e) {
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
