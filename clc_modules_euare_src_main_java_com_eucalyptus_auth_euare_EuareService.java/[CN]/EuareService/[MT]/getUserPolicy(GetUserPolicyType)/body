{
  GetUserPolicyResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  Context ctx=Contexts.lookup();
  AuthContext requestUser=getAuthContext(ctx);
  Account account=getRealAccount(ctx,request.getDelegateAccount());
  User userFound=lookupUserByName(account,request.getUserName());
  try {
    Policy policy=Privileged.getUserPolicy(requestUser,account,userFound,request.getPolicyName());
    if (policy != null) {
      GetUserPolicyResultType result=reply.getGetUserPolicyResult();
      result.setUserName(request.getUserName());
      result.setPolicyName(request.getPolicyName());
      result.setPolicyDocument(policy.getText());
    }
 else {
      throw new EuareException(HttpResponseStatus.NOT_FOUND,EuareException.NO_SUCH_ENTITY,"Can not find policy " + request.getPolicyName());
    }
  }
 catch (  EuareException e) {
    LOG.error(e,e);
    throw e;
  }
catch (  Exception e) {
    LOG.error(e,e);
    if (e instanceof AuthException) {
      if (AuthException.ACCESS_DENIED.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to get user policies for " + request.getUserName() + " by "+ ctx.getUser().getName());
      }
 else       if (AuthException.EMPTY_POLICY_NAME.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.INVALID_NAME,"Empty policy name");
      }
    }
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
