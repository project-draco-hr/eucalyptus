{
  GetGroupPolicyResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  String action=PolicySpec.requestToAction(request);
  Context ctx=Contexts.lookup();
  User requestUser=ctx.getUser();
  Account account=ctx.getAccount();
  Group groupFound=null;
  try {
    groupFound=account.lookupGroupByName(request.getGroupName());
  }
 catch (  Exception e) {
    if (e instanceof AuthException && AuthException.NO_SUCH_GROUP.equals(e.getMessage())) {
      throw new EuareException(404,EuareException.NO_SUCH_ENTITY,"Can not find group " + request.getGroupName());
    }
 else {
      throw new EucalyptusCloudException(e);
    }
  }
  if (!Permissions.isAuthorized(PolicySpec.IAM_RESOURCE_GROUP,getGroupFullName(groupFound),account,action,requestUser)) {
    throw new EuareException(403,EuareException.NOT_AUTHORIZED,"Not authorized to get group policy for " + request.getGroupName() + " by "+ requestUser.getName());
  }
  try {
    Policy policy=null;
    for (    Policy p : groupFound.getPolicies()) {
      if (p.getName().equals(request.getPolicyName())) {
        policy=p;
        break;
      }
    }
    if (policy != null) {
      GetGroupPolicyResultType result=reply.getGetGroupPolicyResult();
      result.setGroupName(request.getGroupName());
      result.setPolicyName(request.getPolicyName());
      result.setPolicyDocument(policy.getText());
    }
 else {
      throw new EuareException(404,EuareException.NO_SUCH_ENTITY,"Can not find policy " + request.getPolicyName());
    }
  }
 catch (  Exception e) {
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
