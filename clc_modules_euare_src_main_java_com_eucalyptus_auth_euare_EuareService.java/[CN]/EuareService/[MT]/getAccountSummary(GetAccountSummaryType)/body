{
  GetAccountSummaryResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  Context ctx=Contexts.lookup();
  User requestUser=ctx.getUser();
  Account account=getRealAccount(ctx,request.getDelegateAccount());
  try {
    account=Privileged.getAccountSummary(requestUser,account);
    List<SummaryMapTypeEntryType> map=reply.getGetAccountSummaryResult().getSummaryMap().getEntryList();
    SummaryMapTypeEntryType entry;
    entry=new SummaryMapTypeEntryType();
    entry.setKey("Groups");
    entry.setValue(BigInteger.valueOf(account.getGroups().size()));
    map.add(entry);
    entry=new SummaryMapTypeEntryType();
    entry.setKey("Users");
    entry.setValue(BigInteger.valueOf(account.getUsers().size()));
    map.add(entry);
    return reply;
  }
 catch (  Exception e) {
    LOG.error(e,e);
    if (e instanceof AuthException) {
      if (AuthException.ACCESS_DENIED.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to get account summary by " + requestUser.getName());
      }
    }
    throw new EucalyptusCloudException(e);
  }
}
