{
  UpdateUserInfoResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  Context ctx=Contexts.lookup();
  AuthContext requestUser=getAuthContext(ctx);
  Account account=getRealAccount(ctx,request.getDelegateAccount());
  User userFound=lookupUserByName(account,request.getUserName());
  if (Strings.isNullOrEmpty(request.getInfoKey())) {
    throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.INVALID_NAME,"Empty key name");
  }
  try {
    Privileged.updateUserInfoItem(requestUser,account,userFound,request.getInfoKey(),request.getInfoValue());
  }
 catch (  Exception e) {
    if (e instanceof AuthException) {
      if (AuthException.ACCESS_DENIED.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to get user by " + ctx.getUser().getName());
      }
    }
    LOG.error(e,e);
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
