{
  UpdateGroupResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  Context ctx=Contexts.lookup();
  User requestUser=ctx.getUser();
  Account account=getRealAccount(ctx,request.getDelegateAccount());
  Group groupFound=lookupGroupByName(account,request.getGroupName());
  try {
    String newPath=request.getNewPath() != null ? sanitizePath(request.getNewPath()) : null;
    Privileged.modifyGroup(requestUser,account,groupFound,request.getNewGroupName(),newPath);
  }
 catch (  Exception e) {
    LOG.error(e,e);
    if (e instanceof AuthException) {
      if (AuthException.ACCESS_DENIED.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to update group " + groupFound.getName() + " by "+ requestUser.getName());
      }
 else       if (AuthException.GROUP_ALREADY_EXISTS.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.CONFLICT,EuareException.ENTITY_ALREADY_EXISTS,"Group name " + request.getNewGroupName() + " already exists.");
      }
 else       if (AuthException.INVALID_NAME.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.INVALID_NAME,"Invalid new name " + request.getNewGroupName());
      }
 else       if (AuthException.INVALID_PATH.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.INVALID_PATH,"Invalid new path " + request.getNewPath());
      }
    }
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
