{
  UpdateGroupResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  String action=PolicySpec.requestToAction(request);
  Context ctx=Contexts.lookup();
  User requestUser=ctx.getUser();
  Account account=getRealAccount(ctx,request.getDelegateAccount());
  Group groupFound=null;
  try {
    groupFound=account.lookupGroupByName(request.getGroupName());
  }
 catch (  Exception e) {
    LOG.debug(e,e);
    if (e instanceof AuthException && AuthException.NO_SUCH_GROUP.equals(e.getMessage())) {
      throw new EuareException(HttpResponseStatus.NOT_FOUND,EuareException.NO_SUCH_ENTITY,"Can not find group " + request.getGroupName());
    }
 else {
      throw new EucalyptusCloudException(e);
    }
  }
  if (!Permissions.isAuthorized(PolicySpec.VENDOR_IAM,PolicySpec.IAM_RESOURCE_GROUP,Accounts.getGroupFullName(groupFound),account,action,requestUser)) {
    throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to update group " + groupFound.getName() + " by "+ requestUser.getName());
  }
  try {
    if (!Strings.isNullOrEmpty(request.getNewGroupName())) {
      groupFound.setName(request.getNewGroupName());
    }
    if (!Strings.isNullOrEmpty(request.getNewPath())) {
      groupFound.setPath(sanitizePath(request.getNewPath()));
    }
  }
 catch (  Exception e) {
    LOG.debug(e,e);
    if (e instanceof AuthException) {
      if (AuthException.GROUP_ALREADY_EXISTS.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.CONFLICT,EuareException.ENTITY_ALREADY_EXISTS,"Group name " + request.getNewGroupName() + " already exists.");
      }
      if (AuthException.INVALID_NAME.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.INVALID_NAME,"Invalid new name " + request.getNewGroupName());
      }
      if (AuthException.INVALID_PATH.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.INVALID_PATH,"Invalid new path " + request.getNewPath());
      }
    }
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
