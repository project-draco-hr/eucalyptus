{
  final GetRoleResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  final Context ctx=Contexts.lookup();
  final User requestUser=ctx.getUser();
  final Account account=getRealAccount(ctx,request.getDelegateAccount());
  final Role roleFound=lookupRoleByName(account,request.getRoleName());
  try {
    if (!Privileged.allowReadRole(requestUser,account,roleFound)) {
      throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to get role " + request.getRoleName() + " by "+ requestUser.getName());
    }
    reply.getGetRoleResult().setRole(fillRoleResult(new RoleType(),roleFound));
  }
 catch (  EuareException e) {
    throw e;
  }
catch (  Exception e) {
    LOG.error(e,e);
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
