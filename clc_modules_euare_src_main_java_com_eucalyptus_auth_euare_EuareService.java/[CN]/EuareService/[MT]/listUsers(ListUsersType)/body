{
  ListUsersResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  String action=PolicySpec.requestToAction(request);
  Context ctx=Contexts.lookup();
  User requestUser=ctx.getUser();
  Account account=getRealAccount(ctx,request.getDelegateAccount());
  String path="/";
  if (request.getPathPrefix() != null && !"".equals(request.getPathPrefix())) {
    path=request.getPathPrefix();
  }
  ListUsersResultType result=reply.getListUsersResult();
  result.setIsTruncated(false);
  ArrayList<UserType> users=reply.getListUsersResult().getUsers().getMemberList();
  try {
    for (    User user : account.getUsers()) {
      if (Permissions.isAuthorized(PolicySpec.VENDOR_IAM,PolicySpec.IAM_RESOURCE_USER,getUserFullName(user),account,action,requestUser)) {
        if (user.getPath().startsWith(path)) {
          UserType u=new UserType();
          fillUserResult(u,user,account);
          users.add(u);
        }
      }
    }
  }
 catch (  Exception e) {
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
