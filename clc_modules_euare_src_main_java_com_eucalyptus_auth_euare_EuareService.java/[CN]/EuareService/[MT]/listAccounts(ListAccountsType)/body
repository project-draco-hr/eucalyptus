{
  ListAccountsResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  Context ctx=Contexts.lookup();
  if (!Permissions.perhapsAuthorized(PolicySpec.VENDOR_IAM,PolicySpec.IAM_LISTACCOUNTS,ctx.getAuthContext())) {
    throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to list accounts");
  }
  ArrayList<AccountType> accounts=reply.getListAccountsResult().getAccounts().getMemberList();
  try {
    for (    final Account account : Iterables.filter(Accounts.listAllAccounts(),RestrictedTypes.filterPrivileged())) {
      AccountType at=new AccountType();
      at.setAccountName(account.getName());
      at.setAccountId(account.getAccountNumber());
      accounts.add(at);
    }
  }
 catch (  Exception e) {
    LOG.error(e,e);
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
