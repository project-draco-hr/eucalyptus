{
  ListAccountsResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  Context ctx=Contexts.lookup();
  User requestUser=ctx.getUser();
  if (!ctx.hasAdministrativePrivileges()) {
    throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to list accounts by " + requestUser.getName());
  }
  ArrayList<AccountType> accounts=reply.getListAccountsResult().getAccounts().getMemberList();
  try {
    for (    Account account : Accounts.listAllAccounts()) {
      AccountType at=new AccountType();
      at.setAccountName(account.getName());
      at.setAccountId(account.getAccountNumber());
      accounts.add(at);
    }
  }
 catch (  Exception e) {
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
