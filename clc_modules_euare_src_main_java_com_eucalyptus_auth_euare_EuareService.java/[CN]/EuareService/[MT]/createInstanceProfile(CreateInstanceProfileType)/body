{
  final CreateInstanceProfileResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  final Context ctx=Contexts.lookup();
  final User requestUser=ctx.getUser();
  final Account account=getRealAccount(ctx,request.getDelegateAccount());
  try {
    final InstanceProfile newInstanceProfile=Privileged.createInstanceProfile(requestUser,account,request.getInstanceProfileName(),sanitizePath(request.getPath()));
    reply.getCreateInstanceProfileResult().setInstanceProfile(fillInstanceProfileResult(new InstanceProfileType(),newInstanceProfile));
  }
 catch (  Exception e) {
    LOG.error(e,e);
    if (e instanceof AuthException) {
      if (AuthException.ACCESS_DENIED.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to create instance profile by " + requestUser.getName());
      }
 else       if (AuthException.QUOTA_EXCEEDED.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.CONFLICT,EuareException.LIMIT_EXCEEDED,"Instance profile quota exceeded");
      }
 else       if (AuthException.INSTANCE_PROFILE_ALREADY_EXISTS.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.CONFLICT,EuareException.ENTITY_ALREADY_EXISTS,"Instance profile " + request.getInstanceProfileName() + " already exists.");
      }
 else       if (AuthException.INVALID_NAME.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.INVALID_NAME,"Invalid instance profile name " + request.getInstanceProfileName());
      }
 else       if (AuthException.INVALID_PATH.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.INVALID_PATH,"Invalid instance profile path " + request.getPath());
      }
    }
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
