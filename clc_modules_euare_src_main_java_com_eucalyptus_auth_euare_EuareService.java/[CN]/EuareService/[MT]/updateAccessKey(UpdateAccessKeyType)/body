{
  UpdateAccessKeyResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  Context ctx=Contexts.lookup();
  AuthContext requestUser=getAuthContext(ctx);
  Account account=getRealAccount(ctx,request);
  EuareUser userFound=lookupUser(ctx);
  if (!Strings.isNullOrEmpty(request.getUserName())) {
    userFound=lookupUserByName(account,request.getUserName());
  }
  try {
    Privileged.modifyAccessKey(requestUser,account,userFound,request.getAccessKeyId(),request.getStatus());
  }
 catch (  Exception e) {
    if (e instanceof AuthException) {
      if (AuthException.ACCESS_DENIED.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.FORBIDDEN,EuareException.NOT_AUTHORIZED,"Not authorized to update access key of " + request.getUserName() + "by "+ ctx.getUser().getName());
      }
 else       if (AuthException.EMPTY_KEY_ID.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.INVALID_ID,"Empty access key id");
      }
 else       if (AuthException.EMPTY_STATUS.equals(e.getMessage())) {
        throw new EuareException(HttpResponseStatus.BAD_REQUEST,EuareException.INVALID_VALUE,"Empty status");
      }
    }
    LOG.error(e,e);
    throw new EucalyptusCloudException(e);
  }
  return reply;
}
