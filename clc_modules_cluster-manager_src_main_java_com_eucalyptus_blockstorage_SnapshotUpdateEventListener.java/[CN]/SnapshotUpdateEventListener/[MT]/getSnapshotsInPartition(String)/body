{
  final ServiceConfiguration scConfig=Topology.lookup(Storage.class,Partitions.lookupByName(partition));
  try {
    final CheckedListenableFuture<DescribeStorageSnapshotsResponseType> describeFuture=AsyncRequests.dispatch(scConfig,new DescribeStorageSnapshotsType());
    return new Supplier<Map<String,StorageSnapshot>>(){
      @Override public Map<String,StorageSnapshot> get(){
        final Map<String,StorageSnapshot> storageSnapshots=Maps.newHashMap();
        try {
          final DescribeStorageSnapshotsResponseType snapshotInfo=describeFuture.get();
          for (          final StorageSnapshot storageSnapshot : snapshotInfo.getSnapshotSet()) {
            storageSnapshots.put(storageSnapshot.getSnapshotId(),storageSnapshot);
          }
        }
 catch (        final Exception ex) {
          LOG.error(ex);
          Logs.extreme().error(ex,ex);
        }
        return storageSnapshots;
      }
    }
;
  }
 catch (  final Exception ex) {
    LOG.error(ex);
    Logs.extreme().error(ex,ex);
  }
  return Suppliers.ofInstance(Collections.<String,StorageSnapshot>emptyMap());
}
