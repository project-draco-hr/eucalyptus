{
  try {
    try {
      final Multimap<String,Snapshot> snapshots=ArrayListMultimap.create();
      for (      Snapshot s : Snapshots.list()) {
        snapshots.put(s.getPartition(),s);
      }
      final Map<String,Collection<Snapshot>> snapshotsByPartition=ImmutableMap.copyOf(snapshots.asMap());
      final Map<String,Supplier<Map<String,StorageSnapshot>>> scSnapshotsByPartition=Maps.newHashMap();
      for (      final String partition : snapshotsByPartition.keySet()) {
        scSnapshotsByPartition.put(partition,getSnapshotsInPartition(partition));
      }
      for (      final String partition : snapshotsByPartition.keySet()) {
        try {
          final Map<String,StorageSnapshot> storageSnapshots=scSnapshotsByPartition.get(partition).get();
          for (          final Snapshot snapshot : snapshotsByPartition.get(partition)) {
            final StorageSnapshot storageSnapshot=storageSnapshots.remove(snapshot.getDisplayName());
            updateSnapshot(snapshot,storageSnapshot);
          }
          for (          StorageSnapshot unknownSnapshot : storageSnapshots.values()) {
            LOG.trace("SnapshotStateUpdate: found unknown snapshot: " + unknownSnapshot.getSnapshotId() + " "+ unknownSnapshot.getStatus());
          }
        }
 catch (        Exception ex) {
          LOG.error(ex);
          Logs.extreme().error(ex,ex);
        }
      }
    }
 catch (    Exception ex) {
      LOG.error(ex);
      Logs.extreme().error(ex,ex);
    }
  }
  finally {
    ready.set(true);
  }
  return true;
}
