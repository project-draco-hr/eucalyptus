{
  boolean timedOut=false;
  State newState=entity.getState();
  Optional<String> progressUpdate=Optional.absent();
  if (storageSnapshot != null) {
    if (storageSnapshot.getStatus() != null) {
      final Optional<State> stateUpdate=StorageUtil.mapState(storageSnapshot.getStatus());
      if (stateUpdate != null) {
        newState=stateUpdate.get();
      }
    }
    if (!State.EXTANT.equals(newState) && storageSnapshot.getProgress() != null) {
      progressUpdate=Optional.of(storageSnapshot.getProgress());
    }
 else     if (State.EXTANT.equals(newState)) {
      progressUpdate=Optional.of("100%");
    }
 else     if (State.GENERATING.equals(newState)) {
      if (entity.getProgress() == null) {
        progressUpdate=Optional.of("0%");
      }
    }
  }
 else   if (SNAPSHOT_TIMEOUT_STATES.contains(entity.getState()) && entity.lastUpdateMillis() > SNAPSHOT_STATE_TIMEOUT) {
    timedOut=true;
  }
 else {
    if (State.EXTANT.equals(entity.getState())) {
      progressUpdate=Optional.of("100%");
    }
 else     if (State.GENERATING.equals(entity.getState())) {
      if (entity.getProgress() == null) {
        progressUpdate=Optional.of("0%");
      }
    }
  }
  return new SnapshotStateChange(timedOut,newState,progressUpdate);
}
