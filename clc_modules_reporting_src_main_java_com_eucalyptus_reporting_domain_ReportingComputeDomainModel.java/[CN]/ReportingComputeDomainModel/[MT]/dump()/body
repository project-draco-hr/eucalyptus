{
  final StringBuilder builder=new StringBuilder(512);
  builder.append("Compute capacity:\n");
  builder.append("IP Addresses: ").append(globalModel.getNumPublicIpsAvailable()).append("/").append(globalModel.getNumPublicIpsTotal()).append("\n");
  builder.append("S3 Storage  : ").append(globalModel.getSizeS3ObjectAvailableGB()).append("/").append(globalModel.getSizeS3ObjectTotalGB()).append(" GiB\n");
  for (  final Map.Entry<String,ReportingComputeZoneDomainModel> modelEntry : zoneModels.entrySet()) {
    builder.append(modelEntry.getKey()).append(":\n");
    builder.append("\t").append("Cores      : ").append(modelEntry.getValue().getEc2ComputeUnitsAvailable()).append("/").append(modelEntry.getValue().getEc2ComputeUnitsTotal()).append("\n");
    builder.append("\t").append("Disk       : ").append(modelEntry.getValue().getEc2DiskUnitsAvailable()).append("/").append(modelEntry.getValue().getEc2DiskUnitsTotal()).append(" GiB\n");
    builder.append("\t").append("Memory     : ").append(modelEntry.getValue().getEc2MemoryUnitsAvailable()).append("/").append(modelEntry.getValue().getEc2MemoryUnitsTotal()).append(" MiB\n");
    builder.append("\t").append("EBS Storage: ").append(modelEntry.getValue().getSizeEbsAvailableGB()).append("/").append(modelEntry.getValue().getSizeEbsTotalGB()).append(" GiB\n");
  }
  return builder.toString();
}
