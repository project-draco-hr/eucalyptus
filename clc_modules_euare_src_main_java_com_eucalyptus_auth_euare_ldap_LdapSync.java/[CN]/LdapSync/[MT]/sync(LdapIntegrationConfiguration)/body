{
  Map<String,Set<String>> accountingGroups=Maps.newHashMap();
  Map<String,String> groupDnToId=Maps.newHashMap();
  Map<String,Set<String>> groups=Maps.newHashMap();
  Map<String,String> userDnToId=Maps.newHashMap();
  Map<String,Map<String,String>> users=Maps.newHashMap();
  LdapClient ldap=null;
  try {
    ldap=LdapClient.authenticateClient(lic);
    loadLdapUsers(ldap,lic,userDnToId,users);
    loadLdapGroups(ldap,lic,userDnToId,groupDnToId,groups);
    if (lic.hasAccountingGroups()) {
      loadLdapAccountingGroups(ldap,lic,groupDnToId,accountingGroups);
    }
 else {
      accountingGroups=lic.getGroupsPartition();
    }
  }
 catch (  Exception e) {
    LOG.error(e,e);
    LOG.error("Failed to sync with LDAP",e);
    return;
  }
 finally {
    if (ldap != null) {
      ldap.close();
    }
  }
  if (VERBOSE) {
    LOG.debug("Sync remote accounts: " + accountingGroups);
    LOG.debug("Sync remote groups: " + groups);
    LOG.debug("Sync remote users: " + users);
  }
  checkConflictingIdentities(accountingGroups,groups,users);
  rebuildLocalAuthDatabase(lic,accountingGroups,groups,users);
}
