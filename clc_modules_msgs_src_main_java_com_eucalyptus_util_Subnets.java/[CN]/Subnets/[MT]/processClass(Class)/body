{
  if (Ats.from(candidate).has(SystemSubnetPredicate.class) && Predicate.class.isAssignableFrom(candidate) && !Modifier.isAbstract(candidate.getModifiers())) {
    try {
      Predicate<InetAddress> resolver=(Predicate<InetAddress>)candidate.newInstance();
      subnetCheckers.putInstance(candidate,resolver);
      return true;
    }
 catch (    Exception ex) {
      LOG.error("Failed to create instance of SystemSubnetPredicate: " + candidate + " because of: "+ ex.getMessage());
    }
  }
  return false;
}
