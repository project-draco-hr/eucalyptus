{
  GetBucketAccessControlPolicyResponseType reply=(GetBucketAccessControlPolicyResponseType)request.getReply();
  String bucketName=request.getBucket();
  String userId=request.getUserId();
  String ownerId=null;
  EntityWrapper<BucketInfo> db=WalrusControl.getEntityWrapper();
  BucketInfo bucketInfo=new BucketInfo(bucketName);
  List<BucketInfo> bucketList=db.query(bucketInfo);
  AccessControlListType accessControlList=new AccessControlListType();
  if (bucketList.size() > 0) {
    BucketInfo bucket=bucketList.get(0);
    List<GrantInfo> grantInfos=bucket.getGrants();
    if (bucket.canReadACP(userId)) {
      ownerId=bucket.getOwnerId();
      ArrayList<Grant> grants=new ArrayList<Grant>();
      bucket.readPermissions(grants);
      for (      GrantInfo grantInfo : grantInfos) {
        String uId=grantInfo.getUserId();
        try {
          if (uId != null) {
            User grantUserInfo=CredentialProvider.getUser(uId);
            addPermission(grants,grantUserInfo,grantInfo);
          }
 else {
            addPermission(grants,grantInfo);
          }
        }
 catch (        NoSuchUserException e) {
          db.rollback();
          throw new AccessDeniedException("Bucket",bucketName);
        }
      }
      accessControlList.setGrants(grants);
    }
  }
 else {
    db.rollback();
    throw new NoSuchBucketException(bucketName);
  }
  AccessControlPolicyType accessControlPolicy=new AccessControlPolicyType();
  try {
    User ownerUserInfo=CredentialProvider.getUser(ownerId);
    accessControlPolicy.setOwner(new CanonicalUserType(ownerUserInfo.getQueryId(),ownerUserInfo.getUserName()));
    accessControlPolicy.setAccessControlList(accessControlList);
  }
 catch (  NoSuchUserException e) {
    db.rollback();
    throw new AccessDeniedException("Bucket",bucketName);
  }
  reply.setAccessControlPolicy(accessControlPolicy);
  db.commit();
  return reply;
}
