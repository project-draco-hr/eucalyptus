{
  ListAllMyBucketsResponseType reply=(ListAllMyBucketsResponseType)request.getReply();
  Context ctx=Contexts.lookup();
  Account account=ctx.getAccount();
  if (account == null) {
    throw new AccessDeniedException("no such account");
  }
  EntityWrapper<BucketInfo> db=EntityWrapper.get(BucketInfo.class);
  BucketInfo searchBucket=new BucketInfo();
  searchBucket.setOwnerId(account.getId());
  searchBucket.setHidden(false);
  List<BucketInfo> bucketInfoList=db.query(searchBucket);
  ArrayList<BucketListEntry> buckets=new ArrayList<BucketListEntry>();
  for (  BucketInfo bucketInfo : bucketInfoList) {
    if (ctx.hasAdministrativePrivileges() || Lookups.checkPrivilege(PolicySpec.S3_LISTALLMYBUCKETS,PolicySpec.VENDOR_S3,PolicySpec.S3_RESOURCE_BUCKET,bucketInfo.getBucketName(),bucketInfo.getOwnerId())) {
      EntityWrapper<WalrusSnapshotInfo> dbSnap=db.recast(WalrusSnapshotInfo.class);
      WalrusSnapshotInfo walrusSnapInfo=new WalrusSnapshotInfo();
      walrusSnapInfo.setSnapshotBucket(bucketInfo.getBucketName());
      List<WalrusSnapshotInfo> walrusSnaps=dbSnap.query(walrusSnapInfo);
      if (walrusSnaps.size() > 0)       continue;
    }
    buckets.add(new BucketListEntry(bucketInfo.getBucketName(),DateUtils.format(bucketInfo.getCreationDate().getTime(),DateUtils.ISO8601_DATETIME_PATTERN) + ".000Z"));
  }
  try {
    CanonicalUserType owner=new CanonicalUserType(account.getName(),account.getId());
    ListAllMyBucketsList bucketList=new ListAllMyBucketsList();
    reply.setOwner(owner);
    bucketList.setBuckets(buckets);
    reply.setBucketList(bucketList);
  }
 catch (  Exception ex) {
    db.rollback();
    LOG.error(ex);
    throw new AccessDeniedException("Account: " + account.getName() + " not found",ex);
  }
  db.commit();
  return reply;
}
