{
  ListAllMyBucketsResponseType reply=(ListAllMyBucketsResponseType)request.getReply();
  Context ctx=Contexts.lookup();
  Account account=ctx.getAccount();
  if (account == null) {
    throw new AccessDeniedException("no such account");
  }
  EntityWrapper<BucketInfo> db=EntityWrapper.get(BucketInfo.class);
  try {
    BucketInfo searchBucket=new BucketInfo();
    searchBucket.setOwnerId(account.getAccountNumber());
    searchBucket.setHidden(false);
    List<BucketInfo> bucketInfoList=db.query(searchBucket);
    ArrayList<BucketListEntry> buckets=new ArrayList<BucketListEntry>();
    for (    BucketInfo bucketInfo : bucketInfoList) {
      if (ctx.hasAdministrativePrivileges()) {
        EntityWrapper<WalrusSnapshotInfo> dbSnap=EntityWrapper.get(WalrusSnapshotInfo.class);
        try {
          WalrusSnapshotInfo walrusSnapInfo=new WalrusSnapshotInfo();
          walrusSnapInfo.setSnapshotBucket(bucketInfo.getBucketName());
          List<WalrusSnapshotInfo> walrusSnaps=dbSnap.query(walrusSnapInfo);
          dbSnap.commit();
          if (walrusSnaps.size() > 0)           continue;
        }
 catch (        Exception eee) {
          LOG.debug(eee,eee);
          dbSnap.rollback();
        }
      }
      if (ctx.hasAdministrativePrivileges() || Lookups.checkPrivilege(PolicySpec.S3_LISTALLMYBUCKETS,PolicySpec.VENDOR_S3,PolicySpec.S3_RESOURCE_BUCKET,bucketInfo.getBucketName(),bucketInfo.getOwnerId())) {
        buckets.add(new BucketListEntry(bucketInfo.getBucketName(),DateUtils.format(bucketInfo.getCreationDate().getTime(),DateUtils.ISO8601_DATETIME_PATTERN) + ".000Z"));
      }
    }
    try {
      CanonicalUserType owner=new CanonicalUserType(account.getName(),account.getAccountNumber());
      ListAllMyBucketsList bucketList=new ListAllMyBucketsList();
      reply.setOwner(owner);
      bucketList.setBuckets(buckets);
      reply.setBucketList(bucketList);
    }
 catch (    Exception ex) {
      db.rollback();
      LOG.error(ex);
      throw new AccessDeniedException("Account: " + account.getName() + " not found",ex);
    }
    db.commit();
  }
 catch (  EucalyptusCloudException e) {
    db.rollback();
    throw e;
  }
catch (  Exception e) {
    LOG.debug(e,e);
    db.rollback();
  }
  return reply;
}
