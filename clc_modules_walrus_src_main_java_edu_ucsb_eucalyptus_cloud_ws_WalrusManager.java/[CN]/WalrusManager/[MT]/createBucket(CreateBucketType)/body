{
  CreateBucketResponseType reply=(CreateBucketResponseType)request.getReply();
  String userId=request.getUserId();
  String bucketName=request.getBucket();
  String locationConstraint=request.getLocationConstraint();
  if (userId == null) {
    throw new AccessDeniedException("Bucket",bucketName);
  }
  AccessControlListType accessControlList=request.getAccessControlList();
  if (accessControlList == null) {
    accessControlList=new AccessControlListType();
  }
  makeBucket(userId,bucketName,locationConstraint,accessControlList,request.isAdministrator());
  try {
    storageManager.createBucket(bucketName);
    if (WalrusProperties.trackUsageStatistics)     walrusStatistics.incrementBucketCount();
  }
 catch (  IOException ex) {
    LOG.error(ex);
    throw new EucalyptusCloudException(bucketName);
  }
  if (WalrusProperties.enableVirtualHosting) {
    UpdateARecordType updateARecord=new UpdateARecordType();
    updateARecord.setUserId(userId);
    String address=WalrusProperties.WALRUS_IP;
    String zone=WalrusProperties.WALRUS_SUBDOMAIN + ".";
    updateARecord.setAddress(address);
    updateARecord.setName(bucketName + "." + zone);
    updateARecord.setTtl(604800);
    updateARecord.setZone(zone);
    try {
      ServiceDispatcher.lookupSingle(Component.dns).send(updateARecord);
      LOG.info("Mapping " + updateARecord.getName() + " to "+ address);
    }
 catch (    Exception ex) {
      LOG.error("Could not update DNS record",ex);
    }
  }
  reply.setBucket(bucketName);
  return reply;
}
