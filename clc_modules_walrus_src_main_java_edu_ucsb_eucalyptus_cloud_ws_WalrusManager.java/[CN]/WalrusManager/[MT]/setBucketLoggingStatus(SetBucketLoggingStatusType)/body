{
  SetBucketLoggingStatusResponseType reply=(SetBucketLoggingStatusResponseType)request.getReply();
  String bucket=request.getBucket();
  Context ctx=Contexts.lookup();
  EntityWrapper<BucketInfo> db=EntityWrapper.get(BucketInfo.class);
  BucketInfo bucketInfo, targetBucketInfo;
  try {
    bucketInfo=db.getUniqueEscape(new BucketInfo(bucket));
  }
 catch (  EucalyptusCloudException ex) {
    db.rollback();
    throw new NoSuchBucketException(bucket);
  }
  if (ctx.hasAdministrativePrivileges() || Lookups.checkPrivilege(bucketInfo.getOwnerId())) {
    if (request.getLoggingEnabled() != null) {
      String targetBucket=request.getLoggingEnabled().getTargetBucket();
      String targetPrefix=request.getLoggingEnabled().getTargetPrefix();
      List<Grant> targetGrantsList=null;
      TargetGrants targetGrants=request.getLoggingEnabled().getTargetGrants();
      if (targetGrants != null)       targetGrantsList=targetGrants.getGrants();
      if (targetPrefix == null)       targetPrefix="";
      try {
        targetBucketInfo=db.getUniqueEscape(new BucketInfo(targetBucket));
      }
 catch (      EucalyptusCloudException ex) {
        db.rollback();
        throw new NoSuchBucketException(targetBucket);
      }
      if (!targetBucketInfo.hasLoggingPerms()) {
        db.rollback();
        throw new InvalidTargetBucketForLoggingException(targetBucket);
      }
      bucketInfo.setTargetBucket(targetBucket);
      bucketInfo.setTargetPrefix(targetPrefix);
      bucketInfo.setLoggingEnabled(true);
      if (targetGrantsList != null) {
        targetBucketInfo.addGrants(targetGrantsList);
      }
    }
 else {
      bucketInfo.setLoggingEnabled(false);
    }
  }
 else {
    LOG.error("Not authorized to set bucket logging status by " + ctx.getUserFullName());
    db.rollback();
    throw new AccessDeniedException("Bucket",bucketInfo.getBucketName());
  }
  db.commit();
  return reply;
}
