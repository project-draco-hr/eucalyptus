{
  DeleteBucketResponseType reply=(DeleteBucketResponseType)request.getReply();
  String bucketName=request.getBucket();
  String userId=request.getUserId();
  EntityWrapper<BucketInfo> db=WalrusControl.getEntityWrapper();
  BucketInfo searchBucket=new BucketInfo(bucketName);
  List<BucketInfo> bucketList=db.query(searchBucket);
  if (bucketList.size() > 0) {
    BucketInfo bucketFound=bucketList.get(0);
    BucketLogData logData=bucketFound.getLoggingEnabled() ? request.getLogData() : null;
    if (bucketFound.canWrite(userId)) {
      EntityWrapper<ObjectInfo> dbObject=db.recast(ObjectInfo.class);
      ObjectInfo searchObject=new ObjectInfo();
      searchObject.setBucketName(bucketName);
      searchObject.setDeleted(false);
      List<ObjectInfo> objectInfos=dbObject.query(searchObject);
      if (objectInfos.size() == 0) {
        EntityWrapper<ImageCacheInfo> dbIC=db.recast(ImageCacheInfo.class);
        ImageCacheInfo searchImageCacheInfo=new ImageCacheInfo();
        searchImageCacheInfo.setBucketName(bucketName);
        List<ImageCacheInfo> foundImageCacheInfos=dbIC.query(searchImageCacheInfo);
        if (foundImageCacheInfos.size() > 0) {
          ImageCacheInfo foundImageCacheInfo=foundImageCacheInfos.get(0);
          walrusImageManager.startImageCacheFlusher(bucketName,foundImageCacheInfo.getManifestName());
        }
        db.delete(bucketFound);
        try {
          storageManager.deleteBucket(bucketName);
          if (WalrusProperties.trackUsageStatistics)           walrusStatistics.decrementBucketCount();
        }
 catch (        IOException ex) {
          LOG.error(ex);
        }
        if (WalrusProperties.enableVirtualHosting) {
          URI walrusUri;
          String address;
          RemoveARecordType removeARecordType=new RemoveARecordType();
          removeARecordType.setUserId(userId);
          String zone=WalrusProperties.WALRUS_SUBDOMAIN + ".";
          removeARecordType.setName(bucketName + "." + zone);
          removeARecordType.setZone(zone);
          try {
            walrusUri=new URI(SystemConfiguration.getWalrusUrl());
            address=walrusUri.getHost();
          }
 catch (          URISyntaxException e) {
            throw new EucalyptusCloudException("Could not get Walrus URL");
          }
          removeARecordType.setAddress(address);
          try {
            ServiceDispatcher.lookupSingle(Component.dns).send(removeARecordType);
            LOG.info("Removing mapping for " + removeARecordType.getName());
          }
 catch (          Exception ex) {
            LOG.error("Could not update DNS record",ex);
          }
        }
        Status status=new Status();
        status.setCode(204);
        status.setDescription("No Content");
        reply.setStatus(status);
        if (logData != null) {
          updateLogData(bucketFound,logData);
          reply.setLogData(logData);
        }
      }
 else {
        db.rollback();
        throw new BucketNotEmptyException(bucketName,logData);
      }
    }
 else {
      db.rollback();
      throw new AccessDeniedException("Bucket",bucketName,logData);
    }
  }
 else {
    db.rollback();
    throw new NoSuchBucketException(bucketName);
  }
  db.commit();
  return reply;
}
