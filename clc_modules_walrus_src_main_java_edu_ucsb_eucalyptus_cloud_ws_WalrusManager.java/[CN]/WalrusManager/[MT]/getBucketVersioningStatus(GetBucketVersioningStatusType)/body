{
  GetBucketVersioningStatusResponseType reply=(GetBucketVersioningStatusResponseType)request.getReply();
  String bucket=request.getBucket();
  Context ctx=Contexts.lookup();
  EntityWrapper<BucketInfo> db=EntityWrapper.get(BucketInfo.class);
  try {
    BucketInfo bucketInfo=db.getUnique(new BucketInfo(bucket));
    if (ctx.hasAdministrativePrivileges() || Lookups.checkPrivilege(PolicySpec.S3_GETBUCKETVERSIONING,PolicySpec.VENDOR_S3,PolicySpec.S3_RESOURCE_BUCKET,bucket,bucketInfo.getOwnerId())) {
      if (bucketInfo.getVersioning() != null) {
        String status=bucketInfo.getVersioning();
        if (WalrusProperties.VersioningStatus.Disabled.toString().equals(status)) {
        }
 else {
          reply.setVersioningStatus(status);
        }
      }
    }
 else {
      LOG.error("Not authorized to get bucket version status by " + ctx.getUserFullName());
      db.rollback();
      throw new AccessDeniedException("Bucket",bucketInfo.getBucketName());
    }
  }
 catch (  EucalyptusCloudException ex) {
    db.rollback();
    throw new NoSuchBucketException(bucket);
  }
  db.commit();
  return reply;
}
