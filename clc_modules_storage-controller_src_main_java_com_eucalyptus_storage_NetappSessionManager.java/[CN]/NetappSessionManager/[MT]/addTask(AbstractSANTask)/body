{
  final NetappSANTask sanTask=(NetappSANTask)task;
  pool.execute(new Runnable(){
    @Override public void run(){
      NaElement request=sanTask.getCommand();
      try {
        if (connection == null) {
          try {
            connect();
          }
 catch (          EucalyptusCloudException e) {
            LOG.error(e);
            sanTask.setErrorMessage(e.getMessage());
synchronized (task) {
              sanTask.notifyAll();
            }
          }
        }
        NaElement reply=connection.invokeElem(request);
synchronized (task) {
          sanTask.setValue(reply);
          sanTask.notifyAll();
        }
      }
 catch (      NaAuthenticationException e) {
        LOG.error(e);
        sanTask.setErrorMessage(e.getMessage());
synchronized (task) {
          sanTask.notifyAll();
        }
      }
catch (      NaAPIFailedException e) {
        LOG.error(e);
        sanTask.setErrorMessage(e.getMessage());
synchronized (task) {
          sanTask.notifyAll();
        }
      }
catch (      NaProtocolException e) {
        LOG.error(e);
        sanTask.setErrorMessage(e.getMessage());
synchronized (task) {
          sanTask.notifyAll();
        }
      }
catch (      IOException e) {
        try {
          refresh();
          addTask(task);
        }
 catch (        Exception ex) {
          LOG.error(ex);
          sanTask.setErrorMessage(e.getMessage());
synchronized (task) {
            sanTask.notifyAll();
          }
        }
      }
    }
  }
);
}
