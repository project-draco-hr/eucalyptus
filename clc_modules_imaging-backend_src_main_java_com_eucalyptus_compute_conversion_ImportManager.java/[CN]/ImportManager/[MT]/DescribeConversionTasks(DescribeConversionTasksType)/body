{
  DescribeConversionTasksResponseType reply=request.getReply();
  Context ctx=Contexts.lookup();
  boolean verbose=request.getConversionTaskIdSet().remove("verbose");
  try {
    if (!Permissions.isAuthorized(VENDOR_EC2,EC2_RESOURCE_VOLUME,"",null,EC2_DESCRIBECONVERSIONTASKS,ctx.getAuthContext())) {
      throw new ImagingServiceException(ImagingServiceException.DEFAULT_CODE,"Not authorized to describe conversion tasks.");
    }
  }
 catch (  final ImagingServiceException ex) {
    throw ex;
  }
catch (  final Exception ex) {
    throw new ImagingServiceException(ImagingServiceException.DEFAULT_CODE,"Not authorized to describe conversion tasks.");
  }
  if (ctx.isAdministrator() && verbose) {
    Iterable<ImagingTask> tasksToList=ImagingTasks.getImagingTasks();
    for (    ImagingTask task : tasksToList) {
      if (task instanceof VolumeImagingTask) {
        ConversionTask t=((VolumeImagingTask)task).getTask();
        reply.getConversionTasks().add(t);
      }
 else       if (task instanceof DiskImagingTask) {
        DiskImageConversionTask t=((DiskImagingTask)task).getTask();
        ConversionTask tt=new ConversionTask();
        tt.setConversionTaskId(t.getConversionTaskId());
        tt.setState(t.getState());
        tt.setStatusMessage(t.getStatusMessage());
        tt.setImageConversion("true");
        reply.getConversionTasks().add(tt);
      }
    }
  }
 else {
    final Predicate<? super VolumeImagingTask> requestedAndAccessible=RestrictedTypes.filteringFor(VolumeImagingTask.class).byId(request.getConversionTaskIdSet()).byOwningAccount(Collections.singleton(ctx.getAccount().getAccountNumber())).byPrivileges().buildPredicate();
    Iterable<VolumeImagingTask> tasksToList=ImagingTasks.getVolumeImagingTasks();
    for (    VolumeImagingTask task : Iterables.filter(tasksToList,requestedAndAccessible)) {
      ConversionTask t=task.getTask();
      reply.getConversionTasks().add(t);
    }
  }
  return reply;
}
