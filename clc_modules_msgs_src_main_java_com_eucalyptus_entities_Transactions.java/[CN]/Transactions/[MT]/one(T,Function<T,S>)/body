{
  assertThat(search,notNullValue());
  assertThat(f,notNullValue());
  EntityWrapper<T> db=Transactions.get(search);
  try {
    T entity=db.getUnique(search);
    try {
      S res=f.apply(entity);
      return res;
    }
 catch (    Exception ex) {
      throw new TransactionCallbackException(ex);
    }
  }
 catch (  TransactionCallbackException e) {
    db.rollback();
    Logs.extreme().error(e,e);
    throw e;
  }
catch (  UndeclaredThrowableException e) {
    db.rollback();
    Logs.extreme().error(e,e);
    if (e.getCause() instanceof TransactionException) {
      throw e;
    }
 else {
      throw new TransactionCallbackException(e.getCause());
    }
  }
catch (  Exception t) {
    db.rollback();
    throw Transactions.transformException(t);
  }
 finally {
    pop();
  }
}
