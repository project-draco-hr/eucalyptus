{
  if (!ReportingService.REPORTING_SERVICE_ENABLED) {
    ReportingService.faultDisableReportingServiceIfNecessary();
    LOG.trace("Reporting service disabled....ResourceAvailabilityEvent discarded");
    return;
  }
  Preconditions.checkNotNull(event,"Event is required");
  final ModelComputeUpdater<ReportingComputeZoneDomainModel> zoneSetter=zoneSetters.get(event.getType());
  final ModelComputeUpdater<ReportingComputeDomainModel> globalSetter=globalSetters.get(event.getType());
  for (  final Availability availability : event.getAvailability()) {
    if (zoneSetter != null) {
      final ReportingComputeZoneDomainModel zoneModel=getZoneModelForTags(availability.getTags());
      if (zoneModel == null)       continue;
      zoneSetter.update(zoneModel,availability.getTags(),availability.getAvailable(),availability.getTotal());
    }
    if (globalSetter != null) {
      final ReportingComputeDomainModel globalModel=getReportingComputeDomainModel();
      globalSetter.update(globalModel,availability.getTags(),availability.getAvailable(),availability.getTotal());
    }
  }
}
