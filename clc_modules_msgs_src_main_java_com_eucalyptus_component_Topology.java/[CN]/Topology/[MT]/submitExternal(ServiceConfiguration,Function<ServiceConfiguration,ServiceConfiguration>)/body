{
  Logs.exhaust().debug(EventRecord.here(Topology.class,EventType.ENQUEUE,Topology.this.toString(),function.toString(),config.toString()));
  final Long queueStart=System.currentTimeMillis();
  return Threads.lookup(Empyrean.class,Topology.class,"submitExternal").submit(new Callable<ServiceConfiguration>(){
    @Override public ServiceConfiguration call() throws Exception {
      if (Bootstrap.isShuttingDown()) {
        return null;
      }
 else {
        Bootstrap.awaitFinished();
        Long serviceStart=System.currentTimeMillis();
        Logs.exhaust().debug(EventRecord.here(Topology.class,EventType.DEQUEUE,Topology.this.toString(),function.toString(),config.toString()).append(EventType.QUEUE_TIME.name(),Long.toString(serviceStart - queueStart)));
        try {
          ServiceConfiguration result=function.apply(config);
          Long finish=System.currentTimeMillis();
          Logs.exhaust().debug(EventRecord.here(Topology.class,EventType.QUEUE,Topology.this.toString(),function.toString(),config.toString()).append(EventType.SERVICE_TIME.name(),Long.toString(finish - serviceStart)));
          return result;
        }
 catch (        Exception ex) {
          Logs.exhaust().error(ex,ex);
          LOG.error(ex);
          throw ex;
        }
      }
    }
  }
);
}
