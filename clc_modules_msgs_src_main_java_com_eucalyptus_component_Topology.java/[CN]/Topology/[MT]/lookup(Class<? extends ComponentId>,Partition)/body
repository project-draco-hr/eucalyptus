{
  final ComponentId compId=ComponentIds.lookup(compClass);
  final Partition partition=((maybePartition != null) && (maybePartition.length > 0) ? (compId.isPartitioned() ? maybePartition[0] : null) : null);
  ServiceConfiguration res=null;
  if (ComponentIds.lookup(compClass).isManyToOnePartition()) {
    if (partition != null) {
      res=Iterables.getFirst(ServiceConfigurations.filter(compClass,ServiceConfigurations.filterByPartition(partition)),null);
    }
 else {
      res=Iterables.getFirst(ServiceConfigurations.filter(compClass,ServiceConfigurations.filterEnabled()),null);
    }
  }
 else {
    res=Topology.getInstance().getServices().get(ServiceKey.create(ComponentIds.lookup(compClass),partition));
    if (res == null && !compClass.equals(compId.partitionParent().getClass()) && !compId.isAlwaysLocal()) {
      try {
        ServiceConfiguration parent=Topology.getInstance().getServices().get(ServiceKey.create(compId.partitionParent(),null));
        Partition fakePartition=Partitions.lookupInternal(ServiceConfigurations.createEphemeral(compId,parent.getInetAddress()));
        res=Topology.getInstance().getServices().get(ServiceKey.create(compId,fakePartition));
      }
 catch (      RuntimeException e) {
        res=null;
      }
    }
 else     if (res == null && (compId.isAlwaysLocal() || (BootstrapArgs.isCloudController() && compId.isCloudLocal() && !compId.isRegisterable()))) {
      res=Topology.getInstance().getServices().get(ServiceKey.create(ServiceConfigurations.createEphemeral(compId)));
    }
  }
  String err="Failed to lookup ENABLED service of type " + compClass.getSimpleName() + (partition != null ? " in partition " + partition : ".");
  if (res == null) {
    throw new NoSuchElementException(err);
  }
 else   if (!Component.State.ENABLED.apply(res)) {
    throw new NoSuchElementException(err + "  Service is currently ENABLING.");
  }
 else {
    return res;
  }
}
