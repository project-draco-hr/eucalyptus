{
  final ServiceKey key=ServiceKey.create(arg0);
  if (!Hosts.isCoordinator()) {
    Logs.exhaust().debug("FAILOVER-REJECT: " + Internets.localHostInetAddress() + ": not cloud controller, ignoring promotion for: "+ arg0.getFullName());
    return false;
  }
 else   if (!Component.State.DISABLED.equals(arg0.lookupState())) {
    Logs.exhaust().debug("FAILOVER-REJECT: " + arg0.getFullName() + ": service is in an invalid state: "+ arg0.lookupState());
    return false;
  }
 else   if (Topology.getInstance().getServices().containsKey(key) && arg0.equals(Topology.getInstance().getServices().get(key))) {
    Logs.exhaust().debug("FAILOVER-REJECT: " + arg0.getFullName() + ": service is already ENABLED.");
    return false;
  }
 else   if (!Topology.getInstance().getServices().containsKey(key)) {
    Logs.exhaust().debug("FAILOVER-ACCEPT: " + arg0.getFullName() + ": service for partition: "+ key);
    return true;
  }
 else {
    Logs.exhaust().debug("FAILOVER-ACCEPT: " + arg0);
    return true;
  }
}
