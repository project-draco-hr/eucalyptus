{
  try {
    ServiceConfigurations.remove(config);
  }
 catch (  Exception ex) {
    LOG.error(ex);
    Logs.extreme().debug(ex,ex);
  }
  try {
    Topology.disable(config).get();
  }
 catch (  Exception ex) {
    Exceptions.maybeInterrupted(ex);
    LOG.error(ex);
    Logs.extreme().debug(ex,ex);
  }
  try {
    Topology.stop(config).get();
  }
 catch (  Exception ex) {
    Exceptions.maybeInterrupted(ex);
    LOG.error(ex);
    Logs.extreme().debug(ex,ex);
  }
  try {
    Queue.INTERNAL.enqueue(new Callable<Boolean>(){
      @Override public Boolean call() throws Exception {
        try {
          Component comp=Components.lookup(config.getComponentId());
          comp.destroy(config);
        }
 catch (        Exception ex) {
          Exceptions.maybeInterrupted(ex);
          LOG.error(ex);
          Logs.extreme().debug(ex,ex);
        }
        return true;
      }
    }
).get();
  }
 catch (  Exception ex) {
    Exceptions.maybeInterrupted(ex);
    LOG.error(ex);
    Logs.extreme().debug(ex,ex);
  }
  if (Hosts.isCoordinator()) {
    try {
      final ServiceId service=TypeMappers.transform(config,ServiceId.class);
      final List<CheckedListenableFuture<?>> futures=Lists.newArrayList();
      for (      Host h : Hosts.list()) {
        if (!h.isLocalHost() && h.hasBootstrapped()) {
          try {
            DestroyServiceType msg=new DestroyServiceType();
            msg.getServices().add(service);
            futures.add(AsyncRequests.dispatch(ServiceConfigurations.createEphemeral(Empyrean.INSTANCE,h.getBindAddress()),msg));
          }
 catch (          Exception ex) {
            Exceptions.maybeInterrupted(ex);
            LOG.error(ex);
            Logs.extreme().debug(ex,ex);
          }
        }
      }
      for (      CheckedListenableFuture<?> future : futures) {
        try {
          future.get();
        }
 catch (        Exception ex) {
          Exceptions.maybeInterrupted(ex);
          LOG.error(ex);
          Logs.extreme().debug(ex,ex);
        }
      }
    }
 catch (    Exception ex) {
      LOG.error(ex);
      Logs.extreme().debug(ex,ex);
    }
  }
  try {
    ((Callback<ServiceConfiguration>)ServiceTransitions.StateCallbacks.PROPERTIES_REMOVE).fire(config);
  }
 catch (  Exception ex) {
    Exceptions.maybeInterrupted(ex);
    LOG.error(ex);
    Logs.extreme().debug(ex,ex);
  }
  return Futures.predestinedFuture(config);
}
