{
  Function<ServiceConfiguration,ServiceId> typeMapper=TypeMappers.lookup(ServiceConfiguration.class,ServiceId.class);
  if (Hosts.isCoordinator()) {
    msg.set_epoch(Topology.epoch());
    if (config.getComponentId().isAlwaysLocal()) {
      Collection<ServiceId> serviceList=Collections2.transform(Topology.getInstance().getServices().values(),typeMapper);
      msg.get_services().addAll(serviceList);
      for (      Component c : Components.list()) {
        if (c.getComponentId().isDistributedService()) {
          for (          ServiceConfiguration s : c.services()) {
            if (!serviceList.contains(s) && State.DISABLED.apply(s)) {
              msg.get_disabledServices().add(typeMapper.apply(s));
            }
 else             if (!serviceList.contains(s) && State.DISABLED.apply(s)) {
              msg.get_notreadyServices().add(typeMapper.apply(s));
            }
          }
        }
      }
    }
 else {
      Collection<ServiceId> serviceList=Topology.partitionRelativeView(config);
      msg.get_services().addAll(serviceList);
      final Partition partition=Partitions.lookup(config);
      for (      Component c : Components.list()) {
        for (        ServiceConfiguration s : c.services()) {
          if (!partitionViewFilter(partition).apply(s)) {
            continue;
          }
 else {
            if (!serviceList.contains(s) && State.DISABLED.apply(s)) {
              msg.get_disabledServices().add(typeMapper.apply(s));
            }
 else             if (!serviceList.contains(s) && State.DISABLED.apply(s)) {
              msg.get_notreadyServices().add(typeMapper.apply(s));
            }
          }
        }
      }
    }
  }
}
