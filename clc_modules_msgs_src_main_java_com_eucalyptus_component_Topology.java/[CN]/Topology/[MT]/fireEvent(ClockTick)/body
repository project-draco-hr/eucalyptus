{
  Callable<Object> call=new Callable<Object>(){
    public Object call(){
      try {
        TimeUnit.SECONDS.sleep(10);
        return RunChecks.INSTANCE.call();
      }
 catch (      InterruptedException ex) {
        return Exceptions.maybeInterrupted(ex);
      }
 finally {
        busy.set(false);
      }
    }
  }
;
  if (Hosts.isCoordinator() && busy.compareAndSet(false,true)) {
    try {
      Queue.INTERNAL.enqueue(call);
    }
 catch (    Exception ex) {
      busy.set(false);
    }
  }
 else   if (counter.incrementAndGet() % 3 == 0 && busy.compareAndSet(false,true)) {
    try {
      Queue.INTERNAL.enqueue(call);
    }
 catch (    Exception ex) {
      busy.set(false);
    }
  }
}
