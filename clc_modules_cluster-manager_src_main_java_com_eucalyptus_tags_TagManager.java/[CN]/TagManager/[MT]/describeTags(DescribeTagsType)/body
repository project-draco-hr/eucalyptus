{
  final DescribeTagsResponseType reply=request.getReply();
  final Context context=Contexts.lookup();
  final Filter filter=Filters.generate(request.getFilterSet(),Tag.class);
  final Ordering<Tag> ordering=Ordering.natural().onResultOf(Tags.resourceId()).compound(Ordering.natural().onResultOf(Tags.key())).compound(Ordering.natural().onResultOf(Tags.value()));
  for (  final Tag tag : ordering.sortedCopy(Tags.list(context.getUserFullName().asAccountFullName(),filter.asPredicate(),filter.asCriterion(),filter.getAliases()))) {
    if (Permissions.isAuthorized(PolicySpec.VENDOR_EC2,tag.getResourceType(),tag.getKey(),context.getAccount(),PolicySpec.describeAction(PolicySpec.VENDOR_EC2,tag.getResourceType()),context.getUser())) {
      final TagInfo info=new TagInfo();
      info.setKey(tag.getKey());
      info.setValue(tag.getValue());
      info.setResourceId(tag.getResourceId());
      info.setResourceType(tag.getResourceType());
      reply.getTagSet().add(info);
    }
  }
  return reply;
}
