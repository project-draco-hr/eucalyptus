{
  UnitTestSupport.setupAuthPersistenceContext();
  UnitTestSupport.initializeAuth(2,2);
  Iterator<String> accountNameIterator=UnitTestSupport.getTestAccounts().iterator();
  final AccountIdentifiers account1Identifiers=Accounts.lookupAccountIdentifiersByAlias(accountNameIterator.next());
  account1CanonicalId=account1Identifiers.getCanonicalId();
  canonicalUser1=new CanonicalUser(account1CanonicalId,account1Identifiers.getAccountAlias());
  account1=new Grantee(canonicalUser1);
  account1Read=new Grant(account1,Permission.READ.toString());
  account1Write=new Grant(account1,Permission.WRITE.toString());
  account1FullControl=new Grant(account1,Permission.FULL_CONTROL.toString());
  account1ReadAcp=new Grant(account1,Permission.READ_ACP.toString());
  account1WriteAcp=new Grant(account1,Permission.WRITE_ACP.toString());
  final AccountIdentifiers account2Identifiers=Accounts.lookupAccountIdentifiersByAlias(accountNameIterator.next());
  account2CanonicalId=account2Identifiers.getCanonicalId();
  canonicalUser2=new CanonicalUser(account2CanonicalId,account2Identifiers.getAccountAlias());
  account2=new Grantee(canonicalUser2);
  account2Read=new Grant(account2,Permission.READ.toString());
  account2Write=new Grant(account2,Permission.WRITE.toString());
  account2FullControl=new Grant(account2,Permission.FULL_CONTROL.toString());
  account2ReadAcp=new Grant(account2,Permission.READ_ACP.toString());
  account2WriteAcp=new Grant(account2,Permission.WRITE_ACP.toString());
}
