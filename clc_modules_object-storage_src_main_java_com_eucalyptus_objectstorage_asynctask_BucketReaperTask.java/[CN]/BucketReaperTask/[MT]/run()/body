{
  startTime=System.currentTimeMillis();
  try {
    LOG.trace("Initiating bucket cleanup task");
    final List<Bucket> buckets=BucketMetadataManagers.getInstance().lookupBucketsByState(null);
    if (buckets == null || buckets.size() <= 0) {
      LOG.trace("No buckets found to clean. Cleanup task complete");
      return;
    }
    Bucket b;
    int idx;
    while (buckets.size() > 0 && !isTimedOut() && !interrupted) {
      idx=rand.nextInt(buckets.size());
      b=buckets.get(idx);
      cleanObjectHistoriesInBucket(b);
      resolveBucketState(b);
      buckets.remove(idx);
    }
  }
 catch (  final Throwable f) {
    LOG.error("Error during bucket cleanup execution. Will retry later",f);
  }
 finally {
    try {
      long endTime=System.currentTimeMillis();
      LOG.trace("Bucket cleanup execution task took " + Long.toString(endTime - startTime) + "ms to complete");
    }
 catch (    final Throwable f) {
    }
  }
}
