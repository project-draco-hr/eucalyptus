{
  LOG.info("creating keys in " + SubDirectory.KEYS.toString());
  KeyTool keyTool=new KeyTool();
  AbstractKeyStore serviceKs=ServiceKeyStore.getInstance();
  String ccAlias=String.format(CLUSTER_KEY_FSTRING,name);
  String ncAlias=String.format(NODE_KEY_FSTRING,name);
  if (!serviceKs.containsEntry(ccAlias) || !serviceKs.containsEntry(ncAlias)) {
    KeyPair clusterKp=keyTool.getKeyPair();
    X509Certificate clusterX509=keyTool.getCertificate(clusterKp,EucalyptusProperties.getDName("cc-" + name));
    keyTool.writePem(SubDirectory.KEYS.toString() + File.separator + "cluster-pk.pem",clusterKp.getPrivate());
    keyTool.writePem(SubDirectory.KEYS.toString() + File.separator + "cluster-cert.pem",clusterX509);
    serviceKs.addKeyPair(ccAlias,clusterX509,clusterKp.getPrivate(),ccAlias);
    KeyPair nodeKp=keyTool.getKeyPair();
    X509Certificate nodeX509=keyTool.getCertificate(nodeKp,EucalyptusProperties.getDName("nc-" + name));
    keyTool.writePem(SubDirectory.KEYS.toString() + File.separator + "node-pk.pem",nodeKp.getPrivate());
    keyTool.writePem(SubDirectory.KEYS.toString() + File.separator + "node-cert.pem",nodeX509);
    serviceKs.addKeyPair(ncAlias,nodeX509,nodeKp.getPrivate(),ncAlias);
    serviceKs.store();
  }
}
