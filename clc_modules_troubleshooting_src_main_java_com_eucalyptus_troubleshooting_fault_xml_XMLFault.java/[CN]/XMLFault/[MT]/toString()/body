{
  if (stringRepresentation != null) {
    return stringRepresentation;
  }
  StringWriter sWriter=new StringWriter();
  PrintWriter out=new PrintWriter(sWriter);
  String lineOfAsterisks=stringFill(72,'*');
  out.println(lineOfAsterisks);
  out.println(INNER_FAULT_PREFIX + headerLine());
  out.println();
  int fieldWidth=0;
  for (  FaultFieldName name : FaultFieldName.values()) {
    String nameStr=name.toString();
    if (commonMap.get(nameStr) != null && commonMap.get(nameStr).getEffectiveValue() != null) {
      nameStr=commonMap.get(nameStr).getEffectiveValue();
    }
    fieldWidth=Math.max(fieldWidth,nameStr.length());
  }
  for (  FaultFieldName name : FaultFieldName.values()) {
    String nameStr=name.toString();
    if (commonMap.get(nameStr) != null && commonMap.get(nameStr).getEffectiveValue() != null) {
      nameStr=commonMap.get(nameStr).getEffectiveValue();
    }
    FaultField faultField=faultFieldMap.get(name);
    String faultFieldValue=getEffectiveValueOrUnknown(faultField);
    out.println(INNER_FAULT_PREFIX + lpad(nameStr,fieldWidth) + ": "+ faultFieldValue);
  }
  out.println(lineOfAsterisks);
  out.close();
  stringRepresentation=sWriter.toString();
  return stringRepresentation;
}
