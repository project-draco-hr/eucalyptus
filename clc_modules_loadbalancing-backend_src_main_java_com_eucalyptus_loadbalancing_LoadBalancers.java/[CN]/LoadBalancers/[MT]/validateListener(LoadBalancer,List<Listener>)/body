{
  for (  Listener listener : listeners) {
    if (!LoadBalancerListener.protocolSupported(listener))     throw new UnsupportedParameterException("The requested protocol is not supported");
    if (!LoadBalancerListener.acceptable(listener))     throw new InvalidConfigurationRequestException("Invalid listener format");
    if (!LoadBalancerListener.validRange(listener))     throw new InvalidConfigurationRequestException("Invalid port range");
    if (!LoadBalancerListener.portAvailable(listener))     throw new EucalyptusCloudException("The specified port is restricted for use as a loadbalancer port");
    final PROTOCOL protocol=PROTOCOL.valueOf(listener.getProtocol().toUpperCase());
    if (protocol.equals(PROTOCOL.HTTPS) || protocol.equals(PROTOCOL.SSL)) {
      final String sslId=listener.getSSLCertificateId();
      if (sslId == null || sslId.length() <= 0)       throw new InvalidConfigurationRequestException("SSLCertificateId is required for HTTPS or SSL protocol");
    }
    if (lb != null && lb.hasListener(listener.getLoadBalancerPort())) {
      final LoadBalancerListenerCoreView existing=lb.findListener(listener.getLoadBalancerPort());
      if (existing.getInstancePort() != listener.getInstancePort() || !existing.getProtocol().name().toLowerCase().equals(listener.getProtocol().toLowerCase()) || ((existing.getCertificateId() == null || !existing.getCertificateId().equals(listener.getSSLCertificateId())))) {
        throw new DuplicateListenerException();
      }
    }
  }
}
