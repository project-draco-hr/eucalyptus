{
  final Collection<LoadBalancerListenerCoreView> listeners=lb.getListeners();
  LoadBalancerListenerCoreView listener=null;
  for (  final LoadBalancerListenerCoreView l : listeners) {
    if (l.getLoadbalancerPort() == lbPort) {
      listener=l;
      break;
    }
  }
  if (listener == null)   throw new ListenerNotFoundException();
  if (!(PROTOCOL.HTTPS.equals(listener.getProtocol()) || PROTOCOL.SSL.equals(listener.getProtocol())))   throw new InvalidConfigurationRequestException("Listener's protocol is not HTTPS or SSL");
  checkSSLCertificate(lb.getOwnerUserId(),certArn);
  updateIAMRolePolicy(lb.getOwnerAccountNumber(),lb.getDisplayName(),listener.getCertificateId(),certArn);
  try (final TransactionResource db=Entities.transactionFor(LoadBalancerListener.class)){
    final LoadBalancerListener update=Entities.uniqueResult(LoadBalancerListener.named(lb,lbPort));
    update.setSSLCertificateId(certArn);
    Entities.persist(update);
    db.commit();
  }
 catch (  final NoSuchElementException ex) {
    throw new ListenerNotFoundException();
  }
catch (  final Exception ex) {
    throw Exceptions.toUndeclared(ex);
  }
}
