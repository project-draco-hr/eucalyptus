{
  AWSEC2InstanceResourceAction oldAction=(AWSEC2InstanceResourceAction)oldResourceAction;
  AWSEC2InstanceResourceAction newAction=(AWSEC2InstanceResourceAction)newResourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  DescribeInstancesType describeInstancesType=MessageHelper.createMessage(DescribeInstancesType.class,newAction.info.getEffectiveUserId());
  describeInstancesType.getFilterSet().add(Filter.filter("instance-id",newAction.info.getPhysicalResourceId()));
  DescribeInstancesResponseType describeInstancesResponseType=AsyncRequests.sendSync(configuration,describeInstancesType);
  if (describeInstancesResponseType.getReservationSet().size() == 0)   throw new ValidationErrorException("Instance " + newAction.info.getPhysicalResourceId() + " not found.");
  if ("terminated".equals(describeInstancesResponseType.getReservationSet().get(0).getInstancesSet().get(0).getStateName())) {
    throw new ValidationErrorException("Instance " + newAction.info.getPhysicalResourceId() + " terminated.");
  }
  if ("stopped".equals(describeInstancesResponseType.getReservationSet().get(0).getInstancesSet().get(0).getStateName())) {
    return newAction;
  }
  throw new RetryAfterConditionCheckFailedException(("Instance " + newAction.info.getPhysicalResourceId() + " is not yet stopped, currently "+ describeInstancesResponseType.getReservationSet().get(0).getInstancesSet().get(0).getStateName()));
}
