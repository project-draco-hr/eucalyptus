{
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  DescribeInstancesType describeInstancesType=MessageHelper.createMessage(DescribeInstancesType.class,info.getEffectiveUserId());
  describeInstancesType.setInstancesSet(Lists.newArrayList(info.getPhysicalResourceId()));
  DescribeInstancesResponseType describeInstancesResponseType;
  try {
    describeInstancesResponseType=AsyncRequests.sendSync(configuration,describeInstancesType);
  }
 catch (  Exception e) {
    if (AsyncExceptions.isWebServiceErrorCode(e,"InvalidInstanceID.NotFound")) {
      return;
    }
 else {
      throw e;
    }
  }
  if (describeInstancesResponseType.getReservationSet().size() == 0) {
    return;
  }
  RunningInstancesItemType runningInstancesItemType=describeInstancesResponseType.getReservationSet().get(0).getInstancesSet().get(0);
  info.setPrivateIp(JsonHelper.getStringFromJsonNode(new TextNode(runningInstancesItemType.getPrivateIpAddress())));
  info.setPublicIp(JsonHelper.getStringFromJsonNode(new TextNode(runningInstancesItemType.getIpAddress())));
  info.setAvailabilityZone(JsonHelper.getStringFromJsonNode(new TextNode(runningInstancesItemType.getPlacement())));
  info.setPrivateDnsName(JsonHelper.getStringFromJsonNode(new TextNode(runningInstancesItemType.getPrivateDnsName())));
  info.setPublicDnsName(JsonHelper.getStringFromJsonNode(new TextNode(runningInstancesItemType.getDnsName())));
  info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(info.getPhysicalResourceId())));
}
