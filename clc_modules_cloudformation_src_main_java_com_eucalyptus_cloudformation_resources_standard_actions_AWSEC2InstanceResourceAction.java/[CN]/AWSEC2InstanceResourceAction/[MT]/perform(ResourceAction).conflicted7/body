{
  AWSEC2InstanceResourceAction action=(AWSEC2InstanceResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  if (action.properties.getVolumes() != null && !action.properties.getVolumes().isEmpty()) {
    ArrayList<String> volumeIds=Lists.newArrayList();
    Map<String,String> deviceMap=Maps.newHashMap();
    for (    EC2MountPoint ec2MountPoint : action.properties.getVolumes()) {
      volumeIds.add(ec2MountPoint.getVolumeId());
      deviceMap.put(ec2MountPoint.getVolumeId(),ec2MountPoint.getDevice());
    }
    DescribeVolumesType describeVolumesType=MessageHelper.createMessage(DescribeVolumesType.class,action.info.getEffectiveUserId());
    describeVolumesType.getFilterSet().add(Filter.filter("volume-id",volumeIds));
    DescribeVolumesResponseType describeVolumesResponseType;
    try {
      describeVolumesResponseType=AsyncRequests.sendSync(configuration,describeVolumesType);
    }
 catch (    Exception e) {
      throw new RetryAfterConditionCheckFailedException("Error describing volumes: " + asWebServiceErrorMessage(e,e.getMessage()));
    }
    Map<String,String> volumeStatusMap=Maps.newHashMap();
    for (    Volume volume : describeVolumesResponseType.getVolumeSet()) {
      for (      AttachedVolume attachedVolume : volume.getAttachmentSet()) {
        if (attachedVolume.getInstanceId().equals(action.info.getPhysicalResourceId()) && attachedVolume.getDevice().equals(deviceMap.get(volume.getVolumeId()))) {
          volumeStatusMap.put(volume.getVolumeId(),attachedVolume.getStatus());
        }
      }
    }
    for (    String volumeId : volumeIds) {
      if (!"attached".equals(volumeStatusMap.get(volumeId))) {
        throw new RetryAfterConditionCheckFailedException("One or more volumes is not yet attached to the instance");
      }
    }
  }
  return action;
}
