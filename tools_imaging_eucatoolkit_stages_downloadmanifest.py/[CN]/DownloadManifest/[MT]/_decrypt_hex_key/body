@classmethod
def _decrypt_hex_key(cls, hex_encrypted_key, key_filename):
    popen = Popen(['openssl', 'rsautl', '-decrypt', '-pkcs', '-inkey', key_filename], stdin=PIPE, stdout=PIPE)
    binary_encrypted_key = binascii.unhexlify(hex_encrypted_key)
    (decrypted_key, _) = popen.communicate(binary_encrypted_key)
    try:
        int(decrypted_key, 16)
        return decrypted_key
    except ValueError as VE:
        raise ValueError(('Failed to decrypt the manifest encryption key.' + str(VE)))
