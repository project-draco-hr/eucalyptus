{
  PrincipalCacheValue principalValue=null;
  final Cache<PrincipalCacheKey,PrincipalCacheValue> cache=cache();
  try {
    principalValue=cache.get(key,loader.callable(null));
    if (principalValue.updated + AuthenticationProperties.getAuthorizationExpiry() < System.currentTimeMillis()) {
      cache.invalidate(key);
      principalValue=cache.get(key,loader.callable(principalValue.principal));
    }
    return principalValue.principal;
  }
 catch (  final ExecutionException e) {
    if (!AsyncExceptions.asWebServiceError(e).isPresent() && principalValue != null && principalValue.created + AuthenticationProperties.getAuthorizationReuseExpiry() > System.currentTimeMillis()) {
      cache.put(key,new PrincipalCacheValue(principalValue));
      return principalValue.principal;
    }
    if (e.getCause() instanceof AuthException) {
      throw (AuthException)e.getCause();
    }
 else {
      throw new AuthException(e);
    }
  }
}
