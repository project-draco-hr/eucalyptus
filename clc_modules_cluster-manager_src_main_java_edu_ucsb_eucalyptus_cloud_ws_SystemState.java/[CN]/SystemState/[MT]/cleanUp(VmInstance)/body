{
  Cluster cluster=Clusters.getInstance().lookup(vm.getPlacement());
  QueuedEventCallback cb=new TerminateCallback(vm.getInstanceId());
  if (Clusters.getInstance().hasNetworking()) {
    try {
      final Address address=Addresses.getInstance().lookup(vm.getNetworkConfig().getIgnoredPublicIp());
      cb.onSuccess(new SuccessCallback(){
        public void apply(        Object t){
          if (address.isSystemOwned()) {
            LOG.debug(EventRecord.caller(SystemState.class,EventType.VM_TERMINATING,"SYSTEM_ADDRESS",address.toString()));
            Addresses.release(address);
          }
 else {
            LOG.debug(EventRecord.caller(SystemState.class,EventType.VM_TERMINATING,"USER_ADDRESS",address.toString()));
            AddressCategory.unassign(address).dispatch(address.getCluster());
          }
        }
      }
);
    }
 catch (    NoSuchElementException e) {
    }
catch (    Throwable e1) {
      LOG.debug(e1,e1);
    }
    final int networkIndex=vm.getNetworkIndex();
    vm.setNetworkIndex(-1);
    if (networkIndex > 0 && vm.getNetworkNames().size() > 0) {
      cb.onSuccess(new SuccessCallback(){
        public void apply(        Object t){
          try {
            String networkFqName=vm.getOwnerId() + "-" + vm.getNetworkNames().get(0);
            Networks.getInstance().lookup(networkFqName).returnNetworkIndex(networkIndex);
            LOG.debug(EventRecord.caller(SystemState.class,EventType.VM_TERMINATING,"NETWORK_INDEX",networkFqName,Integer.toString(networkIndex)));
          }
 catch (          NoSuchElementException e1) {
          }
catch (          Throwable e1) {
            LOG.debug(e1,e1);
          }
        }
      }
);
    }
  }
  cb.dispatch(cluster);
}
