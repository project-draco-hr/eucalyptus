{
  Multimap<String,VmInstance> userVms=Multimaps.newArrayListMultimap();
  for (  VmInstance v : VmInstances.getInstance().listValues())   userVms.put(v.getOwnerId(),v);
  NavigableSet<NetworkToken> revokedTokens=Sets.newTreeSet();
  for (  Network activeNet : Networks.getInstance().listValues()) {
    String user=activeNet.getUserName();
    LOG.debug(String.format("checkNetworks: user=%-15s network=%-15s",user,activeNet.getNetworkName()));
    Multimap<String,String> clusterNetworkMap=Multimaps.newArrayListMultimap();
    for (    VmInstance vm : userVms.get(user)) {
      clusterNetworkMap.get(vm.getPlacement()).addAll(vm.getNetworkNames());
    }
    for (    NetworkToken token : activeNet.getNetworkTokens().values()) {
      if (!clusterNetworkMap.get(token.getCluster()).contains(token.getNetworkName())) {
        LOG.debug(String.format("checkNetworks: user=%-15s network=%-15s cluster=%-15s active=false",user,activeNet.getNetworkName(),token.getCluster()));
        revokedTokens.add(token);
      }
 else {
        LOG.debug(String.format("checkNetworks: user=%-15s network=%-15s cluster=%-15s active=true",user,activeNet.getNetworkName(),token.getCluster()));
      }
    }
    if (activeNet.getNetworkTokens().isEmpty())     Networks.getInstance().deregister(activeNet.getName());
  }
  for (  NetworkToken token : revokedTokens)   SystemState.dispatchStopNetwork(token);
}
