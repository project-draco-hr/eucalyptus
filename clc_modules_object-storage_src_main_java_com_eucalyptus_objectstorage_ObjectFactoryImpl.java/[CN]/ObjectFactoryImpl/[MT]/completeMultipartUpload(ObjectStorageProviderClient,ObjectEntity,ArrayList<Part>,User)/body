{
  try {
    final CompleteMultipartUploadType commitRequest=new CompleteMultipartUploadType();
    commitRequest.setParts(partList);
    commitRequest.setBucket(mpuEntity.getBucket().getBucketUuid());
    commitRequest.setKey(mpuEntity.getObjectUuid());
    commitRequest.setUploadId(mpuEntity.getUploadId());
    long fullSize=MpuPartMetadataManagers.getInstance().processPartListAndGetSize(partList,MpuPartMetadataManagers.getInstance().getParts(mpuEntity.getBucket(),mpuEntity.getObjectKey(),mpuEntity.getUploadId()));
    mpuEntity.setSize(fullSize);
    Callable<CompleteMultipartUploadResponseType> completeCallable=new Callable<CompleteMultipartUploadResponseType>(){
      @Override public CompleteMultipartUploadResponseType call() throws Exception {
        CompleteMultipartUploadResponseType response=provider.completeMultipartUpload(commitRequest);
        LOG.debug("Done with multipart upload. " + response.getStatusMessage());
        return response;
      }
    }
;
    final FutureTask<CompleteMultipartUploadResponseType> completeTask=new FutureTask<>(completeCallable);
    PUT_OBJECT_SERVICE.execute(completeTask);
    final long failTime=System.currentTimeMillis() + (ObjectStorageGlobalConfiguration.failed_put_timeout_hrs * 60 * 60* 1000);
    final long checkIntervalSec=60;
    CompleteMultipartUploadResponseType response=waitForMultipartCompletion(completeTask,commitRequest.getUploadId(),commitRequest.getCorrelationId(),failTime,checkIntervalSec);
    mpuEntity.seteTag(response.getEtag());
    ObjectEntity completedEntity=ObjectMetadataManagers.getInstance().finalizeCreation(mpuEntity,new Date(),mpuEntity.geteTag());
    try {
      MpuPartMetadataManagers.getInstance().removeParts(completedEntity.getBucket(),completedEntity.getUploadId());
    }
 catch (    Exception e) {
      throw new InternalErrorException("Could not remove parts for: " + mpuEntity.getUploadId());
    }
    return completedEntity;
  }
 catch (  S3Exception e) {
    throw e;
  }
catch (  Exception e) {
    LOG.warn("Failed commit of multipart upload " + mpuEntity.getUploadId(),e);
    InternalErrorException ex=new InternalErrorException(mpuEntity.getUploadId());
    ex.initCause(e);
    throw ex;
  }
}
