{
  try {
    CompleteMultipartUploadType commitRequest=new CompleteMultipartUploadType();
    commitRequest.setParts(partList);
    commitRequest.setBucket(mpuEntity.getBucket().getBucketUuid());
    commitRequest.setKey(mpuEntity.getObjectUuid());
    commitRequest.setUploadId(mpuEntity.getUploadId());
    long fullSize=MpuPartMetadataManagers.getInstance().processPartListAndGetSize(partList,MpuPartMetadataManagers.getInstance().getParts(mpuEntity.getBucket(),mpuEntity.getObjectKey(),mpuEntity.getUploadId()));
    mpuEntity.setSize(fullSize);
    try {
      CompleteMultipartUploadResponseType response=provider.completeMultipartUpload(commitRequest);
      mpuEntity.seteTag(response.getEtag());
    }
 catch (    EucalyptusCloudException e) {
      LOG.warn("Error from backend on CompleteMultipartUpload ",e);
      throw e;
    }
    ObjectEntity completedEntity=ObjectMetadataManagers.getInstance().finalizeCreation(mpuEntity,new Date(),mpuEntity.geteTag());
    try {
      MpuPartMetadataManagers.getInstance().removeParts(completedEntity.getUploadId());
    }
 catch (    Exception e) {
      throw new InternalErrorException("Could not remove parts for: " + mpuEntity.getUploadId());
    }
    return completedEntity;
  }
 catch (  S3Exception e) {
    throw e;
  }
catch (  Exception e) {
    LOG.warn("Failed commit of multipart upload " + mpuEntity.getUploadId(),e);
    InternalErrorException ex=new InternalErrorException(mpuEntity.getUploadId());
    ex.initCause(e);
    throw ex;
  }
}
