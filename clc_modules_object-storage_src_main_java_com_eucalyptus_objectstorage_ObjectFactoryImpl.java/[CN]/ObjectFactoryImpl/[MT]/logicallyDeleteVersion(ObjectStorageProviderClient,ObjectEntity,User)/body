{
  if (entity.getBucket() == null) {
    throw new InternalErrorException();
  }
  try {
    List<ObjectEntity> entities=ObjectMetadataManagers.getInstance().lookupObjectVersions(entity.getBucket(),entity.getObjectKey(),Integer.MAX_VALUE);
    if (entities != null && entities.size() > 0) {
      for (      ObjectEntity latest : entities) {
        if (latest.getObjectUuid().equals(entity.getObjectUuid())) {
          continue;
        }
        if (!latest.getIsLatest().booleanValue()) {
          ObjectMetadataManagers.getInstance().makeLatest(latest);
        }
        break;
      }
    }
  }
 catch (  Exception ex) {
    LOG.warn("while attempting to set isLatest = true on the newest remaining object version, an exception was encountered: ",ex);
  }
  if (!entity.getIsDeleteMarker()) {
    ObjectEntity deletingObject=ObjectMetadataManagers.getInstance().transitionObjectToState(entity,ObjectState.deleting);
    try {
      actuallyDeleteObject(provider,deletingObject,requestUser);
    }
 catch (    Exception e) {
      LOG.trace("Could not delete the object in the sync path, will retry later asynchronosly. Object now in state 'deleting'.",e);
    }
  }
 else {
    ObjectMetadataManagers.getInstance().delete(entity);
  }
}
