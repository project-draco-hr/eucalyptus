{
  try {
    final String masterPassword=Crypto.generateAlphanumericId(8,"").toLowerCase();
    final String masterUserName="eucalyptus";
    try {
      final NewDBInstanceEvent evt=new NewDBInstanceEvent(Accounts.lookupSystemAdmin().getUserId());
      evt.setMasterUserName(masterUserName);
      evt.setMasterUserPassword(masterPassword);
      evt.setDbInstanceIdentifier(DB_INSTANCE_IDENTIFIER);
      evt.setPort(DB_PORT);
      DatabaseEventListeners.getInstance().fire(evt);
    }
 catch (    final Exception e) {
      LOG.error("failed to create a database vm",e);
    }
    try {
      final EnableDBInstanceEvent evt=new EnableDBInstanceEvent(Accounts.lookupSystemAdmin().getUserId());
      evt.setMasterUserName(masterUserName);
      evt.setMasterUserPassword(masterPassword);
      evt.setDbInstanceIdentifier(DB_INSTANCE_IDENTIFIER);
      evt.setPort(DB_PORT);
      DatabaseEventListeners.getInstance().fire(evt);
    }
 catch (    final Exception e) {
      LOG.error("failed to enable remote database",e);
      throw e;
    }
  }
 catch (  final Exception ex) {
    final ConfigurableProperty prop=PropertyDirectory.getPropertyEntry("cloud.db.db_server_enabled");
    if (prop != null)     prop.setValue("false");
  }
 finally {
    launchLock.set(false);
  }
  LOG.info("New remote database is created");
  return true;
}
