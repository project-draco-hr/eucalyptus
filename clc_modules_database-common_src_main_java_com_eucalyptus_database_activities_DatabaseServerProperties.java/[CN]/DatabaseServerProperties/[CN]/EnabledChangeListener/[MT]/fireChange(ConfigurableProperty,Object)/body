{
  try {
    if ("false".equals(((String)newValue).toLowerCase()) && "true".equals(t.getValue())) {
      if (!launchLock.compareAndSet(false,true))       throw new ConfigurablePropertyException("the property is currently being updated");
      try {
        Callable<Boolean> disableDbRun=new DisableDBRunner();
        Threads.enqueue(Eucalyptus.class,DatabaseServerProperties.class,disableDbRun);
      }
 catch (      final Exception ex) {
        throw ex;
      }
    }
 else     if ("true".equals(((String)newValue).toLowerCase()) && "false".equals(t.getValue())) {
      if (!launchLock.compareAndSet(false,true))       throw new ConfigurablePropertyException("the property is currently being updated");
      try {
        Callable<Boolean> newDbRun=new NewDBRunner();
        Threads.enqueue(Eucalyptus.class,DatabaseServerProperties.class,newDbRun);
      }
 catch (      final Exception ex) {
        throw ex;
      }
    }
 else     ;
  }
 catch (  final Exception e) {
    throw new ConfigurablePropertyException("Could not toggle database server",e);
  }
}
