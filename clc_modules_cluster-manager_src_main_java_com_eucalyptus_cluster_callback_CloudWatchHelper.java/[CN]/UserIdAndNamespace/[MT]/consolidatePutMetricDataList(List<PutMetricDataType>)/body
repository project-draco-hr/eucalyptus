{
  int MAX_PUT_METRIC_DATA_ITEMS=20;
  LinkedHashMap<UserIdAndNamespace,List<MetricDatum>> metricDataMap=new LinkedHashMap<UserIdAndNamespace,List<MetricDatum>>();
  for (  PutMetricDataType putMetricData : putMetricDataList) {
    UserIdAndNamespace userIdAndNamespace=new UserIdAndNamespace(putMetricData.getEffectiveUserId(),putMetricData.getNamespace());
    if (!metricDataMap.containsKey(userIdAndNamespace)) {
      metricDataMap.put(userIdAndNamespace,new ArrayList<MetricDatum>());
    }
    metricDataMap.get(userIdAndNamespace).addAll(putMetricData.getMetricData().getMember());
  }
  ArrayList<PutMetricDataType> retVal=new ArrayList<PutMetricDataType>();
  for (  Map.Entry<UserIdAndNamespace,List<MetricDatum>> metricDataEntry : metricDataMap.entrySet()) {
    for (int i=0; i < metricDataEntry.getValue().size(); i+=MAX_PUT_METRIC_DATA_ITEMS) {
      PutMetricDataType putMetricData=new PutMetricDataType();
      putMetricData.setEffectiveUserId(metricDataEntry.getKey().getUserId());
      putMetricData.setNamespace(metricDataEntry.getKey().getNamespace());
      MetricData metricData=new MetricData();
      ArrayList<MetricDatum> metricDatumList=new ArrayList();
      metricDatumList.addAll(metricDataEntry.getValue().subList(i,Math.min(i + MAX_PUT_METRIC_DATA_ITEMS,metricDataEntry.getValue().size())));
      metricData.setMember(metricDatumList);
      putMetricData.setMetricData(metricData);
      retVal.add(putMetricData);
    }
  }
  return retVal;
}
