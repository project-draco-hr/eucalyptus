{
  final List<Pair<String,Double>> instanceStatusDatums=ImmutableList.<Pair<String,Double>>builder().add(Pair.pair(Count.StatusCheckFailed.name(),instanceInfoProvider.getStatusCheckFailed(instanceId).doubleValue())).add(Pair.pair(Count.StatusCheckFailed_Instance.name(),instanceInfoProvider.getInstanceStatusCheckFailed(instanceId).doubleValue())).add(Pair.pair(Count.StatusCheckFailed_System.name(),instanceInfoProvider.getSystemStatusCheckFailed(instanceId).doubleValue())).build();
  final ArrayList<Dimension> dimArray=Lists.newArrayList();
  populateInstanceDimensions(instanceId,dimArray);
  final Dimensions dimensions=new Dimensions();
  dimensions.setMember(dimArray);
  final ArrayList<MetricDatum> metricDatums=Lists.newArrayList();
  for (  final Pair<String,Double> datum : instanceStatusDatums) {
    final MetricDatum metricDatum=new MetricDatum();
    metricDatum.setMetricName(datum.getLeft());
    metricDatum.setDimensions(dimensions);
    metricDatum.setTimestamp(new Date());
    metricDatum.setValue(datum.getRight());
    metricDatum.setUnit(Count.class.getSimpleName());
    metricDatums.add(metricDatum);
  }
  final MetricData metricData=new MetricData();
  metricData.setMember(metricDatums);
  final PutMetricDataType putMetricData=new PutMetricDataType();
  putMetricData.setNamespace("AWS/EC2");
  putMetricData.setMetricData(metricData);
  putMetricData.setUserId(instanceInfoProvider.getEffectiveUserId(instanceId));
  putMetricData.markPrivileged();
  return putMetricData;
}
