{
  this.name=name;
  this.component=initComponent();
  if (System.getProperty("euca.disable." + this.name) == null) {
    this.enabled.set(true);
    if (System.getProperty("euca.remote." + this.name) == null) {
      this.local.set(true);
    }
  }
  if (configFile != null) {
    this.configuration=new Configuration(this,configFile);
  }
 else {
    this.configuration=new Configuration(this);
  }
  this.stateMachine=new StateMachineBuilder<Component,State,Transition>(this,State.DISABLED){
{
      on(Transition.EARLYRUNTIME).from(State.DISABLED).to(State.PRIMORDIAL).error(State.DISABLED).noop();
      on(Transition.INITIALIZE).from(State.PRIMORDIAL).to(State.INITIALIZED).error(State.DISABLED).noop();
      on(Transition.LOAD).from(State.INITIALIZED).to(State.LOADED).error(State.DISABLED).noop();
      on(Transition.START).from(State.LOADED).to(State.RUNNING).error(State.DISABLED).noop();
      on(Transition.STOP).from(State.RUNNING).to(State.STOPPED).error(State.STOPPED).noop();
      on(Transition.PAUSE).from(State.RUNNING).to(State.PAUSED).noop();
    }
  }
.newAtomicState();
  this.builder=new DummyServiceBuilder(this);
}
