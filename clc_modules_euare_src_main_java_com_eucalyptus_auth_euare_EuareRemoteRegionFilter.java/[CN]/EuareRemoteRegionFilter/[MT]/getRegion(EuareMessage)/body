{
  Optional<RegionInfo> region=Optional.absent();
  try {
    if (request instanceof EuareMessageWithDelegate) {
      final EuareMessageWithDelegate messageWithDelegate=(EuareMessageWithDelegate)request;
      final String delegateAliasOrNumber=messageWithDelegate.getDelegateAccount();
      if (delegateAliasOrNumber != null) {
        final String delegateNumber=Accounts.isAccountNumber(delegateAliasOrNumber) ? delegateAliasOrNumber : Accounts.lookupAccountIdByAlias(delegateAliasOrNumber);
        region=regionConfigurationManager.getRegionByAccountNumber(delegateNumber);
      }
    }
    if (!region.isPresent() && request instanceof DownloadServerCertificateType) {
      final DownloadServerCertificateType downloadServerCertificateType=(DownloadServerCertificateType)request;
      final String certArn=downloadServerCertificateType.getCertificateArn();
      if (certArn != null) {
        final String accountNumber=Ern.parse(certArn).getAccount();
        region=regionConfigurationManager.getRegionByAccountNumber(accountNumber);
      }
    }
 else     if (!region.isPresent() && request.getUserId() != null) {
      if (Accounts.isAccountNumber(request.getUserId())) {
        region=regionConfigurationManager.getRegionByAccountNumber(request.getUserId());
      }
 else {
        region=regionConfigurationManager.getRegionByIdentifier(request.getUserId());
      }
    }
    if (!region.isPresent() && Contexts.exists()) {
      final Context context=Contexts.lookup();
      final String userId=context.getUser().getUserId();
      region=regionConfigurationManager.getRegionByIdentifier(userId);
    }
  }
 catch (  AuthException e) {
    Logs.extreme().error(e,e);
  }
catch (  Exception e) {
    logger.error(e,e);
  }
  return region;
}
