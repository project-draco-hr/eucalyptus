{
  try {
    if (!CloudWatchConfigProperties.isDisabledCloudWatchService() && Bootstrap.isOperational() && Topology.isEnabledLocally(CloudWatchBackend.class)) {
      Date evaluationDate=new Date();
      Map<AlarmEntity,AlarmState> currentStates=evaluateStates(alarmEntities);
      Map<String,AlarmState> statesToUpdate=Maps.newHashMap();
      List<AlarmHistory> historyList=Lists.newArrayList();
      for (      AlarmEntity alarmEntity : currentStates.keySet()) {
        AlarmState currentState=currentStates.get(alarmEntity);
        if (currentState.getStateValue() != alarmEntity.getStateValue()) {
          statesToUpdate.put(alarmEntity.getNaturalId(),currentState);
          historyList.add(AlarmManager.createChangeAlarmStateHistoryItem(alarmEntity,currentState,evaluationDate));
          historyList.addAll(AlarmManager.executeActionsAndRecord(alarmEntity,currentState,true,evaluationDate,historyList));
        }
 else         if (moreThanOnePeriodHasPassed(alarmEntity,evaluationDate)) {
          historyList.addAll(AlarmManager.executeActionsAndRecord(alarmEntity,currentState,false,evaluationDate,historyList));
        }
      }
      AlarmManager.changeAlarmStateBatch(statesToUpdate,evaluationDate);
      AlarmManager.addAlarmHistoryEvents(historyList);
    }
  }
 catch (  Exception e) {
    LOG.error(e);
  }
}
