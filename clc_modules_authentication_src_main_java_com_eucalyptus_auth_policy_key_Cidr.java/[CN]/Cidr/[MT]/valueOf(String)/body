{
  if (cidr == null || "".equals(cidr)) {
    throw new CidrParseException("Empty CIDR");
  }
  Matcher matcher=CIDR_PATTERN.matcher(cidr);
  if (!matcher.matches()) {
    throw new CidrParseException("Syntax error in input CIDR: " + cidr);
  }
  try {
    int prefix=0;
    for (int i=1; i < 5; i++) {
      int component=Integer.parseInt(matcher.group(i));
      if (component > 255) {
        throw new CidrParseException("Component value larger than 255: " + cidr);
      }
      prefix=(prefix << 8) + component;
    }
    int mask=0;
    if (matcher.group(5) != null) {
      mask=Integer.parseInt(matcher.group(5));
      if (mask > 32) {
        throw new CidrParseException("Prefix length larger than 32: " + cidr);
      }
      if (mask == 0) {
        mask=PREFIX_32;
      }
 else {
        mask=(1 << (32 - mask)) - 1;
      }
    }
    if ((prefix & mask) != 0) {
      throw new CidrParseException("Address and prefix length do not match: " + cidr);
    }
    return new Cidr(prefix,~mask);
  }
 catch (  NumberFormatException e) {
    throw new CidrParseException("Impossible number format error: " + cidr);
  }
}
