{
  AWSIAMUserResourceAction action=(AWSIAMUserResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Euare.class);
  if (action.info.getCreatedEnoughToDelete() != Boolean.TRUE)   return action;
  if (!IAMHelper.userExists(configuration,action.info.getPhysicalResourceId(),action.info.getEffectiveUserId()))   return action;
  if (action.properties.getGroups() != null) {
    boolean seenAllGroups=false;
    List<String> currentGroups=Lists.newArrayList();
    String groupMarker=null;
    while (!seenAllGroups) {
      ListGroupsForUserType listGroupsForUserType=MessageHelper.createMessage(ListGroupsForUserType.class,action.info.getEffectiveUserId());
      listGroupsForUserType.setUserName(action.info.getPhysicalResourceId());
      if (groupMarker != null) {
        listGroupsForUserType.setMarker(groupMarker);
      }
      ListGroupsForUserResponseType listGroupsForUserResponseType=AsyncRequests.<ListGroupsForUserType,ListGroupsForUserResponseType>sendSync(configuration,listGroupsForUserType);
      if (listGroupsForUserResponseType.getListGroupsForUserResult().getIsTruncated() == Boolean.TRUE) {
        groupMarker=listGroupsForUserResponseType.getListGroupsForUserResult().getMarker();
      }
 else {
        seenAllGroups=true;
      }
      if (listGroupsForUserResponseType.getListGroupsForUserResult().getGroups() != null && listGroupsForUserResponseType.getListGroupsForUserResult().getGroups().getMemberList() != null) {
        for (        GroupType groupType : listGroupsForUserResponseType.getListGroupsForUserResult().getGroups().getMemberList()) {
          currentGroups.add(groupType.getGroupName());
        }
      }
    }
    for (    String groupName : action.properties.getGroups()) {
      if (currentGroups.contains(groupName)) {
        RemoveUserFromGroupType removeUserFromGroupType=MessageHelper.createMessage(RemoveUserFromGroupType.class,action.info.getEffectiveUserId());
        removeUserFromGroupType.setGroupName(groupName);
        removeUserFromGroupType.setUserName(action.info.getPhysicalResourceId());
        AsyncRequests.<RemoveUserFromGroupType,RemoveUserFromGroupResponseType>sendSync(configuration,removeUserFromGroupType);
      }
    }
  }
  if (action.properties.getPolicies() != null) {
    for (    EmbeddedIAMPolicy policy : action.properties.getPolicies()) {
      DeleteUserPolicyType deleteUserPolicyType=MessageHelper.createMessage(DeleteUserPolicyType.class,action.info.getEffectiveUserId());
      deleteUserPolicyType.setUserName(action.info.getPhysicalResourceId());
      deleteUserPolicyType.setPolicyName(policy.getPolicyName());
      AsyncRequests.<DeleteUserPolicyType,DeleteUserPolicyResponseType>sendSync(configuration,deleteUserPolicyType);
    }
  }
  DeleteUserType deleteUserType=MessageHelper.createMessage(DeleteUserType.class,action.info.getEffectiveUserId());
  deleteUserType.setUserName(action.info.getPhysicalResourceId());
  AsyncRequests.<DeleteUserType,DeleteUserResponseType>sendSync(configuration,deleteUserType);
  return action;
}
