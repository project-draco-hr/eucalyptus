{
  if (this.truncateRemaining) {
    this.trailingBytesFound+=data.readableBytes();
    Logs.extreme().debug("Truncating remaining chunks. Returning zero-length buffer");
    return ChannelBuffers.wrappedBuffer(new byte[0]);
  }
  ChannelBuffer dataToScan=data;
  if (this.lastBufferedChunk != null) {
    dataToScan=ChannelBuffers.wrappedBuffer(this.lastBufferedChunk,data);
  }
  int lfIndex=dataToScan.indexOf(0,dataToScan.readableBytes(),ChannelBufferIndexFinder.CR);
  int endOffset=lfIndex;
  if (lfIndex >= 0) {
    if (lfIndex + this.boundaryBytes.length > dataToScan.readableBytes()) {
      this.lastBufferedChunk=dataToScan.slice(lfIndex,dataToScan.readableBytes() - lfIndex);
      endOffset=lfIndex;
    }
 else {
      endOffset=dataToScan.indexOf(lfIndex,dataToScan.readableBytes(),this.boundaryFinder);
      if (endOffset >= lfIndex) {
        this.lastBufferedChunk=null;
        this.truncateRemaining=true;
        this.trailingBytesFound=dataToScan.readableBytes() - endOffset;
        if (this.trailingBytesFound > this.boundaryBytes.length + 4) {
          this.lastBufferedChunk=null;
          throw new MalformedPOSTRequestException("Must not have any trailing form parts after file content");
        }
      }
    }
  }
 else {
    this.lastBufferedChunk=null;
  }
  if (endOffset == 0) {
    Logs.extreme().debug("Filtered all bytes in buffer. Returning zero-length buffer");
    return ChannelBuffers.wrappedBuffer(new byte[0]);
  }
 else   if (endOffset == -1 || endOffset == dataToScan.readableBytes()) {
    Logs.extreme().debug("Filtered no bytes in buffer. Returning full-length buffer: " + dataToScan.readableBytes());
    return dataToScan;
  }
 else {
    Logs.extreme().debug("Filtered some bytes. Returning length: " + endOffset);
    return ChannelBuffers.copiedBuffer(dataToScan.slice(0,endOffset));
  }
}
