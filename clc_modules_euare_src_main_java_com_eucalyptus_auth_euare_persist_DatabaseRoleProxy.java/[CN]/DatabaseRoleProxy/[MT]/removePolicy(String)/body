{
  if (Strings.isNullOrEmpty(name)) {
    throw new AuthException(AuthException.EMPTY_POLICY_NAME);
  }
  try (final TransactionResource db=Entities.transactionFor(RoleEntity.class)){
    final RoleEntity roleEntity=getRoleEntity();
    final PolicyEntity policy=DatabaseAuthUtils.removeNamedPolicy(roleEntity.getPolicies(),name);
    if (policy != null)     Entities.delete(policy);
    db.commit();
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to remove policy " + name + " in "+ this.delegate);
    throw new AuthException("Failed to remove policy",e);
  }
}
