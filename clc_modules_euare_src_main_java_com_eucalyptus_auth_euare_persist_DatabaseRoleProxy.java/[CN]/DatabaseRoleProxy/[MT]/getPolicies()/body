{
  final List<Policy> results=Lists.newArrayList();
  try (final TransactionResource db=Entities.transactionFor(RoleEntity.class)){
    final RoleEntity role=getRoleEntity();
    for (    final PolicyEntity policyEntity : role.getPolicies()) {
      results.add(new DatabasePolicyProxy(policyEntity));
    }
    return results;
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to get policies for " + this.delegate);
    throw new AuthException("Failed to get policies",e);
  }
}
