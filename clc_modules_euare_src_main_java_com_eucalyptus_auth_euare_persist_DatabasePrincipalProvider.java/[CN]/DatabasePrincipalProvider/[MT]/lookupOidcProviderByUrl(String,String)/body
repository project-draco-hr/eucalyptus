{
  try (final TransactionResource tx=Entities.readOnlyDistinctTransactionFor(OpenIdProviderEntity.class)){
    final EuareOpenIdConnectProvider euareProvider=Accounts.lookupAccountById(accountNumber).lookupOpenIdConnectProvider(url);
    final String providerArn=Accounts.getOpenIdConnectProviderArn(euareProvider);
    final String providerAccountNumber=euareProvider.getAccountNumber();
    final List<String> providerClientIds=ImmutableList.copyOf(euareProvider.getClientIds());
    final List<String> providerThumbprints=ImmutableList.copyOf(euareProvider.getThumbprints());
    return new OpenIdConnectProvider(){
      @Override public String getAccountNumber(){
        return providerAccountNumber;
      }
      @Override public String getArn(){
        return providerArn;
      }
      @Override public String getUrl(){
        return euareProvider.getUrl();
      }
      @Override public String getHost(){
        return euareProvider.getHost();
      }
      @Override public Integer getPort(){
        return euareProvider.getPort();
      }
      @Override public String getPath(){
        return euareProvider.getPath();
      }
      @Override public List<String> getClientIds(){
        return providerClientIds;
      }
      @Override public List<String> getThumbprints(){
        return providerThumbprints;
      }
    }
;
  }
 }
