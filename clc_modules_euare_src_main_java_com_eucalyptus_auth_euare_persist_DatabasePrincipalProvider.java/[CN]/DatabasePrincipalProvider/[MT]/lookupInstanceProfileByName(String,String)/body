{
  try (final TransactionResource tx=Entities.readOnlyDistinctTransactionFor(InstanceProfileEntity.class)){
    final EuareInstanceProfile profile=Accounts.lookupAccountById(accountNumber).lookupInstanceProfileByName(name);
    final String profileArn=Accounts.getInstanceProfileArn(profile);
    final EuareRole euareRole=profile.getRole();
    final String roleArn=euareRole == null ? null : Accounts.getRoleArn(euareRole);
    final String roleAccountNumber=euareRole == null ? null : euareRole.getAccountNumber();
    final PolicyVersion rolePolicy=euareRole == null ? null : euareRole.getPolicy();
    final Role role=euareRole == null ? null : new Role(){
      @Override public String getAccountNumber(){
        return roleAccountNumber;
      }
      @Override public String getRoleId(){
        return euareRole.getRoleId();
      }
      @Override public String getRoleArn(){
        return roleArn;
      }
      @Override public String getPath(){
        return euareRole.getPath();
      }
      @Override public String getName(){
        return euareRole.getName();
      }
      @Override public String getSecret(){
        return euareRole.getSecret();
      }
      @Override public PolicyVersion getPolicy(){
        return rolePolicy;
      }
      @Override public String getDisplayName(){
        return Accounts.getRoleFullName(this);
      }
      @Override public OwnerFullName getOwner(){
        return euareRole.getOwner();
      }
    }
;
    return new InstanceProfile(){
      @Override public String getAccountNumber(){
        return accountNumber;
      }
      @Override public String getInstanceProfileId(){
        return profile.getInstanceProfileId();
      }
      @Override public String getInstanceProfileArn(){
        return profileArn;
      }
      @Nullable @Override public Role getRole(){
        return role;
      }
      @Override public String getName(){
        return profile.getName();
      }
      @Override public String getPath(){
        return profile.getPath();
      }
    }
;
  }
 }
