{
  if (this.dependsLocal != null) {
    return this.dependsLocal;
  }
 else {
    if (!Ats.from(this.getClass()).has(DependsLocal.class)) {
      this.dependsLocal=Lists.newArrayListWithExpectedSize(0);
    }
 else {
      this.dependsLocal=Lists.newArrayList();
      for (      final Class<?> compIdClass : Ats.from(this.getClass()).get(DependsLocal.class).value()) {
        if (!ComponentId.class.isAssignableFrom(compIdClass)) {
          LOG.error("Ignoring specified @Depends which does not extend ComponentId: " + compIdClass);
        }
 else {
          try {
            LOG.trace("Adding @Depends to " + this.getClass() + ": "+ compIdClass);
            this.dependsLocal.add((ComponentId)compIdClass.newInstance());
          }
 catch (          final InstantiationException ex) {
            LOG.error(ex,ex);
          }
catch (          final IllegalAccessException ex) {
            LOG.error(ex,ex);
          }
        }
      }
    }
    return this.dependsLocal;
  }
}
