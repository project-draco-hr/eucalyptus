{
  final Map<String,String> m=Maps.newHashMap();
  if (!vm.getNetworkInterfaces().isEmpty())   for (  final NetworkInterface networkInterface : vm.getNetworkInterfaces()) {
    final String prefix="network/interfaces/macs/" + networkInterface.getMacAddress() + "/";
    m.put(prefix + "device-number",String.valueOf(networkInterface.getAttachment().getDeviceIndex()));
    m.put(prefix + "interface-id",networkInterface.getDisplayName());
    if (networkInterface.isAssociated()) {
      m.put(prefix + "ipv4-associations/" + networkInterface.getAssociation().getPublicIp(),networkInterface.getPrivateIpAddress());
    }
    final String privateIp=networkInterface.getPrivateIpAddress();
    m.put(prefix + "local-hostname",VmInstances.dnsName(privateIp,DomainNames.internalSubdomain()));
    m.put(prefix + "local-ipv4s",privateIp);
    m.put(prefix + "mac",networkInterface.getMacAddress());
    m.put(prefix + "owner-id",networkInterface.getOwnerAccountNumber());
    if (networkInterface.isAssociated()) {
      m.put(prefix + "public-hostname",Strings.nullToEmpty(networkInterface.getAssociation().getPublicDnsName()));
      m.put(prefix + "public-ipv4s",networkInterface.getAssociation().getPublicIp());
    }
 else {
      m.put(prefix + "public-hostname","");
      m.put(prefix + "public-ipv4s","");
    }
    m.put(prefix + "security-groups",Joiner.on('\n').join(Iterables.transform(networkInterface.getNetworkGroups(),RestrictedTypes.toDisplayName())));
    m.put(prefix + "security-group-ids",Joiner.on('\n').join(Iterables.transform(networkInterface.getNetworkGroups(),NetworkGroup.groupId())));
    m.put(prefix + "subnet-id",networkInterface.getSubnet().getDisplayName());
    m.put(prefix + "subnet-ipv4-cidr-block",networkInterface.getSubnet().getCidr());
    m.put(prefix + "vpc-id",networkInterface.getVpc().getDisplayName());
    m.put(prefix + "vpc-ipv4-cidr-block",networkInterface.getVpc().getCidr());
  }
 else {
    @SuppressWarnings("deprecation") final boolean dns=StackConfiguration.USE_INSTANCE_DNS && !ComponentIds.lookup(Dns.class).runLimitedServices();
    final String prefix="network/interfaces/macs/" + vm.getMacAddress() + "/";
    m.put(prefix + "device-number","0");
    if (dns) {
      m.put(prefix + "local-hostname",vm.getPrivateDnsName());
    }
 else {
      m.put(prefix + "local-hostname",vm.getPrivateAddress());
    }
    m.put(prefix + "local-ipv4s",vm.getPrivateAddress());
    m.put(prefix + "mac",vm.getMacAddress());
    m.put(prefix + "owner-id",vm.getOwnerAccountNumber());
    if (dns) {
      m.put(prefix + "public-hostname",vm.getPublicDnsName());
    }
 else {
      m.put(prefix + "public-hostname",vm.getPublicAddress());
    }
    m.put(prefix + "public-ipv4s",vm.getPublicAddress());
  }
  return m;
}
