def get_ipv4_lookup(self, hostname, port=22, verbose=False):
    "\n        Do an ipv4 lookup of 'hostname' and return list of any resolved ip addresses\n\n        :param hostname: hostname to resolve\n        :param port: port to include in lookup, default is ssh port 22\n        :param verbose: boolean to print addditional debug\n        :return: list of ip addresses (strings in a.b.c.d format)\n        "
    get_ipv4_ip = False
    iplist = []
    try:
        if socket.inet_aton(hostname):
            ipcheck = re.compile('^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$')
            if (not ipcheck.match(hostname)):
                get_ipv4_ip = True
        self.debug((str(hostname) + ', is already an ip, dont do host lookup...'), verbose=verbose)
    except socket.error:
        get_ipv4_ip = True
    if get_ipv4_ip:
        try:
            addrs = socket.getaddrinfo(hostname, port, socket.AF_INET, socket.IPPROTO_IP, socket.IPPROTO_TCP)
            for addr in addrs:
                iplist.append(str(addr[4][0]))
            self.debug(((('Resolved hostname:' + str(hostname)) + ' to IP(s):') + ','.join(iplist)), verbose=verbose)
        except Exception as de:
            self.debug(((('Error looking up DNS ip for hostname:' + str(hostname)) + ', err:') + str(de)))
    else:
        iplist = [hostname]
    return iplist
