{
  EntityTransaction db=Entities.get(VolumeToken.class);
  try {
    VolumeToken foundToken=Entities.uniqueResult(new VolumeToken(volumeId,token,true));
    if (foundToken.getIsValid()) {
      LOG.debug("Valid token found, invalidating token on unexport " + volumeId);
      foundToken.setIsValid(Boolean.FALSE);
      db.commit();
      return true;
    }
 else {
      LOG.warn("Attempted to remove export with invalid token for volume " + volumeId);
    }
  }
 catch (  Exception e) {
    LOG.error("Error checking token for volume " + volumeId + " : "+ e.getMessage());
    LOG.debug("Exception caught invalidating token for vol: " + volumeId,e);
  }
 finally {
    if (db.isActive()) {
      db.rollback();
    }
  }
  LOG.warn("Cannot remove export for volume " + volumeId);
  return false;
}
