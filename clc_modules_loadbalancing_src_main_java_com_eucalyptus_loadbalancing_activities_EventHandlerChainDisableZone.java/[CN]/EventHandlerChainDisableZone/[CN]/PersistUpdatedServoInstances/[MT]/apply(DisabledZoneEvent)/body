{
  LoadBalancer lb=null;
  try {
    lb=LoadBalancers.getLoadbalancer(evt.getContext().getUserFullName(),evt.getLoadBalancer());
  }
 catch (  NoSuchElementException ex) {
    throw new EventHandlerException("Could not find the loadbalancer with name=" + evt.getLoadBalancer(),ex);
  }
catch (  Exception ex) {
    throw new EventHandlerException("Error while looking for loadbalancer with name=" + evt.getLoadBalancer(),ex);
  }
  retiredInstances=Lists.newArrayList();
  final List<LoadBalancerZone> currentZones=Lists.newArrayList(lb.getZones());
  for (  final LoadBalancerZone zone : currentZones) {
    if (evt.getZones().contains(zone.getName())) {
      for (      final LoadBalancerServoInstance instance : zone.getServoInstances()) {
        final EntityTransaction db=Entities.get(LoadBalancerServoInstance.class);
        try {
          final LoadBalancerServoInstance update=Entities.uniqueResult(instance);
          update.setState(LoadBalancerServoInstance.STATE.Retired);
          Entities.persist(update);
          db.commit();
          retiredInstances.add(update);
        }
 catch (        final NoSuchElementException ex) {
          db.rollback();
          LOG.warn("Failed to update the servo instance's state: no such instance found");
        }
catch (        final Exception ex) {
          db.rollback();
          LOG.warn("Failed to update the servo instance's state",ex);
        }
      }
    }
  }
}
