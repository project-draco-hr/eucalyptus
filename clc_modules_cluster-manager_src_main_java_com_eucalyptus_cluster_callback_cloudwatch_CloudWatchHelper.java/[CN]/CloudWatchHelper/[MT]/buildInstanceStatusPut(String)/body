{
  final List<Pair<String,Double>> instanceStatusDatums=ImmutableList.<Pair<String,Double>>builder().add(Pair.pair(Count.StatusCheckFailed.name(),instanceInfoProvider.getStatusCheckFailed(instanceId).doubleValue())).add(Pair.pair(Count.StatusCheckFailed_Instance.name(),instanceInfoProvider.getInstanceStatusCheckFailed(instanceId).doubleValue())).add(Pair.pair(Count.StatusCheckFailed_System.name(),instanceInfoProvider.getSystemStatusCheckFailed(instanceId).doubleValue())).build();
  final ArrayList<Dimension> dimArray=Lists.newArrayList();
  populateInstanceDimensions(instanceId,dimArray);
  final Dimensions dimensions=new Dimensions();
  dimensions.setMember(dimArray);
  final List<AbsoluteMetricQueueItem> queueItems=Lists.newArrayList();
  for (  final Pair<String,Double> datum : instanceStatusDatums) {
    final MetricDatum metricDatum=new MetricDatum();
    metricDatum.setMetricName(datum.getLeft());
    metricDatum.setDimensions(dimensions);
    metricDatum.setTimestamp(new Date());
    metricDatum.setValue(datum.getRight());
    metricDatum.setUnit(Count.class.getSimpleName());
    final AbsoluteMetricQueueItem queueItem=new AbsoluteMetricQueueItem();
    queueItem.setNamespace("AWS/EC2");
    queueItem.setMetricDatum(metricDatum);
    queueItem.setAccountId(instanceInfoProvider.getEffectiveUserId(instanceId).getAccountNumber());
    queueItems.add(queueItem);
  }
  return queueItems;
}
