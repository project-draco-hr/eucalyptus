{
  Logs.extreme().error("Transition error(): " + this.toString(),t);
  if (!this.state.isMarked()) {
    IllegalStateException ex=new IllegalStateException("error() called when there is no currently pending transition: " + this.toString(),t);
    Logs.extreme().error(ex);
    ActiveTransition tr=this.currentTransition.getAndSet(null);
    if (tr != null) {
      tr.getTransitionFuture().setException(t);
      this.state.set(tr.getTransitionRule().getErrorState(),false);
    }
  }
 else {
    ActiveTransition tr=this.currentTransition.getAndSet(null);
    if (tr != null) {
      Logs.extreme().error("Transition error(): " + this.toString() + "Transition error(): START STACK\n"+ tr.startStackTrace);
      Logs.extreme().error("Transition error(): " + this.toString() + "Transition error(): END STACK"+ tr.endStackTrace);
      this.state.set(tr.getTransitionRule().getErrorState(),tr.getTransitionRule().getErrorStateMark());
      if (!tr.getTransitionRule().getFromState().equals(tr.getTransitionRule().getErrorState())) {
        this.state.set(tr.getTransitionRule().getErrorState(),false);
        this.fireInListeners(tr.getTransitionRule().getErrorState());
      }
 else {
        this.state.set(tr.getTransitionRule().getErrorState(),false);
      }
      EventRecord.caller(this.getClass(),EventType.TRANSITION_FUTURE,"setException(" + t.getClass().getCanonicalName() + "): "+ t.getMessage()).trace();
      tr.getTransitionFuture().setException(t);
    }
  }
}
