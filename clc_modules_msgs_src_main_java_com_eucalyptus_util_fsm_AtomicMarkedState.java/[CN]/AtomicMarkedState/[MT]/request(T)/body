{
  Transition<P,S,T> transition=lookupTransition(transitionName);
  TransitionRule<S,T> r=transition.getRule();
  if (!this.currentTransition.compareAndSet(null,new ActiveTransition(this.id.incrementAndGet(),transition))) {
    throw new ExistingTransitionException("Transition request " + transitionName + " rejected because of an ongoing transition: "+ this.toString());
  }
 else   if (!this.state.compareAndSet(r.getFromState(),r.getToState(),r.getFromStateMark(),true)) {
    this.id.decrementAndGet();
    this.currentTransition.set(null);
    throw new IllegalStateException("Failed to validate expected preconditions for transition: " + transition.getRule().toString() + " for current state: "+ this.toString());
  }
 else {
    return this.currentTransition.get();
  }
}
