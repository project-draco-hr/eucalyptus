{
  if (this.state.isMarked()) {
    throw new ExistingTransitionException("Transition request transition=" + transitionName + " rejected because of an ongoing transition: "+ this.toString());
  }
 else   if (!this.transitions.containsKey(transitionName)) {
    throw new NoSuchElementException("No such transition named: " + transitionName.toString() + ". Known transitions: "+ this.getTransitions());
  }
 else {
    this.checkTransition(transitionName);
    final ActiveTransition tid=this.beforeLeave(transitionName);
    CheckedListenableFuture<P> future=this.afterLeave(transitionName,tid);
    return future;
  }
}
