{
  Set<ConfigResource> configs=Sets.newHashSet();
  configs.addAll(Components.lookup(Component.bootstrap).getConfiguration().getResource().getConfigurations());
  if (Components.lookup(Component.eucalyptus).isAvailableLocally()) {
    for (    com.eucalyptus.component.Component comp : Components.list()) {
      if (comp.getPeer().isCloudLocal()) {
        Resource rsc=comp.getConfiguration().getResource();
        if (rsc != null) {
          LOG.info("-> Preparing cloud-local cfg: " + rsc);
          configs.addAll(rsc.getConfigurations());
        }
      }
    }
  }
  for (  com.eucalyptus.component.Component comp : Components.list()) {
    if (comp.isRunningLocally()) {
      Resource rsc=comp.getConfiguration().getResource();
      if (rsc != null) {
        LOG.info("-> Preparing component cfg: " + rsc);
        configs.addAll(rsc.getConfigurations());
      }
    }
  }
  for (  ConfigResource cfg : configs) {
    LOG.info("-> Loaded cfg: " + cfg.getUrl());
  }
  try {
    buildContext(configs);
  }
 catch (  Exception e) {
    LOG.fatal("Failed to bootstrap services.",e);
    return false;
  }
  return true;
}
