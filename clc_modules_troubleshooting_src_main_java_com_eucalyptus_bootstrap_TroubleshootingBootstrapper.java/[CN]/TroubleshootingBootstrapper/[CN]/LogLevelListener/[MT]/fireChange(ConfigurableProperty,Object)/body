{
  if (newValue == null) {
    newValue="";
  }
  String newLogLevel=(String)newValue;
  newLogLevel=makeNotNullAndTrim(newLogLevel).toUpperCase();
  if (!(newLogLevel.isEmpty() || Arrays.asList(logLevels).contains(newLogLevel))) {
    throw new ConfigurablePropertyException("Invalid log level " + newLogLevel);
  }
  LOG.warn("Change occurred to property " + t.getQualifiedName() + " with new value "+ newValue+ ".");
  try {
    t.getField().set(null,t.getTypeParser().apply(newValue));
  }
 catch (  IllegalArgumentException e1) {
    e1.printStackTrace();
    throw new ConfigurablePropertyException(e1);
  }
catch (  IllegalAccessException e1) {
    e1.printStackTrace();
    throw new ConfigurablePropertyException(e1);
  }
  if (newLogLevel.isEmpty()) {
    System.setProperty("euca.log.level",newLogLevel.toUpperCase());
    Set<Appender> allAppenderSet=new HashSet<Appender>();
    List<Appender> allAppenderList=new ArrayList<Appender>();
    Enumeration e=LogManager.getRootLogger().getAllAppenders();
    while (e.hasMoreElements()) {
      Appender a=(Appender)e.nextElement();
      allAppenderSet.add(a);
      allAppenderList.add(a);
    }
    Enumeration e2=LogManager.getLoggerRepository().getCurrentLoggers();
    while (e2.hasMoreElements()) {
      Logger logger=(Logger)e2.nextElement();
      Enumeration e3=logger.getAllAppenders();
      while (e3.hasMoreElements()) {
        Appender a=(Appender)e3.nextElement();
        allAppenderSet.add(a);
        allAppenderList.add(a);
      }
    }
    LOG.fatal("Set appenders = " + allAppenderSet.size());
    LOG.fatal("List appenders = " + allAppenderList.size());
  }
  LOG.fatal("test level FATAL");
  LOG.error("test level ERROR");
  LOG.warn("test level WARN");
  LOG.info("test level INFO");
  LOG.debug("test level DEBUG");
  LOG.trace("test level TRACE");
}
