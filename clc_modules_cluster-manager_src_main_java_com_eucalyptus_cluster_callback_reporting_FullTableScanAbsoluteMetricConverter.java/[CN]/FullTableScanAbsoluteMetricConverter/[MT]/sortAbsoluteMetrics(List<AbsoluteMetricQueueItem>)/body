{
  SortedAbsoluteMetrics sortedAbsoluteMetrics=new SortedAbsoluteMetrics();
  for (  AbsoluteMetricQueueItem item : dataBatch) {
    String accountId=item.getAccountId();
    String namespace=item.getNamespace();
    MetricDatum datum=item.getMetricDatum();
    if (AbsoluteMetricHelper.AWS_EBS_NAMESPACE.equals(namespace)) {
      String volumeId=null;
      if ((datum.getDimensions() != null) && (datum.getDimensions().getMember() != null)) {
        for (        Dimension dimension : datum.getDimensions().getMember()) {
          if (AbsoluteMetricHelper.VOLUME_ID_DIM_NAME.equals(dimension.getName())) {
            volumeId=dimension.getValue();
          }
        }
      }
      if (volumeId == null) {
        continue;
      }
 else {
        if (AbsoluteMetricHelper.EBS_ABSOLUTE_METRICS.containsKey(datum.getMetricName())) {
          addAccountAbsoluteMetricMap(sortedAbsoluteMetrics,accountId,AbsoluteMetricHelper.AWS_EBS_NAMESPACE,datum.getMetricName(),AbsoluteMetricHelper.VOLUME_ID_DIM_NAME,volumeId,AbsoluteMetricHelper.EBS_ABSOLUTE_METRICS.get(datum.getMetricName()),datum.getTimestamp(),datum.getValue(),datum);
        }
 else         if (AbsoluteMetricHelper.VOLUME_QUEUE_LENGTH_METRIC_NAME.equals(datum.getMetricName())) {
          addAccountAbsoluteMetricMap(sortedAbsoluteMetrics,accountId,AbsoluteMetricHelper.AWS_EBS_NAMESPACE,AbsoluteMetricHelper.VOLUME_QUEUE_LENGTH_PLACEHOLDER_ABSOLUTE_METRIC_NAME,AbsoluteMetricHelper.VOLUME_ID_DIM_NAME,volumeId,AbsoluteMetricHelper.VOLUME_QUEUE_LENGTH_PLACEHOLDER_METRIC_NAME,datum.getTimestamp(),datum.getValue(),datum);
        }
 else {
          sortedAbsoluteMetrics.getRegularMetrics().add(item);
        }
      }
    }
 else     if (AbsoluteMetricHelper.AWS_EC2_NAMESPACE.equals(namespace)) {
      String instanceId=null;
      if ((datum.getDimensions() != null) && (datum.getDimensions().getMember() != null)) {
        for (        Dimension dimension : datum.getDimensions().getMember()) {
          if (AbsoluteMetricHelper.INSTANCE_ID_DIM_NAME.equals(dimension.getName())) {
            instanceId=dimension.getValue();
          }
        }
      }
      if (instanceId == null) {
        continue;
      }
 else       if (AbsoluteMetricHelper.EC2_ABSOLUTE_METRICS.containsKey(datum.getMetricName())) {
        addAccountAbsoluteMetricMap(sortedAbsoluteMetrics,accountId,AbsoluteMetricHelper.AWS_EC2_NAMESPACE,datum.getMetricName(),AbsoluteMetricHelper.INSTANCE_ID_DIM_NAME,instanceId,AbsoluteMetricHelper.EC2_ABSOLUTE_METRICS.get(datum.getMetricName()),datum.getTimestamp(),datum.getValue(),datum);
      }
 else       if (AbsoluteMetricHelper.CPU_UTILIZATION_MS_ABSOLUTE_METRIC_NAME.equals(datum.getMetricName())) {
        addAccountAbsoluteMetricMap(sortedAbsoluteMetrics,accountId,AbsoluteMetricHelper.AWS_EC2_NAMESPACE,AbsoluteMetricHelper.CPU_UTILIZATION_MS_ABSOLUTE_METRIC_NAME,AbsoluteMetricHelper.INSTANCE_ID_DIM_NAME,instanceId,AbsoluteMetricHelper.CPU_UTILIZATION_METRIC_NAME,datum.getTimestamp(),datum.getValue(),datum);
      }
 else {
        sortedAbsoluteMetrics.getRegularMetrics().add(item);
      }
    }
 else {
      sortedAbsoluteMetrics.getRegularMetrics().add(item);
    }
  }
  return sortedAbsoluteMetrics;
}
