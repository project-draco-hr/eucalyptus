{
  ArrayList<SimpleMetricEntity> returnValue=new ArrayList<SimpleMetricEntity>();
  for (  MetricQueueItem item : stupidDataBatch) {
    SimpleMetricEntity metricMetadata=new SimpleMetricEntity();
    metricMetadata.setAccountId(item.getAccountId());
    MetricDatum datum=item.getMetricDatum();
    metricMetadata.setMetricName(datum.getMetricName());
    metricMetadata.setNamespace(item.getNamespace());
    final List<Dimension> dimensions=datum.getDimensions() == null ? Collections.<Dimension>emptyList() : datum.getDimensions().getMember();
    metricMetadata.setDimensionMap(makeDimensionMap(dimensions));
    metricMetadata.setMetricType(item.getMetricType());
    metricMetadata.setUnits(Units.fromValue(datum.getUnit()));
    metricMetadata.setTimestamp(datum.getTimestamp());
    if (datum.getValue() != null) {
      metricMetadata.setSampleMax(datum.getValue());
      metricMetadata.setSampleMin(datum.getValue());
      metricMetadata.setSampleSum(datum.getValue());
      metricMetadata.setSampleSize(1.0);
    }
 else     if ((datum.getStatisticValues() != null) && (datum.getStatisticValues().getMaximum() != null) && (datum.getStatisticValues().getMinimum() != null)&& (datum.getStatisticValues().getSum() != null)&& (datum.getStatisticValues().getSampleCount() != null)) {
      metricMetadata.setSampleMax(datum.getStatisticValues().getMaximum());
      metricMetadata.setSampleMin(datum.getStatisticValues().getMinimum());
      metricMetadata.setSampleSum(datum.getStatisticValues().getSum());
      metricMetadata.setSampleSize(datum.getStatisticValues().getSampleCount());
    }
 else {
      throw new RuntimeException("Statistics set (all values) or Value must be set");
    }
    returnValue.add(metricMetadata);
  }
  return returnValue;
}
