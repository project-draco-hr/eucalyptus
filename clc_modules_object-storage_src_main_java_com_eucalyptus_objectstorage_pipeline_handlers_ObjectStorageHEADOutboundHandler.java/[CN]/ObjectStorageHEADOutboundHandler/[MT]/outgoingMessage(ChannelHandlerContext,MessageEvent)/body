{
  if (event.getMessage() instanceof MappingHttpResponse) {
    MappingHttpResponse httpResponse=(MappingHttpResponse)event.getMessage();
    BaseMessage msg=(BaseMessage)httpResponse.getMessage();
    httpResponse.setHeader(HttpHeaders.Names.DATE,DateFormatter.dateToHeaderFormattedString(new Date()));
    httpResponse.setHeader(ObjectStorageProperties.AMZ_REQUEST_ID,msg.getCorrelationId());
    if (msg instanceof ObjectStorageDataResponseType) {
      ObjectStorageDataResponseType headResponse=(ObjectStorageDataResponseType)msg;
      httpResponse.setHeader(HttpHeaders.Names.ETAG,"\"" + headResponse.getEtag() + "\"");
      String contentType=headResponse.getContentType();
      if (!Strings.isNullOrEmpty(contentType)) {
        httpResponse.setHeader(HttpHeaders.Names.CONTENT_TYPE,contentType);
      }
      String contentLength=String.valueOf(headResponse.getSize());
      if (!Strings.isNullOrEmpty(contentLength)) {
        httpResponse.setHeader(HttpHeaders.Names.CONTENT_LENGTH,contentLength);
      }
      if (!Strings.isNullOrEmpty(headResponse.getVersionId()) && !ObjectStorageProperties.NULL_VERSION_ID.equals(((ObjectStorageDataResponseType)msg).getVersionId())) {
        httpResponse.setHeader(ObjectStorageProperties.X_AMZ_VERSION_ID,((ObjectStorageDataResponseType)msg).getVersionId());
      }
      for (      MetaDataEntry m : headResponse.getMetaData()) {
        httpResponse.addHeader(ObjectStorageProperties.AMZ_META_HEADER_PREFIX + m.getName(),m.getValue());
      }
      Date lastModified=headResponse.getLastModified();
      if (lastModified != null) {
        httpResponse.setHeader(HttpHeaders.Names.LAST_MODIFIED,DateFormatter.dateToHeaderFormattedString(lastModified));
      }
      OSGUtil.addCopiedHeadersToResponse(httpResponse,headResponse);
    }
    OSGUtil.addCorsResponseHeaders(httpResponse);
    httpResponse.setMessage(null);
  }
}
