{
  final AuthEvaluationContextImpl evaluationContext=(AuthEvaluationContextImpl)context;
  final ContractKeyEvaluator contractEval=new ContractKeyEvaluator(contracts);
  final CachedKeyEvaluator keyEval=new CachedKeyEvaluator(context.getEvaluatedKeys());
  final String action=evaluationContext.getAction();
  final User requestUser=evaluationContext.getRequestUser();
  final String resourceType=evaluationContext.getResourceType();
  resourceName=PolicySpec.canonicalizeResourceName(resourceType,resourceName);
  if (evaluationContext.isSystemAdmin()) {
    return Decision.ALLOW;
  }
  final String accountNumber=evaluationContext.getRequestAccountNumber();
  if (resourceAccountNumber != null && !resourceAccountNumber.equals(accountNumber) && !evaluationContext.isSystemUser()) {
    final Decision decision=processAuthorizations(evaluationContext.lookupAuthorizations(),authorizationMatch,action,resourceAccountNumber,resourceName,keyEval,contractEval);
    if (decision == Decision.DENY) {
      LOG.debug("Request is rejected by authorization check, due to decision " + decision);
    }
    return decision == Decision.ALLOW ? Decision.DEFAULT : decision;
  }
 else {
    final Decision decision=processAuthorizations(evaluationContext.lookupAuthorizations(),authorizationMatch,action,resourceAccountNumber,resourceName,keyEval,contractEval);
    if (decision == Decision.DENY || decision == Decision.DEFAULT) {
      LOG.debug("Request is rejected by authorization check, due to decision " + decision);
    }
    return decision;
  }
}
