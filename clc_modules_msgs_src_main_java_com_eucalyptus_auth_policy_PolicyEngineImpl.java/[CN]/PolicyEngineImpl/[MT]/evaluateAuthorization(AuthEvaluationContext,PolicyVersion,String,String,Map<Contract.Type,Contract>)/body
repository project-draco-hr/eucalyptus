{
  try {
    final AuthEvaluationContextImpl evaluationContext=(AuthEvaluationContextImpl)context;
    final ContractKeyEvaluator contractEval=new ContractKeyEvaluator(contracts);
    final CachedKeyEvaluator keyEval=new CachedKeyEvaluator(context.getEvaluatedKeys());
    final String action=evaluationContext.getAction();
    if (!evaluationContext.isSystemAdmin()) {
      Decision decision=resourcePolicy == null ? Decision.ALLOW : processAuthorizations(AuthEvaluationContextImpl.authorizations(resourcePolicy,true),AuthorizationMatch.All,action,null,null,null,evaluationContext.getPrincipalType(),evaluationContext.getPrincipalName(),keyEval,contractEval);
      if (decision != Decision.ALLOW) {
        LOG.debug("Request is rejected by resource authorization check, due to decision " + decision);
        throw new AuthException(AuthException.ACCESS_DENIED);
      }
 else {
        decision=evaluateResourceAuthorization(evaluationContext,AuthorizationMatch.All,resourceAccountNumber,resourceName,contracts);
        if (Decision.DENY == decision || (Decision.ALLOW != decision && resourcePolicy == null)) {
          throw new AuthException(AuthException.ACCESS_DENIED);
        }
      }
    }
  }
 catch (  AuthException e) {
    LOG.debug(e,e);
    throw e;
  }
catch (  Exception e) {
    LOG.debug(e,e);
    throw new AuthException("An error occurred while trying to evaluate policy for resource access",e);
  }
}
