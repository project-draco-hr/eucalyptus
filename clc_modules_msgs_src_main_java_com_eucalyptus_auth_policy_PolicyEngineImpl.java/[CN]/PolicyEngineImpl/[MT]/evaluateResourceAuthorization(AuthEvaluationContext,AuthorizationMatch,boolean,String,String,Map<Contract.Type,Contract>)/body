{
  final AuthEvaluationContextImpl evaluationContext=(AuthEvaluationContextImpl)context;
  final ContractKeyEvaluator contractEval=new ContractKeyEvaluator(contracts);
  final CachedKeyEvaluator keyEval=new CachedKeyEvaluator(context.getEvaluatedKeys());
  final String action=evaluationContext.getAction();
  final String resourceType=evaluationContext.getResourceType();
  resourceName=PolicySpec.canonicalizeResourceName(resourceType,resourceName);
  if (evaluationContext.isSystemAdmin()) {
    return Decision.ALLOW;
  }
  final String accountNumber=evaluationContext.getRequestAccountNumber();
  if (accountOnly && resourceAccountNumber != null && !resourceAccountNumber.equals(accountNumber)) {
    LOG.debug("Request is rejected due to resource account mismatch with identity account");
    return Decision.DEFAULT;
  }
  final Decision decision=processAuthorizations(evaluationContext.lookupAuthorizations(),authorizationMatch,action,resourceAccountNumber,resourceType,resourceName,evaluationContext.getPrincipalType(),evaluationContext.getPrincipalName(),keyEval,contractEval);
  if (decision == Decision.DENY || decision == Decision.DEFAULT) {
    LOG.debug("Request is rejected by authorization check, due to decision " + decision);
  }
  return decision;
}
