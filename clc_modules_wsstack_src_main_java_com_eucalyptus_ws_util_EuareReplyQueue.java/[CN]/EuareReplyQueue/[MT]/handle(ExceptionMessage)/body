{
  EventRecord.here(EuareReplyQueue.class,EventType.MSG_REPLY,exMsg.getPayload().getClass().getSimpleName()).debug();
  LOG.trace("Caught exception while servicing: " + exMsg.getPayload());
  LOG.debug("EUARE exception: " + exMsg.getPayload().getClass().getCanonicalName() + ", "+ exMsg.getException().getClass().getCanonicalName()+ ", "+ exMsg.getException().getCause().getClass().getCanonicalName());
  LOG.debug("EUARE exception: " + exMsg.getPayload() + ", "+ exMsg.getException()+ ", "+ exMsg.getException().getCause());
  Throwable exception=exMsg.getException();
  if (exception instanceof MessagingException && exception.getCause() instanceof EuareException) {
    EuareException euareException=(EuareException)exception.getCause();
    ErrorResponseType errorResp=new ErrorResponseType();
    Object payload=((MessagingException)exception).getUmoMessage().getPayload();
    if (payload instanceof BaseMessage) {
      errorResp.setCorrelationId(((BaseMessage)payload).getCorrelationId());
    }
 else {
      errorResp.setCorrelationId("1");
    }
    ErrorType error=new ErrorType();
    error.setType("Receiver");
    error.setCode(euareException.getCode());
    error.setMessage(euareException.getError());
    error.getDetail().setContent(euareException.getMessage());
    errorResp.getErrorList().add(error);
    this.handle(errorResp);
  }
}
