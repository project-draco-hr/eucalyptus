{
  ListQueuesResponseType reply=request.getReply();
  try {
    final Context ctx=Contexts.lookup();
    final String accountId=ctx.getAccountNumber();
    if (!Permissions.isAuthorized(SimpleQueuePolicySpec.VENDOR_SIMPLEQUEUE,SimpleQueuePolicySpec.SIMPLEQUEUE_LISTQUEUES,"",ctx.getAccount(),SimpleQueuePolicySpec.SIMPLEQUEUE_LISTQUEUES,ctx.getAuthContext())) {
      throw new AccessDeniedException("Not authorized.");
    }
    Collection<Queue> queues;
    if (ctx.isAdministrator() && "verbose".equals(request.getQueueNamePrefix())) {
      queues=PersistenceFactory.getQueuePersistence().listQueues(null,null);
    }
 else     queues=PersistenceFactory.getQueuePersistence().listQueues(accountId,request.getQueueNamePrefix());
    if (queues != null) {
      for (      Queue queue : queues) {
        reply.getListQueuesResult().getQueueUrl().add(getQueueUrlFromQueueUrlParts(new QueueUrlParts(queue.getAccountId(),queue.getQueueName())));
      }
    }
  }
 catch (  Exception ex) {
    handleException(ex);
  }
  return reply;
}
