{
  try {
    return AsyncRequests.sendSyncWithCurrentIdentity(Topology.lookup(AutoScalingBackend.class),request);
  }
 catch (  NoSuchElementException e) {
    throw new AutoScalingUnavailableException("Service Unavailable");
  }
catch (  final FailedRequestException e) {
    if (request.getReply().getClass().isInstance(e.getRequest())) {
      return e.getRequest();
    }
    throw e.getRequest() == null ? e : new AutoScalingException("InternalError",Role.Receiver,"Internal error " + e.getRequest().getClass().getSimpleName() + ":false");
  }
}
