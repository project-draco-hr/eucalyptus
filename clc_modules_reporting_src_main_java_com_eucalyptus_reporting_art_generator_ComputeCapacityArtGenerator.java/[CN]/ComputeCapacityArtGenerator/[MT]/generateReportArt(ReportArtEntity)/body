{
  final ReportingComputeDomainModel model=ReportingComputeDomainModel.getGlobalComputeDomainModel();
  final ComputeCapacityArtEntity globalCapacity=report.getUsageTotals().getComputeCapacityArtEntity();
  globalCapacity.setSizeS3ObjectAvailableGB(nullSafe(model.getSizeS3ObjectAvailableGB()));
  globalCapacity.setSizeS3ObjectTotalGB(nullSafe(model.getSizeS3ObjectTotalGB()));
  globalCapacity.setNumPublicIpsAvailable(nullSafe(model.getNumPublicIpsAvailable()));
  globalCapacity.setNumPublicIpsTotal(nullSafe(model.getNumPublicIpsTotal()));
  globalCapacity.setEc2ComputeUnitsAvailable(0);
  globalCapacity.setEc2ComputeUnitsTotal(0);
  globalCapacity.setEc2DiskUnitsAvailable(0);
  globalCapacity.setEc2DiskUnitsTotal(0);
  globalCapacity.setEc2MemoryUnitsAvailable(0);
  globalCapacity.setEc2MemoryUnitsTotal(0);
  globalCapacity.setSizeEbsAvailableGB(0L);
  globalCapacity.setSizeEbsTotalGB(0L);
  for (  final String zone : ReportingComputeDomainModel.getZones()) {
    AvailabilityZoneArtEntity zoneEntity=report.getZones().get(zone);
    if (zoneEntity == null) {
      zoneEntity=new AvailabilityZoneArtEntity();
      report.getZones().put(zone,zoneEntity);
    }
    final ComputeCapacityArtEntity zoneCapacity=zoneEntity.getUsageTotals().getComputeCapacityArtEntity();
    final ReportingComputeZoneDomainModel zoneModel=ReportingComputeDomainModel.getZoneComputeDomainModel(zone);
    zoneCapacity.setEc2ComputeUnitsAvailable(nullSafe(zoneModel.getEc2ComputeUnitsAvailable()));
    zoneCapacity.setEc2ComputeUnitsTotal(nullSafe(zoneModel.getEc2ComputeUnitsTotal()));
    zoneCapacity.setEc2DiskUnitsAvailable(nullSafe(zoneModel.getEc2DiskUnitsAvailable()));
    zoneCapacity.setEc2DiskUnitsTotal(nullSafe(zoneModel.getEc2DiskUnitsTotal()));
    zoneCapacity.setEc2MemoryUnitsAvailable(nullSafe(zoneModel.getEc2MemoryUnitsAvailable()));
    zoneCapacity.setEc2MemoryUnitsTotal(nullSafe(zoneModel.getEc2MemoryUnitsTotal()));
    zoneCapacity.setSizeEbsAvailableGB(nullSafe(zoneModel.getSizeEbsAvailableGB()));
    zoneCapacity.setSizeEbsTotalGB(nullSafe(zoneModel.getSizeEbsTotalGB()));
    for (    final String vmType : zoneModel.getVmTypes()) {
      zoneCapacity.setInstancesAvailableForType(vmType,nullSafe(zoneModel.getInstancesAvailableForType(vmType)));
      zoneCapacity.setInstancesTotalForType(vmType,nullSafe(zoneModel.getInstancesTotalForType(vmType)));
    }
    globalCapacity.setEc2ComputeUnitsAvailable(globalCapacity.getEc2ComputeUnitsAvailable() + zoneCapacity.getEc2ComputeUnitsAvailable());
    globalCapacity.setEc2ComputeUnitsTotal(globalCapacity.getEc2ComputeUnitsTotal() + zoneCapacity.getEc2ComputeUnitsTotal());
    globalCapacity.setEc2DiskUnitsAvailable(globalCapacity.getEc2DiskUnitsAvailable() + zoneCapacity.getEc2DiskUnitsAvailable());
    globalCapacity.setEc2DiskUnitsTotal(globalCapacity.getEc2DiskUnitsTotal() + zoneCapacity.getEc2DiskUnitsTotal());
    globalCapacity.setEc2MemoryUnitsAvailable(globalCapacity.getEc2MemoryUnitsAvailable() + zoneCapacity.getEc2MemoryUnitsAvailable());
    globalCapacity.setEc2MemoryUnitsTotal(globalCapacity.getEc2MemoryUnitsTotal() + zoneCapacity.getEc2MemoryUnitsTotal());
    globalCapacity.setSizeEbsAvailableGB(globalCapacity.getSizeEbsAvailableGB() + zoneCapacity.getSizeEbsAvailableGB());
    globalCapacity.setSizeEbsTotalGB(globalCapacity.getSizeEbsTotalGB() + zoneCapacity.getSizeEbsTotalGB());
    for (    final String vmType : zoneModel.getVmTypes()) {
      globalCapacity.setInstancesAvailableForType(vmType,nullSafe(globalCapacity.getInstancesAvailableForType(vmType)) + zoneCapacity.getInstancesAvailableForType(vmType));
      globalCapacity.setInstancesTotalForType(vmType,nullSafe(globalCapacity.getInstancesTotalForType(vmType)) + zoneCapacity.getInstancesTotalForType(vmType));
    }
  }
  return report;
}
