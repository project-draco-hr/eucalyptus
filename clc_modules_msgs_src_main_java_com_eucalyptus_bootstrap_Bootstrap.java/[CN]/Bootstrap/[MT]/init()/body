{
  Runtime.getRuntime().addShutdownHook(new Thread(){
    @Override public void run(){
      Bootstrap.shutdown=Boolean.TRUE;
    }
  }
);
  LOG.info(LogUtil.header("Initializing discoverable bootstrap resources."));
  Bootstrap.doDiscovery();
  LOG.info(LogUtil.header("Initializing component identifiers:"));
  for (  ComponentId compId : ComponentIds.list()) {
    LOG.info("-> Registering ComponentId of type: " + compId.getClass().getCanonicalName());
    Components.create(compId);
  }
  LOG.info(LogUtil.header("Building core local services: cloudLocal=" + Bootstrap.isCloudController()));
  List<Component> components=Components.whichCanLoad();
  for (  Component comp : components) {
    try {
      comp.initService();
    }
 catch (    ServiceRegistrationException ex) {
      LOG.info(ex.getMessage());
    }
catch (    Throwable ex) {
      LOG.error(ex,ex);
    }
  }
  LOG.info(LogUtil.header("Initializing component resources:"));
  for (  Component c : Components.whichCanLoad()) {
    Bootstrap.applyTransition(c,Component.Transition.INITIALIZING);
  }
  LOG.info(LogUtil.header("Initializing bootstrappers."));
  Bootstrap.initBootstrappers();
  LOG.info(LogUtil.header("System ready: starting bootstrap."));
  for (  Component c : Components.list()) {
    LOG.info(c.toString());
  }
}
