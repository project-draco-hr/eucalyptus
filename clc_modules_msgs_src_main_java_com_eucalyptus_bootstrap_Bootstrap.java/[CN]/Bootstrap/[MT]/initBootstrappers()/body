{
  for (  Bootstrap.Stage stage : Stage.values()) {
    stage.bootstrappers.clear();
    stage.disabledBootstrappers.clear();
  }
  for (  Bootstrapper bootstrap : BootstrapperDiscovery.getBootstrappers()) {
    try {
      Class<ComponentId> compType;
      String bc=bootstrap.getClass().getCanonicalName();
      Bootstrap.Stage stage=bootstrap.getBootstrapStage();
      compType=bootstrap.getProvides();
      EventRecord.here(Bootstrap.class,EventType.BOOTSTRAPPER_INIT,stage.name(),bc,"component=" + compType.getSimpleName()).info();
      if (ComponentId.class.isAssignableFrom(compType) && !Empyrean.class.equals(compType) && !ComponentId.class.equals(compType)) {
        EventRecord.here(Bootstrap.class,EventType.BOOTSTRAPPER_ADDED,stage.name(),bc,"component=" + compType.getSimpleName()).info();
        Components.lookup(compType).getBootstrapper().addBootstrapper(bootstrap);
      }
 else       if (Bootstrap.checkDepends(bootstrap)) {
        if (Empyrean.class.equals(compType)) {
          EventRecord.here(Bootstrap.class,EventType.BOOTSTRAPPER_ADDED,stage.name(),bc,"component=" + compType.getSimpleName()).info();
          stage.addBootstrapper(bootstrap);
        }
 else         if (ComponentId.class.equals(compType)) {
          for (          Component c : Components.list()) {
            EventRecord.here(Bootstrap.class,EventType.BOOTSTRAPPER_ADDED,stage.name(),bc,"component=" + c.getName()).info();
            c.getBootstrapper().addBootstrapper(bootstrap);
          }
        }
      }
 else {
        EventRecord.here(Bootstrap.class,EventType.BOOTSTRAPPER_SKIPPED,stage.name(),bc,"component=" + compType.getSimpleName(),"localDepends=" + bootstrap.checkLocal(),"remoteDepends=" + bootstrap.checkRemote()).info();
      }
    }
 catch (    Exception ex) {
      LOG.error(ex,ex);
    }
  }
}
