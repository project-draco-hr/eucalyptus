{
  final List<ValidationScalingActivityTask<?>> tasks=Lists.newArrayList();
  if (!availabilityZones.isEmpty()) {
    tasks.add(new AZValidationScalingActivityTask(getGroup(),newActivity(),availabilityZones));
  }
  if (!loadBalancerNames.isEmpty()) {
    tasks.add(new LoadBalancerValidationScalingActivityTask(getGroup(),newActivity(),loadBalancerNames));
  }
  if (!subnetIds.isEmpty()) {
    tasks.add(new SubnetValidationScalingActivityTask(getGroup(),newActivity(),subnetIds,availabilityZones,availabilityZoneToSubnetMapConsumer));
  }
  if (!imageIds.isEmpty()) {
    tasks.add(new ImageIdValidationScalingActivityTask(getGroup(),newActivity(),imageIds));
  }
  if (instanceType != null) {
    tasks.add(new InstanceTypeValidationScalingActivityTask(getGroup(),newActivity(),instanceType));
  }
  if (keyName != null) {
    tasks.add(new SshKeyValidationScalingActivityTask(getGroup(),newActivity(),keyName));
  }
  if (!securityGroups.isEmpty()) {
    tasks.add(new SecurityGroupValidationScalingActivityTask(getGroup(),newActivity(),securityGroups));
  }
  return tasks;
}
