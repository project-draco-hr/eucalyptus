{
  LOG.trace(this.hashCode() + " -> Received upstream: " + e.getClass());
  if (e instanceof MessageEvent) {
    if (((MessageEvent)e).getMessage() instanceof MappingHttpResponse) {
      MappingHttpResponse response=(MappingHttpResponse)((MessageEvent)e).getMessage();
      if (HttpResponseStatus.OK.equals(response.getStatus())) {
        this.upstreamMessage(ctx,(MessageEvent)e);
      }
 else {
        throw new EucalyptusClusterException(response.getMessageString());
      }
    }
    this.clearPending(e.getFuture());
  }
 else   if (e instanceof ExceptionEvent) {
    this.exceptionCaught(ctx,(ExceptionEvent)e);
    this.clearPending(e.getFuture());
  }
 else   if (e instanceof ChannelStateEvent) {
    ChannelStateEvent cse=(ChannelStateEvent)e;
switch (cse.getState()) {
case CONNECTED:
{
        if (cse.getValue() == null) {
          this.clearPending(e.getFuture());
        }
      }
    break;
case OPEN:
{
    if (!Boolean.TRUE.equals(cse.getValue())) {
      ctx.sendUpstream(e);
    }
  }
break;
case BOUND:
{
ctx.sendUpstream(e);
}
break;
case INTEREST_OPS:
{
ctx.sendUpstream(e);
}
break;
default :
ctx.sendUpstream(e);
}
}
 else {
ctx.sendUpstream(e);
}
}
