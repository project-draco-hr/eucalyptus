{
  int outstandingCount=0;
  for (  ResourceToken t : this.pendingTokens)   outstandingCount+=t.getAmount();
  for (  ResourceToken t : this.submittedTokens)   outstandingCount+=t.getAmount();
  for (  ResourceToken t : this.redeemedTokens)   outstandingCount+=t.getAmount();
  this.redeemedTokens.clear();
  LOG.debug(LogUtil.subheader(String.format("Resource update for cluster=%s, pending tokens=%d",this.clusterName,outstandingCount)));
  for (  ResourceType rsc : rscUpdate) {
    VmTypeAvailability vmAvailable=this.typeMap.get(rsc.getInstanceType().getName());
    LOG.debug(String.format("-> BEFORE: type=%s available=%d/%d",vmAvailable.getType().getName(),vmAvailable.getAvailable(),vmAvailable.getMax()));
    if (vmAvailable == null)     continue;
    vmAvailable.setAvailable(rsc.getAvailableInstances());
    vmAvailable.decrement(outstandingCount);
    vmAvailable.setMax(rsc.getMaxInstances());
    LOG.debug(String.format("-> AFTER: type=%s available=%d/%d",vmAvailable.getType().getName(),vmAvailable.getAvailable(),vmAvailable.getMax()));
  }
}
