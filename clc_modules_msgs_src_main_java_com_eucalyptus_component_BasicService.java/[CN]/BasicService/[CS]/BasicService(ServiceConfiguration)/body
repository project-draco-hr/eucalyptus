{
  super();
  this.serviceConfiguration=serviceConfiguration;
  this.stateMachine=new ServiceState(this.serviceConfiguration);
  try {
    this.stateMachine.transition(State.INITIALIZED);
  }
 catch (  IllegalStateException ex) {
    LOG.error(ex,ex);
    throw new ServiceRegistrationException("Initializing service " + this.serviceConfiguration + " failed because of: "+ ex.getMessage(),ex);
  }
catch (  NoSuchElementException ex) {
    LOG.error(ex,ex);
    throw new ServiceRegistrationException("Initializing service " + this.serviceConfiguration + " failed because of: "+ ex.getMessage(),ex);
  }
catch (  ExistingTransitionException ex) {
    LOG.error(ex,ex);
    throw new ServiceRegistrationException("Initializing service " + this.serviceConfiguration + " failed because of: "+ ex.getMessage(),ex);
  }
  ListenerRegistry.getInstance().register(ClockTick.class,this);
  ListenerRegistry.getInstance().register(Hertz.class,this);
}
