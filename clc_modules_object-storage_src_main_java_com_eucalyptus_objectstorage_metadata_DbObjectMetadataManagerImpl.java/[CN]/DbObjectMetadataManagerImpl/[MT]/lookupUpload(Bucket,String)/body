{
  EntityTransaction db=Entities.get(ObjectEntity.class);
  try {
    Criteria search=Entities.createCriteria(ObjectEntity.class);
    ObjectEntity searchExample=new ObjectEntity().withBucket(bucket).withState(ObjectState.mpu_pending);
    searchExample.setUploadId(uploadId);
    searchExample.setPartNumber(null);
    List<ObjectEntity> results=search.add(Example.create(searchExample)).list();
    db.commit();
    if (results.size() > 0) {
      return results.get(0);
    }
 else {
      throw new NoSuchUploadException(uploadId);
    }
  }
  finally {
    if (db != null && db.isActive()) {
      db.rollback();
    }
  }
}
