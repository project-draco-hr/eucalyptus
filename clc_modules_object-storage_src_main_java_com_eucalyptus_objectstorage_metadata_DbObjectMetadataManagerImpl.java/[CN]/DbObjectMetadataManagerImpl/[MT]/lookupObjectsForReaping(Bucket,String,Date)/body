{
  List<ObjectEntity> results;
  try (TransactionResource tran=Entities.transactionFor(ObjectEntity.class)){
    ObjectEntity example=new ObjectEntity().withState(ObjectState.extant).withBucket(bucket);
    Criteria search=Entities.createCriteria(ObjectEntity.class).add(Example.create(example));
    search.add(Restrictions.lt("creationTimestamp",age));
    if (objectKeyPrefix != null && !objectKeyPrefix.equals("")) {
      search.add(Restrictions.like("objectKey",objectKeyPrefix,MatchMode.START));
    }
    search=getSearchByBucket(search,bucket);
    results=search.list();
    tran.commit();
  }
 catch (  Exception ex) {
    LOG.error("exception caught while retrieving objects prefix with " + objectKeyPrefix + " from bucket "+ bucket.getBucketName()+ ", error message - "+ ex.getMessage());
    return Collections.EMPTY_LIST;
  }
  return results;
}
