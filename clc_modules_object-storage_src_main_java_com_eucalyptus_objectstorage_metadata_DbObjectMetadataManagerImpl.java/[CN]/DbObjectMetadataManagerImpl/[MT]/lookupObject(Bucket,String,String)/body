{
  try {
    try (TransactionResource trans=Entities.transactionFor(ObjectEntity.class)){
      ObjectEntity searchExample=new ObjectEntity().withBucket(bucket).withKey(objectKey).withState(ObjectState.extant);
      if (Strings.isNullOrEmpty(versionId)) {
        searchExample.setIsLatest(true);
      }
 else {
        searchExample=searchExample.withVersionId(versionId);
      }
      Criteria search=Entities.createCriteria(ObjectEntity.class).add(Example.create(searchExample)).addOrder(Order.desc("objectModifiedTimestamp")).setMaxResults(1);
      search=getSearchByBucket(search,bucket);
      List<ObjectEntity> results=search.list();
      if (results == null || results.size() < 1) {
        throw new NoSuchElementException();
      }
 else       if (results.size() > 1) {
      }
      trans.commit();
      return results.get(0);
    }
   }
 catch (  NoSuchElementException ex) {
    throw ex;
  }
catch (  Exception e) {
    LOG.error("Error getting object entity for " + bucket.getBucketName() + "/"+ objectKey+ "?version="+ versionId,e);
    throw new MetadataOperationFailureException(e);
  }
}
