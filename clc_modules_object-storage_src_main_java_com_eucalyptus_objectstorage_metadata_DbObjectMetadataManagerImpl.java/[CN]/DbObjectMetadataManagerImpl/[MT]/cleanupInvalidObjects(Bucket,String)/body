{
  ObjectEntity searchExample=new ObjectEntity(bucket,objectKey,null);
  final Predicate<ObjectEntity> repairPredicate=new Predicate<ObjectEntity>(){
    public boolean apply(    ObjectEntity example){
      try {
        ObjectEntity searchExample=new ObjectEntity().withKey(example.getObjectKey()).withBucket(example.getBucket()).withState(ObjectState.extant);
        Criteria searchCriteria=Entities.createCriteria(ObjectEntity.class);
        searchCriteria.add(Example.create(searchExample));
        searchCriteria.add(Restrictions.or(Restrictions.eq("versionId",ObjectStorageProperties.NULL_VERSION_ID),Restrictions.eq("isLatest",Boolean.TRUE)));
        searchCriteria.addOrder(Order.desc("objectModifiedTimestamp"));
        searchCriteria=getSearchByBucket(searchCriteria,example.getBucket());
        List<ObjectEntity> results=searchCriteria.list();
        if (results.size() <= 1) {
          return true;
        }
        ObjectEntity latest=results.get(0);
        latest.setIsLatest(Boolean.TRUE);
        for (        ObjectEntity obj : results.subList(1,results.size())) {
          LOG.trace("Marking object " + obj.getObjectUuid() + " as no longer latest version");
          obj.setIsLatest(Boolean.FALSE);
          if (latest.getVersionId() != null && ObjectStorageProperties.NULL_VERSION_ID.equals(latest.getVersionId()) && obj.getVersionId() != null && ObjectStorageProperties.NULL_VERSION_ID.equals(obj.getVersionId())) {
            transitionObjectToState(obj,ObjectState.deleting);
          }
        }
      }
 catch (      NoSuchElementException e) {
      }
catch (      Exception e) {
        LOG.error("Error consolidationg Object records for " + example.getBucket().getBucketName() + "/"+ example.getObjectKey());
        return false;
      }
      return true;
    }
  }
;
  try {
    Entities.asTransaction(repairPredicate).apply(searchExample);
  }
 catch (  final Throwable f) {
    LOG.error("Error in version/null repair",f);
  }
}
