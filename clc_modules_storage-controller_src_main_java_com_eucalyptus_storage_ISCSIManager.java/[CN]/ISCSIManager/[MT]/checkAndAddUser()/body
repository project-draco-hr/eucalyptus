{
  EntityWrapper<CHAPUserInfo> dbUser=StorageProperties.getEntityWrapper();
  try {
    CHAPUserInfo userInfo=dbUser.getUnique(new CHAPUserInfo("eucalyptus"));
    if (!checkUser("eucalyptus")) {
      try {
        addUser("eucalyptus",BlockStorageUtil.decryptSCTargetPassword(userInfo.getEncryptedPassword()));
      }
 catch (      EucalyptusCloudException e1) {
        LOG.error(e1);
        return;
      }
    }
  }
 catch (  EucalyptusCloudException ex) {
    boolean addUser=true;
    String encryptedPassword=null;
    if (checkUser("eucalyptus")) {
      try {
        LOG.debug("No DB record found for chapuser although a eucalyptus account exists on SC. Looking for all records with chapuser eucalyptus");
        CHAPUserInfo uesrInfo=new CHAPUserInfo("eucalyptus");
        uesrInfo.setScName(null);
        CHAPUserInfo currentUserInfo=dbUser.getUnique(uesrInfo);
        if (null != currentUserInfo && null != currentUserInfo.getEncryptedPassword()) {
          LOG.debug("Found a DB record, copying the password to the new record");
          addUser=false;
          encryptedPassword=currentUserInfo.getEncryptedPassword();
        }
      }
 catch (      Exception e1) {
        LOG.debug("No old DB records found. The only way is to delete the chapuser and create a fresh account");
        try {
          deleteUser("eucalyptus");
        }
 catch (        Exception e) {
          LOG.error("Failed to delete chapuser",e);
        }
      }
    }
    if (addUser) {
      String password=Hashes.getRandom(16);
      password=password.substring(0,16);
      try {
        addUser("eucalyptus",password);
        encryptedPassword=BlockStorageUtil.encryptSCTargetPassword(password);
      }
 catch (      Exception e) {
        LOG.error("Failed to add chapuser to SC",e);
        return;
      }
    }
    try {
      dbUser.add(new CHAPUserInfo("eucalyptus",encryptedPassword));
    }
 catch (    Exception e) {
      dbUser.rollback();
      LOG.error(e);
    }
  }
 finally {
    dbUser.commit();
  }
}
