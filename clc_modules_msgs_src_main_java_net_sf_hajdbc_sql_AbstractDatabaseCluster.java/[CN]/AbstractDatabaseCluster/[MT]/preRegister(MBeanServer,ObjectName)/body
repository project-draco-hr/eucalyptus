{
  this.server=server;
  InputStream inputStream=null;
  logger.info(Messages.getMessage(Messages.HA_JDBC_INIT,this.getVersion(),this.url));
  try {
    inputStream=this.url.openStream();
    IUnmarshallingContext context=BindingDirectory.getFactory(this.getClass()).createUnmarshallingContext();
    context.setDocument(inputStream,null);
    context.setUserContext(this);
    context.unmarshalElement();
    if (this.decorator != null) {
      this.decorator.decorate(this);
    }
    this.start();
    return name;
  }
 catch (  IOException e) {
    logger.error(Messages.getMessage(Messages.CONFIG_NOT_FOUND,this.url),e);
    throw e;
  }
catch (  JiBXException e) {
    logger.error(Messages.getMessage(Messages.CONFIG_LOAD_FAILED,this.url),e);
    this.unregisterDatabases();
    throw e;
  }
catch (  Exception e) {
    logger.error(Messages.getMessage(Messages.CLUSTER_START_FAILED,this),e);
    this.postDeregister();
    throw e;
  }
 finally {
    if (inputStream != null) {
      try {
        inputStream.close();
      }
 catch (      IOException e) {
        logger.warn(e.toString(),e);
      }
    }
  }
}
