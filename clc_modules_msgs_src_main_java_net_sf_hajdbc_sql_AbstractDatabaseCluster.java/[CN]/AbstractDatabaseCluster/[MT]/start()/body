{
  if (this.active)   return;
  this.lockManager.start();
  this.stateManager.start();
  this.executor=new ThreadPoolExecutor(this.minThreads,this.maxThreads,this.maxIdle,TimeUnit.SECONDS,new SynchronousQueue<Runnable>(),new ThreadPoolExecutor.CallerRunsPolicy());
  Set<String> databaseSet=this.stateManager.getInitialState();
  if (databaseSet != null) {
    for (    String databaseId : databaseSet) {
      Database<D> database=this.getDatabase(databaseId);
      if (database != null) {
        this.activate(database,this.stateManager);
      }
    }
  }
 else {
    for (    Database<D> database : this.getAliveMap(this.databaseMap.values()).get(true)) {
      this.activate(database,this.stateManager);
    }
  }
  this.databaseMetaDataCache=this.databaseMetaDataCacheFactory.createCache(this);
  try {
    this.flushMetaDataCache();
  }
 catch (  IllegalStateException e) {
  }
  if (this.failureDetectionExpression != null) {
    this.cronExecutor.schedule(new FailureDetectionTask(),this.failureDetectionExpression);
  }
  if (this.autoActivationExpression != null) {
    this.cronExecutor.schedule(new AutoActivationTask(),this.autoActivationExpression);
  }
  this.active=true;
}
