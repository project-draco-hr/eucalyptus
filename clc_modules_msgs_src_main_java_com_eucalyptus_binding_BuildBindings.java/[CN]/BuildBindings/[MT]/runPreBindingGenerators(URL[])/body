{
  ClassLoader old=Thread.currentThread().getContextClassLoader();
  ClassLoader cl=URLClassLoader.newInstance(this.pathUrls(),old);
  Thread.currentThread().setContextClassLoader(cl);
  try {
    BindingGenerator.MSG_TYPE=cl.loadClass("edu.ucsb.eucalyptus.msgs.BaseMessage");
    BindingGenerator.DATA_TYPE=cl.loadClass("edu.ucsb.eucalyptus.msgs.EucalyptusData");
    for (    BindingGenerator gen : BindingGenerator.getPreGenerators()) {
      gen.processClass(BindingGenerator.MSG_TYPE);
      gen.processClass(BindingGenerator.DATA_TYPE);
    }
    for (    FileSet fs : this.classFileSets) {
      for (      String classFileName : fs.getDirectoryScanner(getProject()).getIncludedFiles()) {
        try {
          if (!classFileName.endsWith("class"))           continue;
          Class c=cl.loadClass(classFileName.replaceFirst("[^/]*/[^/]*/","").replaceAll("/",".").replaceAll("\\.class.{0,1}",""));
          if (BindingGenerator.MSG_TYPE.isAssignableFrom(c) || BindingGenerator.DATA_TYPE.isAssignableFrom(c)) {
            for (            BindingGenerator gen : BindingGenerator.getPreGenerators()) {
              gen.processClass(c);
            }
          }
        }
 catch (        ClassNotFoundException e) {
          error(e);
        }
      }
    }
  }
 catch (  ClassNotFoundException e1) {
    error(e1);
  }
 finally {
    Thread.currentThread().setContextClassLoader(old);
    try {
      for (      BindingGenerator gen : BindingGenerator.getPreGenerators()) {
        gen.close();
      }
    }
 catch (    Throwable e) {
      error(e);
    }
  }
}
