{
  ClassLoader old=Thread.currentThread().getContextClassLoader();
  ClassLoader cl=getUrlClassLoader();
  Thread.currentThread().setContextClassLoader(cl);
  try {
    BindingGenerator.MSG_TYPE=cl.loadClass("edu.ucsb.eucalyptus.msgs.BaseMessage");
    BindingGenerator.DATA_TYPE=cl.loadClass("edu.ucsb.eucalyptus.msgs.EucalyptusData");
    Set<Class> classes=new TreeSet<Class>(){
{
        add(BindingGenerator.MSG_TYPE);
        add(BindingGenerator.DATA_TYPE);
      }
    }
;
    for (    FileSet fs : this.classFileSets) {
      for (      String classFileName : fs.getDirectoryScanner(getProject()).getIncludedFiles()) {
        try {
          if (!classFileName.endsWith("class"))           continue;
          Class c=cl.loadClass(classFileName.replaceFirst("[^/]*/[^/]*/","").replaceAll("/",".").replaceAll("\\.class.{0,1}",""));
          classes.add(c);
        }
 catch (        ClassNotFoundException e) {
          error(e);
        }
      }
    }
    for (    Class c : classes) {
      if (BindingGenerator.MSG_TYPE.isAssignableFrom(c) || BindingGenerator.DATA_TYPE.isAssignableFrom(c)) {
        for (        BindingGenerator gen : BindingGenerator.getPreGenerators()) {
          gen.processClass(c);
        }
      }
    }
  }
 catch (  ClassNotFoundException e1) {
    error(e1);
  }
 finally {
    Thread.currentThread().setContextClassLoader(old);
    try {
      for (      BindingGenerator gen : BindingGenerator.getPreGenerators()) {
        gen.close();
      }
    }
 catch (    Throwable e) {
      error(e);
    }
  }
}
