{
  Set<URL> dirUrls=new HashSet<URL>();
  for (  FileSet fs : this.classFileSets) {
    final String dirName=fs.getDir(getProject()).getAbsolutePath();
    for (    String d : fs.getDirectoryScanner(getProject()).getIncludedFiles()) {
      final String buildDir=dirName + File.separator + d.replaceAll("build/.*","build");
      try {
        URL buildDirUrl=new File(buildDir).toURL();
        if (!dirUrls.contains(buildDirUrl)) {
          System.out.println("Found class directory: " + buildDirUrl);
          dirUrls.add(buildDirUrl);
        }
      }
 catch (      MalformedURLException ex) {
        ex.printStackTrace();
        throw new RuntimeException(ex);
      }
    }
  }
  for (  File f : new File(this.project.getBaseDir().getAbsolutePath() + File.separator + "lib").listFiles(new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.endsWith(".jar");
    }
  }
)) {
    try {
      dirUrls.add(f.toURL());
    }
 catch (    MalformedURLException ex) {
      ex.printStackTrace();
      throw new RuntimeException(ex);
    }
  }
  return dirUrls.toArray(new URL[]{});
}
