{
  PrintStream buildLog;
  try {
    buildLog=new PrintStream(new FileOutputStream("bind.log",false));
    System.setOut(buildLog);
    System.setErr(buildLog);
    if (this.classFileSets.isEmpty()) {
      throw new BuildException("No classes were provided to bind.");
    }
 else     if (this.bindingFileSets.isEmpty()) {
      throw new BuildException("No bindings were provided to bind.");
    }
 else {
      try {
        System.setProperty("java.class.path",((AntClassLoader)BuildBindings.class.getClassLoader()).getClasspath());
      }
 catch (      Exception e) {
        System.err.println("Failed setting classpath from Ant task");
      }
      Path path=new Path(getProject());
      for (      String p : paths()) {
        path.add(new Path(getProject(),p));
      }
      for (      File f : new File("lib").listFiles(new FilenameFilter(){
        @Override public boolean accept(        File dir,        String name){
          return name.endsWith(".jar");
        }
      }
)) {
        path.add(new Path(getProject(),f.getAbsolutePath()));
      }
      runPreBindingGenerators(path);
      runBindingCompiler();
      runPostBindingGenerators(path);
    }
  }
 catch (  FileNotFoundException e2) {
    System.setOut(oldOut);
    System.setErr(oldErr);
  }
 finally {
    System.setOut(oldOut);
    System.setErr(oldErr);
  }
}
