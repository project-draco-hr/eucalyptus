{
  EntityTransaction db=Entities.get(AlarmEntity.class);
  try {
    Criteria criteria=Entities.createCriteria(AlarmEntity.class).add(Restrictions.eq("accountId",accountId)).add(Restrictions.eq("alarmName",alarmName));
    AlarmEntity alarmEntity=(AlarmEntity)criteria.uniqueResult();
    if (alarmEntity == null) {
      throw new ResourceNotFoundException("Could not find alarm with name '" + alarmName + "'");
    }
    StateValue oldStateValue=alarmEntity.getStateValue();
    if (stateValue != oldStateValue) {
      Date evaluationDate=new Date();
      AlarmState newState=createAlarmState(stateValue,stateReason,stateReasonData);
      AlarmManager.changeAlarmState(alarmEntity,newState,evaluationDate);
      AlarmManager.executeActions(alarmEntity,newState,true,evaluationDate);
    }
    db.commit();
  }
 catch (  RuntimeException ex) {
    Logs.extreme().error(ex,ex);
    throw ex;
  }
 finally {
    if (db.isActive())     db.rollback();
  }
}
