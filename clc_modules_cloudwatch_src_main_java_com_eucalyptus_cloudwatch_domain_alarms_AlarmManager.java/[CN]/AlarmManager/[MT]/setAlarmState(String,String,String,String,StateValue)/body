{
  EntityTransaction db=Entities.get(AlarmEntity.class);
  try {
    Criteria criteria=Entities.createCriteria(AlarmEntity.class).add(Restrictions.eq("accountId",accountId)).add(Restrictions.eq("alarmName",alarmName));
    AlarmEntity alarmEntity=(AlarmEntity)criteria.uniqueResult();
    if (alarmEntity == null) {
      throw new RuntimeException("No such alarm " + alarmName);
    }
    StateValue oldStateValue=alarmEntity.getStateValue();
    if (stateValue != oldStateValue) {
      alarmEntity.setStateReason(stateReason);
      alarmEntity.setStateReasonData(stateReasonData);
      alarmEntity.setStateValue(stateValue);
      Date now=new Date();
      alarmEntity.setStateUpdatedTimestamp(now);
      alarmEntity.setAlarmConfigurationUpdatedTimestamp(now);
      String historyData="JSON DATA (TODO)";
      AlarmManager.addAlarmHistoryItem(accountId,alarmName,historyData,HistoryItemType.StateUpdate,"Alarm updated from " + oldStateValue + " to "+ stateValue,now);
    }
    db.commit();
  }
 catch (  RuntimeException ex) {
    Logs.extreme().error(ex,ex);
    throw ex;
  }
 finally {
    if (db.isActive())     db.rollback();
  }
}
