{
  List<AlarmHistory> results=null;
  EntityTransaction db=Entities.get(AlarmHistory.class);
  try {
    Criteria criteria=Entities.createCriteria(AlarmHistory.class);
    if (accountId != null) {
      criteria=criteria.add(Restrictions.eq("accountId",accountId));
    }
    if (alarmName != null) {
      criteria=criteria.add(Restrictions.eq("alarmName",alarmName));
    }
    if (historyItemType != null) {
      criteria=criteria.add(Restrictions.eq("historyItemType",historyItemType));
    }
    if (startDate != null) {
      criteria=criteria.add(Restrictions.ge("timestamp",startDate));
    }
    if (endDate != null) {
      criteria=criteria.add(Restrictions.le("timestamp",endDate));
    }
    results=(List<AlarmHistory>)criteria.list();
    if (results != null && maxRecords != null && results.size() > maxRecords) {
      results=results.subList(0,maxRecords);
    }
    db.commit();
  }
 catch (  RuntimeException ex) {
    Logs.extreme().error(ex,ex);
    throw ex;
  }
 finally {
    if (db.isActive())     db.rollback();
  }
  return results;
}
