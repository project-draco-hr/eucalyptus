{
  JSONObject jsonObject=new JSONObject();
  jsonObject.element("threshold",alarmEntity.getThreshold());
  jsonObject.element("namespace",alarmEntity.getNamespace());
  jsonObject.element("stateValue",alarmEntity.getStateValue().toString());
  ArrayList<JSONObject> dimensions=new ArrayList<JSONObject>();
  if (alarmEntity.getDimensions() != null) {
    for (    DimensionEntity dimensionEntity : alarmEntity.getDimensions()) {
      JSONObject dimension=new JSONObject();
      dimension.element("name",dimensionEntity.getName());
      dimension.element("value",dimensionEntity.getValue());
      dimensions.add(dimension);
    }
  }
  jsonObject.element("dimensions",dimensions);
  jsonObject.element("okactions",alarmEntity.getOkActions() != null ? alarmEntity.getOkActions() : new ArrayList<String>());
  jsonObject.element("alarmActions",alarmEntity.getAlarmActions() != null ? alarmEntity.getAlarmActions() : new ArrayList<String>());
  jsonObject.element("evaluationPeriods",alarmEntity.getEvaluationPeriods());
  jsonObject.element("comparisonOperator",alarmEntity.getComparisonOperator().toString());
  jsonObject.element("metricName",alarmEntity.getMetricName());
  jsonObject.element("period",alarmEntity.getPeriod());
  jsonObject.element("alarmName",alarmEntity.getAlarmName());
  jsonObject.element("insufficientDataActions",alarmEntity.getInsufficientDataActions() != null ? alarmEntity.getInsufficientDataActions() : new ArrayList<String>());
  jsonObject.element("actionsEnabled",alarmEntity.getActionsEnabled());
  jsonObject.element("alarmDescription",alarmEntity.getAlarmDescription());
  jsonObject.element("statistic",alarmEntity.getStatistic());
  jsonObject.element("alarmArn",alarmEntity.getResourceName());
  jsonObject.element("alarmConfigurationUpdatedTimestamp",utcSimpleDateFormatTL.get().format(alarmEntity.getAlarmConfigurationUpdatedTimestamp()));
  jsonObject.element("stateUpdatedTimestamp",utcSimpleDateFormatTL.get().format(alarmEntity.getStateUpdatedTimestamp()));
  return jsonObject;
}
