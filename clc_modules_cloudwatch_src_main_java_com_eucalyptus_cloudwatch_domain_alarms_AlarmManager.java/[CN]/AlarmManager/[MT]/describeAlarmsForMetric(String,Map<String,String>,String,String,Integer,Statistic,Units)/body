{
  List<AlarmEntity> results=null;
  EntityTransaction db=Entities.get(AlarmEntity.class);
  try {
    Criteria criteria=Entities.createCriteria(AlarmEntity.class);
    if (accountId != null) {
      criteria=criteria.add(Restrictions.eq("accountId",accountId));
    }
    TreeSet<DimensionEntity> dimensions=new TreeSet<DimensionEntity>();
    for (    Map.Entry<String,String> entry : dimensionMap.entrySet()) {
      DimensionEntity d=new DimensionEntity();
      d.setName(entry.getKey());
      d.setValue(entry.getValue());
      dimensions.add(d);
    }
    int dimIndex=1;
    for (    DimensionEntity d : dimensions) {
      criteria.add(Restrictions.eq("dim" + dimIndex + "Name",d.getName()));
      criteria.add(Restrictions.eq("dim" + dimIndex + "Value",d.getValue()));
      dimIndex++;
    }
    while (dimIndex <= AlarmEntity.MAX_DIM_NUM) {
      criteria.add(Restrictions.isNull("dim" + dimIndex + "Name"));
      criteria.add(Restrictions.isNull("dim" + dimIndex + "Value"));
      dimIndex++;
    }
    if (metricName != null) {
      criteria=criteria.add(Restrictions.eq("metricName",metricName));
    }
    if (namespace != null) {
      criteria=criteria.add(Restrictions.eq("namespace",namespace));
    }
    if (period != null) {
      criteria=criteria.add(Restrictions.eq("period",period));
    }
    if (statistic != null) {
      criteria=criteria.add(Restrictions.eq("statistic",statistic));
    }
    if (unit != null) {
      criteria=criteria.add(Restrictions.eq("unit",unit));
    }
    results=(List<AlarmEntity>)criteria.list();
    db.commit();
  }
 catch (  RuntimeException ex) {
    Logs.extreme().error(ex,ex);
    throw ex;
  }
 finally {
    if (db.isActive())     db.rollback();
  }
  return results;
}
