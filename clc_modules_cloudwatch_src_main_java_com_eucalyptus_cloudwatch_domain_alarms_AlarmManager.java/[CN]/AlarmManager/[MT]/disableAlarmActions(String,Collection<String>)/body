{
  HashSet<String> alarmNamesHashSet=new HashSet<String>();
  Date now=new Date();
  if (alarmNames != null) {
    alarmNamesHashSet.addAll(alarmNames);
  }
  EntityTransaction db=Entities.get(AlarmEntity.class);
  try {
    Criteria criteria=Entities.createCriteria(AlarmEntity.class).add(Restrictions.eq("accountId",accountId));
    Collection<AlarmEntity> alarmEntities=(Collection<AlarmEntity>)criteria.list();
    for (    AlarmEntity alarmEntity : alarmEntities) {
      final String alarmName=alarmEntity.getAlarmName();
      if (alarmNamesHashSet.contains(alarmEntity.getAlarmName()) && !Boolean.FALSE.equals(alarmEntity.getActionsEnabled())) {
        String historyData="JSON DATA (TODO)";
        AlarmManager.addAlarmHistoryItem(accountId,alarmName,historyData,HistoryItemType.ConfigurationUpdate,"Alarm \"" + alarmName + "\" updated",now);
        alarmEntity.setActionsEnabled(Boolean.FALSE);
      }
    }
    db.commit();
  }
 catch (  RuntimeException ex) {
    Logs.extreme().error(ex,ex);
    throw ex;
  }
 finally {
    if (db.isActive())     db.rollback();
  }
}
