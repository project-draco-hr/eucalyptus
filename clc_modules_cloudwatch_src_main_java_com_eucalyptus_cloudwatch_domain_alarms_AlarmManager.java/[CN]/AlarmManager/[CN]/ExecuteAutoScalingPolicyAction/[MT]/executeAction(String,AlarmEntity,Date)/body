{
  try {
    ServiceConfiguration serviceConfiguration=ServiceConfigurations.createEphemeral(ComponentIds.lookup(AutoScaling.class));
    ExecutePolicyType executePolicyType=new ExecutePolicyType();
    executePolicyType.setPolicyName(action);
    executePolicyType.setHonorCooldown(true);
    Account account=Accounts.getAccountProvider().lookupAccountById(alarmEntity.getAccountId());
    User user=account.lookupUserByName(User.ACCOUNT_ADMIN);
    executePolicyType.setEffectiveUserId(user.getUserId());
    BaseMessage reply=AsyncRequests.dispatch(serviceConfiguration,executePolicyType).get();
    if (!(reply instanceof ExecutePolicyResponseType)) {
      throw new Exception(reply.getStatusMessage());
    }
    JSONObject historyDataJSON=new JSONObject();
    historyDataJSON.element("actionState","Succeeded");
    historyDataJSON.element("notificationResource",action);
    historyDataJSON.element("stateUpdateTimestamp",Timestamps.formatIso8601UTCLongDateMillisTimezone(alarmEntity.getStateUpdatedTimestamp()));
    String historyData=historyDataJSON.toString();
    AlarmManager.addAlarmHistoryItem(alarmEntity.getAccountId(),alarmEntity.getAlarmName(),historyData,HistoryItemType.Action," Successfully executed action " + action,now);
  }
 catch (  Exception ex) {
    JSONObject historyDataJSON=new JSONObject();
    historyDataJSON.element("actionState","Failed");
    historyDataJSON.element("notificationResource",action);
    historyDataJSON.element("stateUpdateTimestamp",Timestamps.formatIso8601UTCLongDateMillisTimezone(alarmEntity.getStateUpdatedTimestamp()));
    historyDataJSON.element("error",ex.getMessage() != null ? ex.getMessage() : ex.getClass().getName());
    String historyData=historyDataJSON.toString();
    AlarmManager.addAlarmHistoryItem(alarmEntity.getAccountId(),alarmEntity.getAlarmName(),historyData,HistoryItemType.Action," Failed to execute action " + action,now);
  }
}
