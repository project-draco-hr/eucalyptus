{
  LOG.trace("Scanning data for boundary data buffer: " + data.toString());
  if (this.truncateRemaining) {
    this.trailingBytesFound+=data.readableBytes();
    LOG.trace("Truncating remaining chunks. Returning zero-length buffer. Data offered length: " + data.readableBytes());
    return ChannelBuffers.wrappedBuffer(new byte[0]);
  }
  ChannelBuffer dataToScan=data;
  if (this.lastBufferedChunk != null) {
    dataToScan=ChannelBuffers.wrappedBuffer(this.lastBufferedChunk,data);
    LOG.trace("Found previously buffered data, appending it with length: " + this.lastBufferedChunk.readableBytes() + " to get data of size "+ dataToScan.readableBytes());
  }
  int lfIndex=0;
  int endOffset=-1;
  int bufferSize=dataToScan.readableBytes();
  do {
    lfIndex=dataToScan.indexOf(lfIndex,dataToScan.readableBytes(),ChannelBufferIndexFinder.CR);
    if (lfIndex >= 0) {
      if (lfIndex + this.boundaryBytes.length > bufferSize) {
        this.lastBufferedChunk=dataToScan.copy(lfIndex,bufferSize - lfIndex);
        LOG.trace("Buffering last " + (bufferSize - lfIndex) + " bytes for next chunk");
        LOG.trace("Indexes now " + dataToScan.readerIndex() + " - "+ dataToScan.writerIndex());
        endOffset=lfIndex;
      }
 else {
        endOffset=dataToScan.indexOf(lfIndex,lfIndex + this.boundaryBytes.length,this.boundaryFinder);
        if (endOffset >= lfIndex) {
          this.lastBufferedChunk=null;
          this.truncateRemaining=true;
          this.trailingBytesFound=bufferSize - endOffset;
          if (this.trailingBytesFound > this.boundaryBytes.length + 4) {
            this.lastBufferedChunk=null;
            throw new MalformedPOSTRequestException("Must not have any trailing form parts after file content");
          }
        }
 else {
          lfIndex++;
          endOffset=-1;
        }
      }
    }
 else {
      this.lastBufferedChunk=null;
      endOffset=bufferSize;
    }
  }
 while (endOffset < 0);
  if (endOffset == 0) {
    LOG.trace("No bytes to send. Delivering zero-length buffer");
    return ChannelBuffers.wrappedBuffer(new byte[0]);
  }
 else   if (endOffset == -1 || endOffset == dataToScan.readableBytes()) {
    LOG.trace("Delivering full chunk: " + dataToScan.readableBytes());
    LOG.trace("Indexes now " + dataToScan.readerIndex() + " - "+ dataToScan.writerIndex());
    return dataToScan;
  }
 else {
    LOG.trace("Delivering subset of bytes: 0 - " + endOffset);
    LOG.trace("Indexes now " + dataToScan.readerIndex() + " - "+ dataToScan.writerIndex());
    return ChannelBuffers.copiedBuffer(dataToScan.slice(0,endOffset));
  }
}
