{
  try {
    final boolean jdbc=!(new File(SubDirectory.REPORTS.toString() + File.separator + name+ ".groovy").exists());
    if (!flush && reportCache.containsKey(name) && !reportCache.get(name).isExpired()) {
      return reportCache.get(name);
    }
 else {
      reportCache.remove(name);
      final JasperDesign jasperDesign=JRXmlLoader.load(SubDirectory.REPORTS.toString() + File.separator + name+ ".jrxml");
      Future<JasperPrint> pendingPrint=Threads.getThreadPool("reporting").submit(new Callable<JasperPrint>(){
        @Override public JasperPrint call() throws Exception {
          String url=String.format("jdbc:%s_%s",Component.db.getUri().toString(),"records");
          JasperReport jasperReport=JasperCompileManager.compileReport(jasperDesign);
          JasperPrint jasperPrint;
          if (jdbc) {
            Connection jdbcConnection=DriverManager.getConnection(url,"eucalyptus",Hmacs.generateSystemSignature());
            jasperPrint=JasperFillManager.fillReport(jasperReport,null,jdbcConnection);
          }
 else {
            FileReader fileReader=null;
            try {
              final List results=new ArrayList();
              fileReader=new FileReader(SubDirectory.REPORTS + File.separator + name+ ".groovy");
              Binding binding=new Binding(new HashMap(){
{
                  put("results",results);
                }
              }
);
              try {
                makeScriptEngine().run(name + ".groovy",binding);
              }
 catch (              Exception e) {
                LOG.debug(e,e);
              }
              JRBeanCollectionDataSource data=new JRBeanCollectionDataSource(results);
              jasperPrint=JasperFillManager.fillReport(jasperReport,null,data);
            }
 catch (            Throwable e) {
              LOG.debug(e,e);
              throw new RuntimeException(e);
            }
 finally {
              if (fileReader != null)               try {
                fileReader.close();
              }
 catch (              IOException e) {
                LOG.error(e,e);
                throw e;
              }
            }
          }
          return jasperPrint;
        }
      }
);
      if (flush) {
        pendingPrint.get();
      }
      reportCache.put(name,new ReportCache(name,jasperDesign.getName(),jasperDesign.getProperty("euca.report.group"),pendingPrint));
    }
    return reportCache.get(name);
  }
 catch (  Throwable t) {
    LOG.error(t,t);
    throw new JRException(t);
  }
}
