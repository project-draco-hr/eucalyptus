{
  if (GROUP_ALL.equals(gi.name) || GROUP_DEFAULT.equals(gi.name)) {
    throw new Exception("Group 'all' or 'default' cannot be changed");
  }
  try {
    Group group=Groups.lookupGroup(gi.name);
    Set<String> oldZoneSet=new HashSet<String>(getGroupZones(group));
    Set<String> newZoneSet=new HashSet<String>(gi.zones);
    Set<String> toRemove=Sets.difference(oldZoneSet,newZoneSet);
    Set<String> toAdd=Sets.difference(newZoneSet,oldZoneSet);
    for (    String zone : toRemove) {
      group.removeAuthorization(new AvailabilityZonePermission(zone));
      LOG.debug("============> Remove: " + zone);
    }
    for (    String zone : toAdd) {
      group.addAuthorization(new AvailabilityZonePermission(zone));
      LOG.debug("============> Add: " + zone);
    }
  }
 catch (  NoSuchGroupException nsge) {
    throw new Exception("Can not find the group");
  }
}
