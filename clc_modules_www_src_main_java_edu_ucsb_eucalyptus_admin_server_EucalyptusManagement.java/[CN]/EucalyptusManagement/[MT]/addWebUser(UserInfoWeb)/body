{
  User user=null;
  try {
    user=Users.lookupUser(webUser.getUserName());
    throw EucalyptusManagement.makeFault("User already exists");
  }
 catch (  NoSuchUserException e) {
    try {
      user=Users.addUser(webUser.getUserName(),webUser.isAdministrator(),webUser.isEnabled());
      EntityWrapper<UserInfo> dbWrapper=EntityWrapper.get(UserInfo.class);
      try {
        UserInfo userInfo=Composites.updateNew(webUser,UserInfo.class);
        userInfo.setConfirmationCode(Crypto.generateSessionToken(webUser.getUserName()));
        try {
          NetworkGroupUtil.createUserNetworkRulesGroup(userInfo.getUserName(),NetworkRulesGroup.NETWORK_DEFAULT_NAME,"default group");
        }
 catch (        EucalyptusCloudException e1) {
          LOG.debug(e1,e1);
        }
        dbWrapper.add(userInfo);
        dbWrapper.commit();
      }
 catch (      Exception e1) {
        dbWrapper.rollback();
        StringBuilder sb=new StringBuilder();
        for (        StackTraceElement ste : e1.getStackTrace()) {
          sb.append(ste.toString());
          sb.append("\n");
        }
        LOG.error(sb.toString());
        LOG.error(e1,e1);
        throw EucalyptusManagement.makeFault("Error adding user: " + e1.getMessage());
      }
    }
 catch (    UserExistsException e1) {
      LOG.error(e1,e1);
      throw EucalyptusManagement.makeFault("User already exists");
    }
catch (    UnsupportedOperationException e1) {
      LOG.error(e1,e1);
      throw EucalyptusManagement.makeFault("Error adding user: " + e1.getMessage());
    }
  }
}
