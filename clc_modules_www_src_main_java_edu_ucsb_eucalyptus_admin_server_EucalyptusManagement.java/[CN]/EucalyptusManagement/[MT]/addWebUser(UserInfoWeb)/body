{
  EntityWrapper<UserInfo> dbWrapper=new EntityWrapper<UserInfo>();
  List<UserInfo> userList=dbWrapper.query(new UserInfo(webUser.getUserName()));
  if (userList.size() != 0) {
    dbWrapper.rollback();
    throw EucalyptusManagement.makeFault("User already exists");
  }
  webUser.setConfirmationCode(Crypto.generateSessionToken(webUser.getUserName()));
  webUser.setCertificateCode(Crypto.generateSessionToken(webUser.getUserName()));
  webUser.setSecretKey(Hmacs.generateSecretKey(webUser.getUserName()));
  webUser.setQueryId(Hmacs.generateQueryId(webUser.getUserName()));
  UserInfo newUser=EucalyptusManagement.fromClient(webUser);
  newUser.setReservationId(0l);
  try {
    NetworkGroupUtil.createUserNetworkRulesGroup(newUser.getUserName(),NetworkRulesGroup.NETWORK_DEFAULT_NAME,"default group");
  }
 catch (  EucalyptusCloudException e1) {
    LOG.debug(e1,e1);
  }
  dbWrapper.add(newUser);
  dbWrapper.commit();
  try {
    Users.addUser(newUser.getUserName(),newUser.isAdministrator(),newUser.isEnabled());
  }
 catch (  UserExistsException e) {
    LOG.error(e);
  }
}
