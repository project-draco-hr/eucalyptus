{
  if (!Strings.isNullOrEmpty(ec2SecurityGroupRule.getCidrIp()) && (!Strings.isNullOrEmpty(ec2SecurityGroupRule.getSourceSecurityGroupId()) || !Strings.isNullOrEmpty(ec2SecurityGroupRule.getSourceSecurityGroupName()) || !Strings.isNullOrEmpty(ec2SecurityGroupRule.getSourceSecurityGroupOwnerId()))) {
    throw new ValidationErrorException("Both CidrIp and SourceSecurityGroup cannot be specified in SecurityGroupIngress");
  }
  if (!Strings.isNullOrEmpty(ec2SecurityGroupRule.getSourceSecurityGroupId()) && !Strings.isNullOrEmpty(ec2SecurityGroupRule.getSourceSecurityGroupName())) {
    throw new ValidationErrorException("Both SourceSecurityGroupName and SourceSecurityGroupId cannot be specified in SecurityGroupIngress");
  }
  IpPermissionType ipPermissionType=new IpPermissionType(ec2SecurityGroupRule.getIpProtocol(),ec2SecurityGroupRule.getFromPort(),ec2SecurityGroupRule.getToPort());
  if (!Strings.isNullOrEmpty(ec2SecurityGroupRule.getCidrIp())) {
    ipPermissionType.setCidrIpRanges(Lists.newArrayList(ec2SecurityGroupRule.getCidrIp()));
  }
  if (!Strings.isNullOrEmpty(ec2SecurityGroupRule.getSourceSecurityGroupId())) {
    ipPermissionType.setGroups(Lists.newArrayList(new UserIdGroupPairType(ec2SecurityGroupRule.getSourceSecurityGroupOwnerId(),null,ec2SecurityGroupRule.getSourceSecurityGroupId())));
  }
  if (!Strings.isNullOrEmpty(ec2SecurityGroupRule.getSourceSecurityGroupName())) {
    String sourceSecurityGroupOwnerId=ec2SecurityGroupRule.getSourceSecurityGroupOwnerId();
    if (Strings.isNullOrEmpty(sourceSecurityGroupOwnerId)) {
      sourceSecurityGroupOwnerId=action.getStackEntity().getAccountId();
    }
    ipPermissionType.setGroups(Lists.newArrayList(new UserIdGroupPairType(sourceSecurityGroupOwnerId,ec2SecurityGroupRule.getSourceSecurityGroupName(),null)));
  }
  return ipPermissionType;
}
