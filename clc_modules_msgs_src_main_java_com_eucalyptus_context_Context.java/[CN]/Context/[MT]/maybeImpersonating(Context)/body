{
  ctx.initRequest();
  if (ctx.request != null) {
    final String userId=Optional.fromNullable(ctx.request.getUserId()).or(Optional.fromNullable(ctx.request.getEffectiveUserId())).orNull();
    if (userId != null && !Principals.isFakeIdentify(userId) && ctx.hasAdministrativePrivileges()) {
      try {
        final String originalContextId=ctx.request.hasRequestId() ? ctx.request.getCorrelationId().substring(0,ctx.request.getCorrelationId().indexOf("::")) : null;
        final UserPrincipal user;
        if (Accounts.isAccountNumber(userId)) {
          user=Accounts.lookupCachedPrincipalByAccountNumber(userId);
        }
 else         if (Contexts.exists(originalContextId) && Contexts.lookup(originalContextId).getUser().getAuthenticatedId().equals(userId)) {
          user=Contexts.lookup(originalContextId).getUser();
        }
 else         if (Accounts.isRoleIdentifier(userId)) {
          user=Accounts.lookupCachedPrincipalByRoleId(userId,null);
        }
 else {
          user=Accounts.lookupCachedPrincipalByUserId(userId,null);
        }
        return createImpersona(ctx,user);
      }
 catch (      AuthException ex) {
        return ctx;
      }
catch (      NoSuchContextException e) {
        throw Exceptions.toUndeclared(new AuthException(e));
      }
    }
  }
  return ctx;
}
