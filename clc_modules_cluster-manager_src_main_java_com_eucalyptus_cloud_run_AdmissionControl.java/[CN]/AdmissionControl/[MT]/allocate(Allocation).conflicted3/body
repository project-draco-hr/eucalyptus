{
  RunInstancesType request=allocInfo.getRequest();
  String clusterName=allocInfo.getPartition().getName();
  String vmTypeName=allocInfo.getVmType().getName();
  final int minAmount=allocInfo.getMinCount();
  final int maxAmount=allocInfo.getMaxCount();
  if (minAmount > maxAmount)   throw new RuntimeException("Maximum instance count must not be smaller than minimum instance count");
  Context ctx=Contexts.lookup();
  String zoneName=(clusterName != null) ? clusterName : "default";
  List<Cluster> authorizedClusters=this.doPrivilegedLookup(zoneName,vmTypeName);
  int remaining=maxAmount;
  int available=0;
  LOG.info("Found authorized clusters: " + Iterables.transform(authorizedClusters,HasName.GET_NAME));
  if ((available=checkAvailability(vmTypeName,authorizedClusters)) < minAmount) {
    throw new NotEnoughResourcesException("Not enough resources (" + available + " in "+ zoneName+ " < "+ minAmount+ "): vm instances.");
  }
 else {
    for (    Cluster cluster : authorizedClusters) {
      if (remaining <= 0) {
        break;
      }
 else {
        ResourceState state=cluster.getNodeState();
        Partition partition=cluster.getConfiguration().lookupPartition();
        if (allocInfo.getBootSet().getMachine() instanceof BlockStorageImageInfo) {
          try {
            ServiceConfiguration sc=Topology.lookup(Storage.class,partition);
          }
 catch (          Exception ex) {
            throw new NotEnoughResourcesException("Not enough resources: Cannot run EBS instances in partition w/o a storage controller: " + ex.getMessage(),ex);
          }
        }
        try {
          int tryAmount=(remaining > state.getAvailability(vmTypeName).getAvailable()) ? state.getAvailability(vmTypeName).getAvailable() : remaining;
          List<ResourceToken> tokens=this.requestResourceToken(allocInfo,tryAmount,maxAmount);
          remaining-=tokens.size();
          allocInfo.setPartition(partition);
        }
 catch (        Exception t) {
          LOG.error(t);
          Logs.extreme().error(t,t);
          if (((available=checkAvailability(vmTypeName,authorizedClusters)) < remaining) && (remaining > 0)) {
            allocInfo.abort();
            throw new NotEnoughResourcesException("Not enough resources (" + available + " in "+ zoneName+ " < "+ minAmount+ "): vm instances.",t);
          }
 else {
            throw new NotEnoughResourcesException(t.getMessage(),t);
          }
        }
      }
    }
  }
}
