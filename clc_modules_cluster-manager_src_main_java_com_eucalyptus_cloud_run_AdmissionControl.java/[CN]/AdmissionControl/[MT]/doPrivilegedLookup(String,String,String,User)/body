{
  if ("default".equals(partitionName)) {
    Iterable<Cluster> authorizedClusters=Iterables.filter(Clusters.getInstance().listValues(),new Predicate<Cluster>(){
      @Override public boolean apply(      final Cluster c){
        try {
          return Permissions.isAuthorized(PolicySpec.VENDOR_EC2,PolicySpec.EC2_RESOURCE_AVAILABILITYZONE,c.getName(),null,action,requestUser);
        }
 catch (        Exception e) {
        }
        return false;
      }
    }
);
    Multimap<VmTypeAvailability,Cluster> sorted=TreeMultimap.create();
    for (    Cluster c : authorizedClusters) {
      sorted.put(c.getNodeState().getAvailability(vmTypeName),c);
    }
    if (sorted.isEmpty()) {
      throw new NotEnoughResourcesException("Not enough resources: no availability zone is available in which you have permissions to run instances.");
    }
 else {
      return Lists.newArrayList(sorted.values());
    }
  }
 else {
    Cluster cluster=Clusters.getInstance().lookup(Partitions.lookupService(ClusterController.class,partitionName));
    if (cluster == null) {
      throw new NotEnoughResourcesException("Can't find cluster " + partitionName);
    }
    if (!Permissions.isAuthorized(PolicySpec.VENDOR_EC2,PolicySpec.EC2_RESOURCE_AVAILABILITYZONE,partitionName,null,action,requestUser)) {
      throw new NotEnoughResourcesException("Not authorized to use cluster " + partitionName + " for "+ requestUser.getName());
    }
    return Lists.newArrayList(cluster);
  }
}
