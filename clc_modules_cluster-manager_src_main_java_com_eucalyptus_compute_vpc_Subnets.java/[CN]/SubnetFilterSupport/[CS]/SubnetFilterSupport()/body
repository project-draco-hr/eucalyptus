{
  super(builderFor(Subnet.class).withTagFiltering(SubnetTag.class,"subnet").withStringProperty("availability-zone",FilterStringFunctions.AVAILABILITY_ZONE).withStringProperty("availabilityZone",FilterStringFunctions.AVAILABILITY_ZONE).withIntegerProperty("available-ip-address-count",FilterIntegerFunctions.AVAILABLE_IP_COUNT).withStringProperty("cidr",FilterStringFunctions.CIDR).withStringProperty("cidr-block",FilterStringFunctions.CIDR).withStringProperty("cidrBlock",FilterStringFunctions.CIDR).withBooleanProperty("default-for-az",FilterBooleanFunctions.DEFAULT_FOR_AZ).withBooleanProperty("defaultForAz",FilterBooleanFunctions.DEFAULT_FOR_AZ).withStringProperty("state",FilterStringFunctions.STATE).withStringProperty("subnet-id",CloudMetadatas.toDisplayName()).withStringProperty("vpc-id",FilterStringFunctions.VPC_ID).withPersistenceAlias("vpc","vpc").withPersistenceFilter("availability-zone","availabilityZone").withPersistenceFilter("available-ip-address-count","availableIpAddressCount",Collections.<String>emptySet(),PersistenceFilter.Type.Integer).withPersistenceFilter("cidr-block","cidr").withPersistenceFilter("default-for-az","defaultForAz",Collections.<String>emptySet(),PersistenceFilter.Type.Boolean).withPersistenceFilter("state","state",Enums.valueOfFunction(Subnet.State.class)).withPersistenceFilter("subnet-id","displayName").withPersistenceFilter("vpc-id","vpc.displayName"));
}
