{
  if (param == null) {
    throw new BindingException("Cannot bind null value");
  }
 else   if (!(param instanceof IMarshallable)) {
    throw new BindingException("No JiBX <mapping> defined for class " + param.getClass());
  }
  final OMFactory factory=HoldMe.getOMFactory();
  final IMarshallable mrshable=(IMarshallable)param;
  final int index=mrshable.JiBX_getIndex();
  final String origNs=this.bindingFactory.getElementNamespaces()[index];
  final String useNs=altNs != null ? altNs : origNs;
  final ByteArrayOutputStream bos=new ByteArrayOutputStream();
  final OMElement retVal;
  HoldMe.canHas.lock();
  try {
    final IMarshallingContext mctx=this.bindingFactory.createMarshallingContext();
    final XMLStreamWriter wrtr=HoldMe.getXMLOutputFactory().createXMLStreamWriter(bos,null);
    mctx.setXmlWriter(new StAXWriter(this.bindingFactory.getNamespaces(),wrtr));
    mctx.marshalDocument(param);
    mctx.getXmlWriter().flush();
    final OMNamespace appns=factory.createOMNamespace(origNs,"");
    final OMDataSource inds=new InputStreamDataSource(new ByteArrayInputStream(bos.toByteArray()),altNs);
    if (origNs.equals(altNs) || altNs == null) {
      retVal=factory.createOMElement(inds,this.bindingFactory.getElementNames()[index],appns);
    }
 else {
      String retString=bos.toString();
      retString=retString.replaceAll(origNs,altNs);
      HoldMe.canHas.lock();
      try {
        final StAXOMBuilder stAXOMBuilder=HoldMe.getStAXOMBuilder(HoldMe.getXMLStreamReader(retString));
        retVal=stAXOMBuilder.getDocumentElement();
      }
  finally {
        HoldMe.canHas.unlock();
      }
    }
  }
 catch (  XMLStreamException e) {
    LOG.error(e,e);
    throw new BindingException(this.name + " failed to marshall type " + param.getClass().getCanonicalName()+ " with ns:"+ useNs+ " caused by: "+ e.getMessage(),e);
  }
catch (  JiBXException e) {
    LOG.error(e,e);
    throw new BindingException(this.name + " failed to marshall type " + param.getClass().getCanonicalName()+ " with ns:"+ useNs+ " caused by: "+ e.getMessage(),e);
  }
catch (  IOException e) {
    LOG.error(e,e);
    throw new BindingException(this.name + " failed to marshall type " + param.getClass().getCanonicalName()+ " with ns:"+ useNs+ " caused by: "+ e.getMessage(),e);
  }
 finally {
    HoldMe.canHas.unlock();
  }
  return retVal;
}
