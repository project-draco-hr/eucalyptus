{
  Hosts.awaitDatabases();
  Groovyness.run("setup_dbpool.groovy");
  OrderedShutdown.registerShutdownHook(Empyrean.class,new Runnable(){
    @Override public void run(){
      try {
        for (        String ctx : PersistenceContexts.list()) {
          try {
            DriverDatabaseClusterMBean db=Databases.lookup(ctx);
            for (            String host : db.getInactiveDatabases()) {
              Databases.disable(host);
            }
            for (            String host : db.getActiveDatabases()) {
              Databases.disable(host);
            }
          }
 catch (          Exception ex) {
            LOG.error(ex);
          }
        }
      }
 catch (      NoSuchElementException ex) {
        LOG.error(ex);
      }
    }
  }
);
  if (!Hosts.isCoordinator() && Hosts.localHost().hasDatabase()) {
    while (!Databases.enable(Hosts.localHost())) {
      LOG.warn(LogUtil.subheader("Synchronization of the database failed: " + Hosts.localHost()));
      LOG.warn("Sleeping for " + INITIAL_DB_SYNC_RETRY_WAIT + " seconds before trying again.");
      TimeUnit.SECONDS.sleep(INITIAL_DB_SYNC_RETRY_WAIT);
    }
    Hosts.UpdateEntry.INSTANCE.apply(Hosts.localHost());
    LOG.info(LogUtil.subheader("Database synchronization complete: " + Hosts.localHost()));
  }
  return true;
}
