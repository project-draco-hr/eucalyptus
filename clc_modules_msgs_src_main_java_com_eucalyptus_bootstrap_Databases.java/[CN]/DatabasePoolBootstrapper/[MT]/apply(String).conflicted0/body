{
  return new Function<String,Runnable>(){
    @Override public Runnable apply(    final String ctx){
      final String contextName=ctx.startsWith("eucalyptus_") ? ctx : "eucalyptus_" + ctx;
      Runnable removeRunner=new Runnable(){
        @Override public void run(){
          try {
            final DriverDatabaseClusterMBean cluster=lookup(contextName);
            LOG.debug("Tearing down database connections for: " + hostName + " to context: "+ contextName);
            try {
              LOG.debug("Removing database connections for: " + hostName + " to context: "+ contextName);
              cluster.remove(hostName);
              LOG.debug("Removed database connections for: " + hostName + " to context: "+ contextName);
            }
 catch (            IllegalStateException ex) {
              LOG.debug(ex);
              Logs.extreme().debug(ex,ex);
            }
            try {
              LOG.debug("Deactivating database connections for: " + hostName + " to context: "+ contextName);
              cluster.deactivate(hostName);
              LOG.debug("Deactived database connections for: " + hostName + " to context: "+ contextName);
            }
 catch (            Exception ex) {
              LOG.debug(ex);
              Logs.extreme().debug(ex,ex);
            }
            try {
              LOG.debug("Removing database connections for: " + hostName + " to context: "+ contextName);
              cluster.remove(hostName);
              LOG.debug("Removed database connections for: " + hostName + " to context: "+ contextName);
            }
 catch (            Exception ex) {
              LOG.debug(ex);
              Logs.extreme().debug(ex,ex);
            }
          }
 catch (          final NoSuchElementException ex1) {
            LOG.debug(ex1);
            Logs.extreme().debug(ex1,ex1);
            return;
          }
catch (          final IllegalStateException ex1) {
            LOG.debug(ex1);
            Logs.extreme().debug(ex1,ex1);
            return;
          }
catch (          final Exception ex1) {
            LOG.error(ex1,ex1);
          }
        }
        @Override public String toString(){
          return "Databases.disable(): " + hostName + " "+ contextName;
        }
      }
;
      return removeRunner;
    }
  }
;
}
