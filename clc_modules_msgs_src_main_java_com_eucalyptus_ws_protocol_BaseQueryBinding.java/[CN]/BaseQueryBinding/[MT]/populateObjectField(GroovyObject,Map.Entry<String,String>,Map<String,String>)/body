{
  try {
    final Class<?> declaredType=getRecursiveField(obj.getClass(),paramFieldPair.getValue()).getType();
    if (declaredType.equals(String.class))     obj.setProperty(paramFieldPair.getValue(),params.remove(paramFieldPair.getKey()));
 else     if (declaredType.getName().equals("int"))     obj.setProperty(paramFieldPair.getValue(),Integer.parseInt(params.remove(paramFieldPair.getKey())));
 else     if (declaredType.equals(Integer.class))     obj.setProperty(paramFieldPair.getValue(),new Integer(params.remove(paramFieldPair.getKey())));
 else     if (declaredType.getName().equals("boolean"))     obj.setProperty(paramFieldPair.getValue(),Boolean.parseBoolean(params.remove(paramFieldPair.getKey())));
 else     if (declaredType.equals(Boolean.class))     obj.setProperty(paramFieldPair.getValue(),new Boolean(params.remove(paramFieldPair.getKey())));
 else     if (declaredType.getName().equals("long"))     obj.setProperty(paramFieldPair.getValue(),Long.parseLong(params.remove(paramFieldPair.getKey())));
 else     if (declaredType.equals(Long.class))     obj.setProperty(paramFieldPair.getValue(),new Long(params.remove(paramFieldPair.getKey())));
 else     return false;
    return true;
  }
 catch (  final Exception e1) {
    return false;
  }
}
