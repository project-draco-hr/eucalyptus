{
  final String operationName=this.extractOperationName(httpRequest);
  final String operationNameType=operationName + "Type";
  for (  T op : this.possibleParams)   httpRequest.getParameters().remove(op.name());
  final Map<String,String> params=httpRequest.getParameters();
  BaseMessage eucaMsg=null;
  Map<String,String> fieldMap=null;
  Class<?> targetType=null;
  Binding currentBinding=null;
  try {
    if (this.getBinding().hasElementClass(operationName)) {
      currentBinding=this.getBinding();
      targetType=currentBinding.getElementClass(operationName);
    }
 else     if (this.getBinding().hasElementClass(operationNameType)) {
      currentBinding=this.getBinding();
      targetType=currentBinding.getElementClass(operationNameType);
    }
 else     if (this.getDefaultBinding().hasElementClass(operationName)) {
      currentBinding=this.getDefaultBinding();
      targetType=currentBinding.getElementClass(operationName);
    }
 else     if (this.getDefaultBinding().hasElementClass(operationNameType)) {
      currentBinding=this.getDefaultBinding();
      targetType=currentBinding.getElementClass(operationNameType);
    }
 else     if (BindingManager.getDefaultBinding().hasElementClass(operationName)) {
      currentBinding=BindingManager.getDefaultBinding();
      targetType=currentBinding.getElementClass(operationName);
    }
 else     if (BindingManager.getDefaultBinding().hasElementClass(operationNameType)) {
      currentBinding=BindingManager.getDefaultBinding();
      targetType=currentBinding.getElementClass(operationNameType);
    }
 else {
      try {
        targetType=this.getBinding().getElementClass(operationName);
      }
 catch (      BindingException ex) {
        LOG.error(ex,ex);
        throw ex;
      }
    }
    fieldMap=this.buildFieldMap(targetType);
    eucaMsg=(BaseMessage)targetType.newInstance();
  }
 catch (  BindingException e) {
    LOG.debug("Failed to construct message of type: " + operationName,e);
    LOG.error(e,e);
    throw e;
  }
catch (  Throwable e) {
    throw new BindingException("Failed to construct message of type " + operationName,e);
  }
  List<String> failedMappings=populateObject((GroovyObject)eucaMsg,fieldMap,params);
  if (!failedMappings.isEmpty() || !params.isEmpty()) {
    StringBuilder errMsg=new StringBuilder("Failed to bind the following fields:\n");
    for (    String f : failedMappings)     errMsg.append(f).append('\n');
    for (    Map.Entry<String,String> f : params.entrySet())     errMsg.append(f.getKey()).append(" = ").append(f.getValue()).append('\n');
    throw new BindingException(errMsg.toString());
  }
  try {
    currentBinding.toOM(eucaMsg,this.getNamespace());
  }
 catch (  RuntimeException e) {
    LOG.error("Falling back to default (unvalidated) binding for: " + operationName + " with params="+ params);
    LOG.error("Failed to build a valid message: " + e.getMessage(),e);
    try {
      BindingManager.getDefaultBinding().toOM(eucaMsg,BindingManager.defaultBindingNamespace());
    }
 catch (    RuntimeException ex) {
      throw new BindingException("Default binding failed to build a valid message: " + ex.getMessage(),ex);
    }
  }
  return eucaMsg;
}
