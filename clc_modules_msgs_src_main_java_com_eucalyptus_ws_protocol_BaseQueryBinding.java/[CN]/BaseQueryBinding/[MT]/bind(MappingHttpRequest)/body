{
  final String operationName=this.extractOperationName(httpRequest);
  final String operationNameType=operationName + "Type";
  for (  final T op : this.possibleParams)   httpRequest.getParameters().remove(op.name());
  final Map<String,String> params=httpRequest.getParameters();
  BaseMessage eucaMsg;
  Map<String,String> fieldMap;
  Binding currentBinding;
  try {
    currentBinding=getBindingWithElementClass(operationName);
    Class<?> targetType=currentBinding == null ? null : currentBinding.getElementClass(operationName);
    if (currentBinding == null) {
      currentBinding=getBindingWithElementClass(operationNameType);
      targetType=currentBinding == null ? null : currentBinding.getElementClass(operationNameType);
    }
    if (currentBinding == null) {
      try {
        targetType=this.getBinding().getElementClass(operationName);
      }
 catch (      final BindingException ex) {
        LOG.error(ex,ex);
        throw ex;
      }
    }
    fieldMap=this.buildFieldMap(targetType);
    eucaMsg=(BaseMessage)targetType.newInstance();
  }
 catch (  final BindingException e) {
    LOG.debug("Failed to construct message of type: " + operationName,e);
    LOG.error(e,e);
    throw e;
  }
catch (  final Exception e) {
    throw new BindingException("Failed to construct message of type " + operationName,e);
  }
  final List<String> failedMappings=this.populateObject((GroovyObject)eucaMsg,fieldMap,params);
  if (!failedMappings.isEmpty() || !params.isEmpty()) {
    final StringBuilder errMsg=new StringBuilder("Failed to bind the following fields:\n");
    for (    final String f : failedMappings)     errMsg.append(f).append('\n');
    for (    final Map.Entry<String,String> f : params.entrySet())     errMsg.append(f.getKey()).append(" = ").append(f.getValue()).append('\n');
    throw new BindingException(errMsg.toString());
  }
  validateBinding(currentBinding,operationName,params,eucaMsg);
  return eucaMsg;
}
