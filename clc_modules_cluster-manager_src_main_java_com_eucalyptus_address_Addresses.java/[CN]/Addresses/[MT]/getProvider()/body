{
  String provider="" + edu.ucsb.eucalyptus.util.EucalyptusProperties.getSystemConfiguration().isDoDynamicPublicAddresses() + Iterables.all(Clusters.getInstance().listValues(),new Predicate<Cluster>(){
    @Override public boolean apply(    Cluster arg0){
      return arg0.getState().isAddressingInitialized() ? arg0.getState().hasPublicAddressing() : true;
    }
  }
);
  try {
    if (!Addresses.systemAddressManager.getClass().equals(managerMap.get(provider))) {
      return (AbstractSystemAddressManager)managerMap.get(provider).newInstance();
    }
  }
 catch (  Throwable e) {
    LOG.debug(e,e);
  }
  return Addresses.systemAddressManager;
}
