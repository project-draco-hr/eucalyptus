{
  final CreateLoadBalancerResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final UserFullName ownerFullName=ctx.getUserFullName();
  final String lbName=request.getLoadBalancerName();
  final LoadBalancer lb=LoadBalancers.addLoadbalancer(ownerFullName,lbName);
  if (lb == null)   throw new LoadBalancingException(String.format("Requested loadbalancer %s cannot be created",lbName));
  Function<String,Boolean> rollback=new Function<String,Boolean>(){
    @Override public Boolean apply(    String lbName){
      try {
        LoadBalancers.deleteLoadbalancer(ownerFullName,lbName);
        return true;
      }
 catch (      LoadBalancingException ex) {
        LOG.error("failed to rollback the loadbalancer: " + lbName,ex);
        return false;
      }
    }
  }
;
  Collection<String> zones=request.getAvailabilityZones().getMember();
  if (zones != null && zones.size() > 0) {
    LoadBalancers.addZone(lbName,ownerFullName,zones);
  }
  try {
    NewLoadbalancerEvent evt=new NewLoadbalancerEvent();
    evt.setLoadBalancer(lbName);
    evt.setContext(ctx);
    evt.setZones(zones);
    ActivityManager.getInstance().fire(evt);
  }
 catch (  EventFailedException e) {
    LOG.error("failed to fire new loadbalancer event",e);
    rollback.apply(lbName);
    throw new LoadBalancingException(String.format("Faild to create the requested loadblanacer: %s",lbName),e);
  }
  Collection<Listener> listeners=request.getListeners().getMember();
  if (listeners != null && listeners.size() > 0) {
    LoadBalancers.createLoadbalancerListener(lbName,ownerFullName,listeners);
    try {
      CreateListenerEvent evt=new CreateListenerEvent();
      evt.setLoadBalancer(lbName);
      evt.setListeners(listeners);
      evt.setContext(ctx);
      ActivityManager.getInstance().fire(evt);
    }
 catch (    EventFailedException e) {
      LOG.error("failed to fire createListener eent",e);
      rollback.apply(lbName);
      throw new LoadBalancingException(String.format("Faild to create the requested loadblanacer: %s",lbName),e);
    }
  }
  final CreateLoadBalancerResult result=new CreateLoadBalancerResult();
  if (lb != null && lb.getDnsAddress() == null) {
    LOG.warn("No DNS name is assigned to a loadblancer " + lbName);
  }
  result.setDnsName(lb != null ? lb.getDnsAddress() : null);
  reply.setCreateLoadBalancerResult(result);
  reply.set_return(true);
  return reply;
}
