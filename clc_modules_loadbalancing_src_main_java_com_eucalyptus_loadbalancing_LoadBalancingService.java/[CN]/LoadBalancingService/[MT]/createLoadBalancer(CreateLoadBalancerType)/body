{
  final CreateLoadBalancerResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final UserFullName ownerFullName=ctx.getUserFullName();
  final String lbName=request.getLoadBalancerName();
  final LoadBalancer lb=LoadBalancers.addLoadbalancer(ownerFullName,lbName);
  if (lb == null)   throw new LoadBalancingException(String.format("Requested loadbalancer %s cannot be created",lbName));
  Collection<Listener> listeners=request.getListeners().getMember();
  if (listeners != null && listeners.size() > 0) {
    LoadBalancers.createLoadbalancerListener(lbName,ownerFullName,listeners);
  }
  Collection<String> zones=request.getAvailabilityZones().getMember();
  if (zones != null && zones.size() > 0) {
    LoadBalancers.addZone(lbName,ownerFullName,zones);
  }
  final CreateLoadBalancerResult result=new CreateLoadBalancerResult();
  if (lb != null && lb.getDnsAddress() == null) {
    LOG.warn("No DNS name is assigned to a loadblancer " + lbName);
  }
  result.setDnsName(lb != null ? lb.getDnsAddress() : null);
  reply.setCreateLoadBalancerResult(result);
  reply.set_return(true);
  return reply;
}
