{
  final SetLoadBalancerPoliciesOfListenerResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final String lbName=request.getLoadBalancerName();
  final int portNum=request.getLoadBalancerPort();
  final PolicyNames pNames=request.getPolicyNames();
  if (lbName == null || lbName.isEmpty())   throw new InvalidConfigurationRequestException("Loadbalancer name must be specified");
  if (portNum < 0 || portNum > 65535)   throw new InvalidConfigurationRequestException("Invalid port number specified");
  final List<String> policyNames=pNames.getMember();
  LoadBalancer lb=null;
  try {
    lb=LoadBalancers.getLoadbalancer(ctx,lbName);
  }
 catch (  final NoSuchElementException ex) {
    throw new AccessPointNotFoundException();
  }
catch (  final Exception ex) {
    LOG.error("Failed to find the loadbalancer",ex);
    throw new InternalFailure400Exception("Failed to find the loadbalancer");
  }
  if (lb != null && !LoadBalancingMetadatas.filterPrivileged().apply(lb)) {
    throw new AccessPointNotFoundException();
  }
  try {
    LoadBalancerListener listener=null;
    for (    final LoadBalancerListenerCoreView l : lb.getListeners()) {
      if (l.getLoadbalancerPort() == portNum) {
        listener=LoadBalancerListenerEntityTransform.INSTANCE.apply(l);
        break;
      }
    }
    if (listener == null)     throw new ListenerNotFoundException();
    final List<LoadBalancerPolicyDescription> policies=Lists.newArrayList();
    if (policyNames != null) {
      for (      final String policyName : policyNames) {
        try {
          policies.add(LoadBalancerPolicies.getLoadBalancerPolicyDescription(lb,policyName));
        }
 catch (        final Exception ex) {
          throw new PolicyNotFoundException();
        }
      }
    }
    final List<LoadBalancerPolicyDescription> oldPolicies=LoadBalancerPolicies.getPoliciesOfListener(listener);
    LoadBalancerPolicies.removePoliciesFromListener(listener);
    try {
      if (policies.size() > 0)       LoadBalancerPolicies.addPoliciesToListener(listener,policies);
    }
 catch (    final Exception ex) {
      LoadBalancerPolicies.addPoliciesToListener(listener,oldPolicies);
      throw ex;
    }
  }
 catch (  final LoadBalancingException ex) {
    throw ex;
  }
catch (  final Exception ex) {
    LOG.error("Failed to set policies to listener",ex);
    throw new InternalFailure400Exception("Failed to set policies to listener",ex);
  }
  return reply;
}
