{
  final DisableAvailabilityZonesForLoadBalancerResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final UserFullName ownerFullName=ctx.getUserFullName();
  final String lbName=request.getLoadBalancerName();
  final Collection<String> zones=request.getAvailabilityZones().getMember();
  if (zones != null && zones.size() > 0) {
    try {
      DisabledZoneEvent evt=new DisabledZoneEvent();
      evt.setLoadBalancer(lbName);
      evt.setContext(ctx);
      evt.setZones(zones);
      ActivityManager.getInstance().fire(evt);
    }
 catch (    EventFailedException e) {
      LOG.error("failed to fire DisabledZone event",e);
      throw new LoadBalancingException("failed to disable zones: internal error",e);
    }
    LoadBalancers.removeZone(lbName,ownerFullName,zones);
  }
  reply.set_return(true);
  return reply;
}
