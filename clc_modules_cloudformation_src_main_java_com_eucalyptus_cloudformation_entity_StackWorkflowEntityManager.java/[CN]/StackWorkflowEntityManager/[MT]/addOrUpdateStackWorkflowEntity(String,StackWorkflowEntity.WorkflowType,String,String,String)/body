{
  StackWorkflowEntity stackWorkflowEntity=new StackWorkflowEntity();
  stackWorkflowEntity.setDomain(domain);
  stackWorkflowEntity.setStackId(stackId);
  stackWorkflowEntity.setRunId(runId);
  stackWorkflowEntity.setWorkflowId(workflowId);
  stackWorkflowEntity.setWorkflowType(workflowType);
  try (TransactionResource db=Entities.transactionFor(StackWorkflowEntity.class)){
    Criteria criteria=Entities.createCriteria(StackWorkflowEntity.class).add(Restrictions.eq("stackId",stackId)).add(Restrictions.eq("workflowType",workflowType));
    List<StackWorkflowEntity> match=criteria.list();
    if (match != null && !match.isEmpty()) {
      throw new InternalFailureException("Stack workflow entity of type " + workflowType + " already exists for stack id "+ stackId);
    }
 else {
      Entities.persist(stackWorkflowEntity);
    }
    db.commit();
  }
   return stackWorkflowEntity;
}
