def create_load_balancer(self, name, zones, listeners, subnets=None, security_groups=None, scheme='internet-facing', callback=None):
    params = {'LoadBalancerName': name, 'Scheme': scheme, }
    for (index, listener) in enumerate(listeners):
        i = (index + 1)
        protocol = listener[2].upper()
        params[('Listeners.member.%d.LoadBalancerPort' % i)] = listener[0]
        params[('Listeners.member.%d.InstancePort' % i)] = listener[1]
        params[('Listeners.member.%d.Protocol' % i)] = listener[2]
        if ((protocol == 'HTTPS') or (protocol == 'SSL')):
            params[('Listeners.member.%d.SSLCertificateId' % i)] = listener[3]
    if zones:
        self.__build_list_params__(params, zones, 'AvailabilityZones.member.%d')
    if subnets:
        self.__build_list_params__(params, subnets, 'Subnets.member.%d')
    if security_groups:
        self.__build_list_params__(params, security_groups, 'SecurityGroups.member.%d')
    return self.__make_elb_request__('CreateLoadBalancer', params)
