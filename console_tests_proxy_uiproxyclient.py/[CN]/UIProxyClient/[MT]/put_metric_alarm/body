def put_metric_alarm(self, alarm_name, metric_name, namespace, period, threshold, comparison_op, eval_periods, statistic, actions_enabled=None, alarm_actions=[], alarm_desc=None, dimensions=[], insufficient_data_actions=[], ok_actions=[], unit=None):
    params = {'AlarmName': alarm_name, 'MetricName': metric_name, 'Namespace': namespace, 'Period': period, 'Threshold': threshold, 'ComparisonOperator': comparison_op, 'EvaluationPeriods': eval_periods, 'Statistic': statistic, }
    if actions_enabled:
        params['ActionsEnabled'] = actions_enabled
    if alarm_actions:
        self.__build_list_params__(params, alarm_actions, 'AlarmActions.member.%d')
    if alarm_desc:
        params['AlarmDescription'] = alarm_desc
    if dimensions:
        self.__build_list_params__(params, dimensions, 'Dimensions.member.%d')
    if insufficient_data_actions:
        self.__build_list_params__(params, insufficient_data_actions, 'InsufficientDataActions.member.%d')
    if ok_actions:
        self.__build_list_params__(params, ok_actions, 'OKActions.member.%d')
    if unit:
        params['Unit'] = unit
    return self.__make_cw_request__('PutMetricAlarm', params)
