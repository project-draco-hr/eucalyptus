{
  sinkEvents(Event.ONMOUSEOVER | Event.ONMOUSEOUT | Event.ONMOUSEMOVE);
  this.addHandler(new MouseOutHandler(){
    public void onMouseOut(    MouseOutEvent event){
      int row=getRowForEvent(event);
      if (row >= 0) {
        removeRowStyle(row,ROW_ROLLOVER_STYLE_NAME);
        Tooltip.getInstance().hide();
      }
    }
  }
,MouseOutEvent.getType());
  this.addHandler(new MouseOverHandler(){
    public void onMouseOver(    MouseOverEvent event){
      int row=getRowForEvent(event);
      if (row >= 0) {
        addRowStyle(row,ROW_ROLLOVER_STYLE_NAME);
      }
    }
  }
,MouseOverEvent.getType());
  this.addHandler(new MouseMoveHandler(){
    public void onMouseMove(    MouseMoveEvent event){
      int row=getRowForEvent(event);
      if (row >= 0) {
        int x=((Widget)event.getSource()).getAbsoluteLeft() + event.getX() + 15;
        int y=((Widget)event.getSource()).getAbsoluteTop() + event.getY() + 15;
        Tooltip.getInstance().delayedShow(x,y,Tooltip.TOOLTIP_DELAY_IN_MILLIS,data.get(row).toTooltip());
      }
    }
  }
,MouseMoveEvent.getType());
  this.addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      Cell cell=getCellForEvent(event);
      if (cell != null) {
        int row=cell.getRowIndex();
        int col=cell.getCellIndex();
        if (row >= 0 && col > 0) {
          setSelected(row);
          control.onSelectionChange(parent);
        }
      }
    }
  }
);
}
