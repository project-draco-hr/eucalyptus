{
  String date=new Date().toString();
  String httpVerb=verb;
  String addrPath;
  try {
    java.net.URI addrUri=new URL(addr).toURI();
    addrPath=addrUri.getPath().toString();
    String query=addrUri.getQuery();
    if (query != null) {
      addrPath+="?" + query;
    }
  }
 catch (  Exception ex) {
    LOG.error(ex,ex);
    return null;
  }
  String data=httpVerb + "\n" + date+ "\n"+ addrPath+ "\n";
  HttpMethodBase method=null;
  if (httpVerb.equals("PUT")) {
    method=new PutMethodWithProgress(addr);
  }
 else   if (httpVerb.equals("DELETE")) {
    method=new DeleteMethod(addr);
  }
 else {
    method=new GetMethod(addr);
  }
  method.setRequestHeader("Authorization","Euca");
  method.setRequestHeader("Date",date);
  method.setRequestHeader(StorageProperties.EUCALYPTUS_OPERATION,eucaOperation);
  if (eucaHeader != null) {
    method.setRequestHeader(StorageProperties.EUCALYPTUS_HEADER,eucaHeader);
  }
  try {
    PrivateKey ccPrivateKey=SystemCredentials.lookup(Storage.class).getPrivateKey();
    Signature sign=Signature.getInstance("SHA1withRSA");
    sign.initSign(ccPrivateKey);
    sign.update(data.getBytes());
    byte[] sig=sign.sign();
    method.setRequestHeader("EucaSignature",new String(Base64.encode(sig)));
  }
 catch (  Exception ex) {
    LOG.error(ex,ex);
  }
  return method;
}
