{
  try {
    httpBaseRequest.addRequestHeader("Host",httpBaseRequest.getURI().getHost() + ":" + httpBaseRequest.getURI().getPort());
  }
 catch (  URIException e) {
    LOG.error("Could not add Host header for canonical headers during authorization header creation in HTTP client: ",e);
    return null;
  }
  Header[] headers=httpBaseRequest.getRequestHeaders();
  StringBuilder signedHeaders=new StringBuilder();
  StringBuilder canonicalHeaders=new StringBuilder();
  if (headers != null) {
    Arrays.sort(headers,new Comparator<Header>(){
      @Override public int compare(      Header arg0,      Header arg1){
        return arg0.getName().toLowerCase().compareTo(arg1.getName().toLowerCase());
      }
    }
);
    for (    Header header : headers) {
      signedHeaders.append(header.getName().toLowerCase()).append(';');
      canonicalHeaders.append(header.getName().toLowerCase()).append(':').append(header.getValue().trim()).append('\n');
    }
    if (signedHeaders.length() > 0) {
      signedHeaders.deleteCharAt(signedHeaders.length() - 1);
    }
    if (canonicalHeaders.length() > 0) {
      canonicalHeaders.deleteCharAt(canonicalHeaders.length() - 1);
    }
  }
  String[] result=new String[2];
  result[0]=canonicalHeaders.toString();
  result[1]=signedHeaders.toString();
  return result;
}
