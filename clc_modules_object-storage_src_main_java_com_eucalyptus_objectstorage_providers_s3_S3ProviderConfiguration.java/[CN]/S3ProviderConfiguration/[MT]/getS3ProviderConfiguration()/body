{
  S3ProviderConfiguration example=new S3ProviderConfiguration();
  example.setName(NAME);
  S3ProviderConfiguration retrieved=null;
  boolean needsCreated=false;
  try (TransactionResource tran=Entities.transactionFor(S3ProviderConfiguration.class)){
    retrieved=Entities.uniqueResult(example);
    tran.commit();
    return retrieved;
  }
 catch (  NoSuchElementException enf) {
    needsCreated=true;
  }
catch (  TransactionException e) {
    LOG.error("exception occurred while retrieving S3 provider configuration",e);
    return null;
  }
  if (needsCreated) {
    try (TransactionResource tran=Entities.transactionFor(S3ProviderConfiguration.class)){
      example.setS3Endpoint("s3.amazonaws.com");
      example.setPropertyChangeCheckInterval(new Integer(15));
      example.setPoolMaxActive(new Integer(20));
      example.setPoolMaxIdle(new Integer(5));
      example=Entities.persist(example);
      tran.commit();
      return example;
    }
 catch (    Exception ex) {
      LOG.error("exception occurred while creating S3 provider configuration",ex);
      return null;
    }
  }
  return null;
}
