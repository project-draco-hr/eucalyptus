{
  final boolean dns=!ComponentIds.lookup(Dns.class).runLimitedServices();
  final Map<String,String> m=new HashMap<String,String>();
  m.put("ami-launch-index","" + this.launchRecord.getLaunchIndex());
  m.put("hostname",this.getPublicAddress());
  m.put("instance-id",this.getInstanceId());
  m.put("instance-type",this.getVmType().getName());
  if (dns) {
    m.put("local-hostname",this.getNetworkConfig().getPrivateDnsName());
  }
 else {
    m.put("local-hostname",this.getNetworkConfig().getPrivateAddress());
  }
  m.put("local-ipv4",this.getNetworkConfig().getPrivateAddress());
  if (dns) {
    m.put("public-hostname",this.getNetworkConfig().getPublicDnsName());
  }
 else {
    m.put("public-hostname",this.getPublicAddress());
  }
  m.put("public-ipv4",this.getPublicAddress());
  m.put("reservation-id",this.vmId.getReservationId());
  m.put("kernel-id",this.bootRecord.getKernel().getDisplayName());
  if (this.bootRecord.getRamdisk() != null) {
    m.put("ramdisk-id",this.bootRecord.getRamdisk().getDisplayName());
  }
  m.put("security-groups",this.getNetworkNames().toString().replaceAll("[\\Q[]\\E]","").replaceAll(", ","\n"));
  m.put("block-device-mapping/","emi\nephemeral\nephemeral0\nroot\nswap");
  m.put("block-device-mapping/emi","sda1");
  m.put("block-device-mapping/ami","sda1");
  m.put("block-device-mapping/ephemeral","sda2");
  m.put("block-device-mapping/ephemeral0","sda2");
  m.put("block-device-mapping/swap","sda3");
  m.put("block-device-mapping/root","/dev/sda1");
  m.put("public-keys/","0=" + this.bootRecord.getSshKeyPair().getName());
  m.put("public-keys/0","openssh-key");
  m.put("public-keys/0/","openssh-key");
  m.put("public-keys/0/openssh-key",this.bootRecord.getSshKeyPair().getPublicKey());
  m.put("placement/","availability-zone");
  m.put("placement/availability-zone",this.getPartition());
  String dir="";
  for (  final String entry : m.keySet()) {
    if ((entry.contains("/") && !entry.endsWith("/"))) {
      continue;
    }
    dir+=entry + "\n";
  }
  m.put("",dir);
  return m;
}
