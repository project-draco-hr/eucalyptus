{
  long startTime=System.currentTimeMillis();
  this.waitList.put(corId,corId);
  BaseMessage reply=null;
synchronized (corId) {
    while (!this.replyMap.containsKey(corId) && (System.currentTimeMillis() - startTime) < MAP_TIMEOUT_MS)     try {
      corId.wait(MAP_GET_WAIT_MS);
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupted();
    }
    this.waitList.remove(corId);
    if (this.replyMap.containsKey(corId))     reply=this.replyMap.remove(corId);
 else {
      LOG.error("TIMEOUT: Requesting client has waited for msec=" + (System.currentTimeMillis() - startTime));
      LOG.error("TIMEOUT: Returning a message to indicate that the system hasn't finished processing yet");
      LOG.error("TIMEOUT: correlationId:" + corId);
      return new EucalyptusErrorMessageType("Looks like you are going to timeout, but we aren't done processing your request yet. Might be a slow network -- or a bug :(","Raise the timeout value used by your client software.");
    }
  }
  return reply;
}
