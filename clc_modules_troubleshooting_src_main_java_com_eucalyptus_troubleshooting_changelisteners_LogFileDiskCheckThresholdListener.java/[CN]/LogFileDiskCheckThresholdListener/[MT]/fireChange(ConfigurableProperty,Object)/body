{
  if (newValue == null) {
    throw new ConfigurablePropertyException("Invalid value " + newValue);
  }
 else   if (!(newValue instanceof String)) {
    throw new ConfigurablePropertyException("Invalid value " + newValue);
  }
 else   if (((String)newValue).endsWith("%")) {
    String percentageStr=((String)newValue).substring(0,((String)newValue).length() - 1);
    double percentage=-1.0;
    try {
      percentage=Double.parseDouble(percentageStr);
    }
 catch (    Exception ex) {
      throw new ConfigurablePropertyException("Invalid value " + newValue);
    }
    if (percentage < 0 || percentage > 100) {
      throw new ConfigurablePropertyException("Invalid value " + newValue);
    }
  }
 else {
    long bytes=-1;
    try {
      bytes=Long.parseLong((String)newValue);
    }
 catch (    Exception ex) {
      throw new ConfigurablePropertyException("Invalid value " + newValue);
    }
    if (bytes <= 0) {
      throw new ConfigurablePropertyException("Invalid value " + newValue);
    }
  }
  try {
    t.getField().set(null,t.getTypeParser().apply(newValue.toString()));
  }
 catch (  IllegalArgumentException e1) {
    e1.printStackTrace();
    throw new ConfigurablePropertyException(e1);
  }
catch (  IllegalAccessException e1) {
    e1.printStackTrace();
    throw new ConfigurablePropertyException(e1);
  }
  LogFileDiskCheckScheduler.resetLogFileDiskCheck();
}
