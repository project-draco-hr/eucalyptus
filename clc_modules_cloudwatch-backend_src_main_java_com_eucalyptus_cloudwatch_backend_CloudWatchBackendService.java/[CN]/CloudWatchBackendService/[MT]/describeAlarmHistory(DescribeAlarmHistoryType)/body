{
  final DescribeAlarmHistoryResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  try {
    final OwnerFullName ownerFullName=ctx.getUserFullName();
    final String accountId=ownerFullName.getAccountNumber();
    final String alarmName=validateAlarmName(request.getAlarmName(),false);
    final Date endDate=validateEndDate(request.getEndDate(),false);
    final Date startDate=validateStartDate(request.getStartDate(),false);
    validateDateOrder(startDate,endDate,"StartDate","EndDate",false,false);
    final HistoryItemType historyItemType=validateHistoryItemType(request.getHistoryItemType(),false);
    final Integer maxRecords=validateMaxRecords(request.getMaxRecords());
    final String nextToken=request.getNextToken();
    final List<AlarmHistory> results=AlarmManager.describeAlarmHistory(accountId,alarmName,endDate,historyItemType,maxRecords,startDate,nextToken,Predicates.compose(RestrictedTypes.filteringFor(CloudWatchMetadata.AlarmMetadata.class).byPrivileges().buildPredicate(),TransformationFunctions.AlarmHistoryToAlarmMetadata.INSTANCE));
    if (maxRecords != null && results.size() == maxRecords) {
      reply.getDescribeAlarmHistoryResult().setNextToken(results.get(results.size() - 1).getNaturalId());
    }
    final AlarmHistoryItems alarmHistoryItems=new AlarmHistoryItems();
    alarmHistoryItems.setMember(Lists.newArrayList(Collections2.<AlarmHistory,AlarmHistoryItem>transform(results,TransformationFunctions.AlarmHistoryToAlarmHistoryItem.INSTANCE)));
    reply.getDescribeAlarmHistoryResult().setAlarmHistoryItems(alarmHistoryItems);
  }
 catch (  Exception ex) {
    handleException(ex);
  }
  return reply;
}
