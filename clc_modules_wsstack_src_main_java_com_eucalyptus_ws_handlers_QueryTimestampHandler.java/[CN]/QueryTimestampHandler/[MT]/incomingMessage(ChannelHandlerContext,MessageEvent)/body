{
  if (event.getMessage() instanceof MappingHttpRequest) {
    MappingHttpRequest httpRequest=(MappingHttpRequest)event.getMessage();
    Map<String,String> parameters=httpRequest.getParameters();
    if (!parameters.containsKey(SecurityParameter.Timestamp.toString()) && !parameters.containsKey(SecurityParameter.Expires.toString())) {
      throw new AuthenticationException("One of the following parameters must be specified: " + SecurityParameter.Timestamp + " OR "+ SecurityParameter.Expires);
    }
    Calendar now=Calendar.getInstance();
    Calendar expires=null;
    if (parameters.containsKey(SecurityParameter.Timestamp.toString())) {
      String timestamp=parameters.remove(SecurityParameter.Timestamp.toString());
      try {
        expires=HmacUtils.parseTimestamp(timestamp);
      }
 catch (      Exception e) {
        expires=HmacUtils.parseTimestamp(URLDecoder.decode(timestamp));
      }
      expires.add(Calendar.MINUTE,5);
    }
 else {
      String exp=parameters.remove(SecurityParameter.Expires.toString());
      try {
        expires=HmacUtils.parseTimestamp(exp);
      }
 catch (      Exception e) {
        expires=HmacUtils.parseTimestamp(URLDecoder.decode(exp));
      }
    }
    if (now.after(expires))     throw new AuthenticationException("Message has expired.");
  }
}
