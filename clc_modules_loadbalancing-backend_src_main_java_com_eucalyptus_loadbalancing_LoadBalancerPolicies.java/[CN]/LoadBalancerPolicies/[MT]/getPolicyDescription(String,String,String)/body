{
  final ClassLoader classLoader=LoadBalancerPolicies.class.getClassLoader();
  try {
    final InputStream fileStream=classLoader.getResourceAsStream(pathToAttributeJson);
    final ObjectMapper objectMapper=new ObjectMapper();
    final List<AttributeNameValuePair> attrList=objectMapper.readValue(fileStream,new TypeReference<List<AttributeNameValuePair>>(){
    }
);
    final PolicyDescription policyDesc=new PolicyDescription();
    policyDesc.setPolicyName(policyName);
    policyDesc.setPolicyTypeName(policyTypeName);
    final List<PolicyAttributeDescription> policyAttrs=Lists.newArrayList(Iterables.filter(Lists.transform(attrList,new Function<AttributeNameValuePair,PolicyAttributeDescription>(){
      @Override public PolicyAttributeDescription apply(      AttributeNameValuePair arg0){
        if (arg0.AttributeName == null || arg0.AttributeValue == null)         return null;
        final PolicyAttributeDescription attr=new PolicyAttributeDescription();
        attr.setAttributeName(arg0.AttributeName);
        attr.setAttributeValue(arg0.AttributeValue);
        return attr;
      }
    }
),Predicates.notNull()));
    final PolicyAttributeDescriptions descs=new PolicyAttributeDescriptions();
    descs.setMember((ArrayList<PolicyAttributeDescription>)policyAttrs);
    policyDesc.setPolicyAttributeDescriptions(descs);
    return policyDesc;
  }
 catch (  final Exception ex) {
    LOG.warn("Unable to read ELB sample policy files",ex);
    return null;
  }
}
