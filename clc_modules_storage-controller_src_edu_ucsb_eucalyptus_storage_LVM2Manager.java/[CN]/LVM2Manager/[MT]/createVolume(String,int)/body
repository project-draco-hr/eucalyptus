{
  File volumeDir=new File(StorageProperties.storageRootDirectory);
  volumeDir.mkdirs();
  String vgName="vg-" + Hashes.getRandom(4);
  String lvName="lv-" + Hashes.getRandom(4);
  LVMVolumeInfo lvmVolumeInfo=new LVMVolumeInfo();
  String rawFileName=StorageProperties.storageRootDirectory + "/" + volumeId;
  String loDevName=createLoopback(rawFileName,size);
  createLogicalVolume(loDevName,vgName,lvName);
  try {
    int vbladePid=exportVolume(lvmVolumeInfo,vgName,lvName);
    if (vbladePid < 0) {
      throw new EucalyptusCloudException();
    }
  }
 catch (  EucalyptusCloudException ex) {
    LOG.error(ex);
    String absoluteLVName=lvmRootDirectory + PATH_SEPARATOR + vgName+ PATH_SEPARATOR+ lvName;
    String returnValue=removeLogicalVolume(absoluteLVName);
    returnValue=removeVolumeGroup(vgName);
    returnValue=removePhysicalVolume(loDevName);
    removeLoopback(loDevName);
    throw ex;
  }
  lvmVolumeInfo.setVolumeId(volumeId);
  lvmVolumeInfo.setLoDevName(loDevName);
  lvmVolumeInfo.setPvName(loDevName);
  lvmVolumeInfo.setVgName(vgName);
  lvmVolumeInfo.setLvName(lvName);
  lvmVolumeInfo.setStatus(StorageProperties.Status.available.toString());
  lvmVolumeInfo.setSize(size);
  EntityWrapper<LVMVolumeInfo> db=new EntityWrapper<LVMVolumeInfo>();
  db.add(lvmVolumeInfo);
  db.commit();
}
