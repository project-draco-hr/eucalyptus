{
  if (userName == null || accountName == null) {
    throw new AuthException("Empty user name or account name");
  }
  EntityWrapper<UserEntity> db=EntityWrapper.get(UserEntity.class);
  Session session=db.getSession();
  try {
    Example accountExample=Example.create(new AccountEntity(accountName)).enableLike(MatchMode.EXACT);
    Example groupExample=Example.create(new GroupEntity(true)).enableLike(MatchMode.EXACT);
    Example userExample=Example.create(new UserEntity(userName)).enableLike(MatchMode.EXACT);
    @SuppressWarnings("unchecked") List<UserEntity> users=(List<UserEntity>)session.createCriteria(UserEntity.class).setCacheable(true).add(userExample).createCriteria("groups").setCacheable(true).add(groupExample).createCriteria("account").setCacheable(true).add(accountExample).list();
    db.commit();
    return users.size() > 0;
  }
 catch (  Throwable e) {
    db.rollback();
    Debugging.logError(LOG,e,"Failed to check user " + userName + " in "+ accountName);
    throw new AuthException("Failed to check user",e);
  }
}
