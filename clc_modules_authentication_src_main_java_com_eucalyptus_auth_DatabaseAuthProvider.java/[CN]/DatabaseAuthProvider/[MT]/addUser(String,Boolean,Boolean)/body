{
  UserEntity newUser=new UserEntity(userName);
  newUser.setQueryId(Hmacs.generateQueryId(userName));
  newUser.setSecretKey(Hmacs.generateSecretKey(userName));
  newUser.setAdministrator(isAdmin);
  newUser.setEnabled(isEnabled);
  newUser.setPassword(Crypto.generateHashedPassword(userName));
  newUser.setToken(Crypto.generateSessionToken(userName));
  EntityWrapper<UserEntity> db=Authentication.getEntityWrapper();
  try {
    db.add(newUser);
    db.commit();
  }
 catch (  Throwable t) {
    db.rollback();
    throw new UserExistsException(t);
  }
  EntityWrapper<UserInfo> dbU=EntityWrapper.get(UserInfo.class);
  try {
    String confirmCode=Crypto.generateSessionToken(userName);
    UserInfo newUserInfo=new UserInfo(userName,confirmCode);
    dbU.add(newUserInfo);
    dbU.commit();
  }
 catch (  Exception e) {
    LOG.debug(e,e);
    dbU.rollback();
  }
  User proxy=new UserProxy(newUser);
  Groups.DEFAULT.addMember(proxy);
  return proxy;
}
