{
  final ArrayListMultimap<String,Certificate> results=ArrayListMultimap.create();
  try (final TransactionResource db=Entities.transactionFor(CertificateEntity.class)){
    @SuppressWarnings("unchecked") final List<Object[]> certificatesAndUserIds=Entities.createQuery(CertificateEntity.class,"select c, u.userId from CertificateEntity c " + "inner join c.user u " + "where " + qualifier(userIds) + " u.userId in (:userIds) ").setParameterList("userIds",identifiers(userIds)).setReadOnly(true).list();
    for (    final Object[] certificatesAndUserId : certificatesAndUserIds) {
      results.put((String)certificatesAndUserId[1],new DatabaseCertificateProxy((CertificateEntity)certificatesAndUserId[0]));
    }
    return (Map<String,List<Certificate>>)(Map)results.asMap();
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to get certificates by user identifiers");
    throw new AuthException("Failed to get certificates by user identifiers",e);
  }
}
