{
  List<Account> results=Lists.newArrayList();
  EntityWrapper<AccountEntity> db=EntityWrapper.get(AccountEntity.class);
  try {
    @SuppressWarnings("unchecked") final List<AccountEntity> accounts=(List<AccountEntity>)db.createCriteria(AccountEntity.class).setCacheable(true).createCriteria("groups").setCacheable(true).add(Restrictions.eq("userGroup",true)).createCriteria("users").setCacheable(true).add(Restrictions.eq("name",User.ACCOUNT_ADMIN)).add(Restrictions.eq("regStat",status)).setReadOnly(true).list();
    for (    AccountEntity a : accounts) {
      results.add(new DatabaseAccountProxy(a));
    }
    return results;
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to get accounts by registration status");
    throw new AuthException("Failed to get accounts by registration status",e);
  }
 finally {
    db.rollback();
  }
}
