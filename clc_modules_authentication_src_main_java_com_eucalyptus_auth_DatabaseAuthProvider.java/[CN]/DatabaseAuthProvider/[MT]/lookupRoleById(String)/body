{
  if (roleId == null) {
    throw new AuthException(AuthException.EMPTY_ROLE_ID);
  }
  final EntityWrapper<RoleEntity> db=EntityWrapper.get(RoleEntity.class);
  try {
    final RoleEntity role=DatabaseAuthUtils.getUnique(db,RoleEntity.class,"roleId",roleId);
    return new DatabaseRoleProxy(role);
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to find role by ID " + roleId);
    throw new AuthException(AuthException.NO_SUCH_ROLE,e);
  }
 finally {
    db.rollback();
  }
}
