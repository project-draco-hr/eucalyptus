{
  final ArrayListMultimap<String,AccessKey> results=ArrayListMultimap.create();
  final EntityWrapper<AccessKeyEntity> db=EntityWrapper.get(AccessKeyEntity.class);
  try {
    @SuppressWarnings("unchecked") final List<Object[]> keysAndUserIds=db.createQuery("select a, u.userId from AccessKeyEntity a " + "inner join a.user u " + "where " + qualifier(userIds) + " u.userId in (:userIds) ").setParameterList("userIds",identifiers(userIds)).setReadOnly(true).list();
    for (    final Object[] keysAndUserId : keysAndUserIds) {
      results.put((String)keysAndUserId[1],new DatabaseAccessKeyProxy((AccessKeyEntity)keysAndUserId[0]));
    }
    return (Map<String,List<AccessKey>>)(Map)results.asMap();
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to get access keys by user identifiers");
    throw new AuthException("Failed to get access keys by user identifiers",e);
  }
 finally {
    db.rollback();
  }
}
