{
  if (userId == null) {
    throw new AuthException(AuthException.EMPTY_USER_ID);
  }
  EntityWrapper<UserEntity> db=EntityWrapper.get(UserEntity.class);
  try {
    UserEntity user=DatabaseAuthUtils.getUnique(db,UserEntity.class,"userId",userId);
    db.commit();
    return new DatabaseUserProxy(user);
  }
 catch (  Exception e) {
    db.rollback();
    Debugging.logError(LOG,e,"Failed to find user by ID " + userId);
    throw new AuthException(AuthException.NO_SUCH_USER,e);
  }
}
