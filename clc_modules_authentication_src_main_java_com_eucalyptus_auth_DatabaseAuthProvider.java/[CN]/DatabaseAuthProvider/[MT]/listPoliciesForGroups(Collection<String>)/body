{
  final ArrayListMultimap<String,Policy> results=ArrayListMultimap.create();
  try (final TransactionResource db=Entities.transactionFor(PolicyEntity.class)){
    @SuppressWarnings("unchecked") final List<Object[]> policyAndGroupIds=Entities.createQuery(PolicyEntity.class,"select p, g.groupId from PolicyEntity p " + "inner join p.group g " + "where g.userGroup = false and " + qualifier(groupIds) + " g.groupId in (:groupIds) ").setParameterList("groupIds",identifiers(groupIds)).setReadOnly(true).list();
    for (    final Object[] policyAndGroupId : policyAndGroupIds) {
      results.put((String)policyAndGroupId[1],new DatabasePolicyProxy((PolicyEntity)policyAndGroupId[0]));
    }
    return (Map<String,List<Policy>>)(Map)results.asMap();
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to get policies by group identifiers");
    throw new AuthException("Failed to get policies by group identifiers",e);
  }
}
