{
  AuthorizationEntity searchAuth=new AuthorizationEntity(resourceType);
  EntityWrapper<AuthorizationEntity> db=EntityWrapper.get(AuthorizationEntity.class);
  Session session=db.getSession();
  try {
    Example authExample=Example.create(searchAuth).enableLike(MatchMode.EXACT);
    @SuppressWarnings("unchecked") List<AuthorizationEntity> authorizations=(List<AuthorizationEntity>)session.createCriteria(AuthorizationEntity.class).setCacheable(true).add(authExample).createCriteria("statement").setCacheable(true).createCriteria("policy").setCacheable(true).createCriteria("group").setCacheable(true).createCriteria("users").add(Restrictions.and(Restrictions.idEq(userId),Restrictions.eq("enabled",true))).list();
    db.commit();
    List<DatabaseAuthorizationProxy> results=Lists.newArrayList();
    for (    AuthorizationEntity auth : authorizations) {
      results.add(new DatabaseAuthorizationProxy(auth));
    }
    return results;
  }
 catch (  Throwable e) {
    db.rollback();
    Debugging.logError(LOG,e,"Failed to lookup authorization for user with ID " + userId + ", type="+ resourceType);
    throw new AuthException("Failed to lookup auth",e);
  }
}
