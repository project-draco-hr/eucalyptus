{
  List<Group> results=Lists.newArrayList();
  EntityWrapper<GroupEntity> db=EntityWrapper.get(GroupEntity.class);
  try {
    @SuppressWarnings("unchecked") final List<Object[]> groupAndAccountNumbers=db.createQuery("select g, a.accountNumber from GroupEntity g " + "inner join g.account a " + "where g.userGroup = false and" + qualifier(accountIds) + " a.accountNumber in (:accountIds) ").setParameterList("accountIds",identifiers(accountIds)).setReadOnly(true).list();
    for (    final Object[] groupAndAccountNumber : groupAndAccountNumbers) {
      results.add(new DatabaseGroupProxy((GroupEntity)groupAndAccountNumber[0],(String)groupAndAccountNumber[1]));
    }
    return results;
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to get groups by account identifiers");
    throw new AuthException("Failed to get groups by account identifiers",e);
  }
 finally {
    db.rollback();
  }
}
