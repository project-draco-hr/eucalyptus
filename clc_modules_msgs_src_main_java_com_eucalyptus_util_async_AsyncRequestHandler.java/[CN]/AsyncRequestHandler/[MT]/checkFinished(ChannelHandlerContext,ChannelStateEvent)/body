{
  if (this.connectFuture != null && !this.connectFuture.isSuccess() && this.connectFuture.getCause() instanceof IOException) {
    Throwable ioError=this.connectFuture.getCause();
    if (!this.writeComplete.get()) {
      this.teardown(new RetryableConnectionException("Channel was closed before the write operation could be completed: " + ioError.getMessage(),ioError,this.request.get()));
    }
 else {
      this.teardown(new ConnectionException("Channel was closed before the response was received: " + ioError.getMessage(),ioError,this.request.get()));
    }
  }
 else {
    if (!this.writeComplete.get()) {
      this.teardown(new RetryableConnectionException("Channel was closed before the write operation could be completed",this.request.get()));
    }
 else     if (!this.response.isDone()) {
      this.teardown(new ConnectionException("Channel was closed before the response was received.",this.request.get()));
    }
  }
}
