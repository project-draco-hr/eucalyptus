{
  if (t.getValue() != null && t.getValue().equals(zones))   return;
  try {
    if (zones == null || zones.length() == 0) {
      return;
    }
    final List<String> availabilityZones=Lists.newArrayList();
    if (zones.contains(",")) {
      final String[] tokens=zones.split(",");
      if ((tokens.length - 1) != StringUtils.countOccurrencesOf(zones,","))       throw new EucalyptusCloudException("Invalid availability zones");
      for (      final String zone : tokens)       availabilityZones.add(zone);
    }
 else {
      availabilityZones.add(zones);
    }
    try {
      final List<ClusterInfoType> clusters=Ec2Client.getInstance().describeAvailabilityZones(null,false);
      final List<String> clusterNames=Lists.newArrayList();
      for (      final ClusterInfoType cluster : clusters) {
        clusterNames.add(cluster.getZoneName());
      }
      for (      final String zone : availabilityZones) {
        if (!clusterNames.contains(zone))         throw new ConfigurablePropertyException(zone + " is not found in availability zones");
      }
    }
 catch (    final Exception ex) {
      throw new ConfigurablePropertyException("Faield to check availability zones",ex);
    }
  }
 catch (  final ConfigurablePropertyException ex) {
    throw ex;
  }
catch (  final Exception ex) {
    throw new ConfigurablePropertyException("Failed to check availability zones",ex);
  }
}
