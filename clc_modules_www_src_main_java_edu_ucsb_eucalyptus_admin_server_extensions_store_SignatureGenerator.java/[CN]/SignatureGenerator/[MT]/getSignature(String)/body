{
  Mac mac;
  try {
    mac=Mac.getInstance(ALGORITHM);
    mac.init(new SecretKeySpec(secretKey.getBytes(),ALGORITHM));
  }
 catch (  NoSuchAlgorithmException e) {
    throw new RuntimeException(e);
  }
catch (  InvalidKeyException e) {
    throw new RuntimeException(e);
  }
  mac.update(method.getBytes());
  mac.update((byte)'\n');
  mac.update(host.getBytes());
  mac.update((byte)'\n');
  mac.update(path.getBytes());
  mac.update((byte)'\n');
  boolean addAmpersand=false;
  for (  Map.Entry<String,List<String>> entry : parameters.entrySet()) {
    byte[] nameBytes=encodeString(entry.getKey());
    List<String> values=entry.getValue();
    Collections.sort(values);
    for (    String value : values) {
      if (addAmpersand) {
        mac.update((byte)'&');
      }
 else {
        addAmpersand=true;
      }
      byte[] valueBytes=encodeString(value);
      mac.update(nameBytes);
      mac.update((byte)'=');
      mac.update(valueBytes);
    }
  }
  byte[] digest=mac.doFinal();
  return new String(Base64.encodeBase64(digest));
}
