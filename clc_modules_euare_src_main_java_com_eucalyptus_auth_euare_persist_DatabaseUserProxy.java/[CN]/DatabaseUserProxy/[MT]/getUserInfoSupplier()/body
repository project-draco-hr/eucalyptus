{
  return new Supplier<Map<String,String>>(){
    @Override public Map<String,String> get(){
      final Map<String,String> results=Maps.newHashMap();
      try {
        DatabaseAuthUtils.invokeUnique(UserEntity.class,"userId",DatabaseUserProxy.this.delegate.getUserId(),new Tx<UserEntity>(){
          public void fire(          UserEntity t){
            results.putAll(t.getInfo());
          }
        }
);
      }
 catch (      ExecutionException e) {
        Debugging.logError(LOG,e,"Failed to getInfo for " + DatabaseUserProxy.this.delegate);
        throw new RuntimeException(new AuthException(e).fillInStackTrace());
      }
      return results;
    }
  }
;
}
