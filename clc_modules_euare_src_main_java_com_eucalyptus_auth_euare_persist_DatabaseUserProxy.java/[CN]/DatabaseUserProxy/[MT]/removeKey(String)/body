{
  if (Strings.isNullOrEmpty(keyId)) {
    throw new AuthException(AuthException.EMPTY_KEY_ID);
  }
  try (final TransactionResource db=Entities.transactionFor(UserEntity.class)){
    UserEntity user=DatabaseAuthUtils.getUnique(UserEntity.class,"userId",this.delegate.getUserId());
    AccessKeyEntity keyEntity=DatabaseAuthUtils.getUnique(AccessKeyEntity.class,"accessKey",keyId);
    if (!user.getKeys().remove(keyEntity)) {
      throw new AuthException(AuthException.NO_SUCH_KEY);
    }
    Entities.delete(keyEntity);
    db.commit();
  }
 catch (  AuthException e) {
    throw e;
  }
catch (  NoSuchElementException e) {
    throw new AuthException(AuthException.NO_SUCH_KEY,e);
  }
catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to get delete key " + keyId);
    throw new AuthException(e);
  }
}
