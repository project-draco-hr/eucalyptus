{
  Map<String,String> m=new HashMap<String,String>();
  m.put("ami-id",this.getImageInfo().getImageId());
  m.put("product-codes",this.getImageInfo().getProductCodes().toString().replaceAll("[\\Q[]\\E]","").replaceAll(", ","\n"));
  m.put("ami-launch-index","" + this.getLaunchIndex());
  m.put("ancestor-ami-ids",this.getImageInfo().getAncestorIds().toString().replaceAll("[\\Q[]\\E]","").replaceAll(", ","\n"));
  m.put("ami-manifest-path",this.getImageInfo().getImageLocation());
  m.put("hostname",this.getNetworkConfig().getIgnoredPublicIp());
  m.put("instance-id",this.getInstanceId());
  m.put("instance-type",this.getVmTypeInfo().getName());
  if (Component.dns.isLocal()) {
    m.put("local-hostname",this.getNetworkConfig().getPrivateDnsName());
  }
 else {
    m.put("local-hostname",this.getNetworkConfig().getIpAddress());
  }
  m.put("local-ipv4",this.getNetworkConfig().getIpAddress());
  if (Component.dns.isLocal()) {
    m.put("public-hostname",this.getNetworkConfig().getPublicDnsName());
  }
 else {
    m.put("public-hostname",this.getNetworkConfig().getIgnoredPublicIp());
  }
  m.put("public-ipv4",this.getNetworkConfig().getIgnoredPublicIp());
  m.put("reservation-id",this.getReservationId());
  m.put("kernel-id",this.getImageInfo().getKernelId());
  if (this.getImageInfo().getRamdiskId() != null) {
    m.put("ramdisk-id",this.getImageInfo().getRamdiskId());
  }
  m.put("security-groups",this.getNetworkNames().toString().replaceAll("[\\Q[]\\E]","").replaceAll(", ","\n"));
  m.put("block-device-mapping/","emi\nephemeral0\nroot\nswap");
  m.put("block-device-mapping/emi","sda1");
  m.put("block-device-mapping/ami","sda1");
  m.put("block-device-mapping/ephemeral","sda2");
  m.put("block-device-mapping/swap","sda3");
  m.put("block-device-mapping/root","/dev/sda1");
  m.put("public-keys/","0=" + this.getKeyInfo().getName());
  m.put("public-keys/0","openssh-key");
  m.put("public-keys/0/","openssh-key");
  m.put("public-keys/0/openssh-key",this.getKeyInfo().getValue());
  m.put("placement/","availability-zone");
  m.put("placement/availability-zone",this.getPlacement());
  String dir="";
  for (  String entry : m.keySet()) {
    if (entry.contains("/") && !entry.endsWith("/"))     continue;
    dir+=entry + "\n";
  }
  m.put("",dir);
  return m;
}
