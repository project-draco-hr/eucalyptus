{
  if (info.getPhysicalResourceId() == null)   return;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  validateProperties();
  if (!Strings.isNullOrEmpty(properties.getGroupId())) {
    DescribeSecurityGroupsType describeSecurityGroupsType=new DescribeSecurityGroupsType();
    describeSecurityGroupsType.setEffectiveUserId(info.getEffectiveUserId());
    describeSecurityGroupsType.setSecurityGroupIdSet(Lists.newArrayList(properties.getGroupId()));
    DescribeSecurityGroupsResponseType describeSecurityGroupsResponseType=AsyncRequests.<DescribeSecurityGroupsType,DescribeSecurityGroupsResponseType>sendSync(configuration,describeSecurityGroupsType);
    ArrayList<SecurityGroupItemType> securityGroupItemTypeArrayList=describeSecurityGroupsResponseType.getSecurityGroupInfo();
    if (securityGroupItemTypeArrayList == null || securityGroupItemTypeArrayList.isEmpty()) {
      return;
    }
  }
  if (!Strings.isNullOrEmpty(properties.getGroupName())) {
    DescribeSecurityGroupsType describeSecurityGroupsType=new DescribeSecurityGroupsType();
    describeSecurityGroupsType.setEffectiveUserId(info.getEffectiveUserId());
    describeSecurityGroupsType.setSecurityGroupSet(Lists.newArrayList(properties.getGroupName()));
    DescribeSecurityGroupsResponseType describeSecurityGroupsResponseType=AsyncRequests.<DescribeSecurityGroupsType,DescribeSecurityGroupsResponseType>sendSync(configuration,describeSecurityGroupsType);
    ArrayList<SecurityGroupItemType> securityGroupItemTypeArrayList=describeSecurityGroupsResponseType.getSecurityGroupInfo();
    if (securityGroupItemTypeArrayList == null || securityGroupItemTypeArrayList.isEmpty()) {
      return;
    }
    boolean foundNonVpc=false;
    for (    SecurityGroupItemType securityGroupItemType : securityGroupItemTypeArrayList) {
      if (Strings.isNullOrEmpty(securityGroupItemType.getVpcId())) {
        foundNonVpc=true;
        break;
      }
    }
    if (!foundNonVpc) {
      return;
    }
  }
  RevokeSecurityGroupIngressType revokeSecurityGroupIngressType=new RevokeSecurityGroupIngressType();
  revokeSecurityGroupIngressType.setEffectiveUserId(getResourceInfo().getEffectiveUserId());
  if (!Strings.isNullOrEmpty(properties.getGroupId())) {
    revokeSecurityGroupIngressType.setGroupId(properties.getGroupId());
  }
  if (!Strings.isNullOrEmpty(properties.getGroupName())) {
    revokeSecurityGroupIngressType.setGroupName(properties.getGroupName());
  }
  IpPermissionType ipPermissionType=new IpPermissionType(properties.getIpProtocol(),properties.getFromPort(),properties.getToPort());
  if (!Strings.isNullOrEmpty(properties.getCidrIp())) {
    ipPermissionType.setCidrIpRanges(Lists.newArrayList(properties.getCidrIp()));
  }
  if (!Strings.isNullOrEmpty(properties.getSourceSecurityGroupId())) {
    ipPermissionType.setGroups(Lists.newArrayList(new UserIdGroupPairType(properties.getSourceSecurityGroupOwnerId(),null,properties.getSourceSecurityGroupId())));
  }
  if (!Strings.isNullOrEmpty(properties.getSourceSecurityGroupName())) {
    String sourceSecurityGroupOwnerId=properties.getSourceSecurityGroupOwnerId();
    if (Strings.isNullOrEmpty(sourceSecurityGroupOwnerId)) {
      sourceSecurityGroupOwnerId=stackEntity.getAccountId();
    }
    ipPermissionType.setGroups(Lists.newArrayList(new UserIdGroupPairType(sourceSecurityGroupOwnerId,properties.getSourceSecurityGroupName(),null)));
  }
  revokeSecurityGroupIngressType.setIpPermissions(Lists.newArrayList(ipPermissionType));
  RevokeSecurityGroupIngressResponseType revokeSecurityGroupIngressResponseType=AsyncRequests.<RevokeSecurityGroupIngressType,RevokeSecurityGroupIngressResponseType>sendSync(configuration,revokeSecurityGroupIngressType);
}
