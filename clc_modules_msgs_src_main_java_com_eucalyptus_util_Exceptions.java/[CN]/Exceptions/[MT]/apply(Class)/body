{
  if (Function.class.isAssignableFrom(input) && Ats.from(input).has(ErrorMessages.class)) {
    try {
      ErrorMessages annote=Ats.from(input).get(ErrorMessages.class);
      Function<Class,String> errorFunction=(Function<Class,String>)Classes.builder(input).newInstance();
      ConcurrentMap<Class,String> errorMap=new MapMaker().expireAfterAccess(60,TimeUnit.SECONDS).makeComputingMap(errorFunction);
      classErrorMessages.put(annote.value(),errorMap);
      return true;
    }
 catch (    UndeclaredThrowableException ex) {
      LOG.error(ex,ex);
      return false;
    }
  }
 else {
    Discovery discovery=Ats.from(ErrorMessageDiscovery.class).get(Discovery.class);
    LOG.error("Annotated Discovery supplied class argument that does not conform to one of: value()=" + discovery.value() + " (assignable types) or annotations()="+ discovery.annotations());
    return false;
  }
}
