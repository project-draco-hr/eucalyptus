{
  Multimap<Class,AlarmEntity> classMultiMap=LinkedListMultimap.create();
  for (  AlarmEntity alarmEntity : results) {
    classMultiMap.put(MetricEntityFactory.getClassForEntitiesGet(alarmEntity.getMetricType(),MetricManager.hash(alarmEntity.getDimensionMap())),alarmEntity);
  }
  List<Iterator<List<AlarmEntity>>> iterators=Lists.newArrayList();
  for (  Class clazz : classMultiMap.keySet()) {
    iterators.add(Iterables.partition(classMultiMap.get(clazz),2).iterator());
  }
  List<List<AlarmEntity>> retVal=Lists.newArrayList();
  boolean atLeastOneMightHaveMore=true;
  while (atLeastOneMightHaveMore) {
    atLeastOneMightHaveMore=false;
    for (    Iterator<List<AlarmEntity>> iterator : iterators) {
      if (iterator.hasNext()) {
        atLeastOneMightHaveMore=true;
        retVal.add(iterator.next());
      }
    }
  }
  return retVal;
}
