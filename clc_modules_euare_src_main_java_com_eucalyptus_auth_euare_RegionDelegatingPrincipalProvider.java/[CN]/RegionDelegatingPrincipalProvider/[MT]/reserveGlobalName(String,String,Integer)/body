{
  final int numberOfRegions=Iterables.size(regionConfigurationManager.getRegionInfos());
  final Integer successes=numberOfRegions <= 1 ? 1 : regionDispatchAndReduce(new NonNullFunction<PrincipalProvider,Either<AuthException,String>>(){
    @Nonnull @Override public Either<AuthException,String> apply(    final PrincipalProvider identityProvider){
      try {
        identityProvider.reserveGlobalName(namespace,name,duration);
        return Either.right("");
      }
 catch (      AuthException e) {
        if (AsyncExceptions.isWebServiceErrorCode(e,AuthException.CONFLICT) || AuthException.CONFLICT.equals(e.getMessage())) {
          return Either.left(e);
        }
 else {
          throw Exceptions.toUndeclared(e);
        }
      }
    }
  }
,0,CollectionUtils.<String>count(Predicates.notNull()));
  if (successes < numberOfRegions) {
    throw new AuthException(AuthException.CONFLICT);
  }
}
