{
  List<Address> addressList=Lists.newArrayList();
  String partition;
  try {
    partition=Clusters.getInstance().lookup(cluster).getPartition();
  }
 catch (  NoSuchElementException ex) {
    partition=cluster;
  }
  if (Addresses.getInstance().listDisabledValues().size() < count)   throw new NotEnoughResourcesAvailable("Not enough resources available: addresses (try --addressing private)");
  for (  Address addr : Addresses.getInstance().listDisabledValues()) {
    try {
      if (partition.equals(addr.getPartition()) && addressList.add(addr.pendingAssignment()) && --count == 0)       break;
    }
 catch (    IllegalStateException e) {
      LOG.trace(e,e);
    }
  }
  if (count != 0) {
    for (    Address addr : addressList) {
      try {
        addr.release();
      }
 catch (      IllegalStateException e) {
        LOG.error(e,e);
      }
    }
    throw new NotEnoughResourcesAvailable("Not enough resources available: addresses (try --addressing private)");
  }
  return addressList;
}
