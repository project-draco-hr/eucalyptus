{
  Zone zone=getZone(nameString);
  if (zone == null) {
    try {
      Record[] records=new Record[1];
      records[0]=record;
      Name name=Name.fromString(nameString);
      long soaTTL=604800;
      long serial=1;
      long refresh=604800;
      long retry=86400;
      long expires=2419200;
      long minimum=604800;
      Record soarec=new SOARecord(name,DClass.IN,soaTTL,name,Name.fromString("root." + nameString),serial,refresh,retry,expires,minimum);
      long nsTTL=soaTTL;
      String nsHost=DNSProperties.NS_HOST + ".";
      Name nsName=Name.fromString(nsHost);
      Record nsrec=new NSRecord(name,DClass.IN,nsTTL,nsName);
      ARecord nsARecord=new ARecord(nsName,DClass.IN,nsTTL,Address.getByAddress(DNSProperties.NS_IP));
      zone=new Zone(name,new Record[]{soarec,nsrec,nsARecord,record});
      zone=zones.putIfAbsent(name,zone);
      if (zone == null) {
        zone=zones.get(name);
        try (final TransactionResource db=Entities.transactionFor(ZoneInfo.class)){
          ZoneInfo zoneInfo=new ZoneInfo(nameString);
          Entities.persist(zoneInfo);
          SOARecordInfo soaRecordInfo=new SOARecordInfo();
          soaRecordInfo.setName(nameString);
          soaRecordInfo.setRecordclass(DClass.IN);
          soaRecordInfo.setNameserver(nameString);
          soaRecordInfo.setAdmin("root." + nameString);
          soaRecordInfo.setZone(nameString);
          soaRecordInfo.setSerialNumber(serial);
          soaRecordInfo.setTtl(soaTTL);
          soaRecordInfo.setExpires(expires);
          soaRecordInfo.setMinimum(minimum);
          soaRecordInfo.setRefresh(refresh);
          soaRecordInfo.setRetry(retry);
          Entities.persist(soaRecordInfo);
          NSRecordInfo nsRecordInfo=new NSRecordInfo();
          nsRecordInfo.setName(nameString);
          nsRecordInfo.setZone(nameString);
          nsRecordInfo.setRecordClass(DClass.IN);
          nsRecordInfo.setTarget(nsHost);
          nsRecordInfo.setTtl(nsTTL);
          Entities.persist(nsRecordInfo);
          ARecordInfo aRecordInfo=new ARecordInfo();
          aRecordInfo.setName(nsHost);
          aRecordInfo.setAddress(DNSProperties.NS_IP);
          aRecordInfo.setTtl(nsTTL);
          aRecordInfo.setZone(nameString);
          aRecordInfo.setRecordclass(DClass.IN);
          Entities.persist(aRecordInfo);
          db.commit();
        }
       }
    }
 catch (    Exception ex) {
      LOG.error(ex);
    }
  }
 else {
    if (multiRec || (zone.findExactMatch(record.getName(),record.getType()) == null)) {
      zone.addRecord(record);
    }
  }
}
