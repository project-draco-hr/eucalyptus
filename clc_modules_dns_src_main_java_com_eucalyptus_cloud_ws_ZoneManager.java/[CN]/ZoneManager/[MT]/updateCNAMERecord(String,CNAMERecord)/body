{
  try {
    Zone zone=getZone(zoneName);
    if (zone == null)     return;
    RRset rrSet=zone.findExactMatch(record.getName(),record.getDClass());
    if (rrSet != null) {
      Iterator<Record> rrIterator=rrSet.rrs();
      Record recordToRemove=null;
      while (rrIterator.hasNext()) {
        Record rec=rrIterator.next();
        if (rec.getName().equals(record.getName())) {
          recordToRemove=rec;
        }
      }
      if (recordToRemove != null)       zone.removeRecord(recordToRemove);
      zone.addRecord(record);
      try (final TransactionResource db=Entities.transactionFor(CNAMERecordInfo.class)){
        CNAMERecordInfo cnameRecordInfo=new CNAMERecordInfo();
        cnameRecordInfo.setZone(zoneName);
        cnameRecordInfo.setName(record.getName().toString());
        CNAMERecordInfo foundCNAMERecInfo=Entities.uniqueResult(cnameRecordInfo);
        foundCNAMERecInfo.setName(record.getName().toString());
        foundCNAMERecInfo.setAlias(record.getAlias().toString());
        foundCNAMERecInfo.setRecordclass(record.getDClass());
        foundCNAMERecInfo.setTtl(record.getTTL());
        db.commit();
      }
     }
  }
 catch (  Exception ex) {
    LOG.error(ex);
  }
}
