{
  final Context ctx=Contexts.lookup();
  final boolean isAdmin=ctx.hasAdministrativePrivileges();
  final ArrayList<String> instancesSet=request.getInstancesSet();
  final String action=PolicySpec.requestToAction(request);
  final User requestUser=ctx.getUser();
  final Map<String,ReservationInfoType> rsvMap=new HashMap<String,ReservationInfoType>();
  final EntityTransaction db=Entities.get(VmInstance.class);
  Predicate<VmInstance> privileged=RestrictedTypes.filterPrivileged();
  for (  final VmInstance v : Iterables.filter(VmInstances.listValues(),privileged)) {
    if (VmStateSet.DONE.apply(v) && (v.getState().ordinal() > VmState.RUNNING.ordinal())) {
      final long time=(System.currentTimeMillis() - v.getLastUpdateTimestamp().getTime());
      if (v.getSplitTime() > VmInstances.SHUT_DOWN_TIME) {
        v.setState(VmState.TERMINATED,Reason.EXPIRED);
        continue;
      }
 else       if (v.getSplitTime() > VmInstances.BURY_TIME) {
        v.setState(VmState.BURIED,Reason.BURIED);
      }
    }
    Account instanceAccount=null;
    try {
      instanceAccount=Accounts.lookupUserById(v.getOwner().getUniqueId()).getAccount();
    }
 catch (    final AuthException e) {
      throw new EucalyptusCloudException(e);
    }
    if (!instancesSet.isEmpty() && !instancesSet.contains(v.getInstanceId())) {
      continue;
    }
    if (rsvMap.get(v.getReservationId()) == null) {
      final ReservationInfoType reservation=new ReservationInfoType(v.getReservationId(),v.getOwner().getNamespace(),v.getNetworkNames());
      rsvMap.put(reservation.getReservationId(),reservation);
    }
    rsvMap.get(v.getReservationId()).getInstancesSet().add(VmInstance.Transform.INSTANCE.apply(v));
  }
  return new ArrayList<ReservationInfoType>(rsvMap.values());
}
