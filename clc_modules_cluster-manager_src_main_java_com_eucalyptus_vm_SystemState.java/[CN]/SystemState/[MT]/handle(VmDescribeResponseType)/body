{
  VmInstances.flushBuried();
  final String originCluster=request.getOriginCluster();
  for (  final VmInfo runVm : request.getVms()) {
    SystemState.updateVmInstance(originCluster,runVm);
  }
  final List<String> unreportedVms=Lists.transform(VmInstances.listValues(),new Function<VmInstance,String>(){
    @Override public String apply(    final VmInstance input){
      return input.getInstanceId();
    }
  }
);
  final List<String> runningVmIds=Lists.transform(request.getVms(),new Function<VmInfo,String>(){
    @Override public String apply(    final VmInfo arg0){
      final String vmId=arg0.getImageId();
      unreportedVms.remove(vmId);
      return vmId;
    }
  }
);
  for (  final String vmId : unreportedVms) {
    try {
      final VmInstance vm=VmInstances.lookup(vmId);
      if (vm.getSplitTime() > VmInstances.SHUT_DOWN_TIME) {
        vm.setState(VmState.TERMINATED,Reason.EXPIRED);
      }
    }
 catch (    final NoSuchElementException e) {
    }
  }
}
