{
  try {
    String instanceId=runVm.getInstanceId();
    String reservationId=runVm.getReservationId();
    String ownerId=runVm.getOwnerId();
    String placement=cluster;
    String userData=runVm.getUserData();
    Integer launchIndex=0;
    try {
      launchIndex=Integer.parseInt(runVm.getLaunchIndex());
    }
 catch (    NumberFormatException e) {
    }
    VmImageInfo imgInfo=null;
    try {
      imgInfo=(VmImageInfo)Messaging.send("vm://ImageResolve",runVm);
    }
 catch (    EucalyptusCloudException e) {
      imgInfo=new VmImageInfo(runVm.getImageId(),runVm.getKernelId(),runVm.getRamdiskId(),null,null,null,null,runVm.getPlatform());
    }
    VmKeyInfo keyInfo=null;
    try {
      keyInfo=(VmKeyInfo)Messaging.send("vm://KeyPairResolve",runVm);
    }
 catch (    EucalyptusCloudException e) {
      keyInfo=new VmKeyInfo("unknown",runVm.getKeyValue(),null);
    }
    VmTypeInfo vmType=runVm.getInstanceType();
    List<Network> networks=new ArrayList<Network>();
    for (    String netName : runVm.getGroupNames()) {
      Network notwork=null;
      try {
        notwork=Networks.getInstance().lookup(runVm.getOwnerId() + "-" + netName);
        networks.add(notwork);
        try {
          NetworkToken netToken=Clusters.getInstance().lookup(runVm.getPlacement()).getState().extantAllocation(runVm.getOwnerId(),netName,runVm.getNetParams().getVlan());
          notwork.addTokenIfAbsent(netToken);
        }
 catch (        NetworkAlreadyExistsException e) {
          LOG.trace(e);
        }
        notwork.extantNetworkIndex(runVm.getPlacement(),runVm.getNetParams().getNetworkIndex());
      }
 catch (      NoSuchElementException e1) {
        try {
          notwork=SystemState.getUserNetwork(runVm.getOwnerId(),netName);
          networks.add(notwork);
          NetworkToken netToken=Clusters.getInstance().lookup(runVm.getPlacement()).getState().extantAllocation(runVm.getOwnerId(),netName,runVm.getNetParams().getVlan());
          notwork.addTokenIfAbsent(netToken);
          Networks.getInstance().registerIfAbsent(notwork,Networks.State.ACTIVE);
        }
 catch (        EucalyptusCloudException e) {
          LOG.error(e);
          ClusterConfiguration config=Clusters.getInstance().lookup(runVm.getPlacement()).getConfiguration();
          new TerminateCallback(runVm.getInstanceId()).dispatch(runVm.getPlacement());
        }
catch (        NetworkAlreadyExistsException e) {
          LOG.trace(e);
        }
      }
    }
    VmInstance vm=new VmInstance(reservationId,launchIndex,instanceId,ownerId,placement,userData,imgInfo,keyInfo,vmType,networks,Integer.toString(runVm.getNetParams().getNetworkIndex()));
    vm.clearPending();
    vm.setLaunchTime(runVm.getLaunchTime());
    vm.getNetworkConfig().setIgnoredPublicIp(VmInstance.DEFAULT_IP);
    String dnsDomain="dns-disabled";
    try {
      dnsDomain=edu.ucsb.eucalyptus.cloud.entities.SystemConfiguration.getSystemConfiguration().getDnsDomain();
    }
 catch (    Exception e) {
    }
    vm.getNetworkConfig().updateDns(dnsDomain);
    vm.setKeyInfo(keyInfo);
    vm.setImageInfo(imgInfo);
    VmInstances.getInstance().register(vm);
  }
 catch (  NoSuchElementException e) {
    ClusterConfiguration config=Clusters.getInstance().lookup(runVm.getPlacement()).getConfiguration();
    new TerminateCallback(runVm.getInstanceId()).dispatch(runVm.getPlacement());
  }
}
