{
  try {
    String instanceUuid=runVm.getUuid();
    String instanceId=runVm.getInstanceId();
    String reservationId=runVm.getReservationId();
    final UserFullName ownerId=UserFullName.getInstance(runVm.getOwnerId());
    String placement=cluster;
    byte[] userData=new byte[0];
    if (runVm.getUserData() != null && runVm.getUserData().length() > 1) {
      userData=Base64.decode(runVm.getUserData());
    }
    Integer launchIndex=0;
    try {
      launchIndex=Integer.parseInt(runVm.getLaunchIndex());
    }
 catch (    NumberFormatException e) {
    }
    ImageInfo img=Transactions.one(Images.exampleMachineWithImageId(runVm.getInstanceType().lookupRoot().getId()),new Callback<ImageInfo>(){
      @Override public void fire(      ImageInfo t){
      }
    }
);
    SshKeyPair key=null;
    if (runVm.getKeyValue() != null || !"".equals(runVm.getKeyValue())) {
      try {
        SshKeyPair searchKey=KeyPairs.fromPublicKey(ownerId,runVm.getKeyValue());
      }
 catch (      Exception e) {
        key=KeyPairs.noKey();
      }
    }
 else {
      key=KeyPairs.noKey();
    }
    VmType vmType=VmTypes.getVmType(runVm.getInstanceType().getName());
    List<NetworkGroup> networks=Lists.transform(runVm.getGroupNames(),new Function<String,NetworkGroup>(){
      @Override public NetworkGroup apply(      String arg0){
        try {
          return NetworkGroups.lookup(ownerId,arg0);
        }
 catch (        NoSuchMetadataException ex) {
          LOG.error(ex);
          Logs.extreme().error(ex,ex);
          throw new RuntimeException("Failed to find information for group owned by: " + ownerId + " which is called "+ arg0);
        }
      }
    }
);
    VmInstance vm=new VmInstance(ownerId,instanceId,instanceUuid,reservationId,launchIndex,placement,userData,runVm.getInstanceType(),key,vmType,img.getPlatform().toString(),networks,new PrivateNetworkIndex(runVm.getNetParams().getVlan(),runVm.getNetParams().getNetworkIndex()));
    vm.clearPending();
    vm.updatePublicAddress(VmInstance.DEFAULT_IP);
    VmInstances.register(vm);
  }
 catch (  NoSuchElementException e) {
    ClusterConfiguration config=Clusters.getInstance().lookup(runVm.getPlacement()).getConfiguration();
    AsyncRequests.newRequest(new TerminateCallback(runVm.getInstanceId())).dispatch(runVm.getPlacement());
  }
catch (  Throwable t) {
    LOG.error(t,t);
  }
}
