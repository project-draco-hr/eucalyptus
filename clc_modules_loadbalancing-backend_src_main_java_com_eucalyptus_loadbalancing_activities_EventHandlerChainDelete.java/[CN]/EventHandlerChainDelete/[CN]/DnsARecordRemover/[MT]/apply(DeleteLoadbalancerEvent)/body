{
  LoadBalancer lb;
  List<LoadBalancerServoInstanceCoreView> servos=Lists.newArrayList();
  try {
    lb=LoadBalancers.getLoadbalancer(evt.getContext(),evt.getLoadBalancer());
    if (lb.getZones() != null) {
      for (      final LoadBalancerZoneCoreView zoneView : lb.getZones()) {
        LoadBalancerZone zone;
        try {
          zone=LoadBalancerZoneEntityTransform.INSTANCE.apply(zoneView);
        }
 catch (        final Exception ex) {
          continue;
        }
        servos.addAll(zone.getServoInstances());
      }
    }
  }
 catch (  NoSuchElementException ex) {
    return;
  }
catch (  Exception ex) {
    LOG.warn("Failed to find the loadbalancer",ex);
    return;
  }
  final LoadBalancerDnsRecordCoreView dns=lb.getDns();
  for (  LoadBalancerServoInstanceCoreView instance : servos) {
    String address=instance.getAddress();
    if (address == null || address.length() <= 0)     continue;
    try {
      EucalyptusActivityTasks.getInstance().removeARecord(dns.getZone(),dns.getName(),address);
      try (final TransactionResource db=Entities.transactionFor(LoadBalancerServoInstance.class)){
        try {
          final LoadBalancerServoInstance entity=Entities.uniqueResult(LoadBalancerServoInstance.named(instance.getInstanceId()));
          entity.setDnsState(LoadBalancerServoInstance.DNS_STATE.Deregistered);
          Entities.persist(entity);
          db.commit();
        }
 catch (        final Exception ex) {
          LOG.error(String.format("failed to set servo instance(%s)'s dns state to deregistered",instance.getInstanceId()),ex);
        }
      }
     }
 catch (    Exception ex) {
      LOG.error(String.format("failed to remove dns a record (zone=%s, name=%s, address=%s)",dns.getZone(),dns.getName(),address),ex);
    }
  }
  try {
    EucalyptusActivityTasks.getInstance().removeMultiARecord(dns.getZone(),dns.getName());
  }
 catch (  Exception ex) {
    LOG.error(String.format("failed to remove dns a record (zone=%s,  name=%s)",dns.getZone(),dns.getName()),ex);
  }
}
