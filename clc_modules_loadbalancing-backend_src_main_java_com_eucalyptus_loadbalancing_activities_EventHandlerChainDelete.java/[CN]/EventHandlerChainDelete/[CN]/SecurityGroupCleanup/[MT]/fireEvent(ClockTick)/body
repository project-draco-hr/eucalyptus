{
  if (!(Bootstrap.isFinished() && Topology.isEnabledLocally(LoadBalancingBackend.class) && Topology.isEnabled(Eucalyptus.class)))   return;
  List<LoadBalancerSecurityGroup> allGroups=null;
  try (TransactionResource db=Entities.transactionFor(LoadBalancerSecurityGroup.class)){
    allGroups=Entities.query(LoadBalancerSecurityGroup.withState(LoadBalancerSecurityGroup.STATE.OutOfService));
    db.commit();
  }
 catch (  Exception ex) {
  }
  if (allGroups == null || allGroups.size() <= 0)   return;
  final List<LoadBalancerSecurityGroup> toDelete=Lists.newArrayList();
  for (  LoadBalancerSecurityGroup group : allGroups) {
    Collection<LoadBalancerServoInstanceCoreView> instances=group.getServoInstances();
    if (instances == null || instances.size() <= 0)     toDelete.add(group);
  }
  for (  LoadBalancerSecurityGroup group : toDelete) {
    try {
      EucalyptusActivityTasks.getInstance().deleteSystemSecurityGroup(group.getName());
      LOG.info("deleted security group: " + group.getName());
    }
 catch (    Exception ex) {
      LOG.warn("failed to delete the security group from eucalyptus",ex);
    }
  }
  try (final TransactionResource db2=Entities.transactionFor(LoadBalancerSecurityGroup.class)){
    for (    LoadBalancerSecurityGroup group : toDelete) {
      LoadBalancerSecurityGroup g=Entities.uniqueResult(group);
      Entities.delete(g);
    }
    db2.commit();
  }
 catch (  NoSuchElementException ex) {
  }
catch (  Exception ex) {
    LOG.warn("failed to delete the securty group from entity",ex);
  }
}
