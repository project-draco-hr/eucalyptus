{
  final double periodDuration=(double)(timestampMs - lastSnapshot.getTimestampMs());
  double result=0d;
  if (periodDuration == 0)   return 0d;
  final long perBegin=lastSnapshot.getTimestampMs();
  final long perEnd=timestampMs;
  final long repBegin=period.getBeginningMs();
  final long repEnd=period.getEndingMs();
  if (perEnd <= repBegin || perBegin >= repEnd) {
    result=0d;
  }
 else   if (perBegin < repBegin && perEnd <= repEnd) {
    result=((double)perEnd - repBegin) / periodDuration;
  }
 else   if (perBegin >= repBegin && perEnd >= repEnd) {
    result=((double)repEnd - perBegin) / periodDuration;
  }
 else   if (perBegin >= repBegin && perEnd <= repEnd) {
    result=1d;
  }
 else   if (repBegin >= perBegin && repEnd <= perEnd) {
    result=((double)(repBegin - perBegin) + (perEnd - repEnd)) / periodDuration;
  }
 else {
    throw new IllegalStateException("impossible boundary condition");
  }
  if (result < 0 || result > 1)   throw new IllegalStateException("result<0 || result>1");
  log.debug(String.format("remainingFactor, report:%d-%d (%d), period:%d-%d (%d), factor:%f",repBegin,repEnd,repEnd - repBegin,perBegin,perEnd,perEnd - perBegin,result));
  return result;
}
