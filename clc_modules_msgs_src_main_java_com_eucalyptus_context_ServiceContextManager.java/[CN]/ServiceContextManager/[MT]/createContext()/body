{
  List<Component> components=Components.whichAreEnabledLocally();
  if (!checkStateChanged(components) && context.getReference() != null) {
    return context.getReference();
  }
 else {
    LOG.info("The following components have been identified as active: ");
    for (    Component c : components) {
      LOG.info("-> " + c.getComponentId());
    }
    Set<ConfigResource> configs=renderServiceConfigurations(components);
    for (    ConfigResource cfg : configs) {
      LOG.info("-> Rendered cfg: " + cfg.getResourceName());
    }
    try {
      builder=new SpringXmlConfigurationBuilder(configs.toArray(new ConfigResource[]{}));
    }
 catch (    Throwable ex) {
      LOG.fatal("Failed to bootstrap services.",ex);
      throw new ServiceInitializationException("Failed to bootstrap service context because of: " + ex.getMessage(),ex);
    }
    MuleContext muleCtx;
    try {
      muleCtx=contextFactory.createMuleContext(builder);
      last=components;
    }
 catch (    InitialisationException ex) {
      LOG.error(ex,ex);
      throw new ServiceInitializationException("Failed to initialize service context because of: " + ex.getMessage(),ex);
    }
catch (    ConfigurationException ex) {
      LOG.error(ex,ex);
      throw new ServiceInitializationException("Failed to initialize service context because of: " + ex.getMessage(),ex);
    }
    return muleCtx;
  }
}
