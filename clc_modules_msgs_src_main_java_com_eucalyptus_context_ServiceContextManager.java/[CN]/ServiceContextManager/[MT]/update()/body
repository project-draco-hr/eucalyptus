{
  if (this.context != null) {
    return;
  }
 else {
    this.canHasWrite.lock();
    try {
      this.context=this.createContext();
      checkParam(this.context,notNullValue());
      try {
        this.context.start();
        this.client=new MuleClient(this.context);
        this.endpointToService.clear();
        this.serviceToEndpoint.clear();
        for (        final Service service : this.context.getRegistry().lookupObjects(Service.class)) {
          final ServiceCompositeMessageSource source=(ServiceCompositeMessageSource)service.getMessageSource();
          for (          final InboundEndpoint in : source.getEndpoints()) {
            this.endpointToService.put(in.getEndpointURI().toString(),service.getName());
            this.serviceToEndpoint.put(service.getName(),in.getEndpointURI().toString());
          }
        }
      }
 catch (      final Exception e) {
        LOG.error(e,e);
        throw Exceptions.toUndeclared(new ServiceInitializationException("Failed to start service this.context.",e));
      }
    }
  finally {
      this.canHasWrite.unlock();
    }
  }
}
