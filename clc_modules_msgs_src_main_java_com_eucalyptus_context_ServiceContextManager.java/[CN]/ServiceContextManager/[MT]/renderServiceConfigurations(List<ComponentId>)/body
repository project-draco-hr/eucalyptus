{
  Set<ConfigResource> configs=Sets.newHashSet();
  for (  ComponentId thisComponent : components) {
    VelocityContext context=new VelocityContext();
    context.put("components",components);
    context.put("thisComponent",thisComponent);
    LOG.info("-> Rendering configuration for " + thisComponent.name());
    StringWriter out=new StringWriter();
    try {
      ve.evaluate(context,out,thisComponent.getServiceModelFileName(),thisComponent.getServiceModelAsReader());
      out.flush();
      out.close();
      String outString=out.toString();
      ByteArrayInputStream bis=new ByteArrayInputStream(outString.getBytes());
      if (LogLevels.EXTREME) {
        CONFIG_LOG.trace("===================================");
        CONFIG_LOG.trace(outString);
        CONFIG_LOG.trace("===================================");
      }
      ConfigResource configRsc=new ConfigResource(thisComponent.getServiceModelFileName(),bis);
      configs.add(configRsc);
    }
 catch (    Throwable ex) {
      LOG.error("Failed to render service model configuration for: " + thisComponent + " because of: "+ ex.getMessage(),ex);
    }
  }
  return configs;
}
