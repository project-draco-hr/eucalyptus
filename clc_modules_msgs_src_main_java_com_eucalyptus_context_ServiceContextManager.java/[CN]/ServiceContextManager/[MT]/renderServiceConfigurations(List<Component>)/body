{
  Set<ConfigResource> configs=Sets.newHashSet();
  for (  Component component : components) {
    VelocityContext context=new VelocityContext();
    context.put("components",Components.toIds(components));
    context.put("thisComponent",component.getComponentId());
    LOG.info("-> Rendering configuration for " + component.getComponentId().name());
    StringWriter out=new StringWriter();
    try {
      ve.evaluate(context,out,component.getComponentId().getServiceModelFileName(),component.getComponentId().getServiceModelAsReader());
      out.flush();
      out.close();
      String outString=out.toString();
      ByteArrayInputStream bis=new ByteArrayInputStream(outString.getBytes());
      if (LogLevels.EXTREME) {
        CONFIG_LOG.trace("===================================");
        CONFIG_LOG.trace(outString);
        CONFIG_LOG.trace("===================================");
      }
      ConfigResource configRsc=new ConfigResource(component.getComponentId().getServiceModelFileName(),bis);
      configs.add(configRsc);
    }
 catch (    Throwable ex) {
      LOG.error("Failed to render service model configuration for: " + component.getComponentId() + " because of: "+ ex.getMessage(),ex);
    }
  }
  return configs;
}
