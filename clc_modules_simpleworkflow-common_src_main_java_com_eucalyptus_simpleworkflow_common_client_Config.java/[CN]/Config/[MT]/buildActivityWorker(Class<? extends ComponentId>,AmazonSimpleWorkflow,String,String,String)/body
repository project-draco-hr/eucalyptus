{
  final ActivityWorker activityWorker=configure(new ActivityWorker(client,domain,taskList),text);
  activityWorker.setDataConverter(new JsonDataConverter(workerObjectMapper));
  Package workerPackage=null;
  for (  final Class<?> activitiesImplementation : WorkflowRegistry.lookupActivities(componentIdClass)) {
    try {
      if (workerPackage == null) {
        workerPackage=activitiesImplementation.getPackage();
      }
      activityWorker.addActivitiesImplementation(activitiesImplementation.newInstance());
    }
 catch (    InstantiationException|IllegalAccessException|NoSuchMethodException e) {
      throw new IllegalArgumentException("Invalid activities implementation: " + activitiesImplementation,e);
    }
  }
  perhapsSetExceptionHandler(workerPackage,"activity",activityWorker);
  return activityWorker;
}
