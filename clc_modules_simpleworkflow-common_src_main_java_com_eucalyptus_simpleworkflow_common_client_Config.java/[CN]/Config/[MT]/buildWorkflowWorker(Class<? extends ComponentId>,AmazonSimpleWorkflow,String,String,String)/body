{
  final WorkflowWorker workflowWorker=new WorkflowWorker(client,domain,taskList);
  workflowWorker.setRegisterDomain(true);
  configure(workflowWorker,text);
  Package workerPackage=null;
  for (  final Class<?> workflowImplementation : WorkflowRegistry.lookupWorkflows(componentIdClass)) {
    try {
      if (workerPackage == null) {
        workerPackage=workflowImplementation.getPackage();
      }
      workflowWorker.addWorkflowImplementationType(workflowImplementation);
    }
 catch (    InstantiationException|IllegalAccessException e) {
      throw new IllegalArgumentException("Invalid workflow implementation: " + workflowImplementation,e);
    }
  }
  perhapsSetExceptionHandler(workerPackage,"decision",workflowWorker);
  return workflowWorker;
}
