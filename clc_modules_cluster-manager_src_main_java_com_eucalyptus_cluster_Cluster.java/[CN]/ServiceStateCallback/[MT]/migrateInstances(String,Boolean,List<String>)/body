{
  if (this.gateLock.tryLock(30,TimeUnit.SECONDS)) {
    try {
      ServiceConfiguration ncConfig=Nodes.lookup(this.getConfiguration(),sourceHost);
      if (!Component.State.STOPPED.apply(ncConfig)) {
        throw Exceptions.toUndeclared("Cannot evacuate a node controller which is not currently STOPPED: " + ncConfig);
      }
      List<VmInstance> currentMigrations=this.lookupCurrentMigrations();
      if (!currentMigrations.isEmpty()) {
        throw Exceptions.toUndeclared("Cannot start a new migration because the following are already ongoing: " + Joiner.on(", ").join(Iterables.transform(currentMigrations,CloudMetadatas.toDisplayName())));
      }
      this.retryCheck();
      this.prepareInstanceEvacuations(sourceHost);
      try {
        AsyncRequests.sendSync(this.getConfiguration(),new MigrateInstancesType(){
{
            this.setCorrelationId(Contexts.lookup().getCorrelationId());
            this.setSourceHost(sourceHost);
            this.setAllowHosts(destHostsWhiteList);
            this.getDestinationHosts().addAll(destHosts);
          }
        }
);
      }
 catch (      Exception ex) {
        this.rollbackInstanceEvacuations(sourceHost);
        throw ex;
      }
      this.retryCheck();
    }
 catch (    Exception ex) {
      LOG.error(ex);
      throw ex;
    }
 finally {
      this.gateLock.unlock();
    }
  }
 else {
    throw new ServiceStateException("Failed to request migration in the zone " + this.getPartition() + ", it is currently locked for maintenance.");
  }
}
