{
  return new SubjectRemoteCallbackFactory<T,P>(){
    @Override public T newInstance(){
      try {
        if (subject != null) {
          try {
            T callback=callbackClass.getConstructor(subject.getClass()).newInstance(subject);
            return callback;
          }
 catch (          NoSuchMethodException nsmex) {
            T callback=callbackClass.newInstance();
            callback.setSubject(subject);
            return callback;
          }
        }
 else {
          T callback=callbackClass.newInstance();
          LOG.error("Creating uninitialized callback (subject=" + subject + ") for type: "+ callbackClass.getCanonicalName());
          return callback;
        }
      }
 catch (      final Exception ex) {
        LOG.error(ex);
        Logs.exhaust().error(ex,ex);
        throw new RuntimeException(ex);
      }
    }
    @Override public P getSubject(){
      return subject;
    }
  }
;
}
