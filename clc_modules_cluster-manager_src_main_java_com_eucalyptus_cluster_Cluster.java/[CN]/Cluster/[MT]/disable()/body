{
  try {
    if (State.NOTREADY.equals(this.getStateMachine().getState())) {
      final Callable<CheckedListenableFuture<Cluster>> transition=Automata.sequenceTransitions(this,State.ENABLED,State.DISABLED);
      Threads.lookup(ClusterController.class,Cluster.class).submit(transition).get();
    }
 else     if (State.ENABLED.equals(this.getStateMachine().getState())) {
      final Callable<CheckedListenableFuture<Cluster>> transition=Automata.sequenceTransitions(this,State.NOTREADY,State.DISABLED);
      Threads.lookup(ClusterController.class,Cluster.class).submit(transition).get();
    }
  }
 catch (  InterruptedException ex) {
    Thread.currentThread().interrupt();
  }
catch (  ExecutionException ex) {
    Logs.exhaust().debug(ex,ex);
    throw new ServiceRegistrationException("Failed to disable cluster because of: " + ex.getMessage(),ex);
  }
}
