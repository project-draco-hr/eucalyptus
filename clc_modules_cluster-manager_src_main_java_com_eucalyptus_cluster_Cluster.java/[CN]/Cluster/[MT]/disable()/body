{
  try {
    final Callable<CheckedListenableFuture<Cluster>> transition=Automata.sequenceTransitions(this,State.ENABLED,State.DISABLED);
    Threads.lookup(ClusterController.class,Cluster.class).submit(transition).get();
  }
 catch (  InterruptedException ex) {
    Thread.currentThread().interrupt();
    throw new ServiceRegistrationException(ex);
  }
catch (  ExecutionException ex) {
    throw new ServiceRegistrationException(ex.getCause());
  }
 finally {
    try {
      Clusters.getInstance().disable(this);
    }
 catch (    NoSuchElementException ex) {
    }
  }
}
