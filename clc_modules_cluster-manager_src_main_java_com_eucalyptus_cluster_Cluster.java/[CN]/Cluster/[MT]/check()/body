{
  Cluster.State currentState=this.stateMachine.getState();
  Component.State externalState=this.configuration.lookupState();
  List<Throwable> currentErrors=Lists.newArrayList();
  currentErrors.addAll(this.pendingErrors);
  if (!currentErrors.isEmpty()) {
    CheckException ex=ServiceChecks.Severity.ERROR.transform(this.configuration,currentErrors);
    ServiceStateDispatch.DISABLED.apply(this);
    throw ex;
  }
 else   if (currentState.ordinal() < State.DISABLED.ordinal() || (State.DISABLED.equals(currentState) && Component.State.ENABLED.equals(externalState))) {
    IllegalStateException ex=new IllegalStateException("Cluster is currently " + currentState + ":  please see logs for additional information.");
    ServiceStateDispatch.DISABLED.apply(this);
    throw ServiceChecks.Severity.ERROR.transform(this.configuration,ex);
  }
}
