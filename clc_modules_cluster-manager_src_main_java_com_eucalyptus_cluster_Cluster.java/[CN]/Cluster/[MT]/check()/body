{
  final Cluster.State currentState=this.stateMachine.getState();
  final Component.State externalState=this.configuration.lookupState();
  final List<Throwable> currentErrors=Lists.newArrayList();
  if (!this.stateMachine.isBusy()) {
    try {
      if (Cluster.State.NOTREADY.equals(currentState)) {
        notreadyTransition().call().get();
      }
 else       if (Cluster.State.ENABLED.equals(currentState)) {
        enabledTransition().call().get();
      }
 else       if (Cluster.State.DISABLED.equals(currentState)) {
        disabledTransition().call().get();
      }
 else       if (Cluster.State.NOTREADY.ordinal() > currentState.ordinal()) {
        startingTransition().call().get();
      }
      Cluster.this.clearExceptions();
    }
 catch (    Exception ex) {
      Exceptions.maybeInterrupted(ex);
      throw Faults.failure(this.configuration,ex);
    }
  }
  currentErrors.addAll(this.pendingErrors);
  if (!currentErrors.isEmpty()) {
    throw Faults.failure(this.configuration,currentErrors);
  }
 else   if ((currentState.ordinal() < State.DISABLED.ordinal()) || (Component.State.ENABLED.equals(externalState) && (Cluster.State.ENABLING.ordinal() >= currentState.ordinal()))) {
    final IllegalStateException ex=new IllegalStateException("Cluster is currently reported as " + externalState + " but is really "+ currentState+ ":  please see logs for additional information.");
    this.pendingErrors.add(ex);
    throw Faults.failure(this.configuration,currentErrors);
  }
}
