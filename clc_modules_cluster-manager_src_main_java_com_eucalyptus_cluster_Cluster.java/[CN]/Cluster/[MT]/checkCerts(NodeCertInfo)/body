{
  if ((certs == null) || (certs.getCcCert() == null) || (certs.getNcCert() == null)) {
    return false;
  }
  final X509Certificate clusterx509=PEMFiles.getCert(B64.dec(certs.getCcCert()));
  final X509Certificate nodex509=PEMFiles.getCert(B64.dec(certs.getNcCert()));
  if ("self".equals(certs.getServiceTag()) || (certs.getServiceTag() == null)) {
    return (this.hasClusterCert=this.checkCerts(this.getClusterCertificate(),clusterx509)) && (this.hasNodeCert=this.checkCerts(this.getNodeCertificate(),nodex509));
  }
 else   if (this.nodeMap.containsKey(certs.getServiceTag())) {
    final NodeInfo nodeInfo=this.nodeMap.get(certs.getServiceTag());
    nodeInfo.setHasClusterCert(this.checkCerts(this.getClusterCertificate(),clusterx509));
    nodeInfo.setHasNodeCert(this.checkCerts(this.getNodeCertificate(),nodex509));
    return nodeInfo.getHasClusterCert() && nodeInfo.getHasNodeCert();
  }
 else {
    LOG.error("Cluster " + this.getName() + " failed to find cluster/node info for service tag: "+ certs.getServiceTag());
    return false;
  }
}
