{
  final Callable<CheckedListenableFuture<Cluster>> transition=Automata.sequenceTransitions(this,State.DISABLED,State.STOPPED);
  try {
    Threads.lookup(ClusterController.class,Cluster.class).submit(transition).get();
  }
 catch (  InterruptedException ex) {
    Thread.currentThread().interrupt();
  }
catch (  ExecutionException ex) {
    LOG.error(ex,ex);
  }
 finally {
    ListenerRegistry.getInstance().deregister(Hertz.class,this);
    ListenerRegistry.getInstance().deregister(ClockTick.class,this);
    Clusters.getInstance().deregister(this.getName());
  }
}
