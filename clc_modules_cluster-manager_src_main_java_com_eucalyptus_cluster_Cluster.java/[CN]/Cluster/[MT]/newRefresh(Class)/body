{
  return new TransitionAction<Cluster>(){
    private final SubjectRemoteCallbackFactory<RemoteCallback,Cluster> factory=Callbacks.newSubjectMessageFactory(msgClass,Cluster.this);
    @Override public final void leave(    final Cluster parent,    final Callback.Completion transitionCallback){
      Callback.Completion cb=new Callback.Completion(){
        @Override public void fire(){
          transitionCallback.fire();
        }
        @Override public void fireException(        Throwable t){
          transitionCallback.fireException(t);
        }
      }
;
      try {
        if (ClusterLogMessageCallback.class.isAssignableFrom(msgClass)) {
          Callbacks.newLogRequest(factory.newInstance()).then(cb).sendSync(parent.getServiceEndpoint());
        }
 else {
          Callbacks.newClusterRequest(factory.newInstance()).then(cb).sendSync(parent.getServiceEndpoint());
        }
      }
 catch (      ExecutionException e) {
        if (e.getCause() instanceof FailedRequestException) {
          LOG.error(e.getCause().getMessage());
        }
 else         if (e.getCause() instanceof ConnectionException || e.getCause() instanceof IOException) {
        }
 else {
          LOG.error(e,e);
        }
      }
catch (      InterruptedException e) {
        LOG.error(e,e);
      }
    }
  }
;
}
