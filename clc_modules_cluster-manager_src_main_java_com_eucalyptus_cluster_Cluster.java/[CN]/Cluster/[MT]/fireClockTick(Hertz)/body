{
  try {
    Component.State systemState;
    try {
      systemState=this.configuration.lookupState();
    }
 catch (    final NoSuchElementException ex1) {
      this.stop();
      return;
    }
    final boolean initialized=systemState.ordinal() > Component.State.LOADED.ordinal();
    if (!this.stateMachine.isBusy()) {
      Callable<CheckedListenableFuture<Cluster>> transition=null;
switch (this.stateMachine.getState()) {
case PENDING:
case AUTHENTICATING:
case STARTING:
        if (tick.isAsserted(Clusters.getConfiguration().getPendingInterval())) {
          transition=Automata.sequenceTransitions(this,State.STOPPED,State.PENDING,State.AUTHENTICATING,State.STARTING,State.STARTING_NOTREADY,State.NOTREADY,State.DISABLED);
        }
      break;
case NOTREADY:
    if (initialized && tick.isAsserted(Clusters.getConfiguration().getNotreadyInterval())) {
      transition=Automata.sequenceTransitions(this,State.NOTREADY,State.DISABLED);
    }
  break;
case DISABLED:
if (initialized && tick.isAsserted(Clusters.getConfiguration().getDisabledInterval()) && (Component.State.DISABLED.equals(systemState) || Component.State.NOTREADY.equals(systemState))) {
  transition=Automata.sequenceTransitions(this,State.DISABLED,State.DISABLED);
}
 else if (initialized && tick.isAsserted(Clusters.getConfiguration().getDisabledInterval()) && Component.State.ENABLED.equals(systemState)) {
  transition=Automata.sequenceTransitions(this,State.ENABLING,State.ENABLING_RESOURCES,State.ENABLING_NET,State.ENABLING_VMS,State.ENABLING_ADDRS,State.ENABLING_VMS_PASS_TWO,State.ENABLING_ADDRS_PASS_TWO,State.ENABLED);
}
break;
case ENABLED:
if (initialized && tick.isAsserted(Clusters.getConfiguration().getEnabledInterval()) && Component.State.ENABLED.equals(this.configuration.lookupState())) {
transition=Automata.sequenceTransitions(this,State.ENABLED,State.ENABLED_SERVICE_CHECK,State.ENABLED_ADDRS,State.ENABLED_RSC,State.ENABLED_NET,State.ENABLED_VMS,State.ENABLED);
}
 else if (initialized && tick.isAsserted(VmInstances.VOLATILE_STATE_INTERVAL_SEC) && Component.State.ENABLED.equals(this.configuration.lookupState())) {
Refresh.VOLATILE_INSTANCES.apply(this);
}
 else if ((initialized && Component.State.DISABLED.equals(this.configuration.lookupState())) || Component.State.NOTREADY.equals(this.configuration.lookupState())) {
transition=Automata.sequenceTransitions(this,State.ENABLED,State.DISABLED);
}
break;
default :
break;
}
if (transition != null) {
try {
Threads.enqueue(this.configuration,transition);
this.clearExceptions();
}
 catch (final Exception ex) {
LOG.error(ex,ex);
}
}
}
}
 catch (final Exception ex) {
LOG.error(ex,ex);
}
}
