{
  Clusters.getInstance().registerDisabled(this);
  try {
    ListenerRegistry.getInstance().register(ClockTick.class,Cluster.this);
    ListenerRegistry.getInstance().register(Hertz.class,Cluster.this);
  }
 catch (  Exception ex1) {
    LOG.error(ex1,ex1);
  }
  this.configuration.lookupService().getEndpoint().start();
  if (!State.DISABLED.equals(this.stateMachine.getState())) {
    final Callable<CheckedListenableFuture<Cluster>> transition=Automata.sequenceTransitions(Cluster.this,State.PENDING,State.AUTHENTICATING,State.STARTING,State.STARTING_NOTREADY,State.NOTREADY,State.DISABLED);
    Exception error=null;
    for (int i=0; i < Cluster.CLUSTER_STARTUP_SYNC_RETRIES; i++) {
      try {
        try {
          transition.call().get();
          error=null;
          break;
        }
 catch (        Exception ex) {
          LOG.error(ex);
          error=ex;
        }
        TimeUnit.SECONDS.sleep(1);
      }
 catch (      InterruptedException ex) {
        LOG.error(ex,ex);
      }
    }
    if (error != null) {
      this.configuration.info(error);
    }
  }
}
