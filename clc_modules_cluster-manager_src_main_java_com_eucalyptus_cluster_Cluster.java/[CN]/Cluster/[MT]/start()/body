{
  try {
    Clusters.getInstance().registerDisabled(this);
    ListenerRegistry.getInstance().register(ClockTick.class,this);
    ListenerRegistry.getInstance().register(Hertz.class,this);
    if (!State.DISABLED.equals(this.stateMachine.getState())) {
      Automata.sequenceTransitions(this,State.PENDING,State.AUTHENTICATING,State.STARTING,State.STARTING_NOTREADY,State.NOTREADY,State.DISABLED).call().get();
    }
  }
 catch (  InterruptedException ex) {
    Thread.currentThread().interrupt();
  }
catch (  NoSuchElementException ex) {
    this.stop();
    Logs.exhaust().debug(ex,ex);
    throw ex;
  }
catch (  ServiceRegistrationException ex) {
    this.stop();
    Logs.exhaust().debug(ex,ex);
    throw ex;
  }
catch (  Exception ex) {
    this.stop();
    Logs.exhaust().debug(ex,ex);
    throw new ServiceRegistrationException("Failed to call start() on cluster " + this.configuration + " because of: "+ ex.getMessage(),ex);
  }
}
