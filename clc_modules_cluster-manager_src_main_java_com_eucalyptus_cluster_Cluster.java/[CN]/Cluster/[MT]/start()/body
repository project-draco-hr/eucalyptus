{
  Clusters.getInstance().registerDisabled(this);
  try {
    ListenerRegistry.getInstance().register(ClockTick.class,Cluster.this);
    ListenerRegistry.getInstance().register(Hertz.class,Cluster.this);
  }
 catch (  Exception ex1) {
    LOG.error(ex1,ex1);
  }
  if (!State.DISABLED.equals(this.stateMachine.getState())) {
    final Callable<CheckedListenableFuture<Cluster>> transition=Automata.sequenceTransitions(Cluster.this,State.PENDING,State.AUTHENTICATING,State.STARTING,State.STARTING_NOTREADY,State.NOTREADY,State.DISABLED);
    try {
      transition.call().get();
    }
 catch (    Exception ex) {
      Logs.exhaust().error(ex,ex);
      throw new ServiceRegistrationException("Failed to call start() on cluster: " + this.configuration + " because of: "+ ex.getMessage(),ex);
    }
  }
}
