{
  VolumeEntityWrapperManager volumeManager=new VolumeEntityWrapperManager();
  LVMVolumeInfo lvmVolInfo=volumeManager.getVolumeInfo(volumeId);
  if (lvmVolInfo != null) {
    String loDevName=lvmVolInfo.getLoDevName();
    volumeManager.unexportVolume(lvmVolInfo);
    String vgName=lvmVolInfo.getVgName();
    String lvName=lvmVolInfo.getLvName();
    String absoluteLVName=lvmRootDirectory + PATH_SEPARATOR + vgName+ PATH_SEPARATOR+ lvName;
    try {
      String returnValue=removeLogicalVolume(absoluteLVName);
      returnValue=removeVolumeGroup(vgName);
      returnValue=removePhysicalVolume(loDevName);
      removeLoopback(loDevName);
    }
 catch (    ExecutionException ex) {
      volumeManager.abort();
      String error="Unable to run command: " + ex.getMessage();
      LOG.error(error);
    }
    volumeManager.remove(lvmVolInfo);
    File volFile=new File(StorageInfo.getStorageInfo().getVolumesDir() + File.separator + lvmVolInfo.getVolumeId());
    if (volFile.exists()) {
      if (!volFile.delete()) {
        LOG.error("Unable to delete: " + volFile.getAbsolutePath() + " for failed volume");
      }
    }
  }
  volumeManager.finish();
}
