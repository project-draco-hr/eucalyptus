{
  EntityWrapper<ImageCacheInfo> db=new EntityWrapper<ImageCacheInfo>();
  ImageCacheInfo searchImageCacheInfo=new ImageCacheInfo(bucketName,manifestKey);
  List<ImageCacheInfo> imageCacheInfos=db.query(searchImageCacheInfo);
  String decryptedImageKey;
  if (imageCacheInfos.size() != 0) {
    ImageCacheInfo icInfo=imageCacheInfos.get(0);
    if (!icInfo.getInCache()) {
      decryptedImageKey=icInfo.getImageName();
    }
 else {
      db.commit();
      return;
    }
  }
 else {
    decryptedImageKey=decryptImage(bucketName,manifestKey,userId,isAdministrator);
    ImageCacheInfo foundImageCacheInfo=new ImageCacheInfo(bucketName,manifestKey);
    foundImageCacheInfo.setImageName(decryptedImageKey);
    foundImageCacheInfo.setInCache(false);
    foundImageCacheInfo.setUseCount(0);
    foundImageCacheInfo.setSize(0L);
    db.add(foundImageCacheInfo);
  }
  db.commit();
  ImageCacher imageCacher=imageCachers.putIfAbsent(bucketName + manifestKey,new ImageCacher(bucketName,manifestKey,decryptedImageKey));
  if (imageCacher == null) {
    imageCacher=imageCachers.get(bucketName + manifestKey);
    imageCacher.start();
  }
}
