{
  GetObjectAccessControlPolicyResponseType reply=(GetObjectAccessControlPolicyResponseType)request.getReply();
  String bucketName=request.getBucket();
  String objectKey=request.getKey();
  String userId=request.getUserId();
  String ownerId=null;
  EntityWrapper<BucketInfo> db=new EntityWrapper<BucketInfo>();
  BucketInfo bucketInfo=new BucketInfo(bucketName);
  List<BucketInfo> bucketList=db.query(bucketInfo);
  AccessControlListType accessControlList=new AccessControlListType();
  if (bucketList.size() > 0) {
    EntityWrapper<ObjectInfo> dbObject=db.recast(ObjectInfo.class);
    ObjectInfo searchObjectInfo=new ObjectInfo(bucketName,objectKey);
    List<ObjectInfo> objectInfos=dbObject.query(searchObjectInfo);
    if (objectInfos.size() > 0) {
      ObjectInfo objectInfo=objectInfos.get(0);
      if (objectInfo.canReadACP(userId)) {
        ownerId=objectInfo.getOwnerId();
        ArrayList<Grant> grants=new ArrayList<Grant>();
        List<GrantInfo> grantInfos=objectInfo.getGrants();
        for (        GrantInfo grantInfo : grantInfos) {
          String uId=grantInfo.getUserId();
          UserInfo userInfo=new UserInfo(uId);
          EntityWrapper<UserInfo> db2=new EntityWrapper<UserInfo>();
          List<UserInfo> grantUserInfos=db2.query(userInfo);
          db2.commit();
          if (grantUserInfos.size() > 0) {
            objectInfo.readPermissions(grants);
            addPermission(grants,grantUserInfos.get(0),grantInfo);
          }
        }
        accessControlList.setGrants(grants);
      }
 else {
        db.rollback();
        throw new AccessDeniedException(objectKey);
      }
    }
 else {
      db.rollback();
      throw new NoSuchEntityException(objectKey);
    }
  }
 else {
    db.rollback();
    throw new NoSuchBucketException(bucketName);
  }
  UserInfo userInfo=new UserInfo(ownerId);
  EntityWrapper<UserInfo> db2=new EntityWrapper<UserInfo>();
  List<UserInfo> ownerUserInfos=db2.query(userInfo);
  db2.commit();
  AccessControlPolicyType accessControlPolicy=new AccessControlPolicyType();
  if (ownerUserInfos.size() > 0) {
    UserInfo ownerUserInfo=ownerUserInfos.get(0);
    accessControlPolicy.setOwner(new CanonicalUserType(ownerUserInfo.getQueryId(),ownerUserInfo.getUserName()));
    accessControlPolicy.setAccessControlList(accessControlList);
    reply.setAccessControlPolicy(accessControlPolicy);
  }
  db.commit();
  return reply;
}
