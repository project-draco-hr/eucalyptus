{
  ListAllMyBucketsResponseType reply=(ListAllMyBucketsResponseType)request.getReply();
  EntityWrapper<BucketInfo> db=new EntityWrapper<BucketInfo>();
  String userId=request.getUserId();
  if (userId == null) {
    throw new AccessDeniedException("no such user");
  }
  EntityWrapper<UserInfo> db2=new EntityWrapper<UserInfo>();
  UserInfo searchUser=new UserInfo(userId);
  List<UserInfo> userInfoList=db2.query(searchUser);
  if (userInfoList.size() > 0) {
    UserInfo user=userInfoList.get(0);
    BucketInfo searchBucket=new BucketInfo();
    searchBucket.setOwnerId(userId);
    List<BucketInfo> bucketInfoList=db.query(searchBucket);
    ArrayList<BucketListEntry> buckets=new ArrayList<BucketListEntry>();
    for (    BucketInfo bucketInfo : bucketInfoList) {
      buckets.add(new BucketListEntry(bucketInfo.getBucketName(),DateUtils.format(bucketInfo.getCreationDate().getTime(),DateUtils.ISO8601_DATETIME_PATTERN) + ".000Z"));
    }
    CanonicalUserType owner=new CanonicalUserType(user.getQueryId(),user.getUserName());
    ListAllMyBucketsList bucketList=new ListAllMyBucketsList();
    reply.setOwner(owner);
    bucketList.setBuckets(buckets);
    reply.setBucketList(bucketList);
  }
 else {
    db.rollback();
    throw new AccessDeniedException(userId);
  }
  db.commit();
  return reply;
}
