{
  StoreSnapshotResponseType reply=(StoreSnapshotResponseType)request.getReply();
  String snapshotId=request.getKey();
  String bucketName=request.getBucket();
  String snapshotVgName=request.getSnapshotvgname();
  String snapshotLvName=request.getSnapshotlvname();
  boolean createBucket=true;
  EntityWrapper<WalrusSnapshotSet> db=new EntityWrapper<WalrusSnapshotSet>();
  WalrusSnapshotSet snapshotSet=new WalrusSnapshotSet(bucketName);
  List<WalrusSnapshotSet> snapshotSets=db.query(snapshotSet);
  WalrusSnapshotSet foundSnapshotSet;
  if (snapshotSets.size() == 0) {
    foundSnapshotSet=snapshotSet;
    createBucket=true;
    db.add(foundSnapshotSet);
  }
 else {
    foundSnapshotSet=snapshotSets.get(0);
  }
  db.commit();
  String userId=request.getUserId();
  if (createBucket) {
    CreateBucketType createBucketRequest=new CreateBucketType();
    createBucketRequest.setUserId(userId);
    createBucketRequest.setBucket(bucketName);
    try {
      CreateBucket(createBucketRequest);
    }
 catch (    EucalyptusCloudException ex) {
      if (!(ex instanceof BucketAlreadyExistsException || ex instanceof BucketAlreadyOwnedByYouException)) {
        db.rollback();
        throw ex;
      }
    }
  }
  PutObjectType putObjectRequest=new PutObjectType();
  putObjectRequest.setUserId(userId);
  putObjectRequest.setBucket(bucketName);
  putObjectRequest.setKey(snapshotId);
  putObjectRequest.setRandomKey(request.getRandomKey());
  PutObjectResponseType putObjectResponseType=PutObject(putObjectRequest);
  reply.setEtag(putObjectResponseType.getEtag());
  reply.setLastModified(putObjectResponseType.getLastModified());
  reply.setStatusMessage(putObjectResponseType.getStatusMessage());
  return reply;
}
