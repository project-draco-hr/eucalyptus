{
  DeleteWalrusSnapshotResponseType reply=(DeleteWalrusSnapshotResponseType)request.getReply();
  if (!enableSnapshots) {
    LOG.warn("Snapshots not enabled. Please check pre-conditions and restart Walrus.");
    return reply;
  }
  String snapshotId=request.getKey();
  EntityWrapper<WalrusSnapshotInfo> db=new EntityWrapper<WalrusSnapshotInfo>();
  WalrusSnapshotInfo snapshotInfo=new WalrusSnapshotInfo(snapshotId);
  List<WalrusSnapshotInfo> snapshotInfos=db.query(snapshotInfo);
  ArrayList<String> vgNames=new ArrayList<String>();
  ArrayList<String> lvNames=new ArrayList<String>();
  ArrayList<String> snapIdsToDelete=new ArrayList<String>();
  reply.set_return(true);
  if (snapshotInfos.size() > 0) {
    WalrusSnapshotInfo foundSnapshotInfo=snapshotInfos.get(0);
    if (!foundSnapshotInfo.getTransferred()) {
      db.rollback();
      throw new SnapshotInUseException(snapshotId);
    }
    String snapshotSetId=foundSnapshotInfo.getSnapshotSetId();
    EntityWrapper<WalrusSnapshotSet> dbSet=db.recast(WalrusSnapshotSet.class);
    WalrusSnapshotSet snapshotSetInfo=new WalrusSnapshotSet(snapshotSetId);
    List<WalrusSnapshotSet> snapshotSetInfos=dbSet.query(snapshotSetInfo);
    if (snapshotSetInfos.size() > 0) {
      WalrusSnapshotSet foundSnapshotSetInfo=snapshotSetInfos.get(0);
      String bucketName=foundSnapshotSetInfo.getSnapshotSetId();
      List<WalrusSnapshotInfo> snapshotSet=foundSnapshotSetInfo.getSnapshotSet();
      ArrayList<String> snapshotIds=new ArrayList<String>();
      WalrusSnapshotInfo snapshotSetSnapInfo=null;
      for (      WalrusSnapshotInfo snapInfo : snapshotSet) {
        String snapId=snapInfo.getSnapshotId();
        snapshotIds.add(snapId);
        if (snapId.equals(foundSnapshotInfo.getSnapshotId())) {
          snapshotSetSnapInfo=snapInfo;
        }
      }
      db.delete(foundSnapshotInfo);
      vgNames.add(foundSnapshotInfo.getVgName());
      lvNames.add(foundSnapshotInfo.getLvName());
      snapIdsToDelete.add(foundSnapshotInfo.getSnapshotId());
      if (snapshotSetSnapInfo != null) {
        snapshotSet.remove(snapshotSetSnapInfo);
        if (snapshotSet.size() == 1) {
          WalrusSnapshotInfo snapZeroInfo=snapshotSet.get(0);
          if (snapZeroInfo.getSnapshotId().startsWith("vol")) {
            snapshotSet.remove(snapZeroInfo);
            dbSet.delete(foundSnapshotSetInfo);
            snapZeroInfo=new WalrusSnapshotInfo(snapZeroInfo.getSnapshotId());
            WalrusSnapshotInfo foundVolInfo=db.getUnique(snapZeroInfo);
            db.delete(foundVolInfo);
            vgNames.add(foundVolInfo.getVgName());
            lvNames.add(foundVolInfo.getLvName());
            snapIdsToDelete.add(foundVolInfo.getSnapshotId());
          }
        }
      }
      SnapshotDeleter snapshotDeleter=new SnapshotDeleter(bucketName,snapIdsToDelete,vgNames,lvNames,snapshotIds);
      snapshotDeleter.start();
    }
 else {
      db.rollback();
      throw new NoSuchSnapshotException(snapshotId);
    }
  }
  db.commit();
  return reply;
}
