{
  EntityWrapper<ImageInfo> db=EntityWrapper.get(ImageInfo.class);
  List<ImageDetails> repList=Lists.newArrayList();
  if (owners.remove("self"))   owners.add(user.getId());
  try {
    for (    String userName : owners) {
      Iterable<ImageInfo> results=Iterables.filter(db.query(Images.exampleWithOwnerAccountId(user.getAccount().getId())),new Predicate<ImageInfo>(){
        @Override public boolean apply(        ImageInfo arg0){
          return (imgList.isEmpty() || imgList.contains(arg0)) && (arg0.getImagePublic() || arg0.isAllowed(user));
        }
      }
);
      repList.addAll(Lists.transform(Lists.newArrayList(results),Images.TO_IMAGE_DETAILS));
    }
    db.commit();
  }
 catch (  Throwable e) {
    LOG.debug(e,e);
    db.rollback();
  }
  return repList;
}
