{
  this.allocInfo=allocInfo;
  final EntityTransaction db=Entities.get(VmInstance.class);
  try {
    this.cluster=Clusters.lookup(Topology.lookup(ClusterController.class,allocInfo.getPartition()));
    this.messages=new StatefulMessageSet<State>(this.cluster,State.values());
    this.setupNetworkMessages();
    this.setupVolumeMessages();
    db.commit();
  }
 catch (  final Exception e) {
    db.rollback();
    LOG.error(e);
    Logs.extreme().error(e,e);
    this.allocInfo.abort();
    for (    final ResourceToken token : allocInfo.getAllocationTokens()) {
      try {
        final VmInstance vm=VmInstances.lookup(token.getInstanceId());
        if (VmState.STOPPED.equals(vm.getLastState())) {
          VmInstances.stopped(vm);
        }
 else {
          VmInstances.terminated(vm);
          VmInstances.terminated(vm);
        }
      }
 catch (      final Exception e1) {
        LOG.error(e1);
        Logs.extreme().error(e1,e1);
      }
    }
    return;
  }
  try {
    for (    final ResourceToken token : allocInfo.getAllocationTokens()) {
      this.setupVmMessages(token);
    }
  }
 catch (  final Exception e) {
    LOG.error(e);
    Logs.extreme().error(e,e);
    this.allocInfo.abort();
    for (    final ResourceToken token : allocInfo.getAllocationTokens()) {
      try {
        final VmInstance vm=VmInstances.lookup(token.getInstanceId());
        VmInstances.terminated(vm);
        VmInstances.terminated(vm);
      }
 catch (      final Exception e1) {
        LOG.error(e1);
        Logs.extreme().error(e1,e1);
      }
    }
  }
}
