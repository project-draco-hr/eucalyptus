{
  VmTypeInfo childVmInfo=vmInfo;
  if (root.isBlockStorage()) {
    childVmInfo=vmInfo.child();
    final Volume vol=token.getRootVolume();
    final ServiceConfiguration scConfig=Topology.lookup(Storage.class,Partitions.lookupByName(vol.getPartition()));
    int numDescVolError=0;
    int i=0;
    for (i=0; i < VmInstances.EBS_VOLUME_CREATION_TIMEOUT * 60; i++) {
      try {
        DescribeStorageVolumesResponseType volState=null;
        try {
          final DescribeStorageVolumesType describeMsg=new DescribeStorageVolumesType(Lists.newArrayList(vol.getDisplayName()));
          volState=AsyncRequests.sendSync(scConfig,describeMsg);
        }
 catch (        final Exception e) {
          if (numDescVolError++ < 5) {
            try {
              TimeUnit.SECONDS.sleep(1);
            }
 catch (            final InterruptedException ex) {
              Thread.currentThread().interrupt();
            }
            continue;
          }
 else           throw e;
        }
        if ("available".equals(volState.getVolumeSet().get(0).getStatus())) {
          break;
        }
 else         if ("failed".equals(volState.getVolumeSet().get(0).getStatus())) {
          throw new EucalyptusCloudException("volume creation failed");
        }
 else {
          TimeUnit.SECONDS.sleep(1);
        }
      }
 catch (      final InterruptedException ex) {
        Thread.currentThread().interrupt();
      }
catch (      final Exception ex) {
        LOG.error(ex,ex);
        throw ex;
      }
    }
    if (i >= VmInstances.EBS_VOLUME_CREATION_TIMEOUT * 60)     throw new EucalyptusCloudException("volume " + vol.getDisplayName() + " was not created in time");
    for (    final String nodeTag : this.cluster.getNodeTags()) {
      try {
        final AttachStorageVolumeType attachMsg=new AttachStorageVolumeType(this.cluster.getNode(nodeTag).getIqn(),vol.getDisplayName());
        final AttachStorageVolumeResponseType scAttachResponse=AsyncRequests.sendSync(scConfig,attachMsg);
        childVmInfo.lookupRoot().setResourceLocation(scAttachResponse.getRemoteDeviceString());
      }
 catch (      final Exception ex) {
        LOG.error(ex,ex);
        throw ex;
      }
    }
  }
  return childVmInfo;
}
