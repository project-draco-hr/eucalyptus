{
  final SshKeyPair keyPair=this.allocInfo.getSshKeyPair();
  final VmKeyInfo vmKeyInfo=new VmKeyInfo(keyPair.getName(),keyPair.getPublicKey(),keyPair.getFingerPrint());
  final String platform=this.allocInfo.getBootSet().getMachine().getPlatform().name() != null ? this.allocInfo.getBootSet().getMachine().getPlatform().name() : "linux";
  final VmRunType run=VmRunType.builder().instanceId(childToken.getInstanceId()).naturalId(childToken.getInstanceUuid()).keyInfo(vmKeyInfo).launchIndex(childToken.getLaunchIndex()).networkIndex(childToken.getNetworkIndex().getIndex()).networkNames(this.allocInfo.getNetworkGroups()).platform(platform).reservationId(childToken.getAllocationInfo().getReservationId()).userData(this.allocInfo.getRequest().getUserData()).vlan(childToken.getExtantNetwork() != null ? childToken.getExtantNetwork().getTag() : new Integer(-1)).vmTypeInfo(vmInfo).owner(this.allocInfo.getOwnerFullName()).create();
  return new VmRunCallback(run,childToken);
}
