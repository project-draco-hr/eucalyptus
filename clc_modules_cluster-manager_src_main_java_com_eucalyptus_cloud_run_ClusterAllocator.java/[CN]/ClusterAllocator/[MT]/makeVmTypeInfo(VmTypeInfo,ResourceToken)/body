{
  VmTypeInfo childVmInfo=vmInfo.child();
  if (this.allocInfo.getBootSet().getMachine() instanceof BlockStorageImageInfo) {
    String instanceId=token.getInstanceId();
    VirtualBootRecord rootVbr=childVmInfo.lookupRoot();
    Volume rootVolume=token.getRootVolume();
    LOG.debug("Wait for root ebs volume " + rootVolume.getDisplayName() + " to become available");
    final ServiceConfiguration scConfig=waitForVolume(rootVolume);
    try {
      LOG.debug("About to attach volume " + rootVolume.getDisplayName() + " to instance "+ instanceId);
      AttachStorageVolumeType attachMsg=new AttachStorageVolumeType(Nodes.lookupIqns(this.cluster.getConfiguration()),rootVolume.getDisplayName());
      final AttachStorageVolumeResponseType scAttachResponse=AsyncRequests.sendSync(scConfig,attachMsg);
      LOG.debug("Attach response from SC for volume " + rootVolume.getDisplayName() + " and instance "+ instanceId+ "\n"+ scAttachResponse);
      String remoteDeviceString=scAttachResponse.getRemoteDeviceString();
      if (remoteDeviceString == null) {
        throw new EucalyptusCloudException("Failed to get remote device string for root volume " + rootVolume.getDisplayName() + " while running instance "+ instanceId);
      }
 else {
        rootVbr.setResourceLocation(remoteDeviceString);
        rootVbr.setSize(rootVolume.getSize() * BYTES_PER_GB);
      }
    }
 catch (    final Exception ex) {
      LOG.error(ex);
      Logs.extreme().error(ex,ex);
      throw ex;
    }
    for (    Entry<String,Volume> mapping : token.getEbsVolumes().entrySet()) {
      Volume volume=mapping.getValue();
      if (volume.getSize() <= 0) {
        volume=Volumes.lookup(this.allocInfo.getOwnerFullName(),mapping.getValue().getDisplayName());
      }
      String volumeId=volume.getDisplayName();
      LOG.debug("Wait for volume " + volumeId + " to become available");
      final ServiceConfiguration scConfigLocal=waitForVolume(volume);
      try {
        LOG.debug("About to attach volume " + volume.getDisplayName() + " to instance "+ instanceId);
        AttachStorageVolumeType attachMsg=new AttachStorageVolumeType(Nodes.lookupIqns(this.cluster.getConfiguration()),volumeId);
        final AttachStorageVolumeResponseType scAttachResponse=AsyncRequests.sendSync(scConfigLocal,attachMsg);
        LOG.debug("Attach response from SC for volume " + volumeId + " and instance "+ instanceId+ scAttachResponse);
        String remoteDeviceString=scAttachResponse.getRemoteDeviceString();
        if (remoteDeviceString == null) {
          throw new EucalyptusCloudException("Failed to get remote device string for root volume " + volumeId + " while running instance "+ instanceId);
        }
 else {
          VirtualBootRecord vbr=new VirtualBootRecord(volumeId,remoteDeviceString,"ebs",mapping.getKey(),(volume.getSize() * BYTES_PER_GB),"none");
          childVmInfo.getVirtualBootRecord().add(vbr);
        }
      }
 catch (      final Exception ex) {
        LOG.error(ex);
        Logs.extreme().error(ex,ex);
        throw ex;
      }
    }
    for (    String deviceName : token.getEphemeralDisks().keySet()) {
      childVmInfo.setEphemeral(0,deviceName,(this.allocInfo.getVmType().getDisk() * BYTES_PER_GB),"none");
    }
    LOG.debug("Instance information: " + childVmInfo.dump());
  }
  return childVmInfo;
}
