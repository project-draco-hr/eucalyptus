{
  try {
    if (EventRecord.isDebugEnabled(ClusterAllocator.class)) {
      EventRecord.here(ClusterAllocator.class,EventType.VM_PREPARE,LogUtil.dumpObject(allocInfo)).debug();
    }
    final ServiceConfiguration config=Topology.lookup(ClusterController.class,allocInfo.getPartition());
    final Callable<Boolean> runnable=new Callable<Boolean>(){
      @Override public Boolean call(){
        try {
          new ClusterAllocator(allocInfo,config).run();
        }
 catch (        final Exception ex) {
          LOG.error("Failed to prepare allocator for: " + allocInfo.getAllocationTokens(),ex);
        }
        return Boolean.TRUE;
      }
    }
;
    BaseMessage baseReq=null;
    for (    final String instId : allocInfo.getInstanceIds()) {
      baseReq=MessageContexts.lookupLast(instId,Sets.<Class>newHashSet(RunInstancesType.class,StartInstancesType.class));
      if (baseReq != null)       break;
    }
    Threads.enqueue(config,SubmitAllocation.class,32,runnable,baseReq == null ? null : baseReq.getCorrelationId());
    return true;
  }
 catch (  final Exception ex) {
    throw Exceptions.toUndeclared(ex);
  }
}
