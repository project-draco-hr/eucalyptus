{
  checkParam(this.address,notNullValue());
  checkParam(this.path,notNullValue());
  if (this.scheme == null)   this.scheme=BasicTransport.HTTP;
  if (this.port == null)   this.port=this.componentId.getPort();
  if (this.internal)   this.path=this.componentId.getInternalServicePath(this.path);
  String schemeString=StackConfiguration.DEFAULT_HTTPS_ENABLED ? this.scheme.getSecureScheme() : this.scheme.getScheme();
  String hostNameString=this.componentId.isPublicService() ? (StackConfiguration.USE_DNS_DELEGATION ? this.componentId.name() + "." + StackConfiguration.lookupDnsDomain() : this.address.getHostAddress()) : this.address.getHostAddress();
  String pathString=this.componentId.isPublicService() ? (StackConfiguration.USE_DNS_DELEGATION ? "/" : "/" + this.path) : "/" + this.path;
  try {
    URI u=new URI(schemeString,null,hostNameString,this.port,(pathString).replaceAll("^//","/"),Lexemes.QUERY.format(this.query),null);
    u.parseServerAuthority();
    return u;
  }
 catch (  URISyntaxException e) {
    throw new RuntimeException("Failed to construct URI: " + this.toString() + " because of: "+ e,e);
  }
}
