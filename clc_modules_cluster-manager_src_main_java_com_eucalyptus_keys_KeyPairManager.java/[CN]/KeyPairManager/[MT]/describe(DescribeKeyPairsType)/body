{
  final DescribeKeyPairsResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final boolean showAll=request.getKeySet().remove("verbose");
  final OwnerFullName ownerFullName=ctx.hasAdministrativePrivileges() && showAll ? null : Contexts.lookup().getUserFullName().asAccountFullName();
  final Filter filter=Filters.generate(request.getFilterSet(),SshKeyPair.class);
  final Predicate<? super SshKeyPair> requestedAndAccessible=CloudMetadatas.filteringFor(SshKeyPair.class).byId(request.getKeySet()).byPredicate(filter.asPredicate()).byPrivileges().buildPredicate();
  for (  final SshKeyPair kp : KeyPairs.list(ownerFullName,requestedAndAccessible,filter.asCriterion(),filter.getAliases())) {
    reply.getKeySet().add(new DescribeKeyPairsResponseItemType(kp.getDisplayName(),kp.getFingerPrint()));
  }
  return reply;
}
