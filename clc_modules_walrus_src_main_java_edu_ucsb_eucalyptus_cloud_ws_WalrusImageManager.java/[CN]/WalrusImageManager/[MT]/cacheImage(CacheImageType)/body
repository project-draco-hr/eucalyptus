{
  CacheImageResponseType reply=(CacheImageResponseType)request.getReply();
  reply.setSuccess(false);
  String bucketName=request.getBucket();
  String manifestKey=request.getKey();
  String userId=request.getUserId();
  User user=Contexts.lookup().getUser();
  EntityWrapper<BucketInfo> db=WalrusControl.getEntityWrapper();
  BucketInfo bucketInfo=new BucketInfo(bucketName);
  List<BucketInfo> bucketList=db.query(bucketInfo);
  if (bucketList.size() > 0) {
    EntityWrapper<ObjectInfo> dbObject=db.recast(ObjectInfo.class);
    ObjectInfo searchObjectInfo=new ObjectInfo(bucketName,manifestKey);
    List<ObjectInfo> objectInfos=dbObject.query(searchObjectInfo);
    if (objectInfos.size() > 0) {
      ObjectInfo objectInfo=objectInfos.get(0);
      if (objectInfo.canRead(user)) {
        EntityWrapper<ImageCacheInfo> db2=WalrusControl.getEntityWrapper();
        ImageCacheInfo searchImageCacheInfo=new ImageCacheInfo(bucketName,manifestKey);
        List<ImageCacheInfo> foundImageCacheInfos=db2.query(searchImageCacheInfo);
        db2.commit();
        if ((foundImageCacheInfos.size() == 0) || (!imageCachers.containsKey(bucketName + manifestKey))) {
          cacheImage(bucketName,manifestKey,user,Contexts.lookup().hasAdministrativePrivileges());
          reply.setSuccess(true);
        }
        db.commit();
        return reply;
      }
 else {
        db.rollback();
        throw new AccessDeniedException("Key",manifestKey);
      }
    }
 else {
      db.rollback();
      throw new NoSuchEntityException(manifestKey);
    }
  }
 else {
    db.rollback();
    throw new NoSuchBucketException(bucketName);
  }
}
