{
  try {
    VolumeEntityWrapperManager volumeManager=new VolumeEntityWrapperManager();
    List<LVMVolumeInfo> volumes=volumeManager.getAllVolumeInfos();
    volumeManager.abort();
    for (    LVMVolumeInfo foundLVMVolumeInfo : volumes) {
      if (foundLVMVolumeInfo.getCleanup()) {
        try {
          exportManager.cleanup(foundLVMVolumeInfo);
        }
 catch (        EucalyptusCloudException ee) {
          LOG.error(ee,ee);
          continue;
        }
        String loDevName=foundLVMVolumeInfo.getLoDevName();
        if (loDevName != null) {
          String vgName=foundLVMVolumeInfo.getVgName();
          String lvName=foundLVMVolumeInfo.getLvName();
          String absoluteLVName=lvmRootDirectory + PATH_SEPARATOR + vgName+ PATH_SEPARATOR+ lvName;
          LVMVolumeInfo volumeInfo=new LVMVolumeInfo();
          volumeInfo.setSnapshotOf(foundLVMVolumeInfo.getVolumeId());
          volumeInfo.setStatus(StorageProperties.Status.pending.toString());
          volumeManager=new VolumeEntityWrapperManager();
          LVMVolumeInfo snapshotInfo=volumeManager.getVolumeInfo(volumeInfo);
          if (snapshotInfo == null) {
            LOG.info("Detaching loop device: " + loDevName);
            try {
              disableLogicalVolume(absoluteLVName);
              removeLoopback(loDevName);
              foundLVMVolumeInfo.setLoDevName(null);
            }
 catch (            EucalyptusCloudException e) {
              LOG.error(e,e);
            }
          }
 else {
            LOG.info("Snapshot: " + snapshotInfo.getVolumeId() + " in progress. Not detaching loop device.");
          }
          foundLVMVolumeInfo.setCleanup(false);
          volumeManager.finish();
        }
      }
    }
  }
 catch (  Exception ex) {
    LOG.error(ex,ex);
  }
}
