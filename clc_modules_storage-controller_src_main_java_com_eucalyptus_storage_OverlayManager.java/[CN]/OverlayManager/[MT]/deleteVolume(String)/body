{
  VolumeEntityWrapperManager volumeManager=new VolumeEntityWrapperManager();
  LVMVolumeInfo foundLVMVolumeInfo=volumeManager.getVolumeInfo(volumeId);
  if (foundLVMVolumeInfo != null) {
    String loDevName=foundLVMVolumeInfo.getLoDevName();
    String vgName=foundLVMVolumeInfo.getVgName();
    String lvName=foundLVMVolumeInfo.getLvName();
    String absoluteLVName=lvmRootDirectory + PATH_SEPARATOR + vgName+ PATH_SEPARATOR+ lvName;
    volumeManager.unexportVolume(foundLVMVolumeInfo);
    try {
      String returnValue;
      deleteLogicalVolume(loDevName,vgName,absoluteLVName);
      removeLoopback(loDevName);
      if (getLoopback(loDevName).length() != 0) {
        throw new EucalyptusCloudException("Unable to remove loopback device: " + loDevName);
      }
 else {
        LOG.info(loDevName + "was removed.");
      }
      volumeManager.remove(foundLVMVolumeInfo);
      volumeManager.finish();
      File volFile=new File(DirectStorageInfo.getStorageInfo().getVolumesDir() + File.separator + volumeId);
      if (volFile.exists()) {
        if (!volFile.delete()) {
          LOG.error("Unable to delete: " + volFile.getAbsolutePath());
        }
      }
    }
 catch (    EucalyptusCloudException ex) {
      volumeManager.abort();
      String error="Unable to run command: " + ex.getMessage();
      LOG.error(error);
      throw new EucalyptusCloudException(error);
    }
  }
 else {
    volumeManager.abort();
    throw new EucalyptusCloudException("Unable to find volume: " + volumeId);
  }
}
