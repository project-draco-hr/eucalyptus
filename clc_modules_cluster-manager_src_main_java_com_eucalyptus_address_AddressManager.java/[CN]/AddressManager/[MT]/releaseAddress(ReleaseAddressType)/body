{
  final ReleaseAddressResponseType reply=request.getReply().markFailed();
  if (request.getPublicIp() == null && request.getAllocationId() == null) {
    throw new ClientComputeException("MissingParameter","PublicIp or AllocationId required");
  }
  final String allocationId=ResourceIdentifiers.tryNormalize().apply(request.getAllocationId());
  final Address address;
  try {
    address=RestrictedTypes.doPrivileged(Objects.firstNonNull(request.getPublicIp(),allocationId),Address.class);
  }
 catch (  NoSuchElementException e) {
    if (request.getAllocationId() != null) {
      throw new ClientComputeException("InvalidAddressID.NotFound","Address not found for allocation (" + request.getAllocationId() + ")");
    }
    throw e;
  }
  try {
    addresses.release(address,address.getDomain() == AddressDomain.vpc ? allocationId != null ? allocationId : address.getAllocationId() : null);
  }
 catch (  IllegalStateException e) {
    throw new ClientComputeException("InvalidIPAddress.InUse","Address (" + address.getName() + ") in use ("+ address.getNetworkInterfaceId()+ ")");
  }
  reply.set_return(true);
  return reply;
}
