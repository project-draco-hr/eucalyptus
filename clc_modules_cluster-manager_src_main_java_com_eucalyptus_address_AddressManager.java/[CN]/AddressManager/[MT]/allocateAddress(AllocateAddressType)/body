{
  final AllocateAddressResponseType reply=request.getReply();
  try {
    final Address.Domain domain=Optional.fromNullable(request.getDomain()).transform(Enums.valueOfFunction(Address.Domain.class)).or(Address.Domain.standard);
    final Addresses.Allocator allocator=Addresses.allocator(domain);
    final Address address=RestrictedTypes.allocateNamedUnitlessResources(1,allocator,allocator).get(0);
    reply.setPublicIp(address.getName());
switch (domain) {
case vpc:
      reply.setAllocationId(address.getAllocationId());
default :
    reply.setDomain(domain.name());
  break;
}
}
 catch (final RuntimeException e) {
if (e.getCause() != null) {
throw new EucalyptusCloudException(e.getCause());
}
 else {
throw new EucalyptusCloudException("couldn't allocate addresses");
}
}
LOG.debug(reply.toSimpleString());
return reply;
}
