{
  final VmTypeInfo vmTypeInfo=VmTypes.asVmTypeInfo(vmType,this.getMachine());
  try {
    if (this.isLinux()) {
      if (this.hasKernel()) {
        String manifestLocation=this.getKernelDownloadManifest(partition.getNodeCertificate().getPublicKey(),partition.getName());
        vmTypeInfo.setKernel(this.getKernel().getDisplayName(),manifestLocation,this.getKernel().getImageSizeBytes());
      }
      if (this.hasRamdisk()) {
        String manifestLocation=this.getRamdiskDownloadManifest(partition.getNodeCertificate().getPublicKey(),partition.getName());
        vmTypeInfo.setRamdisk(this.getRamdisk().getDisplayName(),manifestLocation,this.getRamdisk().getImageSizeBytes());
      }
    }
    if (this.getMachine() instanceof StaticDiskImage) {
      StaticDiskImage diskImage=(StaticDiskImage)this.getMachine();
      if (!Strings.isNullOrEmpty(diskImage.getManifestHash()) && !diskImage.getManifestHash().equals(ImageManifests.getManifestHash(diskImage.getManifestLocation())))       throw new MetadataException("Instance manifest was changed after registration");
      String manifestLocation=this.getImageDownloadManifest(partition.getNodeCertificate().getPublicKey(),partition.getName());
      vmTypeInfo.setRoot(diskImage.getDisplayName(),manifestLocation,this.getMachine().getImageSizeBytes());
    }
  }
 catch (  Exception ex) {
    throw new MetadataException(ex);
  }
  return vmTypeInfo;
}
