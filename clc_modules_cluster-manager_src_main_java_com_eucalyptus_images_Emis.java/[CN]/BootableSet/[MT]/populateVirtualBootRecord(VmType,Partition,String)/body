{
  final VmTypeInfo vmTypeInfo=VmTypes.asVmTypeInfo(vmType,this.getMachine());
  try {
    if (this.isLinux()) {
      if (this.hasKernel()) {
        String manifestLocation=DownloadManifestFactory.generateDownloadManifest(new ImageManifestFile(this.getKernel().getManifestLocation(),BundleImageManifest.INSTANCE),partition.getNodeCertificate().getPublicKey(),this.getKernel().getDisplayName() + "-" + reservationId,true);
        vmTypeInfo.setKernel(this.getKernel().getDisplayName(),manifestLocation,this.getKernel().getImageSizeBytes());
      }
      if (this.hasRamdisk()) {
        String manifestLocation=DownloadManifestFactory.generateDownloadManifest(new ImageManifestFile(this.getRamdisk().getManifestLocation(),BundleImageManifest.INSTANCE),partition.getNodeCertificate().getPublicKey(),this.getRamdisk().getDisplayName() + "-" + reservationId,true);
        vmTypeInfo.setRamdisk(this.getRamdisk().getDisplayName(),manifestLocation,this.getKernel().getImageSizeBytes());
      }
    }
    if (this.getMachine() instanceof StaticDiskImage) {
      final MachineImageInfo emi=LookupMachine.INSTANCE.apply(this.getMachine().getDisplayName());
      String manifestLocation=null;
      if (ImageMetadata.State.pending_available.equals(emi.getState())) {
        manifestLocation=DownloadManifestFactory.generatePresignedUrl(reservationId);
        Images.setImageState(emi.getDisplayName(),ImageMetadata.State.pending_conversion);
      }
 else       if (ImageMetadata.State.pending_conversion.equals(emi.getState())) {
        manifestLocation=DownloadManifestFactory.generatePresignedUrl(reservationId);
      }
 else {
        manifestLocation=DownloadManifestFactory.generateDownloadManifest(new ImageManifestFile(((StaticDiskImage)this.getMachine()).getRunManifestLocation(),BundleImageManifest.INSTANCE),partition.getNodeCertificate().getPublicKey(),reservationId,true);
      }
      vmTypeInfo.setRoot(this.getMachine().getDisplayName(),manifestLocation,this.getMachine().getImageSizeBytes());
    }
  }
 catch (  DownloadManifestException ex) {
    throw new MetadataException(ex);
  }
catch (  Exception ex) {
    throw new MetadataException(ex);
  }
  return vmTypeInfo;
}
