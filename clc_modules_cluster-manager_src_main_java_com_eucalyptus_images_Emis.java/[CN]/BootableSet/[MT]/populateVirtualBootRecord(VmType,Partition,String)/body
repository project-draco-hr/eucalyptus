{
  final VmTypeInfo vmTypeInfo=VmTypes.asVmTypeInfo(vmType,this.getMachine());
  try {
    if (this.isLinux()) {
      if (this.hasKernel()) {
        String manifestLocation=DownloadManifestFactory.generateDownloadManifest(new ImageManifestFile(this.getKernel().getManifestLocation(),BundleImageManifest.INSTANCE),partition.getNodeCertificate().getPublicKey(),this.getKernel().getDisplayName());
        vmTypeInfo.setKernel(this.getKernel().getDisplayName(),manifestLocation);
      }
      if (this.hasRamdisk()) {
        String manifestLocation=DownloadManifestFactory.generateDownloadManifest(new ImageManifestFile(this.getRamdisk().getManifestLocation(),BundleImageManifest.INSTANCE),partition.getNodeCertificate().getPublicKey(),this.getRamdisk().getDisplayName());
        vmTypeInfo.setRamdisk(this.getRamdisk().getDisplayName(),manifestLocation);
      }
    }
    if (this.getMachine() instanceof StaticDiskImage) {
      String manifestLocation=DownloadManifestFactory.generateDownloadManifest(new ImageManifestFile(((StaticDiskImage)this.getMachine()).getManifestLocation(),BundleImageManifest.INSTANCE),partition.getNodeCertificate().getPublicKey(),instanceId);
      vmTypeInfo.setRoot(this.getMachine().getDisplayName(),manifestLocation,this.getMachine().getImageSizeBytes());
    }
  }
 catch (  DownloadManifestException ex) {
    throw new MetadataException(ex);
  }
  return vmTypeInfo;
}
