{
  final VmTypeInfo vmTypeInfo=VmTypes.asVmTypeInfo(vmType,this.getMachine());
  if (this.isLinux()) {
    if (this.hasKernel()) {
      vmTypeInfo.setKernel(this.getKernel().getDisplayName(),this.getKernel().getManifestLocation());
    }
    if (this.hasRamdisk()) {
      vmTypeInfo.setRamdisk(this.getRamdisk().getDisplayName(),this.getRamdisk().getManifestLocation());
    }
  }
  if (this.getMachine() instanceof StaticDiskImage) {
    try {
      VirtualBootRecord root=vmTypeInfo.lookupRoot();
      String manifestLocation=DownloadManifestFactory.generateDownloadManifest(new ImageManifestFile(((StaticDiskImage)this.getMachine()).getManifestLocation(),BundleImageManifest.INSTANCE),partition.getNodeCertificate().getPublicKey(),instanceId,3);
      LOG.info("Download manifest URL is " + manifestLocation);
    }
 catch (    DownloadManifestException ex) {
      throw new MetadataException(ex);
    }
  }
  return vmTypeInfo;
}
