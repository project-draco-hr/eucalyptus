{
  final Function<String,BootableSet> create=new Function<String,BootableSet>(){
    @Override public BootableSet apply(    final String input){
      final BootableSet b=BootsetFromId.INSTANCE.apply(BootsetBuilder.this.imageId);
      try {
        final KernelImageInfo kernel=(BootsetBuilder.this.kernelId == null ? null : LookupKernel.INSTANCE.apply(BootsetBuilder.this.kernelId));
        final RamdiskImageInfo ramdisk=(BootsetBuilder.this.ramdiskId == null ? null : LookupRamdisk.INSTANCE.apply(BootsetBuilder.this.ramdiskId));
        if ((kernel != null) && (ramdisk != null)) {
          return new TrifectaBootableSet(b.getMachine(),kernel,ramdisk);
        }
 else         if (kernel != null) {
          return new NoRamdiskBootableSet(b.getMachine(),kernel);
        }
 else {
          return b;
        }
      }
 catch (      NoSuchElementException e) {
        throw Exceptions.toUndeclared(new NoSuchMetadataException(e.getMessage(),e));
      }
    }
  }
;
  return this.prepareBootset(create);
}
