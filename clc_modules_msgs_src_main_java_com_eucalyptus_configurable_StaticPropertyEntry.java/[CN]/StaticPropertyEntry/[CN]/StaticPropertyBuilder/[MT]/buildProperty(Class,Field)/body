{
  if (c.isAnnotationPresent(ConfigurableClass.class) && field.isAnnotationPresent(ConfigurableField.class)) {
    ConfigurableClass classAnnote=(ConfigurableClass)c.getAnnotation(ConfigurableClass.class);
    ConfigurableField annote=(ConfigurableField)field.getAnnotation(ConfigurableField.class);
    String description=annote.description();
    String defaultValue=annote.initial();
    String fq=qualifiedName(c,field);
    String fqPrefix=fq.replaceAll("\\..*","");
    PropertyTypeParser p=PropertyTypeParser.get(field.getType());
    ConfigurableProperty entry=null;
    int modifiers=field.getModifiers();
    if (Modifier.isPublic(modifiers) && Modifier.isStatic(modifiers)) {
      entry=new StaticPropertyEntry(c,fqPrefix,field,description,defaultValue,p,annote.readonly(),annote.displayName(),annote.type());
      entry.setValue(defaultValue);
      return entry;
    }
  }
  return null;
}
