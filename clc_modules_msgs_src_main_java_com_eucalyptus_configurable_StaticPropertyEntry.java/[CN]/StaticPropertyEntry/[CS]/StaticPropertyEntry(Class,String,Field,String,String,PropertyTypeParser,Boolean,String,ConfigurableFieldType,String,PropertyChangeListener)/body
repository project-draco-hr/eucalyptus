{
  super(definingClass,entrySetName,field,defaultValue,description,typeParser,readOnly,displayName,widgetType,alias,changeListener);
  this.field=field;
  if (this.field.getType().isPrimitive()) {
    throw new CoderMalfunctionError(new UnsupportedDataTypeException("Unsupported usage of @Configurable on a primitive field: " + field.getDeclaringClass() + "."+ field.getName()));
  }
}
