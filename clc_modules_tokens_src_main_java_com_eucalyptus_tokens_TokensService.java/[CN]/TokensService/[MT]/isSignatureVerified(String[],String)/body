{
  final JSONObject keys=JSONObject.fromObject(jwkText);
  final JSONObject keyData=(JSONObject)((JSONArray)keys.get("keys")).get(0);
  final String jwks_n=(String)(keyData).get("n");
  final String jwks_e=(String)(keyData).get("e");
  final String jwks_alg=(String)(keyData).get("alg");
  final BigInteger modulus=new BigInteger(1,Base64.decodeBase64(jwks_n));
  final BigInteger publicExponent=new BigInteger(1,Base64.decodeBase64(jwks_e));
  final PublicKey key=KeyFactory.getInstance("RSA").generatePublic(new RSAPublicKeySpec(modulus,publicExponent));
  final byte[] sigBytes=new Base64(true).decode(jwtParts[2]);
  final byte[] bytesToSign=(jwtParts[0] + "." + jwtParts[1]).getBytes();
  final Signature sig=Signature.getInstance("SHA512withRSA","BC");
  sig.initVerify(key);
  sig.update(bytesToSign);
  return !sig.verify(sigBytes);
}
