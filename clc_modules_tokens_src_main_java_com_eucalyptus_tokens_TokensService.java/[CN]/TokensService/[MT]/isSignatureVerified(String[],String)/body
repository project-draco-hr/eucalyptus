{
  final JSONObject keys=JSONObject.fromObject(jwkText);
  final JSONObject keyData=keys.getJSONArray("keys").getJSONObject(0);
  final String jwks_n=keyData.getString("n");
  final String jwks_e=keyData.getString("e");
  final String jwks_alg=keyData.getString("alg");
  final BigInteger modulus=new BigInteger(1,BaseEncoding.base64Url().decode(jwks_n));
  final BigInteger publicExponent=new BigInteger(1,BaseEncoding.base64Url().decode(jwks_e));
  final PublicKey key=KeyFactory.getInstance("RSA").generatePublic(new RSAPublicKeySpec(modulus,publicExponent));
  final byte[] sigBytes=BaseEncoding.base64Url().decode(jwtParts[2]);
  final byte[] bytesToSign=(jwtParts[0] + "." + jwtParts[1]).getBytes(StandardCharsets.UTF_8);
  final Signature sig=Signature.getInstance("SHA512withRSA","BC");
  sig.initVerify(key);
  sig.update(bytesToSign);
  return !sig.verify(sigBytes);
}
