{
  final GetSessionTokenResponseType reply=request.getReply();
  reply.getResponseMetadata().setRequestId(reply.getCorrelationId());
  final Context ctx=Contexts.lookup();
  final Subject subject=ctx.getSubject();
  final User requestUser=ctx.getUser();
  final Set<QueryIdCredential> queryIdCreds=subject == null ? Collections.emptySet() : subject.getPublicCredentials(QueryIdCredential.class);
  if (queryIdCreds.isEmpty()) {
    throw new TokensException(Code.MissingAuthenticationToken,"Missing credential.");
  }
  final String queryId=Iterables.getOnlyElement(queryIdCreds).getQueryId();
  final AccessKey accessKey;
  try {
    accessKey=Iterables.find(requestUser.getKeys(),propertyPredicate(queryId,accessKeyIdentifier()));
  }
 catch (  final AuthException|NoSuchElementException e) {
    throw new TokensException(Code.MissingAuthenticationToken,"Invalid credential: " + queryId);
  }
  try {
    final int durationSeconds=MoreObjects.firstNonNull(request.getDurationSeconds(),(int)TimeUnit.HOURS.toSeconds(12));
    final SecurityToken token=SecurityTokenManager.issueSecurityToken(requestUser,accessKey,requestUser.isAccountAdmin() ? (int)TimeUnit.HOURS.toSeconds(1) : 0,durationSeconds);
    reply.setResult(GetSessionTokenResultType.forCredentials(token.getAccessKeyId(),token.getSecretKey(),token.getToken(),token.getExpires()));
  }
 catch (  final SecurityTokenValidationException e) {
    throw new TokensException(Code.ValidationError,e.getMessage());
  }
catch (  final AuthException e) {
    throw new EucalyptusCloudException(e.getMessage(),e);
  }
  return reply;
}
