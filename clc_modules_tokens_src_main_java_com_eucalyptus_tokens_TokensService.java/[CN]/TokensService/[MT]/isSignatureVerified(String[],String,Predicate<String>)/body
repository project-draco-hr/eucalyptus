{
  try {
    final JsonWebKeySet webKeySet=JsonWebKeySet.parse(jwkText);
    return JsonWebSignatureVerifier.isValid(jwtParts[0],jwtParts[1],jwtParts[2],new JsonWebSignatureVerifier.KeyResolver(){
      @Override public <K extends JsonWebKey>Option<K> resolve(      final Option<String> kid,      final Class<K> keyType){
        return webKeySet.findKey(kid,keyType,"sig","verify");
      }
    }
,signatureAlgorithmPredicate);
  }
 catch (  GeneralSecurityException e) {
    throw e;
  }
catch (  Throwable e) {
    throw new GeneralSecurityException(e.getMessage(),e);
  }
}
