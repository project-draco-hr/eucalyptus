{
  if (this.timedTrigger(event)) {
    this.trigger();
  }
 else   if (event instanceof GenericEvent) {
    GenericEvent<Cluster> g=(GenericEvent<Cluster>)event;
    if (!g.matches(this.getCluster())) {
      return;
    }
    if (g instanceof NewClusterEvent && !this.verified) {
      this.trigger();
    }
 else     if (event instanceof TeardownClusterEvent) {
      this.verified=false;
      try {
        Clusters.deregisterClusterStateHandler(this.getCluster(),new NetworkStateHandler(this.getCluster()));
        Clusters.deregisterClusterStateHandler(this.getCluster(),new LogStateHandler(this.getCluster()));
        Clusters.deregisterClusterStateHandler(this.getCluster(),new ResourceStateHandler(this.getCluster()));
        Clusters.deregisterClusterStateHandler(this.getCluster(),new VmStateHandler(this.getCluster()));
        Clusters.deregisterClusterStateHandler(this.getCluster(),new AddressStateHandler(this.getCluster()));
      }
 catch (      Exception e) {
        LOG.error(e,e);
      }
    }
  }
 else {
    LOG.debug("Ignoring event which doesn't belong to me: " + LogUtil.dumpObject(event));
  }
}
