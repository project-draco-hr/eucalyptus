{
  DescribeLoadBalancerPoliciesResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final String lbName=request.getLoadBalancerName();
  final PolicyNames policyNames=request.getPolicyNames();
  if (lbName == null || lbName.isEmpty()) {
    final DescribeLoadBalancerPoliciesResult result=new DescribeLoadBalancerPoliciesResult();
    final PolicyDescriptions descs=new PolicyDescriptions();
    final List<PolicyDescription> policies=LoadBalancerPolicies.getSamplePolicyDescription();
    descs.setMember((ArrayList<PolicyDescription>)policies);
    result.setPolicyDescriptions(descs);
    reply.setDescribeLoadBalancerPoliciesResult(result);
  }
 else {
    LoadBalancer lb;
    try {
      lb=LoadBalancers.getLoadbalancer(ctx,lbName);
    }
 catch (    NoSuchElementException ex) {
      throw new AccessPointNotFoundException();
    }
catch (    final Exception ex) {
      LOG.error("Failed to find the loadbalancer",ex);
      throw new InternalFailure400Exception("Failed to find the loadbalancer");
    }
    if (lb != null && !LoadBalancingMetadatas.filterPrivileged().apply(lb)) {
      throw new AccessPointNotFoundException();
    }
    List<LoadBalancerPolicyDescription> lbPolicies;
    try {
      if (policyNames != null && policyNames.getMember() != null && policyNames.getMember().size() > 0)       lbPolicies=LoadBalancerPolicies.getLoadBalancerPolicyDescription(lb,policyNames.getMember());
 else       lbPolicies=LoadBalancerPolicies.getLoadBalancerPolicyDescription(lb);
    }
 catch (    final Exception ex) {
      LOG.error("Failed to find policy descriptions",ex);
      throw new InternalFailure400Exception("Failed to retrieve the policy descriptions",ex);
    }
    final DescribeLoadBalancerPoliciesResult result=new DescribeLoadBalancerPoliciesResult();
    final PolicyDescriptions descs=new PolicyDescriptions();
    final List<PolicyDescription> policies=Lists.newArrayList();
    for (    final LoadBalancerPolicyDescription lbPolicy : lbPolicies) {
      policies.add(LoadBalancerPolicies.AsPolicyDescription.INSTANCE.apply(lbPolicy));
    }
    descs.setMember((ArrayList<PolicyDescription>)policies);
    result.setPolicyDescriptions(descs);
    reply.setDescribeLoadBalancerPoliciesResult(result);
  }
  reply.set_return(true);
  return reply;
}
