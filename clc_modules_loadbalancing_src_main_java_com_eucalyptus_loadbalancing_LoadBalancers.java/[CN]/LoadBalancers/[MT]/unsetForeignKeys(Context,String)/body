{
  Predicate<LoadBalancerServoInstance> unsetServoInstanceKey=new Predicate<LoadBalancerServoInstance>(){
    @Override public boolean apply(    @Nullable LoadBalancerServoInstance arg0){
      try {
        final LoadBalancerServoInstance update=Entities.uniqueResult(arg0);
        update.setAvailabilityZone(null);
        update.setAutoScalingGroup(null);
        update.setDns(null);
        return true;
      }
 catch (      final Exception ex) {
        return false;
      }
    }
  }
;
  LoadBalancer lb=null;
  try {
    lb=getLoadbalancer(ctx,loadbalancer);
  }
 catch (  Exception ex) {
    return;
  }
  if (lb != null) {
    if (lb.getZones() != null) {
      for (      final LoadBalancerZoneCoreView zoneView : lb.getZones()) {
        LoadBalancerZone zone=null;
        try {
          zone=LoadBalancerZoneEntityTransform.INSTANCE.apply(zoneView);
        }
 catch (        final Exception ex) {
          continue;
        }
        for (        LoadBalancerServoInstanceCoreView servo : zone.getServoInstances()) {
          try {
            final LoadBalancerServoInstance instance=LoadBalancerServoInstanceEntityTransform.INSTANCE.apply(servo);
            Entities.asTransaction(LoadBalancerServoInstance.class,unsetServoInstanceKey).apply(instance);
          }
 catch (          Exception ex) {
            ;
          }
        }
      }
    }
  }
}
