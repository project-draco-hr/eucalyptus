{
  List<ClusterInfoType> clusters=null;
  try {
    clusters=EucalyptusActivityTasks.getInstance().describeAvailabilityZones(false);
  }
 catch (  Exception ex) {
    throw new LoadBalancingException("Failed to check the requested zones");
  }
  for (  String zone : zones) {
    boolean found=false;
    for (    ClusterInfoType cluster : clusters) {
      if (zone.equals(cluster.getZoneName())) {
        found=true;
        break;
      }
    }
    if (!found)     throw new LoadBalancingException("No cluster named " + zone + " is available");
  }
  LoadBalancer lb=null;
  try {
    lb=LoadBalancers.getLoadbalancer(ctx,lbName);
  }
 catch (  Exception ex) {
    throw new AccessPointNotFoundException();
  }
  try {
    for (    String zone : zones) {
      final EntityTransaction db=Entities.get(LoadBalancerZone.class);
      try {
        final LoadBalancerZone sample=LoadBalancerZone.named(lb,zone);
        final LoadBalancerZone exist=Entities.uniqueResult(sample);
        exist.setState(LoadBalancerZone.STATE.InService);
        Entities.persist(exist);
        db.commit();
      }
 catch (      NoSuchElementException ex) {
        final LoadBalancerZone newZone=LoadBalancerZone.named(lb,zone);
        newZone.setState(LoadBalancerZone.STATE.InService);
        Entities.persist(newZone);
        db.commit();
      }
catch (      Exception ex) {
        db.rollback();
        LOG.error("failed to persist the zone " + zone,ex);
      }
    }
  }
 catch (  Exception ex) {
    throw new LoadBalancingException("Failed to add zone",ex);
  }
}
