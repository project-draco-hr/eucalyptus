{
  final EntityTransaction db=Entities.get(LoadBalancer.class);
  try {
    try {
      if (Entities.uniqueResult(LoadBalancer.namedByAccount(user.getAccountName(),lbName)) != null)       throw new DuplicateAccessPointName();
    }
 catch (    NoSuchElementException e) {
      final LoadBalancer lb=LoadBalancer.newInstance(user,lbName);
      if (scheme != null)       lb.setScheme(scheme);
      Entities.persist(lb);
      db.commit();
      return lb;
    }
  }
 catch (  LoadBalancingException ex) {
    db.rollback();
    throw ex;
  }
catch (  Exception ex) {
    db.rollback();
    LOG.error("failed to persist a new loadbalancer",ex);
    throw new LoadBalancingException("Failed to persist a new load-balancer because of: " + ex.getMessage(),ex);
  }
 finally {
    if (db.isActive())     db.rollback();
  }
  throw new LoadBalancingException("Failed to create a new load-balancer instance");
}
