{
  final String prefix=String.format("arn:aws:iam::%s:server-certificate",accountId);
  final String oldCertName=oldCertArn.replace(prefix,"").substring(oldCertArn.replace(prefix,"").lastIndexOf("/") + 1);
  final String newCertName=newCertArn.replace(prefix,"").substring(newCertArn.replace(prefix,"").lastIndexOf("/") + 1);
  final String roleName=String.format("%s-%s-%s",LoadBalancingActivitiesImpl.ROLE_NAME_PREFIX,accountId,lbName);
  final String oldPolicyName=String.format("%s-%s-%s-%s",LoadBalancingActivitiesImpl.SERVER_CERT_ROLE_POLICY_NAME_PREFIX,accountId,lbName,oldCertName);
  LoadBalancer lb;
  try {
    lb=LoadBalancers.getLoadbalancer(accountId,lbName);
  }
 catch (  Exception ex) {
    throw new LoadBalancingException("Failed to find the loadbalancer named " + lbName,ex);
  }
  try {
    EucalyptusActivityTasks.getInstance().deleteRolePolicy(roleName,oldPolicyName,lb.useSystemAccount());
  }
 catch (  final Exception ex) {
    throw new LoadBalancingException("Failed to delete old role policy " + oldPolicyName,ex);
  }
  final String newPolicyName=String.format("%s-%s-%s-%s",LoadBalancingActivitiesImpl.SERVER_CERT_ROLE_POLICY_NAME_PREFIX,accountId,lbName,newCertName);
  final String newPolicyDoc=LoadBalancingActivitiesImpl.ROLE_SERVER_CERT_POLICY_DOCUMENT.replace("CERT_ARN_PLACEHOLDER",newCertArn);
  try {
    EucalyptusActivityTasks.getInstance().putRolePolicy(roleName,newPolicyName,newPolicyDoc,lb.useSystemAccount());
  }
 catch (  final Exception ex) {
    throw new LoadBalancingException("Failed to add new role policy " + newPolicyName,ex);
  }
}
