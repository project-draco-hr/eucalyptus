{
  while (!this.finished.get()) {
    try {
      final long start=System.currentTimeMillis();
      final QueuedEvent event=this.msgQueue.poll(this.pollInterval,TimeUnit.MILLISECONDS);
      if (event != null) {
        LOG.trace("Dequeued message of type " + event.getCallback().getClass().getSimpleName());
        final long msgStart=System.currentTimeMillis();
        final QueuedEventCallback q=event.getCallback();
        try {
          if ((q instanceof MultiClusterCallback) && !((MultiClusterCallback)q).isSplit()) {
            final MultiClusterCallback multi=(MultiClusterCallback)q;
            multi.markSplit();
            multi.prepare(event.getEvent());
          }
 else {
            Clusters.sendClusterEvent(this.clusterName,event);
          }
        }
 catch (        final Exception e) {
          LOG.error(e);
          LOG.debug(e,e);
        }
 finally {
          q.notifyHandler();
        }
        LOG.debug(String.format("[q=%04dms,send=%04dms,qlen=%02d] message type %s, cluster %s",msgStart - start,System.currentTimeMillis() - msgStart,this.msgQueue.size(),event.getCallback().getClass().getSimpleName(),this.clusterName));
      }
    }
 catch (    final Throwable e) {
      LOG.error(e,e);
    }
  }
}
