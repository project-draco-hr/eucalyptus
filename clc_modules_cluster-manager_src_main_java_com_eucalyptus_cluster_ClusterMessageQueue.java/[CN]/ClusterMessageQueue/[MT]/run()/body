{
  while (!this.finished.get()) {
    try {
      final long start=System.currentTimeMillis();
      final QueuedEvent event=this.msgQueue.poll(this.pollInterval,TimeUnit.MILLISECONDS);
      if (event != null) {
        LOG.debug("-> Dequeued message of type " + event.getCallback().getClass().getSimpleName());
        final long msgStart=System.currentTimeMillis();
        try {
          Clusters.sendClusterEvent(this.clusterName,event);
          event.getCallback().waitForResponse();
        }
 catch (        final Throwable e) {
          LOG.debug(e,e);
        }
        LOG.debug(EventRecord.here(event.getCallback().getClass(),EventType.QUEUE_TIME,this.clusterName,Long.toString(msgStart - start),EventType.SERVICE_TIME.name(),Long.toString(System.currentTimeMillis() - msgStart),EventType.QUEUE_LENGTH.name(),Long.toString(this.msgQueue.size())));
      }
    }
 catch (    final Throwable e) {
      LOG.error(e,e);
    }
  }
}
