{
  Function<VolumeToken,VolumeToken> createExport=new Function<VolumeToken,VolumeToken>(){
    @Override public VolumeToken apply(    VolumeToken token){
      VolumeToken tok=null;
      tok=Entities.merge(token);
      try {
        if (tok.getValidExport(ip,iqn) == null || !connectionString.equals(tok.getValidExport(ip,iqn).getConnectionString())) {
          LOG.trace("Adding new volume export record to token");
          VolumeExportRecord record=new VolumeExportRecord();
          record.setToken(tok);
          record.setVolume(tok.getVolume());
          record.setHostIp(ip);
          record.setHostIqn(iqn);
          record.setConnectionString(connectionString);
          record.setIsActive(true);
          Entities.flush(record);
          tok.exportRecords.add(record);
          return tok;
        }
      }
 catch (      Exception e) {
        LOG.error("Error adding new export record",e);
      }
      return tok;
    }
  }
;
  try {
    Entities.asTransaction(VolumeToken.class,createExport).apply(this);
  }
 catch (  Exception e) {
    LOG.error("Failed to add export");
  }
}
