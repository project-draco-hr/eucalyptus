{
  this.checkClusterExists(request);
  EntityWrapper<ClusterConfiguration> db=Configuration.getEntityWrapper();
  ClusterConfiguration newCluster;
  try {
    newCluster=new ClusterConfiguration(request.getName(),request.getHost(),request.getPort());
    db.add(newCluster);
    db.commit();
  }
 catch (  Exception e) {
    db.rollback();
    LOG.error(e,e);
    throw new EucalyptusCloudException(e);
  }
  String ccAlias=String.format(CLUSTER_KEY_FSTRING,newCluster.getClusterName());
  String ncAlias=String.format(NODE_KEY_FSTRING,newCluster.getClusterName());
  String directory=SubDirectory.KEYS.toString() + File.separator + newCluster.getClusterName();
  File keyDir=new File(directory);
  keyDir.mkdir();
  LOG.info("creating keys in " + directory);
  EntityWrapper<ClusterCredentials> credDb=Credentials.getEntityWrapper();
  try {
    KeyTool keyTool=new KeyTool();
    KeyPair clusterKp=keyTool.getKeyPair();
    X509Certificate clusterX509=keyTool.getCertificate(clusterKp,EucalyptusProperties.getDName("cc-" + newCluster.getClusterName()));
    keyTool.writePem(directory + File.separator + "cluster-pk.pem",clusterKp.getPrivate());
    keyTool.writePem(directory + File.separator + "cluster-cert.pem",clusterX509);
    KeyPair nodeKp=keyTool.getKeyPair();
    X509Certificate nodeX509=keyTool.getCertificate(nodeKp,EucalyptusProperties.getDName("nc-" + newCluster.getClusterName()));
    keyTool.writePem(directory + File.separator + "node-pk.pem",nodeKp.getPrivate());
    keyTool.writePem(directory + File.separator + "node-cert.pem",nodeX509);
    ClusterCredentials clusterCredentials=new ClusterCredentials(newCluster.getClusterName());
    clusterCredentials.setClusterCertificate(X509Cert.fromCertificate(ccAlias,clusterX509));
    clusterCredentials.setNodeCertificate(X509Cert.fromCertificate(ncAlias,nodeX509));
    credDb.add(clusterCredentials);
    credDb.commit();
  }
 catch (  Exception eee) {
    credDb.rollback();
    throw new EucalyptusCloudException(eee);
  }
  RegisterClusterResponseType reply=(RegisterClusterResponseType)request.getReply();
  reply.set_return(true);
  return reply;
}
