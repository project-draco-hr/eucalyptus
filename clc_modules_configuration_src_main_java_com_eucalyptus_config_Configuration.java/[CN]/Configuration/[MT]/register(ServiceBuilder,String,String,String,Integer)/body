{
  LOG.info("Using builder: " + builder.getClass().getSimpleName() + " for: "+ name+ "@"+ hostName+ ":"+ port);
  if (!builder.checkAdd(null,name,hostName,port)) {
    LOG.info(builder.getClass().getSimpleName() + ": checkAdd failed.");
    return false;
  }
  try {
    final ServiceConfiguration newComponent=builder.add(partition,name,hostName,port);
    final GenericFuture<ServiceConfiguration> v=Futures.newGenericFuture();
    try {
      final Runnable enableRunner=new Runnable(){
        @Override public void run(){
          try {
            builder.getComponent().enableService(newComponent);
            v.set(newComponent);
          }
 catch (          ServiceRegistrationException ex) {
            v.setException(ex);
          }
        }
      }
;
      final Runnable startRunner=new Runnable(){
        @Override public void run(){
          try {
            builder.getComponent().startService(newComponent).addListener(enableRunner);
          }
 catch (          ServiceRegistrationException ex) {
            LOG.error(ex,ex);
          }
        }
      }
;
      builder.getComponent().loadService(newComponent).addListener(startRunner);
      v.get();
    }
 catch (    Exception ex) {
      LOG.error(ex,ex);
    }
    return true;
  }
 catch (  Throwable e) {
    LOG.info(builder.getClass().getSimpleName() + ": add failed.");
    LOG.info(e.getMessage());
    LOG.error(e,e);
    throw new ServiceRegistrationException(builder.getClass().getSimpleName() + ": add failed with message: " + e.getMessage(),e);
  }
}
