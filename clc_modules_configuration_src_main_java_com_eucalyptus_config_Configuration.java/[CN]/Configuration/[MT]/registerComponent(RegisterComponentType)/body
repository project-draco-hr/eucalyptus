{
  final ComponentId componentId=ServiceBuilders.oneWhichHandles(request.getClass());
  final RegisterComponentResponseType reply=(RegisterComponentResponseType)request.getReply();
  final String name=request.getName();
  final String hostName=request.getHost();
  final Integer port=request.getPort();
  Assertions.assertNotNull(name,"Name must not be null: " + request);
  Assertions.assertNotNull(hostName,"Hostname must not be null: " + request);
  Assertions.assertNotNull(port,"Port must not be null: " + request);
  String partition=request.getPartition();
  if (!componentId.isPartitioned()) {
    partition=componentId.getPartition();
    LOG.error("Unpartitioned component (" + componentId.getName() + ") is being registered w/o a partition.  Using fixed partition="+ partition+ " for request: "+ request);
  }
 else   if (componentId.isPartitioned() && (partition == null)) {
    partition=name;
    LOG.error("Partitioned component is being registered w/o a partition.  Using partition=name=" + partition + " for request: "+ request);
  }
  try {
    reply.set_return(ComponentRegistrationHandler.register(componentId,partition,name,hostName,port));
  }
 catch (  final Throwable ex) {
    throw new EucalyptusCloudException("Component registration failed because: " + ex.getMessage(),ex);
  }
  return reply;
}
