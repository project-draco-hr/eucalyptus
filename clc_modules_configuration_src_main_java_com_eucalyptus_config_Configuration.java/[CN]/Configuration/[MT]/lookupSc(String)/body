{
  try {
    return getStorageControllerConfiguration(requestedZone);
  }
 catch (  Exception e) {
    try {
      Group g=Groups.lookupGroup(requestedZone);
      for (      Authorization a : g.getAuthorizations()) {
        if (a instanceof AvailabilityZonePermission) {
          try {
            return Configuration.getStorageControllerConfiguration(a.getValue());
          }
 catch (          NoSuchComponentException ex) {
          }
        }
      }
      return getStorageControllerConfiguration(g.getName());
    }
 catch (    NoSuchGroupException ex1) {
      try {
        Group g=Iterables.find(Groups.listAllGroups(),new Predicate<Group>(){
          @Override public boolean apply(          Group arg0){
            return Iterables.any(arg0.getAuthorizations(),new Predicate<Authorization>(){
              @Override public boolean apply(              Authorization arg0){
                return arg0.check(new AvailabilityZonePermission(requestedZone));
              }
            }
);
          }
        }
);
        return getStorageControllerConfiguration(g.getName());
      }
 catch (      Exception ex) {
        throw new EucalyptusCloudException("Storage services are not available for the requested availability zone: " + requestedZone);
      }
    }
catch (    Throwable ex) {
      LOG.error(ex,ex);
      throw new EucalyptusCloudException("Storage services are not available for the requested availability zone: " + requestedZone,ex);
    }
  }
}
