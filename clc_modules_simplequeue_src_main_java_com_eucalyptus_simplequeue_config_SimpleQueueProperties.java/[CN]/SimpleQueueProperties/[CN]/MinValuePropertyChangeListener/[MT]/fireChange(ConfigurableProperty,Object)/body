{
  if (!(t instanceof StaticPropertyEntry)) {
    throw new ConfigurablePropertyException("Invalid use of listener");
  }
  final StaticPropertyEntry staticPropertyEntry=(StaticPropertyEntry)t;
  final Field field=staticPropertyEntry.getField();
  final MinValue minValue;
  long value;
  try {
    minValue=Ats.from(field).get(MinValue.class);
    if (minValue == null) {
      throw new ConfigurablePropertyException("This listener requires an @MinValue annotation");
    }
    value=Long.parseLong((String)newValue);
  }
 catch (  Exception ex) {
    throw new ConfigurablePropertyException("Invalid value " + newValue);
  }
  if (value < minValue.min()) {
    throw new ConfigurablePropertyException("Invalid value " + newValue);
  }
}
