{
  NetworkGroupUtil.makeDefault(request.getUserErn());
  final List<String> groupNames=request.getSecurityGroupSet();
  DescribeSecurityGroupsResponseType reply=(DescribeSecurityGroupsResponseType)request.getReply();
  final List<SecurityGroupItemType> replyList=reply.getSecurityGroupInfo();
  if (request.isAdministrator()) {
    try {
      for (      SecurityGroupItemType group : Iterables.filter(NetworkGroupUtil.getUserNetworksAdmin(request.getUserErn(),request.getSecurityGroupSet()),new Predicate<SecurityGroupItemType>(){
        @Override public boolean apply(        SecurityGroupItemType arg0){
          return groupNames.isEmpty() || groupNames.contains(arg0.getGroupName());
        }
      }
)) {
        replyList.add(group);
      }
    }
 catch (    Exception e) {
      LOG.debug(e,e);
    }
  }
 else {
    try {
      for (      SecurityGroupItemType group : Iterables.filter(NetworkGroupUtil.getUserNetworks(request.getUserErn(),request.getSecurityGroupSet()),new Predicate<SecurityGroupItemType>(){
        @Override public boolean apply(        SecurityGroupItemType arg0){
          return groupNames.isEmpty() || groupNames.contains(arg0.getGroupName());
        }
      }
)) {
        replyList.add(group);
      }
    }
 catch (    Exception e) {
      LOG.debug(e,e);
    }
  }
  return reply;
}
