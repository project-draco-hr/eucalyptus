{
  final Message outMsg=new Message(dest,null,msg);
  outMsg.putHeader(Protocols.lookupRegisteredId(EmpyreanHeader.class),new EmpyreanHeader(Topology.epoch()));
  StackTraceElement caller=Thread.currentThread().getStackTrace()[1];
  LOG.debug(caller.getClassName().replaceAll("^.*\\.","") + "." + caller.getMethodName()+ ":"+ caller.getLineNumber()+ " sending message to: "+ dest+ " with payload "+ msg.toString()+ " "+ outMsg.getHeaders());
  return Threads.lookup(Empyrean.class,HostManager.class).limitTo(8).submit(new Runnable(){
    @Override public void run(){
      View v=HostManager.getInstance().view.getCurrentView();
      if (dest == null && (v == null || v.getMembers().size() <= 1)) {
        return;
      }
 else {
        try {
          LOG.trace("Sending message to: " + dest + " with payload "+ msg.toString());
          singleton.membershipChannel.send(outMsg);
        }
 catch (        ChannelNotConnectedException ex) {
          LOG.error(ex,ex);
        }
catch (        ChannelClosedException ex) {
          LOG.error(ex,ex);
        }
catch (        Exception ex) {
          LOG.error(ex,ex);
        }
      }
    }
  }
);
}
