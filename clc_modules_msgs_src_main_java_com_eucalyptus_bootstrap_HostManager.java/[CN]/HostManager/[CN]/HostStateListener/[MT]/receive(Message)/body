{
  try {
    if (Hosts.getHostInstance(msg.getSrc()).isLocalHost()) {
      return;
    }
  }
 catch (  NoSuchElementException ex) {
    Logs.exhaust().error(ex);
  }
  if (msg.getObject() instanceof InitRequest && this.initializing.compareAndSet(InitState.PENDING,InitState.WORKING)) {
    LOG.debug("Received initialize message: " + msg.getObject() + " ["+ msg.getSrc()+ "]");
    try {
      this.initialize(msg.getObject() instanceof Initialize);
    }
  finally {
      this.initializing.set(InitState.FINISHED);
    }
  }
 else   if (this.initializing.get().equals(InitState.PENDING)) {
    Threads.lookup(Empyrean.class,HostManager.class).submit(new Runnable(){
      @Override public void run(){
        try {
          HostManager.this.membershipChannel.send(new Message(null,null,Lists.newArrayList(Hosts.localHost())));
        }
 catch (        Exception ex) {
          LOG.error(ex,ex);
        }
      }
    }
);
  }
 else   if (this.initializing.compareAndSet(InitState.FINISHED,InitState.FINISHED)) {
    if (msg.getObject() instanceof List) {
      LOG.debug("Received updated host information: " + msg.getObject() + " ["+ msg.getSrc()+ "]");
      this.receive((List<Host>)msg.getObject());
    }
 else {
      LOG.debug("Received unknown message type: " + msg.getObject() + " ["+ msg.getSrc()+ "]");
    }
  }
 else {
    LOG.debug("Received message while InitState." + this.initializing.get() + ", ignoring: "+ msg.getObject()+ " ["+ msg.getSrc()+ "]");
  }
}
