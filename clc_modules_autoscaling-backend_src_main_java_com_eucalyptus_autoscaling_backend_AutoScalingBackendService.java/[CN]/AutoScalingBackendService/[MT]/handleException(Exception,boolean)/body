{
  final AutoScalingException cause=Exceptions.findCause(e,AutoScalingException.class);
  if (cause != null) {
    throw cause;
  }
  final AuthQuotaException quotaCause=Exceptions.findCause(e,AuthQuotaException.class);
  if (quotaCause != null) {
    throw new LimitExceededException("Request would exceed quota for type: " + quotaCause.getType());
  }
  final ConstraintViolationException constraintViolationException=Exceptions.findCause(e,ConstraintViolationException.class);
  if (constraintViolationException != null) {
    throw isCreate ? new AlreadyExistsException("Resource already exists") : new ResourceInUseException("Resource in use");
  }
  final InvalidResourceNameException invalidResourceNameException=Exceptions.findCause(e,InvalidResourceNameException.class);
  if (invalidResourceNameException != null) {
    throw new ValidationErrorException(invalidResourceNameException.getMessage());
  }
  logger.error(e,e);
  final InternalFailureException exception=new InternalFailureException(String.valueOf(e.getMessage()));
  if (Contexts.lookup().hasAdministrativePrivileges()) {
    exception.initCause(e);
  }
  throw exception;
}
