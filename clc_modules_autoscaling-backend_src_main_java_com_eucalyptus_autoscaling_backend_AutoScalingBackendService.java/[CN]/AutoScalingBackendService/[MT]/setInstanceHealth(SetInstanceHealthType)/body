{
  final SetInstanceHealthResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final OwnerFullName ownerFullName=ctx.isAdministrator() ? null : ctx.getUserFullName().asAccountFullName();
  try {
    final Callback<AutoScalingInstance> instanceUpdateCallback=new Callback<AutoScalingInstance>(){
      @Override public void fire(      final AutoScalingInstance instance){
        if (RestrictedTypes.filterPrivileged().apply(instance)) {
          if (!Objects.firstNonNull(request.getShouldRespectGracePeriod(),Boolean.FALSE) || instance.healthStatusGracePeriodExpired()) {
            instance.setHealthStatus(FUtils.valueOfFunction(HealthStatus.class).apply(request.getHealthStatus()));
          }
        }
 else {
          throw Exceptions.toUndeclared(new AutoScalingMetadataNotFoundException("Instance not found"));
        }
      }
    }
;
    autoScalingInstances.update(ownerFullName,request.getInstanceId(),instanceUpdateCallback);
  }
 catch (  AutoScalingMetadataNotFoundException e) {
    throw new ValidationErrorException("Auto scaling instance not found: " + request.getInstanceId());
  }
catch (  Exception e) {
    handleException(e);
  }
  return reply;
}
