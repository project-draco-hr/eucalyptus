{
  final DescribeAutoScalingInstancesResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final boolean showAll=request.instanceIds().remove("verbose") || !request.instanceIds().isEmpty();
  final OwnerFullName ownerFullName=ctx.isAdministrator() && showAll ? null : ctx.getUserFullName().asAccountFullName();
  final Predicate<? super AutoScalingInstance> requestedAndAccessible=AutoScalingMetadatas.filteringFor(AutoScalingInstance.class).byId(request.instanceIds()).byPrivileges().buildPredicate();
  try {
    final List<AutoScalingInstanceDetails> results=reply.getDescribeAutoScalingInstancesResult().getAutoScalingInstances().getMember();
    results.addAll(autoScalingInstances.list(ownerFullName,requestedAndAccessible,TypeMappers.lookup(AutoScalingInstance.class,AutoScalingInstanceDetails.class)));
  }
 catch (  Exception e) {
    handleException(e);
  }
  return reply;
}
