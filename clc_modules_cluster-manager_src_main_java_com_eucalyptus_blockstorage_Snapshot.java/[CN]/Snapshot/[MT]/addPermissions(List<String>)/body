{
  try (TransactionResource db=Entities.transactionFor(Snapshot.class)){
    final Snapshot entity=Entities.merge(this);
    Iterables.all(accountIds,new Predicate<String>(){
      @Override public boolean apply(      final String input){
        try {
          final Account account=Accounts.lookupAccountById(input);
          Snapshot.this.getPermissions().add(input);
        }
 catch (        final Exception e) {
          try {
            final User user=Accounts.lookupUserById(input);
            Snapshot.this.getPermissions().add(user.getAccount().getAccountNumber());
          }
 catch (          AuthException ex) {
            try {
              final User user=Accounts.lookupUserByAccessKeyId(input);
              Snapshot.this.getPermissions().add(user.getAccount().getAccountNumber());
            }
 catch (            AuthException ex1) {
              LOG.error(ex1,ex1);
            }
          }
        }
        return true;
      }
    }
);
    db.commit();
  }
 catch (  final Exception ex) {
    Logs.exhaust().error(ex,ex);
  }
}
