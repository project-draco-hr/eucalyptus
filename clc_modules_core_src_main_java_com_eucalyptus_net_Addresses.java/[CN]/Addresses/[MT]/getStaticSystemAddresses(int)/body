{
  List<Address> addressList=Lists.newArrayList();
  this.canHas.writeLock().lock();
  try {
    for (    Address addr : Addresses.getInstance().listValues()) {
      if (!addr.isAssigned() && !addr.isPending() && Component.eucalyptus.name().equals(addr.getUserId())) {
        addr.assign(Address.PENDING_ASSIGNMENT,Address.PENDING_ASSIGNMENT);
        addressList.add(addr);
        if (addressList.size() == count) {
          break;
        }
      }
    }
    if (addressList.size() < count) {
      for (      Address putBackAddr : addressList) {
        putBackAddr.unassign();
        putBackAddr.clearPending();
      }
      throw new NotEnoughResourcesAvailable("Not enough resources available: addresses (try --addressing private)");
    }
  }
  finally {
    this.canHas.writeLock().unlock();
  }
  return addressList;
}
