{
  AWSEC2DHCPOptionsResourceAction action=(AWSEC2DHCPOptionsResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  action.validateProperties();
  CreateDhcpOptionsType createDhcpOptionsType=MessageHelper.createMessage(CreateDhcpOptionsType.class,action.info.getEffectiveUserId());
  DhcpConfigurationItemSetType dhcpConfigurationSet=new DhcpConfigurationItemSetType();
  dhcpConfigurationSet.setItem(Lists.<DhcpConfigurationItemType>newArrayList());
  ArrayList<DhcpConfigurationItemType> item=Lists.newArrayList();
  if (!Strings.isNullOrEmpty(action.properties.getDomainName())) {
    dhcpConfigurationSet.getItem().add(action.createDhcpConfigurationItemType("domain-name",action.createValueSet(action.properties.getDomainName())));
  }
  if (action.properties.getDomainNameServers() != null && !action.properties.getDomainNameServers().isEmpty()) {
    dhcpConfigurationSet.getItem().add(action.createDhcpConfigurationItemType("domain-name-servers",action.createValueSet(action.properties.getDomainNameServers())));
  }
  if (action.properties.getNtpServers() != null && !action.properties.getNtpServers().isEmpty()) {
    dhcpConfigurationSet.getItem().add(action.createDhcpConfigurationItemType("ntp-servers",action.createValueSet(action.properties.getNtpServers())));
  }
  if (action.properties.getNetbiosNameServers() != null && !action.properties.getNetbiosNameServers().isEmpty()) {
    dhcpConfigurationSet.getItem().add(action.createDhcpConfigurationItemType("netbios-name-servers",action.createValueSet(action.properties.getNetbiosNameServers())));
  }
  if (action.properties.getNetbiosNodeType() != null) {
    dhcpConfigurationSet.getItem().add(action.createDhcpConfigurationItemType("netbios-node-type",action.createValueSet(String.valueOf(action.properties.getNetbiosNodeType()))));
  }
  createDhcpOptionsType.setDhcpConfigurationSet(dhcpConfigurationSet);
  CreateDhcpOptionsResponseType createDhcpOptionsResponseType=AsyncRequests.<CreateDhcpOptionsType,CreateDhcpOptionsResponseType>sendSync(configuration,createDhcpOptionsType);
  action.info.setPhysicalResourceId(createDhcpOptionsResponseType.getDhcpOptions().getDhcpOptionsId());
  action.info.setCreatedEnoughToDelete(true);
  action.info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(action.info.getPhysicalResourceId())));
  return action;
}
