{
  AWSEC2DHCPOptionsResourceAction action=(AWSEC2DHCPOptionsResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  if (action.info.getCreatedEnoughToDelete() != Boolean.TRUE)   return action;
  DescribeDhcpOptionsType describeDhcpOptionsType=MessageHelper.createMessage(DescribeDhcpOptionsType.class,action.info.getEffectiveUserId());
  describeDhcpOptionsType.getFilterSet().add(Filter.filter("dhcp-options-id",action.info.getPhysicalResourceId()));
  DescribeDhcpOptionsResponseType describeDhcpOptionsResponseType=AsyncRequests.sendSync(configuration,describeDhcpOptionsType);
  if (describeDhcpOptionsResponseType.getDhcpOptionsSet() == null || describeDhcpOptionsResponseType.getDhcpOptionsSet().getItem() == null || describeDhcpOptionsResponseType.getDhcpOptionsSet().getItem().isEmpty()) {
    return action;
  }
  DeleteDhcpOptionsType deleteDhcpOptionsType=MessageHelper.createMessage(DeleteDhcpOptionsType.class,action.info.getEffectiveUserId());
  deleteDhcpOptionsType.setDhcpOptionsId(action.info.getPhysicalResourceId());
  AsyncRequests.<DeleteDhcpOptionsType,DeleteDhcpOptionsResponseType>sendSync(configuration,deleteDhcpOptionsType);
  return action;
}
