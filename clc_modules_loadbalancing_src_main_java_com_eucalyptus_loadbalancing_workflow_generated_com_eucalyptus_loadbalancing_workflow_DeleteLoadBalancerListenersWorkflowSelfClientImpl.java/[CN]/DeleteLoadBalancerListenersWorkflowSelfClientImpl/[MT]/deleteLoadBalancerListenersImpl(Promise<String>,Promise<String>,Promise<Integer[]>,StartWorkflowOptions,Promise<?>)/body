{
  new Task(new Promise[]{accountId,loadbalancer,ports,new AndPromise(waitFor)}){
    @Override protected void doExecute() throws Throwable {
      ContinueAsNewWorkflowExecutionParameters _parameters_=new ContinueAsNewWorkflowExecutionParameters();
      Object[] _input_=new Object[3];
      _input_[0]=accountId.get();
      _input_[1]=loadbalancer.get();
      _input_[2]=ports.get();
      String _stringInput_=dataConverter.toData(_input_);
      _parameters_.setInput(_stringInput_);
      _parameters_=_parameters_.createContinueAsNewParametersFromOptions(schedulingOptions,schedulingOptionsOverride);
      if (genericClient == null) {
        genericClient=decisionContextProvider.getDecisionContext().getWorkflowClient();
      }
      genericClient.continueAsNewOnCompletion(_parameters_);
    }
  }
;
}
