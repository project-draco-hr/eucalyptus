{
  AssociateAddressResponseType reply=(AssociateAddressResponseType)request.getReply();
  reply.set_return(false);
  Addresses.updateAddressingMode();
  LOG.debug("Associate: " + request.getPublicIp() + " => "+ request.getInstanceId());
  Address address=Addresses.checkPermissionsAndGet(request.getUserId(),request.isAdministrator(),request.getPublicIp());
  VmInstance vm=VmInstances.checkPermissionsAndGet(request.getUserId(),request.isAdministrator(),request.getInstanceId());
  NetworkConfigType netConfig=vm.getNetworkConfig();
  reply.set_return(true);
  if (vm.getNetworkConfig().isConfigured()) {
    String currentPublicIp=vm.getNetworkConfig().getIgnoredPublicIp();
    try {
      Address currentAddr=Addresses.getInstance().lookup(currentPublicIp);
      LOG.debug("Dispatching unassign message for: " + address);
      if (currentAddr.isAssigned()) {
        Addresses.getAddressManager().dispatchUnassignAddress(address.unassign(),vm);
      }
    }
 catch (    Exception e) {
    }
  }
  if (address.isAssigned() && address.getUserId().equals(request.getUserId()) && !address.isPending()) {
    LOG.debug("Dispatching unassign message for: " + address);
    try {
      VmInstance oldVm=VmInstances.getInstance().lookup(address.getInstanceId());
      if (address.isAssigned()) {
        Addresses.getAddressManager().dispatchUnassignAddress(address.unassign(),oldVm);
      }
      Addresses.getAddressManager().assignSystemAddress(oldVm);
    }
 catch (    Exception e) {
      LOG.error(e,e);
    }
  }
  Addresses.getAddressManager().dispatchAssignAddress(address.assign(vm.getInstanceId(),vm.getNetworkConfig().getIpAddress()),vm);
  return reply;
}
