{
  super(builderFor(VmInstance.class).withTagFiltering(VmInstanceTag.class,"instance").withStringProperty("architecture",VmInstanceFilterFunctions.ARCHITECTURE).withStringProperty("availability-zone",VmInstanceFilterFunctions.AVAILABILITY_ZONE).withDateSetProperty("block-device-mapping.attach-time",VmInstanceDateSetFilterFunctions.BLOCK_DEVICE_MAPPING_ATTACH_TIME).withBooleanSetProperty("block-device-mapping.delete-on-termination",VmInstanceBooleanSetFilterFunctions.BLOCK_DEVICE_MAPPING_DELETE_ON_TERMINATE).withStringSetProperty("block-device-mapping.device-name",VmInstanceStringSetFilterFunctions.BLOCK_DEVICE_MAPPING_DEVICE_NAME).withStringSetProperty("block-device-mapping.status",VmInstanceStringSetFilterFunctions.BLOCK_DEVICE_MAPPING_STATUS).withStringSetProperty("block-device-mapping.volume-id",VmInstanceStringSetFilterFunctions.BLOCK_DEVICE_MAPPING_VOLUME_ID).withStringProperty("client-token",VmInstanceFilterFunctions.CLIENT_TOKEN).withStringProperty("dns-name",VmInstanceFilterFunctions.DNS_NAME).withStringSetProperty("group-id",VmInstanceStringSetFilterFunctions.GROUP_ID).withStringSetProperty("group-name",VmInstanceStringSetFilterFunctions.GROUP_NAME).withStringProperty("image-id",VmInstanceFilterFunctions.IMAGE_ID).withStringProperty("instance-id",CloudMetadatas.toDisplayName()).withConstantProperty("instance-lifecycle","").withIntegerProperty("instance-state-code",VmInstanceIntegerFilterFunctions.INSTANCE_STATE_CODE).withStringProperty("instance-state-name",VmInstanceFilterFunctions.INSTANCE_STATE_NAME).withStringProperty("instance-type",VmInstanceFilterFunctions.INSTANCE_TYPE).withUnsupportedProperty("instance.group-id").withUnsupportedProperty("instance.group-name").withStringProperty("ip-address",VmInstanceFilterFunctions.IP_ADDRESS).withStringProperty("kernel-id",VmInstanceFilterFunctions.KERNEL_ID).withStringProperty("key-name",VmInstanceFilterFunctions.KEY_NAME).withStringProperty("launch-index",VmInstanceFilterFunctions.LAUNCH_INDEX).withDateProperty("launch-time",VmInstanceDateFilterFunctions.LAUNCH_TIME).withUnsupportedProperty("monitoring-state").withStringProperty("owner-id",VmInstanceFilterFunctions.OWNER_ID).withUnsupportedProperty("placement-group-name").withStringProperty("platform",VmInstanceFilterFunctions.PLATFORM).withStringProperty("private-dns-name",VmInstanceFilterFunctions.PRIVATE_DNS_NAME).withStringProperty("private-ip-address",VmInstanceFilterFunctions.PRIVATE_IP_ADDRESS).withUnsupportedProperty("product-code").withUnsupportedProperty("product-code.type").withStringProperty("ramdisk-id",VmInstanceFilterFunctions.RAMDISK_ID).withStringProperty("reason",VmInstanceFilterFunctions.REASON).withUnsupportedProperty("requester-id").withStringProperty("reservation-id",VmInstanceFilterFunctions.RESERVATION_ID).withStringProperty("root-device-name",VmInstanceFilterFunctions.ROOT_DEVICE_NAME).withStringProperty("root-device-type",VmInstanceFilterFunctions.ROOT_DEVICE_TYPE).withUnsupportedProperty("source-dest-check").withUnsupportedProperty("spot-instance-request-id").withUnsupportedProperty("state-reason-code").withUnsupportedProperty("state-reason-message").withUnsupportedProperty("subnet-id").withUnsupportedProperty("virtualization-type").withUnsupportedProperty("vpc-id").withUnsupportedProperty("hypervisor").withUnsupportedProperty("network-interface.description").withUnsupportedProperty("network-interface.subnet-id").withUnsupportedProperty("network-interface.vpc-id").withUnsupportedProperty("network-interface.network-interface.id").withUnsupportedProperty("network-interface.owner-id").withUnsupportedProperty("network-interface.availability-zone").withUnsupportedProperty("network-interface.requester-id").withUnsupportedProperty("network-interface.requester-managed").withUnsupportedProperty("network-interface.status").withUnsupportedProperty("network-interface.mac-address").withUnsupportedProperty("network-interface-private-dns-name").withUnsupportedProperty("network-interface.source-destination-check").withUnsupportedProperty("network-interface.group-id").withUnsupportedProperty("network-interface.group-name").withUnsupportedProperty("network-interface.attachment.attachment-id").withUnsupportedProperty("network-interface.attachment.instance-id").withUnsupportedProperty("network-interface.attachment.instance-owner-id").withUnsupportedProperty("network-interface.addresses.private-ip-address").withUnsupportedProperty("network-interface.attachment.device-index").withUnsupportedProperty("network-interface.attachment.status").withUnsupportedProperty("network-interface.attachment.attach-time").withUnsupportedProperty("network-interface.attachment.delete-on-termination").withUnsupportedProperty("network-interface.addresses.primary").withUnsupportedProperty("network-interface.addresses.association.public-ip").withUnsupportedProperty("network-interface.addresses.association.ip-owner-id").withUnsupportedProperty("association.public-ip").withUnsupportedProperty("association.ip-owner-id").withUnsupportedProperty("association.allocation-id").withUnsupportedProperty("association.association-id").withPersistenceAlias("bootRecord.machineImage","image").withPersistenceAlias("networkGroups","networkGroups").withPersistenceAlias("bootRecord.vmType","vmType").withPersistenceFilter("architecture","image.architecture",Sets.newHashSet("bootRecord.machineImage"),Enums.valueOfFunction(ImageMetadata.Architecture.class)).withPersistenceFilter("availability-zone","placement.partitionName",Collections.<String>emptySet()).withPersistenceFilter("client-token","vmId.clientToken").withPersistenceFilter("group-id","networkGroups.groupId").withPersistenceFilter("group-name","networkGroups.displayName").withPersistenceFilter("image-id","image.displayName",Sets.newHashSet("bootRecord.machineImage")).withPersistenceFilter("instance-id","displayName").withPersistenceFilter("instance-type","vmType.name",Sets.newHashSet("bootRecord.vmType")).withPersistenceFilter("kernel-id","image.kernelId",Sets.newHashSet("bootRecord.machineImage")).withPersistenceFilter("launch-index","launchRecord.launchIndex",Collections.<String>emptySet(),PersistenceFilter.Type.Integer).withPersistenceFilter("launch-time","launchRecord.launchTime",Collections.<String>emptySet(),PersistenceFilter.Type.Date).withPersistenceFilter("owner-id","ownerAccountNumber").withPersistenceFilter("ramdisk-id","image.ramdiskId",Sets.newHashSet("bootRecord.machineImage")).withPersistenceFilter("reservation-id","vmId.reservationId",Collections.<String>emptySet()));
}
