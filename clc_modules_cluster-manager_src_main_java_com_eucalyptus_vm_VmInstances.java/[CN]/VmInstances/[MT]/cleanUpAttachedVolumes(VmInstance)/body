{
  try {
    vm.eachVolumeAttachment(new Predicate<VmVolumeAttachment>(){
      @Override public boolean apply(      final VmVolumeAttachment arg0){
        try {
          if (VmStateSet.TERM.apply(vm) && !"/dev/sda1".equals(arg0.getDevice())) {
            try {
              arg0.getVmInstance().getTransientVolumeState().removeVolumeAttachment(arg0.getVolumeId());
            }
 catch (            NoSuchElementException ex) {
              Logs.extreme().debug(ex);
            }
          }
          try {
            final ServiceConfiguration sc=Topology.lookup(Storage.class,vm.lookupPartition());
            AsyncRequests.sendSync(sc,new DetachStorageVolumeType(arg0.getVolumeId()));
          }
 catch (          Exception ex) {
            LOG.debug(ex);
            Logs.extreme().debug(ex,ex);
          }
          try {
            if (VmStateSet.TERM.apply(vm) && arg0.getDeleteOnTerminate()) {
              final ServiceConfiguration sc=Topology.lookup(Storage.class,vm.lookupPartition());
              AsyncRequests.dispatch(sc,new DeleteStorageVolumeType(arg0.getVolumeId()));
              Volume volume=Volumes.lookup(null,arg0.getVolumeId());
              Volumes.annihilateStorageVolume(volume);
            }
          }
 catch (          Exception ex) {
            LOG.debug(ex);
            Logs.extreme().debug(ex,ex);
          }
          return true;
        }
 catch (        final Exception e) {
          LOG.error("Failed to clean up attached volume: " + arg0.getVolumeId() + " for instance "+ vm.getInstanceId()+ ".  The request failed because of: "+ e.getMessage(),e);
          return true;
        }
      }
    }
);
  }
 catch (  final Exception ex) {
    LOG.error("Failed to lookup Storage Controller configuration for: " + vm.getInstanceId() + " (placement="+ vm.getPartition()+ ").  ");
  }
}
