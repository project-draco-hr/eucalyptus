{
  try {
    ServiceConfiguration ccConfig=Topology.lookup(ClusterController.class,vm.lookupPartition());
    final Cluster cluster=Clusters.lookup(ccConfig);
    vm.eachVolumeAttachment(new Predicate<VmVolumeAttachment>(){
      @Override public boolean apply(      final VmVolumeAttachment arg0){
        try {
          final ServiceConfiguration sc=Topology.lookup(Storage.class,vm.lookupPartition());
          final Dispatcher scDispatcher=ServiceDispatcher.lookup(sc);
          if (!VmStateSet.STOP.apply(arg0.getVmInstance()) && !"/dev/sda1".equals(arg0.getDevice())) {
            try {
              vm.removeVolumeAttachment(arg0.getVolumeId());
            }
 catch (            NoSuchElementException ex) {
              Logs.extreme().debug(ex);
            }
          }
          scDispatcher.send(new DetachStorageVolumeType(cluster.getNode(vm.getServiceTag()).getIqn(),arg0.getVolumeId()));
          if (!VmStateSet.STOP.apply(arg0.getVmInstance()) && arg0.getDeleteOnTerminate()) {
            scDispatcher.send(new DeleteStorageVolumeType(arg0.getVolumeId()));
          }
          return true;
        }
 catch (        final Throwable e) {
          LOG.error("Failed to clean up attached volume: " + arg0.getVolumeId() + " for instance "+ vm.getInstanceId()+ ".  The request failed because of: "+ e.getMessage(),e);
          return true;
        }
      }
    }
);
  }
 catch (  final Exception ex) {
    LOG.error("Failed to lookup Storage Controller configuration for: " + vm.getInstanceId() + " (placement="+ vm.getPartition()+ ").  ");
  }
}
