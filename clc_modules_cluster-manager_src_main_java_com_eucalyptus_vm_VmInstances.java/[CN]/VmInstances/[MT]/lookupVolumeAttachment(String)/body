{
  VmVolumeAttachment ret=null;
  EntityTransaction db=Entities.get(VmInstance.class);
  try {
    VmInstance vm=null;
    VmInstance vmTransientExample=VmInstance.exampleWithTransientVolume(volumeId);
    vm=(VmInstance)Entities.createCriteriaUnique(VmInstance.class).add(Example.create(vmTransientExample).enableLike(MatchMode.EXACT)).uniqueResult();
    if (vm == null) {
      VmInstance vmPersistentExample=VmInstance.exampleWithPersistentVolume(volumeId);
      vm=(VmInstance)Entities.createCriteriaUnique(VmInstance.class).add(Example.create(vmPersistentExample).enableLike(MatchMode.EXACT)).uniqueResult();
    }
    if (vm != null) {
      try {
        ret=vm.lookupVolumeAttachment(volumeId);
        if (ret.getVmInstance() == null) {
          ret.setVmInstance(vm);
        }
      }
 catch (      NoSuchElementException ex) {
        ret=null;
      }
    }
    if (vm == null || ret == null) {
      throw new NoSuchElementException("VmVolumeAttachment: no volume attachment for " + volumeId);
    }
    db.commit();
    return ret;
  }
 catch (  Exception ex) {
    Logs.exhaust().error(ex,ex);
    db.rollback();
    throw new NoSuchElementException(ex.getMessage());
  }
}
