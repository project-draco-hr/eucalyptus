{
  BaseMessage originReq=null;
  try {
    originReq=MessageContexts.lookupLast(vm.getInstanceId(),Sets.<Class>newHashSet(edu.ucsb.eucalyptus.msgs.TerminateInstancesType.class,edu.ucsb.eucalyptus.msgs.StopInstancesType.class));
  }
 catch (  final Exception ex) {
    ;
  }
  final VmState vmLastState=vm.getLastState();
  final VmState vmState=vm.getState();
  RuntimeException logEx=new RuntimeException("Cleaning up instance: " + vm.getInstanceId() + " "+ vmLastState+ " -> "+ vmState);
  LOG.debug(logEx.getMessage());
  Logs.extreme().info(logEx,logEx);
  try {
    if (Networking.getInstance().supports(ElasticIPs) && vm.getVpcId() == null) {
      try {
        Address address=Addresses.getInstance().lookup(vm.getPublicAddress());
        if ((address.isAssigned() && vm.getInstanceId().equals(address.getInstanceId())) || (!address.isReallyAssigned() && address.isAssigned() && VmState.PENDING.equals(vmLastState))) {
          if (address.isSystemOwned()) {
            EventRecord.caller(VmInstances.class,EventType.VM_TERMINATING,"SYSTEM_ADDRESS",address.toString()).debug();
          }
 else {
            EventRecord.caller(VmInstances.class,EventType.VM_TERMINATING,"USER_ADDRESS",address.toString()).debug();
          }
          unassignAddress(vm,address,rollbackNetworkingOnFailure);
        }
      }
 catch (      final NoSuchElementException e) {
        if (VmState.PENDING.equals(vmLastState) || VmStateSet.DONE.contains(vmState)) {
          for (          Address addr : Addresses.getInstance().listValues()) {
            if (addr.getInstanceId().equals(vm.getInstanceId())) {
              unassignAddress(vm,addr,rollbackNetworkingOnFailure);
              break;
            }
          }
        }
      }
catch (      final Exception e1) {
        LOG.debug(e1,e1);
      }
    }
  }
 catch (  final Exception e) {
    LOG.error(e);
    Logs.extreme().error(e,e);
  }
  try {
    VmInstances.cleanUpAttachedVolumes(vm);
  }
 catch (  Exception ex) {
    LOG.error(ex);
    Logs.extreme().error(ex,ex);
  }
  try (final TransactionResource db=Entities.distinctTransactionFor(VmInstance.class)){
    VmInstanceLifecycleHelpers.get().cleanUpInstance(Entities.merge(vm),vmState);
    db.commit();
  }
 catch (  Exception ex) {
    LOG.error(ex);
    Logs.extreme().error(ex,ex);
  }
  if (!rollbackNetworkingOnFailure && VmStateSet.TORNDOWN.apply(vm)) {
    try (final TransactionResource db=Entities.distinctTransactionFor(VmInstance.class)){
      if (VmStateSet.DONE.apply(vm)) {
        Entities.merge(vm).clearReferences();
      }
 else {
        Entities.merge(vm).clearRunReferences();
      }
      db.commit();
    }
 catch (    Exception ex) {
      LOG.error(ex);
      Logs.extreme().error(ex,ex);
    }
  }
  sendTerminate(vm.getInstanceId(),vm.getPartition());
}
