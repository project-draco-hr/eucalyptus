{
  VmVolumeAttachment ret=null;
  try (final TransactionResource db=Entities.transactionFor(VmInstance.class)){
    final String schemaPrefix=Optional.fromNullable(PersistenceContexts.toSchemaName().apply("eucalyptus_cloud")).transform(Strings.append(".")).or("");
    final List<VmInstance> vms=VmInstances.list(null,Restrictions.or(Restrictions.sqlRestriction(String.format(SQL_RESTRICTION_PERSISTENT_VOLUME,schemaPrefix),volumeId,StringType.INSTANCE),Restrictions.sqlRestriction(String.format(SQL_RESTRICTION_ATTACHED_VOLUME,schemaPrefix),volumeId,StringType.INSTANCE)),Collections.<String,String>emptyMap(),null);
    for (    VmInstance vm : vms) {
      try {
        ret=vm.lookupVolumeAttachment(volumeId);
        if (ret.getVmInstance() == null) {
          ret.setVmInstance(vm);
        }
      }
 catch (      NoSuchElementException ex) {
        continue;
      }
    }
    if (ret == null) {
      throw new NoSuchElementException("VmVolumeAttachment: no volume attachment for " + volumeId);
    }
    db.commit();
    return ret;
  }
 catch (  Exception ex) {
    throw new NoSuchElementException(ex.getMessage());
  }
}
