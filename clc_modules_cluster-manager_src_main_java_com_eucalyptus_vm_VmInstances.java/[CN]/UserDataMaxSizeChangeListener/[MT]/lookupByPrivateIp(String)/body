{
  final EntityTransaction db=Entities.get(VmInstance.class);
  try {
    VmInstance vmExample=VmInstance.exampleWithPrivateIp(ip);
    VmInstance vm=(VmInstance)Entities.createCriteriaUnique(VmInstance.class).add(Example.create(vmExample)).add(Restrictions.in("state",new VmState[]{VmState.RUNNING,VmState.PENDING})).uniqueResult();
    if (vm == null) {
      throw new NoSuchElementException("VmInstance with private ip: " + ip);
    }
    db.commit();
    return vm;
  }
 catch (  Exception ex) {
    Logs.exhaust().error(ex,ex);
    throw new NoSuchElementException(ex.getMessage());
  }
 finally {
    if (db.isActive())     db.rollback();
  }
}
