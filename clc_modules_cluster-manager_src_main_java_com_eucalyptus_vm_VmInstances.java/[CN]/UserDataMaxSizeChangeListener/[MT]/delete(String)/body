{
  final Function<String,String> delete=Entities.asTransaction(VmInstance.class,new Function<String,String>(){
    @Override public String apply(    String input){
      try {
        VmInstance entity=Entities.uniqueResult(VmInstance.named(null,input));
        Entities.delete(entity);
      }
 catch (      final NoSuchElementException ex) {
        LOG.debug("Instance not found for deletion: " + instanceId);
        Logs.extreme().error(ex,ex);
      }
catch (      final Exception ex) {
        LOG.error("Error deleting instance: " + instanceId + "; "+ ex);
        Logs.extreme().error(ex,ex);
      }
      return input;
    }
  }
,VmInstances.TX_RETRIES);
  try {
    delete.apply(instanceId);
  }
 catch (  Exception ex) {
    if (PersistenceExceptions.classify(ex) == PersistenceExceptions.ErrorCategory.CONSTRAINT) {
      LOG.error("Error deleting instance (" + instanceId + ") due to constraints, retrying after clean up",ex);
      try {
        cleanUp(lookupAny(instanceId));
        delete.apply(instanceId);
      }
 catch (      Exception ex2) {
        LOG.error("Error deleting instance (" + instanceId + ") :"+ ex2);
        Logs.extreme().error(ex2,ex2);
      }
    }
 else {
      LOG.error("Error deleting instance (" + instanceId + ") :"+ ex);
      Logs.extreme().error(ex,ex);
    }
  }
}
