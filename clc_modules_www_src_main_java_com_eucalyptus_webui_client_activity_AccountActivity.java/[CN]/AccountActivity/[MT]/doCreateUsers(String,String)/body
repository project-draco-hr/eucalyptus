{
  if (currentSelected == null || currentSelected.size() != 1) {
    return;
  }
  final String accountId=this.currentSelected.toArray(new SearchResultRow[0])[0].getField(0);
  this.clientFactory.getShellView().getFooterView().showStatus(StatusType.LOADING,"Creating user " + names + " ...",0);
  this.clientFactory.getBackendService().createUsers(this.clientFactory.getLocalSession().getSession(),accountId,names,path,new AsyncCallback<ArrayList<String>>(){
    @Override public void onFailure(    Throwable caught){
      clientFactory.getShellView().getFooterView().showStatus(StatusType.ERROR,"Failed to create users",FooterView.DEFAULT_STATUS_CLEAR_DELAY);
      clientFactory.getShellView().getLogView().log(LogType.ERROR,"Creating users " + names + "for account "+ accountId+ " failed: "+ caught.getMessage());
    }
    @Override public void onSuccess(    ArrayList<String> created){
      if (created == null || created.size() < 1) {
        clientFactory.getShellView().getFooterView().showStatus(StatusType.ERROR,"Failed to create users",FooterView.DEFAULT_STATUS_CLEAR_DELAY);
        clientFactory.getShellView().getLogView().log(LogType.ERROR,"Creating users " + names + "for account "+ accountId+ " failed: 0 result returned");
      }
 else {
        clientFactory.getShellView().getFooterView().showStatus(StatusType.NONE,created.size() + " users created",FooterView.DEFAULT_STATUS_CLEAR_DELAY);
        clientFactory.getShellView().getLogView().log(LogType.INFO,"New users " + created + " created for account "+ accountId);
      }
    }
  }
);
}
