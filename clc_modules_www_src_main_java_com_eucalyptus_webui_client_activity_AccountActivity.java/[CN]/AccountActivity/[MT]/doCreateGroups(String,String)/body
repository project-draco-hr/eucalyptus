{
  if (currentSelected == null || currentSelected.size() != 1) {
    return;
  }
  final String accountId=this.currentSelected.toArray(new SearchResultRow[0])[0].getField(0);
  this.clientFactory.getShellView().getFooterView().showStatus(StatusType.LOADING,"Creating group " + names + " ...",0);
  this.clientFactory.getBackendService().createGroups(this.clientFactory.getLocalSession().getSession(),accountId,names,path,new AsyncCallback<ArrayList<String>>(){
    @Override public void onFailure(    Throwable caught){
      clientFactory.getShellView().getFooterView().showStatus(StatusType.ERROR,"Failed to create groups",FooterView.DEFAULT_STATUS_CLEAR_DELAY);
      clientFactory.getShellView().getLogView().log(LogType.ERROR,"Creating groups " + names + " for account "+ accountId+ " failed: "+ caught.getMessage());
    }
    @Override public void onSuccess(    ArrayList<String> created){
      clientFactory.getShellView().getFooterView().showStatus(StatusType.NONE,created.size() + " groups created",FooterView.DEFAULT_STATUS_CLEAR_DELAY);
      clientFactory.getShellView().getLogView().log(LogType.INFO,"New groups " + created + " created for account "+ accountId);
    }
  }
);
}
