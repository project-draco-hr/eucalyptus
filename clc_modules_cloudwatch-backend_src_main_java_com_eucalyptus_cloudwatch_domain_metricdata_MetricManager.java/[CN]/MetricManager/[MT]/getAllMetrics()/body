{
  ArrayList<MetricEntity> allResults=new ArrayList<MetricEntity>();
  for (  Class c : MetricEntityFactory.getAllClassesForEntitiesGet()) {
    EntityTransaction db=Entities.get(c);
    try {
      Criteria criteria=Entities.createCriteria(c);
      criteria=criteria.addOrder(Order.asc("creationTimestamp"));
      criteria=criteria.addOrder(Order.asc("naturalId"));
      Collection dbResults=criteria.list();
      for (      Object result : dbResults) {
        allResults.add((MetricEntity)result);
      }
      db.commit();
    }
 catch (    RuntimeException ex) {
      Logs.extreme().error(ex,ex);
      throw ex;
    }
 finally {
      if (db.isActive())       db.rollback();
    }
  }
  return allResults;
}
