{
  final JarFile jar=new JarFile(f);
  final Properties props=new Properties();
  final List<JarEntry> jarList=Collections.list(jar.entries());
  LOG.trace("-> Trying to load component info from " + f.getAbsolutePath());
  for (  final JarEntry j : jarList) {
    if (j.getName().matches(".*\\.class.{0,1}")) {
      final String classGuess=j.getName().replaceAll("/",".").replaceAll("\\.class.{0,1}","");
      try {
        final Class candidate=ClassLoader.getSystemClassLoader().loadClass(classGuess);
        classList.put(candidate,f.getAbsolutePath());
        if (ServiceJarDiscovery.class.isAssignableFrom(candidate) && !ServiceJarDiscovery.class.equals(candidate)) {
          try {
            final ServiceJarDiscovery discover=(ServiceJarDiscovery)candidate.newInstance();
            discovery.add(discover);
          }
 catch (          final Exception e) {
            LOG.fatal(e,e);
            jar.close();
            throw new RuntimeException(e);
          }
        }
      }
 catch (      final ClassNotFoundException e) {
        LOG.debug(e,e);
      }
    }
  }
  jar.close();
}
