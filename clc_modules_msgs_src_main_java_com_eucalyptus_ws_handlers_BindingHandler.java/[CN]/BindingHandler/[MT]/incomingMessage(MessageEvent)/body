{
  if (event.getMessage() instanceof MappingHttpMessage) {
    MappingHttpMessage httpMessage=(MappingHttpMessage)event.getMessage();
    BaseMessage msg=null;
    Class msgType=null;
    String namespace=null;
    try {
      OMElement elem=httpMessage.getOmMessage();
      OMNamespace omNs=elem.getNamespace();
      namespace=omNs.getNamespaceURI();
      if (context.namespaceMismatch(namespace)) {
        throw new WebServicesException("Invalid request");
      }
      context.updateBindingForNamespace(namespace);
      msgType=this.context.getBinding().getElementClass(httpMessage.getOmMessage().getLocalName());
    }
 catch (    BindingException ex) {
      if (this.context.updateForDefaultBinding(namespace)) {
        try {
          msgType=this.context.getBinding().getElementClass(httpMessage.getOmMessage().getLocalName());
        }
 catch (        Exception ex1) {
          throw new WebServicesException("Failed to find binding for namespace: " + namespace + " due to: "+ ex.getMessage(),ex);
        }
      }
    }
catch (    Exception e1) {
      LOG.error(e1.getMessage() + " while attempting to bind: " + httpMessage.getOmMessage());
      Logs.extreme().error(httpMessage.getSoapEnvelope().toString(),e1);
      if (this.context.getBinding() == null) {
        throw new WebServicesException(e1);
      }
 else {
        throw new WebServicesException("Failed to find binding for namespace: " + namespace + " due to: "+ e1.getMessage(),e1);
      }
    }
    try {
      if (httpMessage instanceof MappingHttpRequest) {
        if (msgType != null) {
          msg=(BaseMessage)this.context.getBinding().fromOM(httpMessage.getOmMessage(),msgType);
        }
 else {
          msg=(BaseMessage)this.context.getBinding().fromOM(httpMessage.getOmMessage());
        }
      }
 else {
        msg=(BaseMessage)this.context.getBinding().fromOM(httpMessage.getOmMessage());
      }
    }
 catch (    Exception e1) {
      try {
        msg=(BaseMessage)this.context.getBinding().fromOM(httpMessage.getOmMessage(),this.context.getNamespace());
      }
 catch (      Exception ex) {
        LOG.warn("FAILED TO PARSE:\n" + httpMessage.getMessageString());
        throw new WebServicesException(e1);
      }
    }
    if (httpMessage.getCorrelationId() != null && msg.getCorrelationId() != null && msg.hasRequestId()) {
      try {
        final Context ctx=Contexts.lookup(httpMessage.getCorrelationId());
        msg.regardingRequestId(msg.getCorrelationId());
        httpMessage.setCorrelationId(msg.getCorrelationId());
        Contexts.update(ctx,httpMessage.getCorrelationId());
      }
 catch (      final Exception ex) {
        ;
      }
    }
    msg.setCorrelationId(httpMessage.getCorrelationId());
    httpMessage.setMessage(msg);
  }
}
