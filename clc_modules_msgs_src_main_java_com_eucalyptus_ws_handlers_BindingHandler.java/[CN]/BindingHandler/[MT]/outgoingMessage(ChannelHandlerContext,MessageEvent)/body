{
  if (event.getMessage() instanceof MappingHttpResponse) {
    MappingHttpResponse httpResponse=(MappingHttpResponse)event.getMessage();
    OMElement omElem;
    if (httpResponse.getMessage() instanceof EucalyptusErrorMessageType || httpResponse.getMessage() == null) {
      return;
    }
 else     if (httpResponse.getMessage() instanceof ExceptionResponseType) {
      ExceptionResponseType msg=(ExceptionResponseType)httpResponse.getMessage();
      omElem=Binding.createFault(msg.getRequestType(),msg.getMessage(),Exceptions.createFaultDetails(msg.getException()));
      httpResponse.setStatus(msg.getHttpStatus());
    }
 else {
      Class targetClass=httpResponse.getMessage().getClass();
      while (!targetClass.getSimpleName().endsWith("Type")) {
        targetClass=targetClass.getSuperclass();
      }
      Class responseClass=ClassLoader.getSystemClassLoader().loadClass(targetClass.getName());
      try {
        omElem=this.binding.toOM(httpResponse.getMessage());
      }
 catch (      BindingException ex) {
        omElem=BindingManager.getDefaultBinding().toOM(httpResponse.getMessage());
      }
catch (      Exception ex) {
        if (LogLevels.DEBUG) {
          LOG.debug(ex,ex);
        }
        throw ex;
      }
    }
    httpResponse.setOmMessage(omElem);
  }
}
