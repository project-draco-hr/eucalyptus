{
  String sortSymbol="&darr;";
  if (sortUsersLastFirst) {
    sortSymbol="&uarr;";
  }
  parent.clear();
  VerticalPanel vpanel=new VerticalPanel();
  vpanel.setSpacing(5);
  parent.add(vpanel);
  int nusers=usersList.size();
  if (nusers > 0) {
    Hyperlink sort_button=new Hyperlink(sortSymbol,true,null);
    sort_button.setStyleName("euca-small-text");
    sort_button.addClickListener(new ClickListener(){
      public void onClick(      Widget sender){
        sortUsersLastFirst=!sortUsersLastFirst;
        displayUsersList(usersList,parent);
      }
    }
);
    final Grid g=new Grid(nusers + 1,6);
    g.setStyleName("euca-table");
    g.setCellPadding(6);
    g.setWidget(0,0,sort_button);
    g.setWidget(0,1,new Label("Username"));
    g.setWidget(0,2,new Label("Email"));
    g.setWidget(0,3,new Label("Name"));
    g.setWidget(0,4,new Label("Status"));
    g.setWidget(0,5,new Label("Actions"));
    g.getRowFormatter().setStyleName(0,"euca-table-heading-row");
    for (int i=0; i < nusers; i++) {
      int userIndex=i;
      if (sortUsersLastFirst) {
        userIndex=nusers - i - 1;
      }
      final UserInfoWeb u=(UserInfoWeb)usersList.get(userIndex);
      int row=i + 1;
      if ((row % 2) == 1) {
        g.getRowFormatter().setStyleName(row,"euca-table-odd-row");
      }
 else {
        g.getRowFormatter().setStyleName(row,"euca-table-even-row");
      }
      Label indexLabel=new Label(Integer.toString(userIndex));
      indexLabel.setStyleName("euca-small-text");
      g.setWidget(row,0,indexLabel);
      Label userLabel=new Label(u.getUserName());
      g.setWidget(row,1,userLabel);
      Label emailLabel=new Label(u.getEmail());
      g.setWidget(row,2,emailLabel);
      Label nameLabel=new Label(u.getRealName());
      g.setWidget(row,3,nameLabel);
      String status;
      if (!u.isApproved().booleanValue()) {
        status="unapproved";
      }
 else       if (!u.isEnabled().booleanValue()) {
        status="disabled";
      }
 else       if (!u.isConfirmed().booleanValue()) {
        status="unconfirmed";
      }
 else {
        status="active";
      }
      if (u.isAdministrator().booleanValue()) {
        status+=" & admin";
      }
      g.setWidget(row,4,new Label(status));
      HorizontalPanel ops=new HorizontalPanel();
      ops.setSpacing(3);
      Label editLabel=new Label("Edit");
      editLabel.addClickListener(new EditCallback(this,u));
      editLabel.setStyleName("euca-action-link");
      ops.add(editLabel);
      if (!u.isAdministrator().booleanValue()) {
        HTML act_button=userActionButton("Disable",u);
        if (!u.isApproved().booleanValue()) {
          act_button=userActionButton("Approve",u);
        }
 else         if (!u.isEnabled().booleanValue()) {
          act_button=userActionButton("Enable",u);
        }
        ops.add(act_button);
        Hyperlink del_button=new Hyperlink("Delete",null);
        del_button.setStyleName("euca-action-link");
        del_button.addClickListener(new ClickListener(){
          public void onClick(          Widget sender){
            displayConfirmDeletePage(u.getUserName());
          }
        }
);
        ops.add(del_button);
      }
      g.setWidget(row,5,ops);
      HorizontalPanel views=new HorizontalPanel();
      views.setSpacing(3);
      HTML inst_button=userActionButton("Instances",u);
      views.add(inst_button);
      HTML img_button=userActionButton("Images",u);
      views.add(img_button);
    }
    vpanel.add(g);
  }
 else {
    vpanel.add(new Label("No users found"));
  }
  vpanel.add(new Button("Add user",AddUserButtonListener));
}
