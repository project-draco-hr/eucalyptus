{
  doc.setWriter(new OutputStreamWriter(os));
  doc.open();
  doc.textLine("Volume Snapshot Report",1);
  doc.textLine("Begin:" + new Date(report.getBeginMs()).toString(),4);
  doc.textLine("End:" + new Date(report.getEndMs()).toString(),4);
  doc.textLine("Resource Usage Section",3);
  doc.tableOpen();
  doc.newRow().addValCol("Volume Id").addValCol("Snapshot Id").addValCol("# Snap").addValCol("Size (" + units.getSizeUnit().toString() + ")").addValCol("GB-Days");
  for (  String zoneName : report.getZones().keySet()) {
    AvailabilityZoneArtEntity zone=report.getZones().get(zoneName);
    doc.newRow().addLabelCol(0,"Zone: " + zoneName).addValCol("cumul.").addValCol("cumul.");
    addUsageCols(doc,zone.getUsageTotals().getSnapshotTotals(),units);
    for (    String accountName : zone.getAccounts().keySet()) {
      AccountArtEntity account=zone.getAccounts().get(accountName);
      doc.newRow().addLabelCol(1,"Account: " + accountName).addValCol("cumul.").addValCol("cumul.");
      addUsageCols(doc,account.getUsageTotals().getSnapshotTotals(),units);
      for (      String userName : account.getUsers().keySet()) {
        UserArtEntity user=account.getUsers().get(userName);
        doc.newRow().addLabelCol(2,"User: " + userName).addValCol("cumul.").addValCol("cumul.");
        addUsageCols(doc,user.getUsageTotals().getSnapshotTotals(),units);
        for (        String volumeUuid : user.getVolumes().keySet()) {
          VolumeArtEntity volume=user.getVolumes().get(volumeUuid);
          doc.newRow().addValCol(volume.getVolumeId()).addValCol("cumul.");
          addUsageCols(doc,volume.getSnapshotTotals(),units);
          for (          String snapId : volume.getSnapshotUsage().keySet()) {
            VolumeSnapshotUsageArtEntity snap=volume.getSnapshotUsage().get(snapId);
            doc.newRow().addValCol(volume.getVolumeId()).addValCol(snapId);
            addUsageCols(doc,snap,units);
          }
        }
      }
    }
  }
  doc.tableClose();
  doc.close();
}
