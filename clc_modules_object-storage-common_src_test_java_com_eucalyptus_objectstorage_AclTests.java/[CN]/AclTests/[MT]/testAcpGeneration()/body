{
  String canonicalId=Accounts.lookupAccountByName(UnitTestSupport.getTestAccounts().iterator().next()).getCanonicalId();
  User user=Accounts.lookupUserById(UnitTestSupport.getUsersByAccountName(UnitTestSupport.getTestAccounts().iterator().next()).get(0));
  AccessControlList acl=new AccessControlList();
  AccessControlPolicy acp=new AccessControlPolicy();
  acp.setAccessControlList(acl);
  AccessControlPolicy genAcp=AclUtils.processNewResourcePolicy(user,acp,canonicalId);
  assert(genAcp != null);
  assert(genAcp.getAccessControlList() != null);
  assert(genAcp.getOwner() != null);
  assert(genAcp.getOwner().getID() != null);
  assert(genAcp.getAccessControlList().getGrants() != null);
  assert(genAcp.getAccessControlList().getGrants().size() == 1);
  assert(genAcp.getAccessControlList().getGrants().get(0).getPermission().equals(Permission.FULL_CONTROL));
  assert(genAcp.getAccessControlList().getGrants().get(0).getGrantee().getCanonicalUser().getID().equals(canonicalId));
  AccessControlPolicy genAcp2=AclUtils.processNewResourcePolicy(user,new AccessControlPolicy(),canonicalId);
  assert(genAcp2 != null);
  assert(genAcp2.getAccessControlList() != null);
  assert(genAcp2.getAccessControlList().getGrants().get(0).getPermission().equals(Permission.FULL_CONTROL));
  assert(genAcp2.getAccessControlList().getGrants().get(0).getGrantee().getCanonicalUser().getID().equals(canonicalId));
  assert(genAcp2.getOwner() != null);
  assert(genAcp2.getOwner().getID() != null);
  assert(genAcp2.getAccessControlList().getGrants() != null);
  CanonicalUser aws=new CanonicalUser();
  aws.setDisplayName("");
  Grant grant=new Grant(new Grantee(aws),"private");
  AccessControlList cannedAcl=new AccessControlList();
  cannedAcl.getGrants().add(grant);
  AccessControlPolicy genAcp3=AclUtils.processNewResourcePolicy(user,new AccessControlPolicy(),canonicalId);
  assert(genAcp3 != null);
  assert(genAcp3.getAccessControlList() != null);
  assert(genAcp3.getAccessControlList().getGrants().get(0).getPermission().equals(Permission.FULL_CONTROL));
  assert(genAcp3.getAccessControlList().getGrants().get(0).getGrantee().getCanonicalUser().getID().equals(canonicalId));
  assert(genAcp3.getOwner() != null);
  assert(genAcp3.getOwner().getID() != null);
  assert(genAcp3.getAccessControlList().getGrants() != null);
}
