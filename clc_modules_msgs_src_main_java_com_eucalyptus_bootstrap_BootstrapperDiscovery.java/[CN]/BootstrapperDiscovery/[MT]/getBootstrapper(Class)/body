{
  if (Modifier.isAbstract(candidate.getModifiers()))   throw new InstantiationException(candidate.getName() + " is abstract.");
  if (!Bootstrapper.class.isAssignableFrom(candidate))   throw new InstantiationException(candidate + " does not conform to " + Bootstrapper.class);
  LOG.trace("Candidate bootstrapper: " + candidate.getName());
  if (!Modifier.isPublic(candidate.getDeclaredConstructor(new Class[]{}).getModifiers())) {
    Method factory=candidate.getDeclaredMethod("getInstance",new Class[]{});
    if (!Modifier.isStatic(factory.getModifiers()) || !Modifier.isPublic(factory.getModifiers())) {
      throw new InstantiationException(candidate.getCanonicalName() + " does not declare public <init>()V or public static getInstance()L;");
    }
  }
  EventRecord.here(ServiceJarDiscovery.class,EventType.BOOTSTRAPPER_ADDED,candidate.getName()).info();
  return candidate;
}
