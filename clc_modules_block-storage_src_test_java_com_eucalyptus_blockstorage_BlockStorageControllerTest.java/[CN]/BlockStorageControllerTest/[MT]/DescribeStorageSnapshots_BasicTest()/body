{
  SnapshotInfo good=new SnapshotInfo();
  good.setStatus(StorageProperties.Status.available.toString());
  good.setProgress("100");
  good.setSizeGb(new Integer(1));
  good.setShouldTransfer(Boolean.FALSE);
  good.setSnapPointId(null);
  good.setStartTime(new Date());
  good.setUserName("unittestuser0");
  good.setVolumeId("vol-0000");
  good.setSnapshotId("snap-0000");
  good.setSnapshotLocation("http://osg.host/snaps/good");
  try (TransactionResource tran=Entities.transactionFor(SnapshotInfo.class)){
    Entities.persist(good);
    tran.commit();
  }
   final LogicalStorageManager storageManager=context.mock(LogicalStorageManager.class);
  context.checking(new Expectations(){
{
    }
  }
);
  BlockStorageController bsc=new BlockStorageController(storageManager);
  bsc.checker=new BlockStorageChecker(storageManager);
  DescribeStorageSnapshotsType request=new DescribeStorageSnapshotsType();
  DescribeStorageSnapshotsResponseType response=bsc.DescribeStorageSnapshots(request);
  assertTrue("expected at least one snapshot in the response",response != null && response.getSnapshotSet() != null && response.getSnapshotSet().size() > 0);
  assertTrue("expected to find manually created snapshot in the response",response.getSnapshotSet().get(0).getSnapshotId().equals("snap-0000"));
}
