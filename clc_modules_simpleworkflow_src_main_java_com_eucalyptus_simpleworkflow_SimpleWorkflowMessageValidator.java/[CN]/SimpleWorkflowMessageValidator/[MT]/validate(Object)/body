{
  final Context context=Contexts.lookup();
  if (SimpleWorkflowConfiguration.isSystemOnly() && !context.hasAdministrativePrivileges()) {
    throw new SimpleWorkflowUnavailableException();
  }
  if (object instanceof SimpleWorkflowMessage) {
    final SimpleWorkflowMessage simpleWorkflowRequest=(SimpleWorkflowMessage)object;
    final Map<String,String> validationErrorsByField=simpleWorkflowRequest.validate();
    if (!validationErrorsByField.isEmpty()) {
      throw new SimpleWorkflowClientException("ValidationError",validationErrorsByField.values().iterator().next());
    }
  }
  return object;
}
