{
  super(builderFor(Volume.class).withTagFiltering(VolumeTag.class,"volume").withDateProperty("attachment.attach-time",FilterDateFunctions.ATTACHMENT_ATTACH_TIME).withBooleanProperty("attachment.delete-on-termination",FilterBooleanFunctions.ATTACHMENT_DELETE_ON_TERMINATION).withStringProperty("attachment.device",FilterStringFunctions.ATTACHMENT_DEVICE).withStringProperty("attachment.instance-id",FilterStringFunctions.ATTACHMENT_INSTANCE_ID).withStringProperty("attachment.status",FilterStringFunctions.ATTACHMENT_STATUS).withStringProperty("availability-zone",FilterStringFunctions.AVAILABILITY_ZONE).withDateProperty("create-time",FilterDateFunctions.CREATE_TIME).withStringProperty("size",FilterStringFunctions.SIZE).withStringProperty("snapshot-id",FilterStringFunctions.SNAPSHOT_ID).withStringProperty("status",FilterStringFunctions.STATUS).withInternalBooleanProperty("system-managed",FilterBooleanFunctions.SYSTEM_MANAGED).withStringProperty("volume-id",FilterStringFunctions.VOLUME_ID).withConstantProperty("volume-type","standard").withPersistenceFilter("availability-zone","partition").withPersistenceFilter("create-time","creationTimestamp",PersistenceFilter.Type.Date).withPersistenceFilter("size","size",PersistenceFilter.Type.Integer).withPersistenceFilter("snapshot-id","parentSnapshot").withPersistenceFilter("volume-id","displayName"));
}
