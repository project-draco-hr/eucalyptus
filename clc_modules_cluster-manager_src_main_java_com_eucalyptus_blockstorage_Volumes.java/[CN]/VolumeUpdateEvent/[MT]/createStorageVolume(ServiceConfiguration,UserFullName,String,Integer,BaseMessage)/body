{
  final String newId=ResourceIdentifiers.generateString(ID_PREFIX);
  LOG.debug("Creating volume");
  final Volume newVol=Transactions.save(Volume.create(sc,owner,snapId,newSize,newId),new Callback<Volume>(){
    @Override public void fire(    final Volume t){
      t.setState(State.GENERATING);
      try {
        final CreateStorageVolumeType req=new CreateStorageVolumeType(t.getDisplayName(),t.getSize(),snapId,null).regarding(request);
        final CreateStorageVolumeResponseType ret=AsyncRequests.sendSync(sc,req);
        LOG.debug("Volume created");
        if (t.getSize() != null && t.getSize() > 0) {
          fireUsageEvent(t,VolumeEvent.forVolumeCreate());
        }
      }
 catch (      final Exception ex) {
        LOG.error("Failed to create volume: " + t,ex);
        t.setState(State.FAIL);
        throw Exceptions.toUndeclared(ex);
      }
    }
  }
);
  return newVol;
}
