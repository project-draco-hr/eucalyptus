{
  String newId=Crypto.generateId(owner.getAccountNumber(),ID_PREFIX);
  Volume newVol=Transactions.save(new Volume(owner,newId,newSize,sc.getName(),sc.getPartition(),snapId),new Callback<Volume>(){
    @Override public void fire(    Volume t){
      t.setState(State.GENERATING);
      try {
        ListenerRegistry.getInstance().fireEvent(new StorageEvent(StorageEvent.EventType.EbsVolume,true,t.getSize(),t.getOwnerUserId(),t.getOwnerAccountNumber(),t.getScName(),t.getPartition()));
        CreateStorageVolumeType req=new CreateStorageVolumeType(t.getDisplayName(),t.getSize(),snapId,null).regardingUserRequest(request);
        ServiceDispatcher.lookup(sc).send(req);
      }
 catch (      Exception ex) {
        LOG.error("Failed to create volume: " + t.toString(),ex);
        throw new UndeclaredThrowableException(ex);
      }
    }
  }
);
  return newVol;
}
