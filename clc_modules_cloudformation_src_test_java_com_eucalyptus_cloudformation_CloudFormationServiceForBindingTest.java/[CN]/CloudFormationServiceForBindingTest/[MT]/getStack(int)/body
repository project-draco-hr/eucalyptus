{
  Stack stack=new Stack();
  ArrayList<String> capabilitiesMember=new ArrayList<String>();
  for (int k=1; k <= i; k++) {
    capabilitiesMember.add("capability-" + k + "-"+ i);
  }
  ResourceList capabilities=new ResourceList();
  capabilities.setMember(capabilitiesMember);
  stack.setCapabilities(capabilities);
  try {
    stack.setCreationTime(sdf.parse("2013-11-0" + i + " 00:00:00.000"));
  }
 catch (  ParseException e) {
    e.printStackTrace();
  }
  stack.setDescription("desc" + i);
  stack.setDisableRollback(i % 2 == 0);
  try {
    stack.setLastUpdatedTime(sdf.parse("2013-12-0" + i + " 00:00:00.000"));
  }
 catch (  ParseException e) {
    e.printStackTrace();
  }
  ArrayList<String> notificationARNMember=new ArrayList<String>();
  for (int k=1; k <= i; k++) {
    notificationARNMember.add("notificationARN-" + k + "-"+ i);
  }
  ResourceList notificationARNs=new ResourceList();
  notificationARNs.setMember(notificationARNMember);
  stack.setNotificationARNs(notificationARNs);
  ArrayList<Output> outputsMember=new ArrayList<Output>();
  for (int k=1; k <= i; k++) {
    Output output=new Output();
    output.setDescription("desc" + k);
    output.setOutputKey("key" + k);
    output.setOutputValue("value" + k);
    outputsMember.add(output);
  }
  Outputs outputs=new Outputs();
  outputs.setMember(outputsMember);
  stack.setOutputs(outputs);
  ArrayList<Parameter> parametersMember=new ArrayList<Parameter>();
  for (int k=1; k <= i; k++) {
    Parameter parameter=new Parameter();
    parameter.setParameterKey("parameterKey" + k);
    parameter.setParameterValue("parameterValue" + k);
    parametersMember.add(parameter);
  }
  Parameters parameters=new Parameters();
  parameters.setMember(parametersMember);
  stack.setParameters(parameters);
  stack.setStackId("stackId" + i);
  stack.setStackName("stackName" + i);
  stack.setStackStatus("stackStatus" + i);
  stack.setStackStatusReason("stackStatusReason" + i);
  ArrayList<Tag> tagsMember=new ArrayList<Tag>();
  for (int k=1; k <= i; k++) {
    Tag tag=new Tag();
    tag.setKey("key" + k);
    tag.setValue("value" + k);
    tagsMember.add(tag);
  }
  Tags tags=new Tags();
  tags.setMember(tagsMember);
  stack.setTags(tags);
  stack.setTimeoutInMinutes(i);
  return stack;
}
