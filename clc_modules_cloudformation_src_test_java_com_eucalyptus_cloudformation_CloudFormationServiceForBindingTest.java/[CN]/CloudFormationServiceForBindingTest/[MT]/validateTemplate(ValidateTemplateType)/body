{
  LOG.fatal("request.getTemplateBody()=" + request.getTemplateBody());
  LOG.fatal("request.getTemplateURL()=" + request.getTemplateURL());
  ValidateTemplateResponseType reply=request.getReply();
  ValidateTemplateResult validateTemplateResult=new ValidateTemplateResult();
  ArrayList<String> capabilitiesMember=new ArrayList<String>();
  for (int k=1; k <= NUM_PARAMS; k++) {
    capabilitiesMember.add("capability-" + k);
  }
  ResourceList capabilities=new ResourceList();
  capabilities.setMember(capabilitiesMember);
  validateTemplateResult.setCapabilities(capabilities);
  validateTemplateResult.setCapabilitiesReason("capabilitiesReason");
  validateTemplateResult.setDescription("description");
  ArrayList<TemplateParameter> templateParametersMember=new ArrayList<TemplateParameter>();
  for (int k=1; k <= NUM_PARAMS; k++) {
    TemplateParameter templateParameter=new TemplateParameter();
    templateParameter.setDefaultValue("defaultValue" + k);
    templateParameter.setDescription("desc" + k);
    templateParameter.setNoEcho(k % 2 == 0);
    templateParameter.setParameterKey("parameterKey" + k);
    templateParametersMember.add(templateParameter);
  }
  TemplateParameters parameters=new TemplateParameters();
  parameters.setMember(templateParametersMember);
  validateTemplateResult.setParameters(parameters);
  reply.setValidateTemplateResult(validateTemplateResult);
  return reply;
}
