{
  String[] imagePathParts=imgInfo.getImageLocation().split("/");
  GetObjectResponseType reply=null;
  GetObjectType msg=new GetObjectType(imagePathParts[0],imagePathParts[1],true,false,true);
  msg.setUserId(EucalyptusProperties.NAME);
  msg.setEffectiveUserId(EucalyptusProperties.NAME);
  reply=(GetObjectResponseType)Messaging.send(WalrusProperties.WALRUS_REF,msg);
  if (reply == null || reply.getBase64Data() == null)   throw new EucalyptusCloudException("Invalid manifest reference: " + imgInfo.getImageLocation());
  XMLParser parser=new XMLParser(reply.getBase64Data());
  String encryptedKey=parser.getValue("//ec2_encrypted_key");
  String encryptedIV=parser.getValue("//ec2_encrypted_iv");
  String signature=parser.getValue("//signature");
  String image=parser.getXML("image");
  String machineConfiguration=parser.getXML("machine_configuration");
  EntityWrapper<UserInfo> db=new EntityWrapper<UserInfo>();
  List<String> aliases=Lists.newArrayList();
  List<UserInfo> users=db.query(new UserInfo());
  for (  UserInfo user : users)   for (  CertificateInfo certInfo : user.getCertificates())   aliases.add(certInfo.getCertAlias());
  boolean found=false;
  for (  String alias : aliases)   found|=this.verifyManifestSignature(signature,alias,machineConfiguration + image);
  if (!found)   throw new EucalyptusCloudException("Invalid Manifest: Failed to verify signature.");
  try {
    PrivateKey pk=(PrivateKey)UserKeyStore.getInstance().getKey(EucalyptusProperties.NAME,EucalyptusProperties.NAME);
    Cipher cipher=Cipher.getInstance("RSA/ECB/PKCS1Padding");
    cipher.init(Cipher.DECRYPT_MODE,pk);
    cipher.doFinal(Hashes.hexToBytes(encryptedKey));
    cipher.doFinal(Hashes.hexToBytes(encryptedIV));
  }
 catch (  Exception ex) {
    throw new EucalyptusCloudException("Invalid Manifest: Failed to recover keys.");
  }
}
