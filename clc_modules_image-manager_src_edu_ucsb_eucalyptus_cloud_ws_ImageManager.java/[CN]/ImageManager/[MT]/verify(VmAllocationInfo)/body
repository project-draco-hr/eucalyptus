{
  SystemConfiguration conf=EucalyptusProperties.getSystemConfiguration();
  String walrusUrl=getStorageUrl(conf);
  RunInstancesType msg=vmAllocInfo.getRequest();
  ImageInfo searchDiskInfo=new ImageInfo(msg.getImageId());
  EntityWrapper<ImageInfo> db=new EntityWrapper<ImageInfo>();
  ImageInfo diskInfo=null;
  ArrayList<String> productCodes=Lists.newArrayList();
  try {
    diskInfo=db.getUnique(searchDiskInfo);
    for (    ProductCode p : diskInfo.getProductCodes()) {
      productCodes.add(p.getValue());
    }
  }
 catch (  EucalyptusCloudException e) {
    throw new EucalyptusCloudException("Failed to find kernel image: " + msg.getImageId());
  }
  UserInfo user=db.recast(UserInfo.class).getUnique(new UserInfo(msg.getUserId()));
  if (!diskInfo.isAllowed(user)) {
    db.rollback();
    throw new EucalyptusCloudException("You do not have permissions to run this image.");
  }
  String kernelId=this.getImageInfobyId(msg.getKernelId(),diskInfo.getKernelId(),conf.getDefaultKernel());
  if (kernelId == null) {
    db.commit();
    throw new EucalyptusCloudException("Unable to determine required kernel image.");
  }
  String ramdiskId=this.getImageInfobyId(msg.getRamdiskId(),diskInfo.getRamdiskId(),conf.getDefaultRamdisk());
  ImageInfo kernelInfo=null;
  try {
    kernelInfo=db.getUnique(new ImageInfo(kernelId));
  }
 catch (  EucalyptusCloudException e) {
    db.commit();
    throw new EucalyptusCloudException("Failed to find kernel image: " + kernelId);
  }
  if (!diskInfo.isAllowed(user)) {
    db.commit();
    throw new EucalyptusCloudException("You do not have permission to launch: " + diskInfo.getImageId());
  }
  if (!kernelInfo.isAllowed(user)) {
    db.commit();
    throw new EucalyptusCloudException("You do not have permission to launch: " + kernelInfo.getImageId());
  }
  ImageInfo ramdiskInfo=null;
  if (ramdiskId != null) {
    try {
      ramdiskInfo=db.getUnique(new ImageInfo(ramdiskId));
    }
 catch (    EucalyptusCloudException e) {
      throw new EucalyptusCloudException("Failed to find ramdisk image: " + ramdiskId);
    }
    if (!ramdiskInfo.isAllowed(user)) {
      db.commit();
      throw new EucalyptusCloudException("You do not have permission to launch: " + ramdiskInfo.getImageId());
    }
  }
  ArrayList<String> ancestorIds=this.getAncestors(msg.getUserId(),diskInfo.getImageLocation());
  Long imgSize=this.getSize(msg.getUserId(),diskInfo.getImageLocation());
  this.checkStoredImage(kernelInfo);
  this.checkStoredImage(diskInfo);
  this.checkStoredImage(ramdiskInfo);
  VmImageInfo vmImgInfo=getVmImageInfo(walrusUrl,diskInfo,kernelInfo,ramdiskInfo,productCodes);
  vmImgInfo.setAncestorIds(ancestorIds);
  vmImgInfo.setSize(imgSize);
  vmAllocInfo.setImageInfo(vmImgInfo);
  return vmAllocInfo;
}
