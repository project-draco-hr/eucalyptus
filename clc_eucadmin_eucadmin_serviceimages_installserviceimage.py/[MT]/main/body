def main():
    parser = argparse.ArgumentParser(version=eucadmin.__version__, description='install a service image')
    parser.add_argument('service', metavar='SERVICE', help='name of the service to install (required)')
    parser.add_argument('-b', '--bucket', required=True, help='name of the bucket to upload the image to (required)')
    parser.add_argument('--progress', dest='show_progress', action='store_true', default=sys.stdout.isatty(), help='show progress')
    parser.add_argument('--no-progress', dest='show_progress', action='store_false', default=sys.stdout.isatty(), help='do not show progress')
    parser.add_argument('--metadata-file', help=argparse.SUPPRESS)
    parser.add_argument('--pack', help=argparse.SUPPRESS)
    parser.add_argument('--debug', action='store_true', help='show debug output')
    args = parser.parse_args()
    try:
        md_filename = (args.metadata_file or eucadmin.serviceimages.SERVICE_METADATA_FILENAME)
        pack_filename = (args.pack or eucadmin.serviceimages.SERVICE_IMAGE_PACK_FILENAME)
        with open(md_filename) as md_file:
            metadata = yaml.load(md_file)
        install_service_image(args.service, metadata, pack_filename, args.bucket, show_progress=args.show_progress)
    except EnvironmentError as err:
        err_bits = ['{0}:'.format(os.path.basename(sys.argv[0])), 'error:']
        if getattr(err, 'strerror', None):
            err_bits.append(err.strerror)
        if getattr(err, 'filename', None):
            err_bits[(-1)] += ':'
            err_bits.append(err.filename)
        print  >> sys.stderr, ' '.join(err_bits)
        if args.debug:
            raise
    except Exception as err:
        if ((len(err.args) > 0) and err.args[0]):
            msg = err.args[0]
        else:
            msg = str(err)
        print  >> sys.stderr, '{0}: error: {1}'.format(os.path.basename(sys.argv[0]), msg)
        if args.debug:
            raise
