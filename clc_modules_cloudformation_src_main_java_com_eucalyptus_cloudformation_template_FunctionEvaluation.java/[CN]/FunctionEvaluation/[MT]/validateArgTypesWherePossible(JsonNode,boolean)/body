{
  if (jsonNode != null) {
    if (jsonNode.isArray()) {
      for (int i=0; i < jsonNode.size(); i++) {
        validateConditionSectionArgTypesWherePossible(jsonNode.get(i));
      }
    }
 else     if (jsonNode.isObject()) {
      List<String> fieldNames=Lists.newArrayList(jsonNode.fieldNames());
      for (      String key : fieldNames) {
        validateConditionSectionArgTypesWherePossible(jsonNode.get(key));
      }
      for (      IntrinsicFunction intrinsicFunction : IntrinsicFunctions.values()) {
        IntrinsicFunction.MatchResult matchResult=intrinsicFunction.evaluateMatch(jsonNode);
        if (matchResult.isMatch()) {
          intrinsicFunction.validateArgTypesWherePossible(matchResult);
          if (intrinsicFunction == IntrinsicFunctions.CONDITION && !inConditionsSection) {
            throw new ValidationErrorException("Template error: Condition token can only be used in Conditions block");
          }
          if (intrinsicFunction == IntrinsicFunctions.EQUALS && !inConditionsSection) {
            throw new ValidationErrorException("Template error: Fn::Equals cannot be partially collapsed");
          }
        }
      }
    }
  }
}
