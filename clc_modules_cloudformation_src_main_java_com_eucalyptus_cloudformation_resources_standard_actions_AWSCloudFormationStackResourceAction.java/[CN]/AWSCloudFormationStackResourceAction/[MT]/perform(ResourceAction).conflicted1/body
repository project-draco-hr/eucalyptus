{
  AWSCloudFormationStackResourceAction action=(AWSCloudFormationStackResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(CloudFormation.class);
  if (action.info.getPhysicalResourceId() == null)   return action;
  DescribeStacksType describeStacksType=MessageHelper.createMessage(DescribeStacksType.class,action.info.getEffectiveUserId());
  describeStacksType.setStackName(action.info.getPhysicalResourceId());
  DescribeStacksResponseType describeStacksResponseType=AsyncRequests.<DescribeStacksType,DescribeStacksResponseType>sendSync(configuration,describeStacksType);
  if (describeStacksResponseType.getDescribeStacksResult() == null || describeStacksResponseType.getDescribeStacksResult().getStacks() == null || describeStacksResponseType.getDescribeStacksResult().getStacks().getMember() == null || describeStacksResponseType.getDescribeStacksResult().getStacks().getMember().isEmpty()) {
    return action;
  }
  if (describeStacksResponseType.getDescribeStacksResult().getStacks().getMember().size() > 1) {
    throw new ResourceFailureException("More than one stack returned for stack " + action.info.getPhysicalResourceId());
  }
  String status=describeStacksResponseType.getDescribeStacksResult().getStacks().getMember().get(0).getStackStatus();
  if (status == null) {
    throw new ResourceFailureException("Null status for stack " + action.info.getPhysicalResourceId());
  }
  if (status.equals(Status.DELETE_COMPLETE.toString())) {
    return action;
  }
  DeleteStackType deleteStackType=MessageHelper.createMessage(DeleteStackType.class,action.info.getEffectiveUserId());
  deleteStackType.setStackName(action.info.getPhysicalResourceId());
  AsyncRequests.<DeleteStackType,DeleteStackResponseType>sendSync(configuration,deleteStackType);
  return action;
}
