{
  AWSCloudFormationStackResourceAction newAction=(AWSCloudFormationStackResourceAction)newResourceAction;
  AWSCloudFormationStackResourceAction oldAction=(AWSCloudFormationStackResourceAction)oldResourceAction;
  ServiceConfiguration configuration=Topology.lookup(CloudFormation.class);
  DescribeStacksType describeStacksType=MessageHelper.createMessage(DescribeStacksType.class,newAction.info.getEffectiveUserId());
  describeStacksType.setStackName(newAction.info.getPhysicalResourceId());
  DescribeStacksResponseType describeStacksResponseType=AsyncRequests.<DescribeStacksType,DescribeStacksResponseType>sendSync(configuration,describeStacksType);
  if (describeStacksResponseType.getDescribeStacksResult() == null || describeStacksResponseType.getDescribeStacksResult().getStacks() == null || describeStacksResponseType.getDescribeStacksResult().getStacks().getMember() == null || describeStacksResponseType.getDescribeStacksResult().getStacks().getMember().size() != 1) {
    throw new ResourceFailureException("Not exactly one stack returned for stack " + newAction.info.getPhysicalResourceId());
  }
  Outputs outputs=describeStacksResponseType.getDescribeStacksResult().getStacks().getMember().get(0).getOutputs();
  if (outputs != null && outputs.getMember() != null && !outputs.getMember().isEmpty()) {
    for (    Output output : outputs.getMember()) {
      newAction.info.getOutputAttributes().put("Outputs." + output.getOutputKey(),JsonHelper.getStringFromJsonNode(new TextNode(output.getOutputValue())));
    }
  }
  newAction.info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(newAction.info.getPhysicalResourceId())));
  return newAction;
}
