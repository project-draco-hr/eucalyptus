{
  if (args.length != 3) {
    printHelp();
    System.exit(-1);
  }
  final double errorMargin=Double.parseDouble(args[0]);
  final File checkedFile=new File(args[1]);
  final File referenceFile=new File(args[2]);
  boolean passed=true;
  BufferedReader checkedReader=null;
  BufferedReader refReader=null;
  try {
    checkedReader=new BufferedReader(new FileReader(checkedFile));
    refReader=new BufferedReader(new FileReader(referenceFile));
    final List<ReferenceLine> refLines=new ArrayList<ReferenceLine>();
    int refLineNum=0;
    for (String line=refReader.readLine(); line != null; line=refReader.readLine()) {
      if (line.length() == 0) {
        continue;
      }
      ReferenceLine refLine=null;
      try {
        refLine=ReferenceLine.parseLine(line);
      }
 catch (      ParseException pe) {
        System.err.println("Parse failed in reference file, line " + refLineNum);
        pe.printStackTrace(System.err);
        System.exit(-1);
      }
      if (refLine != null)       refLines.add(refLine);
      refLineNum++;
    }
    String[] fields;
    int lineCnt=0;
    refLineNum=0;
    outerLoop:     for (String line=checkedReader.readLine(); line != null; line=checkedReader.readLine()) {
      fields=line.split(",");
      refLineNum=0;
      for (      ReferenceLine refLine : refLines) {
        passed=passed && (refLine.shouldMatch(fields) ? refLine.doesMatch(fields,errorMargin) : true);
        if (!passed) {
          System.err.printf("Failed checkLine:%d refLine:%d\n",lineCnt,refLineNum);
          break outerLoop;
        }
        refLineNum++;
      }
      lineCnt++;
    }
  }
  finally {
    if (checkedReader != null)     checkedReader.close();
    if (refReader != null)     refReader.close();
  }
  System.exit(passed ? 0 : 1);
}
