{
  NetworkRulesGroup delGroup=new NetworkRulesGroup();
  delGroup.setName(request.getGroupName());
  this.makeDefault(request.getUserId());
  DeleteSecurityGroupResponseType reply=new DeleteSecurityGroupResponseType();
  reply.setUserId(request.getUserId());
  reply.setEffectiveUserId(request.getEffectiveUserId());
  reply.setCorrelationId(request.getCorrelationId());
  reply.set_return(false);
  EntityWrapper<UserInfo> db=new EntityWrapper<UserInfo>();
  UserInfo user=null;
  try {
    user=db.getUnique(new UserInfo(request.getUserId()));
    NetworkRulesGroup target=null;
    for (    NetworkRulesGroup g : user.getNetworkRulesGroup())     if (g.getName().equals(request.getGroupName())) {
      target=g;
      break;
    }
    if (target != null) {
      user.getNetworkRulesGroup().remove(target);
      db.getEntityManager().remove(target);
      reply.set_return(true);
    }
    db.commit();
    return reply;
  }
 catch (  EucalyptusCloudException e) {
    db.rollback();
    return reply;
  }
}
