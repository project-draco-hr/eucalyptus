{
  log.debug("GENERATING REPORT ART");
  EntityWrapper wrapper=EntityWrapper.get(ReportingInstanceCreateEvent.class);
  Map<String,InstanceArtEntity> instanceEntities=new HashMap<String,InstanceArtEntity>();
  for (  String zoneName : report.getZones().keySet()) {
    AvailabilityZoneArtEntity zone=report.getZones().get(zoneName);
    UsageTotalsArtEntity zoneUsage=zone.getUsageTotals();
    for (    String clusterName : zone.getClusters().keySet()) {
      ClusterArtEntity cluster=zone.getClusters().get(clusterName);
      UsageTotalsArtEntity clusterUsage=cluster.getUsageTotals();
      for (      String accountName : cluster.getAccounts().keySet()) {
        AccountArtEntity account=cluster.getAccounts().get(accountName);
        UsageTotalsArtEntity accountUsage=account.getUsageTotals();
        for (        String userName : account.getUsers().keySet()) {
          UserArtEntity user=account.getUsers().get(userName);
          UsageTotalsArtEntity userUsage=user.getUsageTotals();
          for (          String instanceUuid : user.getInstances().keySet()) {
            InstanceArtEntity instance=user.getInstances().get(instanceUuid);
            updateUsageTotals(userUsage,instance);
            updateUsageTotals(accountUsage,instance);
            updateUsageTotals(clusterUsage,instance);
            updateUsageTotals(zoneUsage,instance);
          }
        }
      }
    }
  }
  return report;
}
