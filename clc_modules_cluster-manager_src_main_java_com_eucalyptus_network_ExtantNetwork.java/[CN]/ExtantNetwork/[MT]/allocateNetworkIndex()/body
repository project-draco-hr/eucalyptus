{
  try {
    Transactions.one(this,new Callback<ExtantNetwork>(){
      @Override public void fire(      final ExtantNetwork input){
        if (input.getIndexes().isEmpty()) {
          input.populateIndexes();
        }
      }
    }
);
    return Transactions.transformOne(this,new Function<ExtantNetwork,SetReference<PrivateNetworkIndex,VmInstance>>(){
      @Override public SetReference<PrivateNetworkIndex,VmInstance> apply(      final ExtantNetwork input){
        for (        final PrivateNetworkIndex idx : input.getIndexes()) {
          if (ResourceAllocation.State.FREE.equals(idx.getState())) {
            try {
              return idx.allocate();
            }
 catch (            final ResourceAllocationException ex) {
              LOG.error(ex,ex);
            }
          }
        }
        throw new UndeclaredThrowableException(new NoSuchElementException("Failed to locate a free network index."));
      }
    }
);
  }
 catch (  final TransactionException ex) {
    throw ex;
  }
}
