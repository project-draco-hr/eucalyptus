{
  if (event.getMessage() instanceof MappingHttpRequest) {
    MappingHttpRequest httpRequest=(MappingHttpRequest)event.getMessage();
    Map<String,String> parameters=httpRequest.getParameters();
    if (!parameters.containsKey(SecurityParameter.AWSAccessKeyId.toString()))     throw new AuthenticationException("Missing required parameter: " + SecurityParameter.AWSAccessKeyId);
    if (!parameters.containsKey(SecurityParameter.Signature.toString()))     throw new AuthenticationException("Missing required parameter: " + SecurityParameter.Signature);
    String sig=parameters.remove(SecurityParameter.Signature.toString());
    String queryId=parameters.get(SecurityParameter.AWSAccessKeyId.toString());
    String verb=httpRequest.getMethod().getName();
    String addr=httpRequest.getServicePath();
    String headerHost=httpRequest.getHeader("Host");
    String headerPort="8773";
    if (headerHost != null && headerHost.contains(":")) {
      String[] hostTokens=headerHost.split(":");
      headerHost=hostTokens[0];
      if (hostTokens.length > 1 && hostTokens[1] != null && !"".equals(hostTokens[1])) {
        headerPort=hostTokens[1];
      }
    }
    String canonicalString=HmacUtils.makeV2SubjectString(verb,headerHost,addr,parameters);
    String canonicalStringWithPort=HmacUtils.makeV2SubjectString(verb,headerHost + ":" + headerPort,addr,parameters);
    String queryKey="xhqe5UOv5b_Eplr_anLQ0cdBgwoL96U_IDdzeQ";
    String authv2sha256=HmacUtils.checkSignature256(queryKey,canonicalString);
    String authv2sha256port=HmacUtils.checkSignature256(queryKey,canonicalStringWithPort);
    LOG.info("VERSION2-SHA256:        " + authv2sha256 + " -- "+ sig);
    LOG.info("VERSION2-SHA256-HEADER: " + authv2sha256port + " -- "+ sig);
    parameters.remove(RequiredQueryParams.SignatureVersion.toString());
    parameters.remove("SignatureMethod");
    parameters.remove(SecurityParameter.AWSAccessKeyId.toString());
  }
}
