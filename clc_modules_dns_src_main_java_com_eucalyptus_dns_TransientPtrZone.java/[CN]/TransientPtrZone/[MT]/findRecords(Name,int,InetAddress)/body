{
  if (StackConfiguration.USE_INSTANCE_DNS && name.toString().endsWith(".in-addr.arpa.")) {
    int index=name.toString().indexOf(".in-addr.arpa.");
    Name target;
    if (index > 0) {
      String ipString=name.toString().substring(0,index);
      String[] parts=ipString.split("\\.");
      String ipCandidate;
      if (parts.length == 4) {
        ipCandidate=new StringBuffer().append(parts[3]).append(".").append(parts[2]).append(".").append(parts[1]).append(".").append(parts[0]).toString();
      }
 else {
        return super.findRecords(name,type,listenerAddress);
      }
      try {
        VmInstance instance=VmInstances.lookupByPublicIp(ipCandidate);
        target=new Name(instance.getPublicDnsName() + ".");
      }
 catch (      Exception e) {
        if (VmInstances.privateIpInUse(ipCandidate))         try {
          target=new Name(VmInstances.generateDnsName(ipCandidate,DomainNames.internalSubdomain()) + ".");
        }
 catch (        Exception e1) {
          return super.findRecords(name,type,listenerAddress);
        }
 else {
          return super.findRecords(name,type,listenerAddress);
        }
      }
      SetResponse resp=new SetResponse(SetResponse.SUCCESSFUL);
      resp.addRRset(new RRset(new PTRRecord(name,DClass.IN,ttl,target)));
      return resp;
    }
 else {
      return super.findRecords(name,type,listenerAddress);
    }
  }
 else {
    return super.findRecords(name,type,listenerAddress);
  }
}
