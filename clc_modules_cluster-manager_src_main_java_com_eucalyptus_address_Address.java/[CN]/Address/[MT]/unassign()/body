{
  SplitTransition unassign=new SplitTransition(Transition.unassigning){
    public void top(){
      try {
        VmInstance vm=VmInstances.getInstance().lookup(Address.this.getInstanceId());
        EventRecord.here(Address.class,EventClass.ADDRESS,EventType.ADDRESS_UNASSIGNING).withDetails(vm.getOwner().toString(),Address.this.getName(),"instanceid",vm.getInstanceId()).withDetails("type",Address.this.isSystemOwned() ? "SYSTEM" : "USER").withDetails("cluster",Address.this.getPartition()).info();
      }
 catch (      NoSuchElementException e) {
      }
      EventRecord.here(Address.class,EventClass.ADDRESS,EventType.ADDRESS_ASSIGN).withDetails(Address.this.getOwner().toString(),Address.this.getDisplayName(),"instance",Address.this.instanceId).withDetails("instance-address",Address.this.instanceAddress).withDetails("type",Address.this.isSystemOwned() ? "SYSTEM" : "USER").info();
    }
    public void bottom(){
      Address.this.stateUuid=UUID.randomUUID().toString();
      Address.this.instanceId=UNASSIGNED_INSTANCEID;
      Address.this.instanceAddress=UNASSIGNED_INSTANCEADDR;
    }
  }
;
  if (State.impending.equals(this.atomicState.getReference())) {
    this.transition(State.impending,State.allocated,true,true,unassign);
  }
 else {
    this.transition(State.assigned,State.allocated,false,true,unassign);
  }
  return this;
}
