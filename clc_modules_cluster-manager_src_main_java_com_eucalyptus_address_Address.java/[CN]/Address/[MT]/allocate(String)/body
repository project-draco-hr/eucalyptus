{
  this.transition(State.unallocated,State.allocated,false,true,new SplitTransition(Transition.allocating){
    public void top(){
      Address.this.instanceId=UNASSIGNED_INSTANCEID;
      Address.this.instanceAddress=UNASSIGNED_INSTANCEADDR;
      Address.this.userId=userId;
      Address.addAddress(Address.this);
      try {
        Addresses.getInstance().register(Address.this);
      }
 catch (      NoSuchElementException e) {
        LOG.debug(e);
      }
      EventRecord.here(Address.class,EventClass.ADDRESS,EventType.ADDRESS_ALLOCATE).withDetails(Address.this.userId,Address.this.name,"type",Address.this.isSystemOwned() ? "SYSTEM" : "USER").info();
      Address.this.stateUuid=UUID.randomUUID().toString();
      Address.this.state.attemptMark(State.allocated,false);
    }
    public void bottom(){
    }
  }
);
  return this;
}
