{
  SplitTransition release=new SplitTransition(Transition.unallocating){
    public void top(){
      EventRecord.here(Address.class,EventClass.ADDRESS,EventType.ADDRESS_RELEASE).withDetails(Address.this.getOwner().toString(),Address.this.getDisplayName(),"type",Address.this.isSystemOwned() ? "SYSTEM" : "USER").info();
      Address.this.instanceId=UNASSIGNED_INSTANCEID;
      Address.this.instanceAddress=UNASSIGNED_INSTANCEADDR;
      Address.this.setOwner(Principals.nobodyFullName());
      Address.removeAddress(Address.this.getDisplayName());
      Address.this.stateUuid=UUID.randomUUID().toString();
      Address.this.atomicState.attemptMark(State.unallocated,false);
    }
    public void bottom(){
    }
  }
;
  if (State.impending.equals(this.atomicState.getReference())) {
    this.transition(State.impending,State.unallocated,this.isPending(),true,release);
  }
 else {
    this.transition(State.allocated,State.unallocated,false,true,release);
  }
  return this;
}
