{
  fireUsageEvent(Suppliers.ofInstance(AddressEvent.forRelease()));
  SplitTransition release=new SplitTransition(Transition.unallocating){
    public void top(){
      Address.this.instanceUuid=UNASSIGNED_INSTANCEUUID;
      Address.this.instanceId=UNASSIGNED_INSTANCEID;
      Address.this.instanceAddress=UNASSIGNED_INSTANCEADDR;
      Address.this.associationId=null;
      Address.this.networkInterfaceId=null;
      Address.this.networkInterfaceOwnerId=null;
      Address.this.privateAddress=null;
      Address.this.allocationId=null;
      Address.this.domain=null;
      Address.removeAddress(Address.this.getDisplayName());
      Address.this.setOwner(Principals.nobodyFullName());
      Address.this.stateUuid=UUID.randomUUID().toString();
      Address.this.atomicState.attemptMark(State.unallocated,false);
    }
    public void bottom(){
    }
  }
;
  if (State.impending.equals(this.atomicState.getReference())) {
    this.transition(State.impending,State.unallocated,this.isPending(),true,release);
  }
 else {
    this.transition(State.allocated,State.unallocated,false,true,release);
  }
  return this;
}
