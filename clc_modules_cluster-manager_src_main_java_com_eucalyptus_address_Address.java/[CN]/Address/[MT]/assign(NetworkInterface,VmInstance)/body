{
  final SplitTransition assign=new SplitTransition(Transition.assigning){
    public void top(){
      Address.this.setNetworkInterfaceInfo(networkInterface.getDisplayName(),networkInterface.getOwnerAccountNumber(),networkInterface.getPrivateIpAddress());
      if (vm != null) {
        Address.this.setInstanceInfo(vm.getInstanceUuid(),vm.getInstanceId(),vm.getPrivateAddress());
      }
 else {
        Address.this.setInstanceInfo(ASSIGNED_UNKNOWN_INSTANCEUUID,ASSIGNED_UNKNOWN_INSTANCEID,ASSIGNED_UNKNOWN_INSTANCEADDR);
      }
      Address.this.stateUuid=UUID.randomUUID().toString();
    }
    public void bottom(){
    }
  }
;
  if (State.impending.equals(this.atomicState.getReference())) {
    this.transition(State.impending,State.assigned,true,false,assign);
  }
 else {
    this.transition(State.allocated,State.assigned,false,false,assign);
  }
  if (vm != null)   fireUsageEvent(new Supplier<EventActionInfo<AddressAction>>(){
    @Override public EventActionInfo<AddressAction> get(){
      return AddressEvent.forAssociate(vm.getInstanceUuid(),vm.getInstanceId());
    }
  }
);
  return this;
}
