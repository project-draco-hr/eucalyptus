{
  Object value=null;
  try {
    value=getField(object,field);
  }
 catch (  IllegalArgumentException e) {
    LOG.error(e,e);
  }
  Attribute[] attrs=null;
  if (value != null) {
switch (mapping) {
case DEFAULT:
case PASSWORD:
      if (!"".equals(value)) {
        attrs=new Attribute[1];
        attrs[0]=new BasicAttribute(attrNames[0],value);
      }
    break;
case INTEGER:
  attrs=new Attribute[1];
attrs[0]=new BasicAttribute(attrNames[0],((Integer)value).toString());
break;
case BOOLEAN:
attrs=new Attribute[1];
attrs[0]=new BasicAttribute(attrNames[0],((Boolean)value) ? "TRUE" : "FALSE");
break;
case LONG:
attrs=new Attribute[1];
attrs[0]=new BasicAttribute(attrNames[0],((Long)value).toString());
break;
case CERTIFICATE:
attrs=toCertificateAttribute(value);
break;
case PERMISSION:
attrs=new Attribute[1];
attrs[0]=toPermissionAttribute(attrNames[0],value);
break;
case MEMBERSHIP:
attrs=new Attribute[1];
attrs[0]=toEucaGroupIdAttribute(attrNames[0],value);
break;
}
}
return attrs;
}
