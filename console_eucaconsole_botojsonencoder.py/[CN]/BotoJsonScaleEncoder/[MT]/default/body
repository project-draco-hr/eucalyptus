def default(self, obj):
    if issubclass(obj.__class__, EC2Object):
        values = copy.copy(obj.__dict__)
        values['__obj_name__'] = obj.__class__.__name__
        return values
    elif isinstance(obj, RegionInfo):
        return []
    elif isinstance(obj, ClcError):
        return copy.copy(obj.__dict__)
    elif isinstance(obj, Response):
        return obj.__dict__
    elif isinstance(obj, AutoScaleConnection):
        return []
    elif isinstance(obj, datetime):
        return obj.isoformat()
    elif isinstance(obj, AutoScalingGroup):
        values = copy.copy(obj.__dict__)
        values['__obj_name__'] = 'AutoScalingGroup'
        return values
    elif isinstance(obj, LaunchConfiguration):
        values = copy.copy(obj.__dict__)
        values['__obj_name__'] = 'LaunchConfiguration'
        return values
    elif isinstance(obj, Request):
        values = copy.copy(obj.__dict__)
        values['connection'] = None
        values['__obj_name__'] = 'Request'
        return values
    elif isinstance(obj, InstanceMonitoring):
        values = copy.copy(obj.__dict__)
        values['connection'] = None
        values['__obj_name__'] = 'InstanceMonitoring'
        return values
    print obj.__class__.__name__
    return super(BotoJsonWatchEncoder, self).default(obj)
