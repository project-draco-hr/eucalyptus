{
  this.event=evt;
  final Collection<Listener> listeners=evt.getListeners();
  LoadBalancer lb;
  String groupName=null;
  try {
    lb=LoadBalancers.getLoadbalancer(evt.getContext(),evt.getLoadBalancer());
    final LoadBalancerSecurityGroupCoreView group=lb.getGroup();
    if (group != null)     groupName=group.getName();
  }
 catch (  Exception ex) {
    throw new EventHandlerException("could not find the loadbalancer",ex);
  }
  final Map<String,String> securityGroupIdsToNames=lb.getCoreView().getSecurityGroupIdsToNames();
  String protocol="tcp";
  if (lb.getVpcId() == null) {
    if (groupName == null)     throw new EventHandlerException("Group name is not found");
    for (    Listener listener : listeners) {
      int port=listener.getLoadBalancerPort();
      try {
        EucalyptusActivityTasks.getInstance().authorizeSystemSecurityGroup(groupName,protocol,port);
      }
 catch (      Exception ex) {
        throw new EventHandlerException(String.format("failed to authorize %s, %s, %d",groupName,protocol,port),ex);
      }
    }
  }
 else   if (securityGroupIdsToNames.size() == 1) {
    if (securityGroupIdsToNames.values().contains(generateDefaultVPCSecurityGroupName(lb.getVpcId()))) {
      final String groupId=Iterables.getOnlyElement(securityGroupIdsToNames.keySet());
      for (      Listener listener : listeners) {
        int port=listener.getLoadBalancerPort();
        try {
          EucalyptusActivityTasks.getInstance().authorizeSystemSecurityGroup(groupId,protocol,port);
        }
 catch (        Exception ex) {
          throw new EventHandlerException(String.format("failed to authorize %s, %s, %d",groupId,protocol,port),ex);
        }
      }
    }
  }
}
