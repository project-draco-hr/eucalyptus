{
  final Collection<Listener> listeners=evt.getListeners();
  final String acctNumber=evt.getContext().getAccount().getAccountNumber();
  LoadBalancer lb;
  try {
    lb=LoadBalancers.getLoadbalancer(evt.getContext(),evt.getLoadBalancer());
  }
 catch (  Exception ex) {
    throw new EventHandlerException("could not find the loadbalancer",ex);
  }
  for (  Listener listener : listeners) {
    final PROTOCOL protocol=PROTOCOL.valueOf(listener.getProtocol().toUpperCase());
    if (protocol.equals(PROTOCOL.HTTPS) || protocol.equals(PROTOCOL.SSL)) {
      final String certArn=listener.getSSLCertificateId();
      if (certArn == null || certArn.length() <= 0)       throw new EventHandlerException("No SSLCertificateId is specified");
      final String prefix=String.format("arn:aws:iam::%s:server-certificate",acctNumber);
      if (!certArn.startsWith(prefix))       throw new EventHandlerException("SSLCertificateId is not ARN format");
      try {
        final String pathAndName=certArn.replace(prefix,"");
        final String certName=pathAndName.substring(pathAndName.lastIndexOf("/") + 1);
        final ServerCertificateType cert=EucalyptusActivityTasks.getInstance().getServerCertificate(evt.getContext().getUser().getUserId(),certName);
        if (cert == null)         throw new EventHandlerException("No SSL certificate is found with the ARN");
        if (!certArn.equals(cert.getServerCertificateMetadata().getArn()))         throw new EventHandlerException("Returned certificate's ARN doesn't match the request");
      }
 catch (      final EventHandlerException ex) {
        throw ex;
      }
catch (      final Exception ex) {
        throw new EventHandlerException("Failed to get SSL server certificate",ex);
      }
    }
  }
}
