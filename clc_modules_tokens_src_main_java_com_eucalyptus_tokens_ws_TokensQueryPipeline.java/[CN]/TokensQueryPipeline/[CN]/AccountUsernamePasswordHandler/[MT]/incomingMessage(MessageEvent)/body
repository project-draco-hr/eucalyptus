{
  if (event.getMessage() instanceof MappingHttpRequest) {
    final MappingHttpRequest httpRequest=(MappingHttpRequest)event.getMessage();
    boolean challenge=true;
    if (httpRequest.containsHeader(HttpHeaders.Names.AUTHORIZATION)) {
      final String[] authorization=httpRequest.getHeader(HttpHeaders.Names.AUTHORIZATION).split(" ",2);
      if (authorization.length == 2 && "basic".equalsIgnoreCase(authorization[0])) {
        final String[] basicUsernamePassword=B64.standard.decString(authorization[1]).split(":",2);
        final String[] encodedAccountUsername=basicUsernamePassword[0].split("@",2);
        if (basicUsernamePassword.length == 2 && encodedAccountUsername.length == 2) {
          final String account=B64.standard.decString(encodedAccountUsername[1]);
          final String username=B64.standard.decString(encodedAccountUsername[0]);
          final String passwordSubstring=basicUsernamePassword[1];
          final String[] passwords=passwordSubstring.split("@",2);
          final String password=B64.standard.decString(passwords[0]);
          final String newPassword=(passwords.length == 2) ? passwords[1] : null;
          try {
            SecurityContext.getLoginContext(new AccountUsernamePasswordCredentials(httpRequest.getCorrelationId(),account,username,password,newPassword)).login();
            challenge=false;
          }
 catch (          CredentialExpiredException e) {
            throw e;
          }
catch (          LoginException e) {
          }
        }
      }
    }
    if (challenge) {
      throw new ChallengeException();
    }
  }
}
