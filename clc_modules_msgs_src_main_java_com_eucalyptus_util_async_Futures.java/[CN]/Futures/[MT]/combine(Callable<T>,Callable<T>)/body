{
  final CheckedListenableFuture<V> resultFuture=Futures.newGenericeFuture();
  final CheckedListenableFuture<T> intermediateFuture=Futures.newGenericeFuture();
  final Callable<T> chainingCallable=new Callable<T>(){
    @Override public T call(){
      try {
        Threads.lookup(Empyrean.class,Futures.class).submit(new Runnable(){
          @Override public void run(){
            try {
              final T res=firstCall.call();
              intermediateFuture.set(res);
            }
 catch (            Exception ex) {
              intermediateFuture.setException(ex);
              resultFuture.setException(ex);
            }
          }
        }
);
        Threads.lookup(Empyrean.class,Futures.class).submit(new Runnable(){
          @Override public void run(){
            try {
              intermediateFuture.get();
              try {
                T res2=secondCall.call();
                resultFuture.set(res2.get());
              }
 catch (              Exception ex) {
                resultFuture.setException(ex);
              }
            }
 catch (            InterruptedException ex) {
              LOG.error(ex);
              Thread.currentThread().interrupt();
              resultFuture.setException(ex);
            }
catch (            ExecutionException ex) {
              resultFuture.setException(ex.getCause());
            }
catch (            Exception ex) {
              resultFuture.setException(ex);
            }
          }
        }
);
      }
 catch (      Exception ex1) {
        resultFuture.setException(ex1);
      }
      return (T)resultFuture;
    }
  }
;
  return chainingCallable;
}
