{
  if ("default".equals(clusterName)) {
    Iterable<Cluster> authorizedClusters=Iterables.filter(Clusters.getInstance().listValues(),new Predicate<Cluster>(){
      @Override public boolean apply(      final Cluster c){
        try {
          Authorizations.lookupPrivileged(Cluster.class,c.getName(),null,new ResourceLookup<Cluster>(){
            @Override public Cluster resolve(            String name) throws ResourceLookupException {
              return c;
            }
          }
);
          return true;
        }
 catch (        Exception e) {
          LOG.debug(e,e);
        }
        return false;
      }
    }
);
    Multimap<VmTypeAvailability,Cluster> sorted=Multimaps.newTreeMultimap();
    for (    Cluster c : authorizedClusters) {
      sorted.put(c.getNodeState().getAvailability(vmTypeName),c);
    }
    if (sorted.isEmpty()) {
      throw new NotEnoughResourcesAvailable("Not enough resources: no cluster is available on which you have permissions to run instances.");
    }
 else {
      return Lists.newArrayList(sorted.values());
    }
  }
 else {
    Cluster cluster=null;
    try {
      cluster=Authorizations.lookupPrivileged(Cluster.class,clusterName,null,new ResourceLookup<Cluster>(){
        @Override public Cluster resolve(        String name) throws ResourceLookupException {
          return Clusters.getInstance().lookup(name);
        }
      }
);
      if (cluster == null) {
        throw new ResourceLookupException("Can't find cluster " + clusterName);
      }
    }
 catch (    AuthException e) {
      throw new NotEnoughResourcesAvailable("Not authorized: you do not have sufficient permission to use " + clusterName,e);
    }
catch (    ResourceLookupException e) {
      throw new NotEnoughResourcesAvailable("Not enough resources: request cluster does not exist " + clusterName,e);
    }
    return Lists.newArrayList(cluster);
  }
}
