{
  RunInstancesType request=vmInfo.getRequest();
  String clusterName=request.getAvailabilityZone();
  String vmTypeName=request.getInstanceType();
  final int amount=request.getMinCount();
  Context ctx=Contexts.lookup();
  if (false) {
    throw new NotEnoughResourcesAvailable("Not authorized: you do not have sufficient permission to use " + clusterName);
  }
 else {
    String zoneName=(clusterName != null) ? clusterName : "default";
    String action=PolicySpec.requestToAction(request);
    User requestUser=Permissions.getUserById(request.getUserId());
    List<Cluster> authorizedClusters=this.doPrivilegedLookup(zoneName,vmTypeName,action,requestUser);
    int remaining=amount;
    int available=0;
    LOG.info("Found authorized clusters: " + Iterables.transform(authorizedClusters,new Function<Cluster,String>(){
      @Override public String apply(      Cluster arg0){
        return arg0.getName();
      }
    }
));
    if ((available=checkAvailability(vmTypeName,authorizedClusters)) < remaining) {
      throw new NotEnoughResourcesAvailable("Not enough resources (" + available + " in "+ zoneName+ " < "+ amount+ "): vm instances.");
    }
 else {
      List<ResourceToken> tokens=Lists.newArrayList();
      for (      ClusterNodeState state : Lists.transform(authorizedClusters,new Function<Cluster,ClusterNodeState>(){
        @Override public ClusterNodeState apply(        Cluster arg0){
          return arg0.getNodeState();
        }
      }
)) {
        try {
          int tryAmount=(remaining > state.getAvailability(vmTypeName).getAvailable()) ? state.getAvailability(vmTypeName).getAvailable() : remaining;
          ResourceToken token=state.getResourceAllocation(ctx.getCorrelationId(),ctx.getUser().getId(),vmTypeName,tryAmount);
          remaining-=token.getAmount();
          tokens.add(token);
        }
 catch (        Throwable t) {
          if (((available=checkAvailability(vmTypeName,authorizedClusters)) < remaining) || remaining > 0) {
            for (            ResourceToken token : tokens) {
              Clusters.getInstance().lookup(token.getCluster()).getNodeState().releaseToken(token);
            }
            throw new NotEnoughResourcesAvailable("Not enough resources (" + available + " in "+ zoneName+ " < "+ amount+ "): vm instances.");
          }
 else {
            LOG.error(t,t);
            throw new NotEnoughResourcesAvailable("Not enough resources (" + available + " in "+ zoneName+ " < "+ amount+ "): vm instances.");
          }
        }
      }
      vmInfo.getAllocationTokens().addAll(tokens);
    }
  }
}
