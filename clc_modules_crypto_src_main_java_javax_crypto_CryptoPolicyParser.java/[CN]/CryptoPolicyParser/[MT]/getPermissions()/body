{
  Vector result=new Vector();
  Enumeration grantEnum=grantEntries.elements();
  while (grantEnum.hasMoreElements()) {
    GrantEntry ge=(GrantEntry)grantEnum.nextElement();
    Enumeration permEnum=ge.permissionElements();
    while (permEnum.hasMoreElements()) {
      CryptoPermissionEntry pe=(CryptoPermissionEntry)permEnum.nextElement();
      if (pe.cryptoPermission.equals("javax.crypto.CryptoAllPermission")) {
        result.addElement(CryptoAllPermission.INSTANCE);
      }
 else {
        if (pe.checkParam) {
          result.addElement(new CryptoPermission(pe.alg,pe.maxKeySize,pe.algParamSpec,pe.exemptionMechanism));
        }
 else {
          result.addElement(new CryptoPermission(pe.alg,pe.maxKeySize,pe.exemptionMechanism));
        }
      }
    }
  }
  CryptoPermission[] ret=new CryptoPermission[result.size()];
  result.copyInto(ret);
  return ret;
}
