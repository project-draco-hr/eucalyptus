{
  if (e.getMessage() instanceof MappingHttpRequest) {
    MappingHttpRequest request=(MappingHttpRequest)e.getMessage();
    HttpMethod method=request.getMethod();
    if (HttpMethod.GET.equals(method)) {
      try {
        HttpResponse response=new DefaultHttpResponse(request.getProtocolVersion(),HttpResponseStatus.OK);
        String resp="";
        for (        Component c : Components.list()) {
          boolean enabledLocally=Topology.isEnabledLocally(c.getComponentId().getClass());
          resp+=String.format("name=%-20.20s enabled=%-10.10s local=%-10.10s initialized=%-10.10s\n",c.getName(),enabledLocally,c.hasLocalService(),c.getComponentId().isAvailableLocally());
        }
        ChannelBuffer buf=ChannelBuffers.wrappedBuffer(resp.getBytes(Charsets.UTF_8));
        response.setContent(buf);
        response.addHeader(HttpHeaders.Names.CONTENT_LENGTH,String.valueOf(buf.readableBytes()));
        response.addHeader(HttpHeaders.Names.CONTENT_TYPE,"text/plain; charset=UTF-8");
        ChannelFuture writeFuture=ctx.getChannel().write(response);
        writeFuture.addListener(ChannelFutureListener.CLOSE);
      }
  finally {
        Contexts.clear(request.getCorrelationId());
      }
    }
 else {
      try {
        ctx.getChannel().write(new DefaultHttpResponse(request.getProtocolVersion(),HttpResponseStatus.METHOD_NOT_ALLOWED)).addListener(ChannelFutureListener.CLOSE);
      }
  finally {
        Contexts.clear(request.getCorrelationId());
      }
    }
  }
 else {
    ctx.sendUpstream(e);
  }
}
