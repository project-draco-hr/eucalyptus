{
  RevokeSecurityGroupIngressResponseType reply=(RevokeSecurityGroupIngressResponseType)request.getReply();
  NetworkRulesGroup ruleGroup=NetworkGroupUtil.getUserNetworkRulesGroup(request.getUserId(),request.getGroupName());
  List<NetworkRule> ruleList=Lists.newArrayList();
  for (  IpPermissionType ipPerm : request.getIpPermissions()) {
    ruleList.addAll(NetworkGroupUtil.getNetworkRules(ipPerm));
  }
  if (ruleGroup.getNetworkRules().removeAll(ruleList)) {
    NetworkGroupUtil.getEntityWrapper().mergeAndCommit(ruleGroup);
  }
 else   if (request.getIpPermissions().size() == 1 && request.getIpPermissions().get(0).getIpProtocol() == null) {
    for (    NetworkRule rule : ruleList) {
      if (ruleGroup.getNetworkRules().remove(rule)) {
        reply.set_return(true);
      }
    }
    if (reply.get_return()) {
      NetworkGroupUtil.getEntityWrapper().mergeAndCommit(ruleGroup);
    }
  }
 else {
    reply.set_return(false);
    return reply;
  }
  Network changedNetwork=ruleGroup.getVmNetwork();
  Messaging.dispatch(Component.cluster.getUri().toASCIIString(),changedNetwork);
  reply.set_return(true);
  return reply;
}
