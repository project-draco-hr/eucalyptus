{
  AWSEC2RouteTableResourceAction action=(AWSEC2RouteTableResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  if (action.info.getPhysicalResourceId() == null)   return action;
  DescribeRouteTablesType describeRouteTablesType=MessageHelper.createMessage(DescribeRouteTablesType.class,action.info.getEffectiveUserId());
  describeRouteTablesType.getFilterSet().add(Filter.filter("route-table-id",action.info.getPhysicalResourceId()));
  DescribeRouteTablesResponseType describeRouteTablesResponseType=AsyncRequests.sendSync(configuration,describeRouteTablesType);
  if (describeRouteTablesResponseType.getRouteTableSet() == null || describeRouteTablesResponseType.getRouteTableSet().getItem() == null || describeRouteTablesResponseType.getRouteTableSet().getItem().isEmpty()) {
    return action;
  }
  DeleteRouteTableType DeleteRouteTableType=MessageHelper.createMessage(DeleteRouteTableType.class,action.info.getEffectiveUserId());
  DeleteRouteTableType.setRouteTableId(action.info.getPhysicalResourceId());
  DeleteRouteTableResponseType DeleteRouteTableResponseType=AsyncRequests.<DeleteRouteTableType,DeleteRouteTableResponseType>sendSync(configuration,DeleteRouteTableType);
  return action;
}
