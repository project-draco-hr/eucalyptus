{
  final ReportingInstanceEventStore eventStore=getReportingInstanceEventStore();
  persistenceLock.writeLock().lock();
  try {
    transactional(ReportingInstanceUsageEvent.class,new Function<Collection<DatedInstanceEvent>,Void>(){
      @Override public Void apply(      final Collection<DatedInstanceEvent> datedInstanceEvents){
        for (        final DatedInstanceEvent datedEvent : datedInstanceEvents) {
          final InstanceUsageEvent event=datedEvent.getInstanceEvent();
          eventStore.insertUsageEvent(event.getUuid(),event.getTimestamp(),event.getResourceName(),event.getMetric(),event.getSequenceNum(),event.getDimension(),event.getValue(),event.getValueTimestamp());
          log.debug("Wrote instance usage for: " + event.getUuid());
        }
        return null;
      }
    }
).apply(recentUsageEvents.values());
    recentUsageEvents.clear();
  }
  finally {
    persistenceLock.writeLock().unlock();
  }
}
