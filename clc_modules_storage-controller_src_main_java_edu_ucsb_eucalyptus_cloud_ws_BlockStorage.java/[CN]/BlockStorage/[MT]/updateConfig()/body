{
  EntityWrapper<StorageInfo> db=StorageController.getEntityWrapper();
  StorageInfo storageInfo;
  try {
    storageInfo=db.getUnique(new StorageInfo(StorageProperties.NAME));
    storageInfo.setMaxTotalVolumeSizeInGb(StorageProperties.MAX_TOTAL_VOLUME_SIZE);
    storageInfo.setStorageInterface(StorageProperties.iface);
    storageInfo.setMaxVolumeSizeInGB(StorageProperties.MAX_VOLUME_SIZE);
    storageInfo.setVolumesDir(StorageProperties.storageRootDirectory);
    storageInfo.setZeroFillVolumes(StorageProperties.zeroFillVolumes);
    storageInfo.setSanHost(SANManager.SAN_HOST);
    storageInfo.setSanUser(SANManager.SAN_USERNAME);
    try {
      storageInfo.setSanPassword(BlockStorageUtil.encryptSCTargetPassword(SANManager.SAN_PASSWORD));
    }
 catch (    EucalyptusCloudException e) {
      LOG.fatal("Unable to update password. " + e.getMessage());
    }
    storageInfo.setDASDevice(StorageProperties.DAS_DEVICE);
    db.commit();
  }
 catch (  EucalyptusCloudException ex) {
    try {
      storageInfo=new StorageInfo(StorageProperties.NAME,StorageProperties.MAX_TOTAL_VOLUME_SIZE,StorageProperties.iface,StorageProperties.MAX_VOLUME_SIZE,StorageProperties.storageRootDirectory,StorageProperties.zeroFillVolumes,SANManager.SAN_HOST,SANManager.SAN_USERNAME,BlockStorageUtil.encryptSCTargetPassword(SANManager.SAN_PASSWORD),StorageProperties.DAS_DEVICE);
      db.add(storageInfo);
    }
 catch (    EucalyptusCloudException e) {
      LOG.fatal("Unable to update password. " + e.getMessage());
    }
    db.commit();
  }
  blockManager.configure();
}
