{
  EucaSemaphore semaphore=EucaSemaphoreDirectory.getSolitarySemaphore(volumeId);
  try {
    try {
      semaphore.acquire();
    }
 catch (    InterruptedException ex) {
      throw new EucalyptusCloudException("semaphore could not be acquired");
    }
    Boolean shouldTransferSnapshots=true;
    List<String> returnValues=null;
    try {
      shouldTransferSnapshots=StorageInfo.getStorageInfo().getShouldTransferSnapshots();
      returnValues=blockManager.createSnapshot(volumeId,snapshotId,shouldTransferSnapshots);
    }
  finally {
      semaphore.release();
    }
    if (shouldTransferSnapshots) {
      if (returnValues.size() < 2) {
        throw new EucalyptusCloudException("Unable to transfer snapshot");
      }
      snapshotFileName=returnValues.get(0);
      String snapshotSize=returnValues.get(1);
      int retry=StorageProperties.MAX_SNAP_TRANSFER_RETRIES;
      boolean transferSuccess=false;
      int backoffTime=0;
      Random r=new Random(System.currentTimeMillis());
      while (!transferSuccess) {
        try {
          transferSnapshot(snapshotSize);
          transferSuccess=true;
        }
 catch (        Exception e) {
          LOG.warn("Transfer failed. Retrying");
          if (retry > 0) {
            retry--;
            backoffTime=r.nextInt(10);
            Thread.sleep(backoffTime * 1000);
          }
 else {
            throw new EucalyptusCloudException("Snapshot transfer failed",e);
          }
        }
      }
      try {
        blockManager.finishVolume(snapshotId);
      }
 catch (      EucalyptusCloudException ex) {
        blockManager.cleanSnapshot(snapshotId);
        LOG.error(ex);
      }
    }
    SnapshotInfo snapInfo=new SnapshotInfo(snapshotId);
    SnapshotInfo snapshotInfo=null;
    EntityWrapper<SnapshotInfo> db=StorageProperties.getEntityWrapper();
    try {
      snapshotInfo=db.getUnique(snapInfo);
      snapshotInfo.setStatus(StorageProperties.Status.available.toString());
      snapshotInfo.setProgress("100");
    }
 catch (    EucalyptusCloudException e) {
      LOG.error(e);
    }
 finally {
      db.commit();
    }
    if (snapshotInfo != null) {
      try {
        final int snapshotSize=blockManager.getSnapshotSize(snapshotInfo.getSnapshotId());
        final String volumeUuid=Transactions.find(Volume.named(null,volumeId)).getNaturalId();
        ListenerRegistry.getInstance().fireEvent(SnapShotEvent.with(SnapShotEvent.forSnapShotCreate(snapshotSize,volumeUuid,volumeId),snapshotInfo.getNaturalId(),snapshotInfo.getSnapshotId(),snapshotInfo.getUserName()));
      }
 catch (      final Throwable e) {
        LOG.error(e,e);
      }
    }
  }
 catch (  Exception ex) {
    try {
      LOG.error("Disconnecting snapshot " + snapshotId + " on failed snapshot attempt");
      blockManager.finishVolume(snapshotId);
    }
 catch (    EucalyptusCloudException e1) {
      LOG.error("Disconnecting snapshot " + snapshotId + " on failed snapshot attempt",e1);
      blockManager.cleanSnapshot(snapshotId);
    }
    SnapshotInfo snapInfo=new SnapshotInfo(snapshotId);
    EntityWrapper<SnapshotInfo> db=StorageProperties.getEntityWrapper();
    try {
      SnapshotInfo snapshotInfo=db.getUnique(snapInfo);
      snapshotInfo.setStatus(StorageProperties.Status.failed.toString());
    }
 catch (    EucalyptusCloudException e) {
      LOG.error(e);
    }
 finally {
      db.commit();
    }
    LOG.error(ex);
  }
}
