{
  long size=Long.parseLong(sizeAsString);
  File snapshotFile=new File(snapshotFileName);
  assert(snapshotFile.exists());
  FileInputStream snapInStream=null;
  try {
    snapInStream=new FileInputStream(snapshotFile);
    byte[] bytes=new byte[1024];
    if (snapInStream.read(bytes) < 0) {
      throw new EucalyptusCloudException("Unable to read snapshot file");
    }
  }
 catch (  FileNotFoundException e) {
    throw new EucalyptusCloudException(e);
  }
catch (  IOException e) {
    throw new EucalyptusCloudException(e);
  }
 finally {
    if (snapInStream != null) {
      try {
        snapInStream.close();
      }
 catch (      IOException e) {
        throw new EucalyptusCloudException(e);
      }
    }
  }
  SnapshotProgressCallback callback=new SnapshotProgressCallback(snapshotId,size,StorageProperties.TRANSFER_CHUNK_SIZE);
  Map<String,String> httpParamaters=new HashMap<String,String>();
  HttpWriter httpWriter;
  httpWriter=new HttpWriter("PUT",snapshotFile,sizeAsString,callback,volumeBucket,snapshotId,"StoreSnapshot",null,httpParamaters);
  try {
    httpWriter.run();
  }
 catch (  Exception ex) {
    LOG.error(ex,ex);
    checker.cleanFailedSnapshot(snapshotId);
  }
}
