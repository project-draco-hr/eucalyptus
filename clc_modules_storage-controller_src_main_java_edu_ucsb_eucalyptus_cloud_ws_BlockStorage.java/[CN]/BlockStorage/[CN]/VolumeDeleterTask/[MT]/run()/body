{
  EntityWrapper<VolumeInfo> db=StorageProperties.getEntityWrapper();
  try {
    VolumeInfo searchVolume=new VolumeInfo();
    searchVolume.setStatus(StorageProperties.Status.deleting.toString());
    List<VolumeInfo> volumes=db.query(searchVolume);
    db.commit();
    for (    VolumeInfo vol : volumes) {
      db=StorageProperties.getEntityWrapper();
      try {
        vol=db.getUnique(vol);
        final String volumeId=vol.getVolumeId();
        LOG.info("Volume: " + volumeId + " marked for deletion. Checking export status");
        if (Iterables.any(vol.getAttachmentTokens(),new Predicate<VolumeToken>(){
          @Override public boolean apply(          VolumeToken token){
            try {
              return token.hasActiveExports();
            }
 catch (            EucalyptusCloudException e) {
              LOG.warn("Failure checking for active exports for volume " + volumeId);
              return false;
            }
          }
        }
)) {
          LOG.warn("Volume " + volumeId + " found to be exported. Cannot delete. Skipping and will retry later");
          continue;
        }
        LOG.info("Volume: " + volumeId + " was marked for deletion with no exports found. Cleaning up...");
        try {
          blockManager.deleteVolume(volumeId);
        }
 catch (        EucalyptusCloudException e) {
          LOG.error(e,e);
          continue;
        }
        vol.setStatus(StorageProperties.Status.deleted.toString());
        EucaSemaphoreDirectory.removeSemaphore(volumeId);
        db.commit();
      }
 catch (      Exception e) {
      }
 finally {
        db.rollback();
      }
    }
  }
 catch (  Exception e) {
    LOG.error("Failed during delete task.",e);
  }
 finally {
  }
}
