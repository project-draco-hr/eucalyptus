{
  final DescribeRegionsResponseType reply=(DescribeRegionsResponseType)request.getReply();
  final Collection<String> regions=Objects.firstNonNull(request.getRegions(),Collections.<String>emptyList());
  for (  final Class<? extends ComponentId> componentIdClass : ImmutableList.of(Eucalyptus.class,Walrus.class)) {
    try {
      final Component component=Components.lookup(componentIdClass);
      final String region=component.getComponentId().name();
      if (regions.isEmpty() || regions.contains(region)) {
        final NavigableSet<ServiceConfiguration> configs=component.services();
        if (!configs.isEmpty() && Component.State.ENABLED.equals(configs.first().lookupState())) {
          reply.getRegionInfo().add(new RegionInfoType(region,ServiceUris.remotePublicify(configs.first()).toASCIIString()));
        }
      }
    }
 catch (    NoSuchElementException ex) {
      LOG.error(ex,ex);
    }
  }
  return reply;
}
