def __run_instances_cb__(self, kwargs, callback):
    try:
        ret = self.clc.run_instances(kwargs['image_id'], kwargs['min_count'], kwargs['max_count'], kwargs['key_name'], kwargs['security_groups'], kwargs['user_data'], kwargs['addressing_type'], kwargs['instance_type'], kwargs['placement'], kwargs['kernel_id'], kwargs['ramdisk_id'], kwargs['monitoring_enabled'], kwargs['subnet_id'], kwargs['block_device_map'], kwargs['disable_api_termination'], kwargs['instance_initiated_shutdown_behavior'], kwargs['private_ip_address'], kwargs['placement_group'], kwargs['client_token'], kwargs['security_group_ids'], kwargs['additional_info'], kwargs['instance_profile_name'], kwargs['instance_profile_arn'], kwargs['tenancy'])
        Threads.instance().invokeCallback(callback, Response(data=self.__normalize_instances__([ret])))
    except Exception as ex:
        Threads.instance().invokeCallback(callback, Response(error=ex))
