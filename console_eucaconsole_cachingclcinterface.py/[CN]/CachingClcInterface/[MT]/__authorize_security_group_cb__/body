def __authorize_security_group_cb__(self, kwargs, callback):
    try:
        ret = []
        for i in range(len(kwargs['ip_protocol'])):
            ret.append(self.clc.authorize_security_group(kwargs['name'], (kwargs['src_security_group_name'][i] if kwargs['src_security_group_name'] else None), (kwargs['src_security_group_owner_id'][i] if kwargs['src_security_group_owner_id'] else None), kwargs['ip_protocol'][i], kwargs['from_port'][i], kwargs['to_port'][i], (kwargs['cidr_ip'][i] if kwargs['cidr_ip'] else None), (kwargs['group_id'][i] if kwargs['group_id'] else None), (kwargs['src_security_group_group_id'][i] if kwargs['src_security_group_group_id'] else None)))
        Threads.instance().invokeCallback(callback, Response(data=ret))
    except Exception as ex:
        Threads.instance().invokeCallback(callback, Response(error=ex))
