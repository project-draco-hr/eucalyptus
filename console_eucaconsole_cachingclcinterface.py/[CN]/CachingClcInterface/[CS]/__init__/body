def __init__(self, clcinterface, config, pusher):
    self.caches = {}
    self.clc = clcinterface
    self.pusher = pusher
    pollfreq = config.getint('server', 'pollfreq')
    if (pollfreq < 5):
        pollfreq = 5
    try:
        freq = config.getint('server', 'pollfreq.zones')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['zones'] = Cache(freq, self.clc.get_all_zones)
    try:
        freq = config.getint('server', 'pollfreq.images')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['images'] = Cache(freq, self.clc.get_all_images)
    try:
        freq = config.getint('server', 'pollfreq.instances')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['instances'] = Cache(freq, self.clc.get_all_instances)
    try:
        freq = config.getint('server', 'pollfreq.keypairs')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['keypairs'] = Cache(freq, self.clc.get_all_key_pairs)
    try:
        freq = config.getint('server', 'pollfreq.groups')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['groups'] = Cache(freq, self.clc.get_all_security_groups)
    try:
        freq = config.getint('server', 'pollfreq.addresses')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['addresses'] = Cache(freq, self.clc.get_all_addresses)
    try:
        freq = config.getint('server', 'pollfreq.volumes')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['volumes'] = Cache(freq, self.clc.get_all_volumes)
    try:
        freq = config.getint('server', 'pollfreq.snapshots')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['snapshots'] = Cache(freq, self.clc.get_all_snapshots)
    try:
        freq = config.getint('server', 'pollfreq.tags')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['tags'] = Cache(freq, self.clc.get_all_tags)
