def __init__(self, clcinterface, config, pusher):
    self.caches = {}
    self.clc = clcinterface
    self.pusher = pusher
    pollfreq = config.getint('server', 'pollfreq')
    if (pollfreq < 5):
        pollfreq = 5
    try:
        freq = config.getint('server', 'pollfreq.zones')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['zones'] = Cache(freq)
    self.caches['get_zones'] = self.clc.get_all_zones
    self.caches['timer_zones'] = None
    try:
        freq = config.getint('server', 'pollfreq.images')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['images'] = Cache(freq)
    self.caches['get_images'] = self.clc.get_all_images
    self.caches['timer_images'] = None
    try:
        freq = config.getint('server', 'pollfreq.instances')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['instances'] = Cache(freq)
    self.caches['get_instances'] = self.clc.get_all_instances
    self.caches['timer_instances'] = None
    try:
        freq = config.getint('server', 'pollfreq.keypairs')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['keypairs'] = Cache(freq)
    self.caches['get_keypairs'] = self.clc.get_all_key_pairs
    self.caches['timer_keypairs'] = None
    try:
        freq = config.getint('server', 'pollfreq.groups')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['groups'] = Cache(freq)
    self.caches['get_groups'] = self.clc.get_all_security_groups
    self.caches['timer_groups'] = None
    try:
        freq = config.getint('server', 'pollfreq.addresses')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['addresses'] = Cache(freq)
    self.caches['get_addresses'] = self.clc.get_all_addresses
    self.caches['timer_addresses'] = None
    try:
        freq = config.getint('server', 'pollfreq.volumes')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['volumes'] = Cache(freq)
    self.caches['get_volumes'] = self.clc.get_all_volumes
    self.caches['timer_volumes'] = None
    try:
        freq = config.getint('server', 'pollfreq.snapshots')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['snapshots'] = Cache(freq)
    self.caches['get_snapshots'] = self.clc.get_all_snapshots
    self.caches['timer_snapshots'] = None
    try:
        freq = config.getint('server', 'pollfreq.tags')
    except ConfigParser.NoOptionError:
        freq = pollfreq
    self.caches['tags'] = Cache(freq)
    self.caches['get_tags'] = self.clc.get_all_tags
    self.caches['timer_tags'] = None
    try:
        self.min_polling = config.getboolean('server', 'min.clc.polling')
    except ConfigParser.NoOptionError:
        self.min_polling = False
