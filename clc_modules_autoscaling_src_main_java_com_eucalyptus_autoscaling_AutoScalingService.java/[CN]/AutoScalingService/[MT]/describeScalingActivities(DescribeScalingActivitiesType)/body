{
  final DescribeScalingActivitiesResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final boolean showAll=request.activityIds().remove("verbose");
  final OwnerFullName ownerFullName=ctx.hasAdministrativePrivileges() && showAll ? null : ctx.getUserFullName().asAccountFullName();
  try {
    final AutoScalingGroup group=com.google.common.base.Strings.isNullOrEmpty(request.getAutoScalingGroupName()) ? null : autoScalingGroups.lookup(ownerFullName,request.getAutoScalingGroupName());
    final List<ScalingActivity> scalingActivities=this.scalingActivities.list(ownerFullName,group,request.activityIds(),AutoScalingMetadatas.filterPrivileged());
    Collections.sort(scalingActivities,Ordering.natural().reverse().onResultOf(AbstractOwnedPersistents.createdDate()));
    Iterables.addAll(reply.getDescribeScalingActivitiesResult().getActivities().getMember(),Iterables.transform(scalingActivities,TypeMappers.lookup(ScalingActivity.class,Activity.class)));
  }
 catch (  AutoScalingMetadataNotFoundException e) {
    throw new ValidationErrorException("Auto scaling group not found: " + request.getAutoScalingGroupName());
  }
catch (  AutoScalingMetadataException e) {
    handleException(e);
  }
  return reply;
}
