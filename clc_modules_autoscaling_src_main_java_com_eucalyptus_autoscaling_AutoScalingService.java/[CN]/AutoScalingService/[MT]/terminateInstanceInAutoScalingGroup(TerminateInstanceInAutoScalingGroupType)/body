{
  final TerminateInstanceInAutoScalingGroupResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final OwnerFullName ownerFullName=ctx.hasAdministrativePrivileges() ? null : ctx.getUserFullName().asAccountFullName();
  try {
    final AutoScalingInstance instance=autoScalingInstances.lookup(ownerFullName,request.getInstanceId());
    final ScalingActivity activity=activityManager.terminateInstances(instance.getAutoScalingGroup(),Lists.newArrayList(instance));
    if (activity == null) {
      throw new ScalingActivityInProgressException("Scaling activity in progress");
    }
    reply.getTerminateInstanceInAutoScalingGroupResult().setActivity(TypeMappers.transform(activity,Activity.class));
    autoScalingInstances.delete(instance);
    final String groupArn=instance.getAutoScalingGroup().getArn();
    final Callback<AutoScalingGroup> groupCallback=new Callback<AutoScalingGroup>(){
      @Override public void fire(      final AutoScalingGroup autoScalingGroup){
        autoScalingGroup.setCapacity(autoScalingGroup.getCapacity() - 1);
        if (Objects.firstNonNull(request.getShouldDecrementDesiredCapacity(),Boolean.FALSE)) {
          autoScalingGroup.setDesiredCapacity(autoScalingGroup.getDesiredCapacity() - 1);
        }
      }
    }
;
    autoScalingGroups.update(ctx.getUserFullName().asAccountFullName(),groupArn,groupCallback);
  }
 catch (  AutoScalingMetadataNotFoundException e) {
    throw new InvalidParameterValueException("Auto scaling instance not found: " + request.getInstanceId());
  }
catch (  Exception e) {
    handleException(e);
  }
  return reply;
}
