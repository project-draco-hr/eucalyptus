{
  final SetDesiredCapacityResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  try {
    final Callback<AutoScalingGroup> groupCallback=new Callback<AutoScalingGroup>(){
      @Override public void fire(      final AutoScalingGroup autoScalingGroup){
        if (RestrictedTypes.filterPrivileged().apply(autoScalingGroup)) {
          autoScalingGroup.setDesiredCapacity(Numbers.intValue(request.getDesiredCapacity()));
        }
      }
    }
;
    autoScalingGroups.update(ctx.getUserFullName().asAccountFullName(),request.getAutoScalingGroupName(),groupCallback);
  }
 catch (  AutoScalingMetadataNotFoundException e) {
    throw new InvalidParameterValueException("Auto scaling group not found: " + request.getAutoScalingGroupName());
  }
catch (  Exception e) {
    handleException(e);
  }
  return reply;
}
