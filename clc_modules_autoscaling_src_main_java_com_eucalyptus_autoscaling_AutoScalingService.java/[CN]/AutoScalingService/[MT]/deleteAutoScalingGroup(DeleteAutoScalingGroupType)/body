{
  final DeleteAutoScalingGroupResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  try {
    final AutoScalingGroupCoreView group=autoScalingGroups.lookup(ctx.getUserFullName().asAccountFullName(),request.getAutoScalingGroupName(),TypeMappers.lookup(AutoScalingGroup.class,AutoScalingGroupCoreView.class));
    if (RestrictedTypes.filterPrivileged().apply(group)) {
      if (Objects.firstNonNull(request.getForceDelete(),Boolean.FALSE)) {
        final List<String> instanceIds=autoScalingInstances.listByGroup(group,Predicates.alwaysTrue(),AutoScalingInstances.instanceId());
        if (!instanceIds.isEmpty()) {
          final List<ScalingActivity> activities=activityManager.terminateInstances(group,instanceIds);
          if (activities == null || activities.isEmpty()) {
            throw new ScalingActivityInProgressException("Scaling activity in progress");
          }
          autoScalingInstances.deleteByGroup(group);
        }
      }
 else {
        failIfScaling(activityManager,group);
      }
      autoScalingGroups.delete(group);
    }
  }
 catch (  AutoScalingMetadataNotFoundException e) {
  }
catch (  Exception e) {
    handleException(e);
  }
  return reply;
}
