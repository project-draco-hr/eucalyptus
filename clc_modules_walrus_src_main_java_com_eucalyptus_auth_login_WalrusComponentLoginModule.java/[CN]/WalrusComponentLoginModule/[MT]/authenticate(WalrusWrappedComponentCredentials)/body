{
  Signature sig;
  boolean valid=false;
  String data=credentials.getLoginData();
  String signature=credentials.getSignature();
  try {
    try {
      PublicKey publicKey=SystemCredentialProvider.getCredentialProvider(Component.storage).getCertificate().getPublicKey();
      sig=Signature.getInstance("SHA1withRSA");
      sig.initVerify(publicKey);
      sig.update(data.getBytes());
      valid=sig.verify(Base64.decode(signature));
    }
 catch (    Exception e) {
      LOG.warn("Authentication: certificate not found in keystore");
    }
 finally {
      if (!valid && credentials.getCertString() != null) {
        try {
          X509Certificate nodeCert=Hashes.getPemCert(Base64.decode(credentials.getCertString()));
          if (nodeCert != null) {
            PublicKey publicKey=nodeCert.getPublicKey();
            sig=Signature.getInstance("SHA1withRSA");
            sig.initVerify(publicKey);
            sig.update(data.getBytes());
            valid=sig.verify(Base64.decode(signature));
          }
        }
 catch (        Exception e2) {
          LOG.error("Authentication error: " + e2.getMessage());
          return false;
        }
      }
    }
  }
 catch (  Exception ex) {
    LOG.error("Authentication error: " + ex.getMessage());
    return false;
  }
  if (valid) {
    try {
      User user;
      String queryId=credentials.getQueryId();
      if (queryId != null) {
        user=Users.lookupQueryId(queryId);
      }
 else {
        user=Users.lookupUser("admin");
        user.setAdministrator(true);
      }
      super.setCredential(queryId);
      super.setPrincipal(user);
      super.getGroups().addAll(Groups.lookupUserGroups(super.getPrincipal()));
      return true;
    }
 catch (    NoSuchUserException e) {
      LOG.error(e);
      return false;
    }
  }
  return false;
}
