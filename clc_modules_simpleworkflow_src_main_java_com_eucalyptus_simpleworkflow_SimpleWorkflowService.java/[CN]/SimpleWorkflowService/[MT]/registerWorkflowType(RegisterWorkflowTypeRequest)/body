{
  final Context ctx=Contexts.lookup();
  final UserFullName userFullName=ctx.getUserFullName();
  final AccountFullName accountFullName=userFullName.asAccountFullName();
  allocate(new Supplier<WorkflowType>(){
    @Override public WorkflowType get(){
      try {
        final Domain domain=domains.lookupByName(accountFullName,request.getDomain(),Functions.<Domain>identity());
        final WorkflowType workflowType=WorkflowType.create(userFullName,request.getName(),request.getVersion(),domain,request.getDescription(),request.getDefaultTaskList() == null ? null : request.getDefaultTaskList().getName(),request.getDefaultChildPolicy(),parsePeriod(request.getDefaultExecutionStartToCloseTimeout()),parsePeriod(request.getDefaultTaskStartToCloseTimeout()));
        return workflowTypes.save(workflowType);
      }
 catch (      Exception ex) {
        throw new RuntimeException(ex);
      }
    }
  }
,WorkflowType.class,request.getName());
  return request.reply(new SimpleWorkflowMessage());
}
