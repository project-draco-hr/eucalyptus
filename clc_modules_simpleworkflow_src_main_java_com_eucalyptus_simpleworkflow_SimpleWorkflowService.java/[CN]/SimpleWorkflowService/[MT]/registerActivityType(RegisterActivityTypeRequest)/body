{
  final Context ctx=Contexts.lookup();
  final UserFullName userFullName=ctx.getUserFullName();
  final AccountFullName accountFullName=userFullName.asAccountFullName();
  allocate(new Supplier<ActivityType>(){
    @Override public ActivityType get(){
      try {
        final Domain domain=domains.lookupByName(accountFullName,request.getDomain(),Registered,Functions.<Domain>identity());
        if (activityTypes.countByDomain(accountFullName,domain.getDisplayName()) >= SimpleWorkflowProperties.getActivityTypesPerDomain()) {
          throw upClient("LimitExceededFault","Request would exceed limit for type: activity-type");
        }
        final ActivityType activityType=ActivityType.create(userFullName,request.getName(),request.getVersion(),domain,request.getDescription(),request.getDefaultTaskList() == null ? null : request.getDefaultTaskList().getName(),parsePeriod(request.getDefaultTaskHeartbeatTimeout(),-1),parsePeriod(request.getDefaultTaskScheduleToCloseTimeout(),-1),parsePeriod(request.getDefaultTaskScheduleToStartTimeout(),-1),parsePeriod(request.getDefaultTaskStartToCloseTimeout(),-1),parsePeriod(request.getDefaultTaskPriority(),0));
        return activityTypes.save(activityType);
      }
 catch (      Exception ex) {
        throw up(ex);
      }
    }
  }
,ActivityType.class,request.getName());
  return request.reply(new SimpleWorkflowMessage());
}
