{
  final Context ctx=Contexts.lookup();
  final UserFullName userFullName=ctx.getUserFullName();
  final AccountFullName accountFullName=userFullName.asAccountFullName();
  allocate(new Supplier<ActivityType>(){
    @Override public ActivityType get(){
      try {
        final Domain domain=domains.lookupByName(accountFullName,request.getDomain(),Functions.<Domain>identity());
        final ActivityType activityType=ActivityType.create(userFullName,request.getName(),request.getVersion(),domain,request.getDescription(),request.getDefaultTaskList() == null ? null : request.getDefaultTaskList().getName(),parsePeriod(request.getDefaultTaskHeartbeatTimeout()),parsePeriod(request.getDefaultTaskScheduleToCloseTimeout()),parsePeriod(request.getDefaultTaskScheduleToStartTimeout()),parsePeriod(request.getDefaultTaskStartToCloseTimeout()));
        return activityTypes.save(activityType);
      }
 catch (      Exception ex) {
        throw new RuntimeException(ex);
      }
    }
  }
,ActivityType.class,request.getName());
  return request.reply(new SimpleWorkflowMessage());
}
