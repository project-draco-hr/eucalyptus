{
  ArtObject reportObject=new ArtObject();
  reportObject.putAttribute("ObjectTypeName","Report");
  reportObject.putAttribute("BeginMs",1104566400000l);
  reportObject.putAttribute("EndMs",1104566400000l + (86400000l * 5l));
  ArtArray zonesArray=new ArtArray();
  reportObject.putAttribute("AvailabilityZones",zonesArray);
  reportObject.putAttribute("UsageTotals","Report");
  for (int i=0; i < NUM_ZONES; i++) {
    ArtObject zoneObject=new ArtObject();
    zonesArray.add(zoneObject);
    zoneObject.putAttribute("ObjectTypeName","AvailabilityZone");
    zoneObject.putAttribute("Name","Zone-" + i);
    ArtArray accountsArray=new ArtArray();
    zoneObject.putAttribute("Accounts",accountsArray);
    for (int j=0; j < NUM_ACCOUNTS_PER_ZONE; j++) {
      ArtObject accountObject=new ArtObject();
      accountsArray.add(accountObject);
      accountObject.putAttribute("ObjectTypeName","Account");
      accountObject.putAttribute("Name","Account-" + i);
      ArtArray usersArray=new ArtArray();
      accountObject.putAttribute("Users",usersArray);
      for (int k=0; k < NUM_USERS_PER_ACCOUNT; k++) {
        ArtObject userObject=new ArtObject();
        usersArray.add(userObject);
        userObject.putAttribute("ObjectTypeName","User");
        userObject.putAttribute("Name","User-" + i);
        userObject.putAttribute("FullName","Frank P User #" + i);
        ArtArray instancesArray=new ArtArray();
        ArtArray volumesArray=new ArtArray();
        ArtArray snapshotsArray=new ArtArray();
        ArtArray elasticIpsArray=new ArtArray();
        ArtArray s3BucketsArray=new ArtArray();
        ArtArray s3ObjectsArray=new ArtArray();
        userObject.putAttribute("Instances",instancesArray);
        userObject.putAttribute("Volumes",volumesArray);
        userObject.putAttribute("Snapshots",snapshotsArray);
        userObject.putAttribute("elasticIpsArray",elasticIpsArray);
        userObject.putAttribute("s3BucketsArray",s3BucketsArray);
        userObject.putAttribute("s3ObjectsArray",s3ObjectsArray);
        String[] instanceTypes={"m1Small","c1Medium","m1Large","m1XLarge"};
        for (int instancesNum=0; instancesNum < NUM_INSTANCES_PER_USER; instancesNum++) {
          ArtObject instanceObject=new ArtObject();
          instancesArray.add(instanceObject);
          instanceObject.putAttribute("ObjectTypeName","Instance");
          instanceObject.putAttribute("InstanceType",instanceTypes[instancesNum % instanceTypes.length]);
          instanceObject.putAttribute("Id","i-a32" + instancesNum);
          ArtObject instanceUsageObject=new ArtObject();
          instanceObject.putAttribute("InstanceUsage",instanceUsageObject);
          instanceUsageObject.putAttribute("CpuPercentAverage",(double)(instancesNum * 5));
          instanceUsageObject.putAttribute("DiskIoGB",(long)(instancesNum * 2));
          instanceUsageObject.putAttribute("NetIoWithinZoneInGB",(long)(instancesNum * 3));
          instanceUsageObject.putAttribute("NetIoBetweenZonesInGB",(long)(instancesNum * 4));
          instanceUsageObject.putAttribute("NetIoPublicIpInGB",(long)(instancesNum * 5));
          instanceUsageObject.putAttribute("NetIoWithinZoneOutGB",(long)(instancesNum * 6));
          instanceUsageObject.putAttribute("NetIoBetweenZonesOutGB",(long)(instancesNum * 7));
          instanceUsageObject.putAttribute("NetIoPublicIpOutGB",(long)(instancesNum * 8));
        }
        for (int volumesNum=0; volumesNum < NUM_VOLUMES_PER_USER; volumesNum++) {
          ArtObject volumeObject=new ArtObject();
          volumesArray.add(volumeObject);
          volumeObject.putAttribute("ObjectTypeName","Volume");
          String volumeId="vol-a32" + volumesNum;
          volumeObject.putAttribute("Id",volumeId);
          long sizeGB=(long)(volumesNum * 10);
          volumeObject.putAttribute("SizeGB",sizeGB);
          volumeObject.putAttribute("ReadGB",(long)(volumesNum * 50));
          volumeObject.putAttribute("WrittenGB",(long)(volumesNum * 50));
          for (int snapshotsNum=0; snapshotsNum < NUM_SNAPSHOTS_PER_VOLUME; snapshotsNum++) {
            ArtObject snapshotObject=new ArtObject();
            snapshotsArray.add(snapshotObject);
            snapshotObject.putAttribute("ObjectTypeName","Snapshot");
            snapshotObject.putAttribute("Id","snap-" + snapshotsNum);
            snapshotObject.putAttribute("VolumeId",volumeId);
            snapshotObject.putAttribute("NumReads",(long)(snapshotsNum * 3));
            snapshotObject.putAttribute("SizeGB",sizeGB);
          }
        }
        for (int elasticIpsNum=0; elasticIpsNum < NUM_ELASTIC_IPS_PER_USER; elasticIpsNum++) {
          ArtObject elasticIpObject=new ArtObject();
          elasticIpsArray.add(elasticIpObject);
          elasticIpObject.putAttribute("ObjectTypeName","ElasticIp");
        }
        for (int s3BucketsNum=0; s3BucketsNum < NUM_S3_BUCKETS_PER_USER; s3BucketsNum++) {
          ArtObject s3BucketObject=new ArtObject();
          s3BucketsArray.add(s3BucketObject);
          s3BucketObject.putAttribute("ObjectTypeName","S3Bucket");
          s3BucketObject.putAttribute("Name","bucket-" + s3BucketsNum);
          for (int s3ObjectsNum=0; s3ObjectsNum < NUM_S3_OBJECTS_PER_BUCKET; s3ObjectsNum++) {
            ArtObject s3ObjectObject=new ArtObject();
            s3ObjectsArray.add(s3ObjectObject);
            s3ObjectObject.putAttribute("ObjectTypeName","S3Object");
            s3ObjectObject.putAttribute("Name","object-" + s3ObjectsNum);
            s3ObjectObject.putAttribute("SizeGB",(long)(s3ObjectsNum * 10));
            s3ObjectObject.putAttribute("ObjectTypeName",(long)(s3ObjectsNum * 2));
            s3ObjectObject.putAttribute("ObjectTypeName",(long)(s3ObjectsNum * 3));
          }
        }
      }
    }
  }
  return reportObject;
}
