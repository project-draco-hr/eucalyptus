{
  final User user=Accounts.lookupUserById(userId);
  final EucaS3Client s3c=EucaS3ClientFactory.getEucaS3Client(user);
  final URI uri=new URI(manifestUrl);
  String path=uri.getPath();
  if (path.startsWith("/"))   path=path.substring(1);
  if (path.toLowerCase().startsWith("services/objectstorage/"))   path=path.substring("services/objectstorage/".length());
  final String[] tokens=path.split("/");
  String keyObj=tokens[tokens.length - 1];
  final String keyDir=tokens[tokens.length - 2];
  keyObj=keyObj.substring(0,keyObj.lastIndexOf("manifest.xml")) + "manifest.xml";
  final String key=String.format("%s/%s",keyDir,keyObj);
  String bucket=null;
  if (tokens.length > 2) {
    bucket=tokens[0];
  }
 else {
    bucket=uri.getHost();
    bucket=bucket.substring(0,bucket.indexOf("."));
  }
  try {
    final ObjectListing listing=s3c.listObjects(bucket);
    final List<S3ObjectSummary> objects=listing.getObjectSummaries();
    final Set<String> keySet=Sets.newHashSet();
    for (    final S3ObjectSummary object : objects) {
      keySet.add(object.getKey());
    }
    final ImageManifestFile manifestFile=new ImageManifestFile(manifestUrl,ImportImageManifest.INSTANCE);
    final String manifest=manifestFile.getManifest();
    final List<String> partsKey=getPartsKey(manifest);
    for (    final String keyName : partsKey) {
      if (!keySet.contains(keyName)) {
        return false;
      }
    }
    return true;
  }
 catch (  final Exception ex) {
    LOG.warn("Failed to check parts of the import manifest",ex);
    return false;
  }
}
