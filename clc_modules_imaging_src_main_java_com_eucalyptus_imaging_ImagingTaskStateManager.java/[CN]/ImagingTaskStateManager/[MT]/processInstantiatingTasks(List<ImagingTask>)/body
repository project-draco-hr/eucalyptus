{
  for (  final ImagingTask task : tasks) {
    if (!(task instanceof ImportInstanceImagingTask)) {
      try {
        ImagingTasks.transitState(task,ImportTaskState.INSTANTIATING,ImportTaskState.COMPLETED,ImportTaskState.STATE_MSG_DONE);
      }
 catch (      final Exception ex) {
        ;
      }
    }
    final ImportInstanceImagingTask instanceTask=(ImportInstanceImagingTask)task;
    final ConversionTask conversionTask=instanceTask.getTask();
    if (conversionTask.getImportInstance() == null) {
      LOG.warn("Import instance task should contain ImportInstanceTaskDetail");
      continue;
    }
    String instanceId=conversionTask.getImportInstance().getInstanceId();
    if (instanceId != null && instanceId.length() > 0) {
      try {
        ImagingTasks.transitState(task,ImportTaskState.INSTANTIATING,ImportTaskState.COMPLETED,ImportTaskState.STATE_MSG_DONE);
      }
 catch (      final Exception ex) {
        LOG.error("Failed to update task's state to completed",ex);
      }
      continue;
    }
    String imageId=instanceTask.getImageId();
    if (imageId != null && imageId.length() > 0) {
      try {
        String groupName=null;
        if (instanceTask.getLaunchSpecGroupNames() != null && instanceTask.getLaunchSpecGroupNames().size() > 0) {
          groupName=instanceTask.getLaunchSpecGroupNames().get(0);
        }
        String userData=null;
        if (instanceTask.getLaunchSpecUserData() != null && instanceTask.getLaunchSpecUserData().length() > 0) {
          userData=instanceTask.getLaunchSpecUserData();
        }
        String instanceType=null;
        if (instanceTask.getLaunchSpecInstanceType() != null && instanceTask.getLaunchSpecInstanceType().length() > 0) {
          instanceType=instanceTask.getLaunchSpecInstanceType();
        }
        String availabilityZone=null;
        if (instanceTask.getLaunchSpecAvailabilityZone() != null && instanceTask.getLaunchSpecAvailabilityZone().length() > 0) {
          availabilityZone=instanceTask.getLaunchSpecAvailabilityZone();
        }
        String keyName=null;
        if (instanceTask.getLaunchSpecKeyName() != null && instanceTask.getLaunchSpecKeyName().length() > 0) {
          keyName=instanceTask.getLaunchSpecKeyName();
        }
        Boolean monitoringEnabled=instanceTask.getLaunchSpecMonitoringEnabled();
        boolean monitoring=false;
        if (monitoringEnabled != null && monitoringEnabled.booleanValue())         monitoring=true;
        instanceId=EucalyptusActivityTasks.getInstance().runInstancesAsUser(instanceTask.getOwnerUserId(),imageId,groupName,userData,instanceType,availabilityZone,monitoring,keyName);
        conversionTask.getImportInstance().setInstanceId(instanceId);
        ImagingTasks.updateTaskInJson(instanceTask);
      }
 catch (      final Exception ex) {
        LOG.error("Failed to run instances after conversion task",ex);
        try {
          ImagingTasks.transitState(instanceTask,ImportTaskState.INSTANTIATING,ImportTaskState.COMPLETED,String.format("Image registered: %s, but run instance failed",imageId));
        }
 catch (        final Exception ex1) {
          ImagingTasks.setState(instanceTask,ImportTaskState.FAILED,ImportTaskState.STATE_MSG_RUN_FAILURE);
        }
      }
      continue;
    }
    final List<String> snapshotIds=instanceTask.getSnapshotIds();
    if (snapshotIds != null && snapshotIds.size() > 0) {
      try {
        final List<Snapshot> snapshots=EucalyptusActivityTasks.getInstance().describeSnapshotsAsUser(instanceTask.getOwnerUserId(),snapshotIds);
        int numCompleted=0;
        int numError=0;
        for (        final Snapshot snapshot : snapshots) {
          if ("completed".equals(snapshot.getStatus()))           numCompleted++;
 else           if ("error".equals(snapshot.getStatus()) || "failed".equals(snapshot.getStatus()))           numError++;
        }
        if (numError > 0) {
          ImagingTasks.setState(instanceTask,ImportTaskState.FAILED,ImportTaskState.STATE_MSG_SNAPSHOT_FAILURE);
        }
 else         if (numCompleted == snapshotIds.size()) {
          String snapshotId=null;
          if (snapshots.size() > 1) {
            LOG.warn("More than one snapshots found for import-instance task " + instanceTask.getDisplayName());
          }
          snapshotId=snapshotIds.get(0);
          final String imageName=String.format("image-%s",instanceTask.getDisplayName());
          final String description=conversionTask.getImportInstance().getDescription();
          final String architecture=instanceTask.getLaunchSpecArchitecture();
          String platform=null;
          if (conversionTask.getImportInstance().getPlatform() != null && conversionTask.getImportInstance().getPlatform().length() > 0)           platform=conversionTask.getImportInstance().getPlatform().toLowerCase();
          try {
            imageId=EucalyptusActivityTasks.getInstance().registerEBSImageAsUser(instanceTask.getOwnerUserId(),snapshotId,imageName,architecture,platform,description,false);
            if (imageId == null)             throw new Exception("Null image id");
            ImagingTasks.setImageId(instanceTask,imageId);
          }
 catch (          final Exception ex) {
            ImagingTasks.setState(instanceTask,ImportTaskState.FAILED,ImportTaskState.STATE_MSG_REGISTER_FAILURE);
          }
        }
      }
 catch (      final Exception ex) {
        ImagingTasks.setState(instanceTask,ImportTaskState.FAILED,ImportTaskState.STATE_MSG_REGISTER_FAILURE);
      }
      continue;
    }
    final List<ImportInstanceVolumeDetail> volumes=conversionTask.getImportInstance().getVolumes();
    if (volumes == null || volumes.size() <= 0) {
      ImagingTasks.setState(instanceTask,ImportTaskState.FAILED,ImportTaskState.STATE_MSG_TASK_INSUFFICIENT_PARAMETERS + ":volume");
    }
    final List<String> volumeIds=Lists.newArrayList();
    for (    final ImportInstanceVolumeDetail volume : volumes) {
      if (volume.getVolume() == null || volume.getVolume().getId() == null)       continue;
      volumeIds.add(volume.getVolume().getId());
    }
    if (volumeIds.size() <= 0) {
      ImagingTasks.setState(instanceTask,ImportTaskState.FAILED,ImportTaskState.STATE_MSG_TASK_INSUFFICIENT_PARAMETERS + ":volume");
    }
    for (    final String volumeId : volumeIds) {
      try {
        final String snapshotId=EucalyptusActivityTasks.getInstance().createSnapshotAsUser(instanceTask.getOwnerUserId(),volumeId);
        ImagingTasks.addSnapshotId(instanceTask,snapshotId);
      }
 catch (      final Exception ex) {
        ImagingTasks.setState(instanceTask,ImportTaskState.FAILED,ImportTaskState.STATE_MSG_SNAPSHOT_FAILURE);
        break;
      }
    }
  }
}
