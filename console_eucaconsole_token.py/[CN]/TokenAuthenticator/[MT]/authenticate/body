def authenticate(self, account, user, passwd, new_passwd=None):
    try:
        req = urllib2.Request(self.auth_url)
        if new_passwd:
            auth_string = ('%s@%s;%s@%s' % (base64.b64encode(user), base64.b64encode(account), base64.b64encode(passwd), new_passwd))
        else:
            auth_string = ('%s@%s:%s' % (base64.b64encode(user), base64.b64encode(account), passwd))
        encoded_auth = base64.b64encode(auth_string)
        req.add_header('Authorization', ('Basic %s' % encoded_auth))
        response = urllib2.urlopen(req, timeout=15)
        body = response.read()
        creds = Credentials(None)
        h = boto.handler.XmlHandler(creds, None)
        xml.sax.parseString(body, h)
        logging.info(((('authenticated user: ' + account) + '/') + user))
        return creds
    except urllib2.URLError as err:
        if issubclass(err.__class__, urllib2.HTTPError):
            raise eucaconsole.EuiException(err.code, 'Not Authorized')
        if issubclass(err.__class__, urllib2.URLError):
            raise eucaconsole.EuiException(504, 'Timed out')
