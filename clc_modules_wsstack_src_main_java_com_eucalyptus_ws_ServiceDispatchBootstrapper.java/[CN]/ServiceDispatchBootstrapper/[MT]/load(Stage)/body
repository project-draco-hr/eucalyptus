{
  LOG.trace("Touching class: " + ServiceDispatcher.class);
  Component eucalyptus=Components.lookup(Components.delegate.eucalyptus);
  Component db=Components.lookup(Components.delegate.db);
  for (  com.eucalyptus.bootstrap.Component c : com.eucalyptus.bootstrap.Component.values()) {
    if (c.isDummy()) {
      LOG.info(EventRecord.here(ServiceVerifyBootstrapper.class,EventType.COMPONENT_INFO,c.name(),"dummy"));
      continue;
    }
 else {
      try {
        LOG.info(EventRecord.here(ServiceVerifyBootstrapper.class,EventType.COMPONENT_INFO,c.name(),c.getUri().toASCIIString()));
        Component comp=Components.lookup(c);
        if (eucalyptus.getLifecycle().isLocal()) {
        }
 else {
        }
        eucalyptus.getLifecycle().setHost(db.getLifecycle().getHost());
      }
 catch (      NoSuchElementException e) {
        throw Exceptions.uncatchable("Failed to lookup required component: " + c.name());
      }
    }
  }
  if (!eucalyptus.getLifecycle().isLocal()) {
    eucalyptus.getLifecycle().setHost(db.getLifecycle().getHost());
    registerComponent(Components.delegate.eucalyptus,new RemoteConfiguration(Components.delegate.eucalyptus,eucalyptus.getLifecycle().getUri()));
    Components.delegate.jetty.setHostAddress(Components.delegate.db.getHostAddress());
    registerComponent(Components.delegate.jetty,new RemoteConfiguration(Components.delegate.jetty,Components.delegate.jetty.getUri()));
    Components.delegate.cluster.setHostAddress(Components.delegate.db.getHostAddress());
    registerComponent(Components.delegate.cluster,new RemoteConfiguration(Components.delegate.cluster,Components.delegate.cluster.getUri()));
    Components.delegate.dns.setHostAddress(Components.delegate.db.getHostAddress());
    registerComponent(Components.delegate.dns,new RemoteConfiguration(Components.delegate.dns,Components.delegate.dns.getUri()));
  }
 else   if (Components.delegate.eucalyptus.isLocal()) {
    try {
      registerLocalComponent(Components.delegate.db);
      Components.delegate.db.setHostAddress("127.0.0.1");
      System.setProperty("euca.db.url",Components.delegate.db.getUri().toASCIIString());
      registerLocalComponent(Components.delegate.dns);
      registerLocalComponent(Components.delegate.eucalyptus);
      registerLocalComponent(Components.delegate.cluster);
      registerLocalComponent(Components.delegate.jetty);
    }
 catch (    Exception e) {
      LOG.fatal(e,e);
      return false;
    }
  }
  if (!Components.delegate.walrus.isEnabled() || !Components.delegate.walrus.isLocal()) {
    List<WalrusConfiguration> walri=Configuration.getWalrusConfigurations();
    for (    WalrusConfiguration w : walri) {
      try {
        if (NetworkUtil.testLocal(w.getHostName())) {
          Components.delegate.walrus.markLocal();
          registerLocalComponent(Components.delegate.walrus);
          break;
        }
 else {
          Components.delegate.walrus.setHostAddress(w.getHostName());
          registerComponent(Components.delegate.walrus,w);
          break;
        }
      }
 catch (      Exception e) {
        LOG.error("Failed to create walrus service proxy: " + e);
      }
      break;
    }
  }
 else {
    registerLocalComponent(Components.delegate.walrus);
  }
  List<StorageControllerConfiguration> scs=Configuration.getStorageControllerConfigurations();
  boolean hasLocal=false;
  for (  StorageControllerConfiguration sc : scs) {
    try {
      if (NetworkUtil.testLocal(sc.getHostName())) {
        hasLocal=true;
      }
 else {
        registerComponent(Components.delegate.storage,sc);
      }
    }
 catch (    Exception e) {
      LOG.error("Failed to create storage controller " + sc.getName() + " service proxy: "+ e);
    }
    if (hasLocal) {
      Components.delegate.storage.markLocal();
      System.setProperty("euca.storage.name",sc.getName());
      LOG.info(LogUtil.subheader("Setting euca.storage.name=" + sc.getName() + " for: "+ LogUtil.dumpObject(sc)));
      registerLocalComponent(Components.delegate.storage);
      hasLocal=false;
    }
  }
  return true;
}
