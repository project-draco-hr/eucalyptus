{
  for (  ComponentId c : ComponentIds.list()) {
    if (c.hasDispatcher() && c.isAlwaysLocal()) {
      try {
        Component comp=Components.lookup(c);
      }
 catch (      NoSuchElementException e) {
        throw BootstrapException.throwFatal("Failed to lookup component which is alwaysLocal: " + c.name(),e);
      }
    }
 else     if (c.hasDispatcher()) {
      try {
        Component comp=Components.lookup(c);
      }
 catch (      NoSuchElementException e) {
        Exceptions.eat("Failed to lookup component which may have dispatcher references: " + c.name(),e);
      }
    }
  }
  LOG.trace("Touching class: " + ServiceDispatcher.class);
  boolean failed=false;
  Component euca=Components.lookup(Eucalyptus.class);
  for (  final Component comp : Components.list()) {
    EventRecord.here(ServiceVerifyBootstrapper.class,EventType.COMPONENT_INFO,comp.getName(),comp.isAvailableLocally().toString()).info();
    for (    final ServiceConfiguration s : comp.lookupServiceConfigurations()) {
      if (euca.isLocal() && euca.getComponentId().hasDispatcher()) {
        Threads.lookup(Empyrean.class,ServiceDispatchBootstrapper.class).submit(new Runnable(){
          @Override public void run(){
            try {
              comp.loadService(s).get();
            }
 catch (            ServiceRegistrationException ex) {
              LOG.error(ex,ex);
            }
catch (            Throwable ex) {
              Exceptions.trace("load(): Building service failed: " + Components.componentToString().apply(comp),ex);
            }
          }
        }
);
      }
    }
  }
  return true;
}
