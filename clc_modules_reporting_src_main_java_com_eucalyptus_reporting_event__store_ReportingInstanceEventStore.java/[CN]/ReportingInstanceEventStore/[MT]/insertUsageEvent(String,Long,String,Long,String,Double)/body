{
  Preconditions.checkNotNull(uuid,"Uuid is required");
  Preconditions.checkNotNull(timestamp,"Timestamp is required");
  Preconditions.checkNotNull(metric,"Metric is required");
  Preconditions.checkNotNull(sequenceNum,"SequenceNum is required");
  Preconditions.checkNotNull(dimension,"Dimension is required");
  Preconditions.checkNotNull(value,"value is required");
  InstanceMetricDimensionKey key=new InstanceMetricDimensionKey(uuid,metric,dimension);
  if (!metricInfoMap.containsKey(key)) {
    metricInfoMap.put(key,new MetricInfo());
  }
  MetricInfo info=metricInfoMap.get(key);
  if (sequenceNum < info.lastSequenceNum) {
    info.sequenceOffset+=info.lastSequenceNum;
    info.valueOffset+=info.lastValue;
  }
  info.lastSequenceNum=sequenceNum;
  info.lastValue=value;
  info.lastEventArrived=System.currentTimeMillis();
  if (eventCnt++ % PURGE_EVERY_NUM_EVENTS == 0)   purgeMetricInfo();
  persist(new ReportingInstanceUsageEvent(uuid,metric,sequenceNum + info.sequenceOffset,dimension,value + info.valueOffset,timestamp));
}
