{
  String identifier="";
  Context ctx=Contexts.lookup();
  if (!ctx.hasAdministrativePrivileges()) {
    Ats ats=findPolicyAnnotations(rscType);
    PolicyVendor vendor=ats.get(PolicyVendor.class);
    PolicyResourceType type=ats.get(PolicyResourceType.class);
    String action=getIamActionByMessageType();
    AuthContextSupplier userContext=ctx.getAuthContext();
    if (!Permissions.isAuthorized(vendor.value(),type.value(),identifier,null,action,userContext)) {
      throw new AuthException("Not authorized to create: " + type.value() + " by user: "+ ctx.getUserFullName());
    }
    final Lock lock=allocationInterner.intern(new AllocationScope(vendor.value(),type.value(),userContext.get().getAccountNumber())).lock();
    lock.lock();
    try {
      if (!Permissions.canAllocate(vendor.value(),type.value(),identifier,action,userContext,(long)quantity)) {
        throw new AuthQuotaException(type.value(),"Quota exceeded while trying to create: " + type.value() + " by user: "+ ctx.getUserFullName());
      }
      return allocator.get();
    }
  finally {
      lock.unlock();
    }
  }
 else {
    return allocator.get();
  }
}
