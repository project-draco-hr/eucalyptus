{
  if (Ats.from(candidate).has(ResourceUsageMetricFunction.class) && Function.class.isAssignableFrom(candidate)) {
    ResourceUsageMetricFunction measures=Ats.from(candidate).get(ResourceUsageMetricFunction.class);
    Class measuredType=measures.value();
    RestrictedTypes.usageMetricFunctions.put(measuredType,(Function<OwnerFullName,Long>)Classes.newInstance(candidate));
    return true;
  }
 else   if (Ats.from(candidate).has(ResourceQuantityMetricFunction.class) && Function.class.isAssignableFrom(candidate)) {
    ResourceQuantityMetricFunction measures=Ats.from(candidate).get(ResourceQuantityMetricFunction.class);
    Class measuredType=measures.value();
    RestrictedTypes.quantityMetricFunctions.put(measuredType,(Function<OwnerFullName,Long>)Classes.newInstance(candidate));
    return true;
  }
 else {
    return false;
  }
}
