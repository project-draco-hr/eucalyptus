{
  final Ats ats=Ats.inClassHierarchy(msgType);
  if (ats.has(PolicyVendor.class)) {
    return ats.get(PolicyVendor.class).value();
  }
  if (ats.has(PolicyAction.class)) {
    return ats.get(PolicyAction.class).vendor();
  }
  if (ats.has(ComponentMessage.class)) {
    final Class<? extends ComponentId> componentIdClass=ats.get(ComponentMessage.class).value();
    final Ats componentAts=Ats.inClassHierarchy(componentIdClass);
    if (componentAts.has(PolicyVendor.class)) {
      return componentAts.get(PolicyVendor.class).value();
    }
  }
  throw new IllegalArgumentException("Failed to determine policy" + ": require @PolicyVendor, @PolicyAction or @ComponentMessage in request type hierarchy " + msgType.getCanonicalName());
}
