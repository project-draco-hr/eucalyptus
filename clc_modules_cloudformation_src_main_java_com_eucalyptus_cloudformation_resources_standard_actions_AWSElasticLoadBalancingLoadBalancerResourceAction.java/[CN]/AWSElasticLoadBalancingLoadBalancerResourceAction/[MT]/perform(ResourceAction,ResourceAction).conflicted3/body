{
  AWSElasticLoadBalancingLoadBalancerResourceAction oldAction=(AWSElasticLoadBalancingLoadBalancerResourceAction)oldResourceAction;
  AWSElasticLoadBalancingLoadBalancerResourceAction newAction=(AWSElasticLoadBalancingLoadBalancerResourceAction)newResourceAction;
  ServiceConfiguration configuration=Topology.lookup(LoadBalancing.class);
  checkForDuplicatePolicyNames(newAction);
  DescribeLoadBalancersType describeLoadBalancersType=MessageHelper.createMessage(DescribeLoadBalancersType.class,newAction.info.getEffectiveUserId());
  describeLoadBalancersType.setLoadBalancerNames(getLoadBalancerNames(newAction));
  DescribeLoadBalancersResponseType describeLoadBalancersResponseType=AsyncRequests.<DescribeLoadBalancersType,DescribeLoadBalancersResponseType>sendSync(configuration,describeLoadBalancersType);
  if (describeLoadBalancersResponseType == null || describeLoadBalancersResponseType.getDescribeLoadBalancersResult() == null && describeLoadBalancersResponseType.getDescribeLoadBalancersResult().getLoadBalancerDescriptions() == null && describeLoadBalancersResponseType.getDescribeLoadBalancersResult().getLoadBalancerDescriptions().getMember() == null && describeLoadBalancersResponseType.getDescribeLoadBalancersResult().getLoadBalancerDescriptions().getMember().size() != 1) {
    throw new ValidationErrorException("Can not find load balancer : " + newAction.info.getPhysicalResourceId());
  }
  LoadBalancerDescription loadBalancerDescription=describeLoadBalancersResponseType.getDescribeLoadBalancersResult().getLoadBalancerDescriptions().getMember().get(0);
  updateAZs(oldAction,newAction,configuration,loadBalancerDescription);
  updateInstances(oldAction,newAction,configuration,loadBalancerDescription);
  updateSecurityGroups(oldAction,newAction,configuration,loadBalancerDescription);
  updateSubnets(oldAction,newAction,configuration,loadBalancerDescription);
  if (newAction.properties.getHealthCheck() != null) {
    configureHealthCheck(newAction,configuration);
  }
  updateListenersAndPolicies(oldAction,newAction,configuration);
  return newAction;
}
