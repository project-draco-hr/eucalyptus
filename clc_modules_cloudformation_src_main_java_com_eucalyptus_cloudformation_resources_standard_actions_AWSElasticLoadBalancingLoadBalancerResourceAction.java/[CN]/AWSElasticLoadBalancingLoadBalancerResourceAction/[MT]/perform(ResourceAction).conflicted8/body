{
  AWSElasticLoadBalancingLoadBalancerResourceAction action=(AWSElasticLoadBalancingLoadBalancerResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(LoadBalancing.class);
  if (action.properties.getInstances() != null) {
    RegisterInstancesWithLoadBalancerType registerInstancesWithLoadBalancerType=MessageHelper.createMessage(RegisterInstancesWithLoadBalancerType.class,action.info.getEffectiveUserId());
    registerInstancesWithLoadBalancerType.setLoadBalancerName(action.info.getPhysicalResourceId());
    Instances instances=new Instances();
    ArrayList<Instance> member=Lists.newArrayList();
    for (    String instanceId : action.properties.getInstances()) {
      Instance instance=new Instance();
      instance.setInstanceId(instanceId);
      member.add(instance);
    }
    instances.setMember(member);
    registerInstancesWithLoadBalancerType.setInstances(instances);
    AsyncRequests.<RegisterInstancesWithLoadBalancerType,RegisterInstancesWithLoadBalancerResponseType>sendSync(configuration,registerInstancesWithLoadBalancerType);
  }
  return action;
}
