{
  AWSElasticLoadBalancingLoadBalancerResourceAction action=(AWSElasticLoadBalancingLoadBalancerResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(LoadBalancing.class);
  if (action.properties.getHealthCheck() != null) {
    ConfigureHealthCheckType configureHealthCheckType=MessageHelper.createMessage(ConfigureHealthCheckType.class,action.info.getEffectiveUserId());
    configureHealthCheckType.setLoadBalancerName(action.info.getPhysicalResourceId());
    HealthCheck healthCheck=new HealthCheck();
    healthCheck.setHealthyThreshold(action.properties.getHealthCheck().getHealthyThreshold());
    healthCheck.setInterval(action.properties.getHealthCheck().getInterval());
    healthCheck.setTarget(action.properties.getHealthCheck().getTarget());
    healthCheck.setTimeout(action.properties.getHealthCheck().getTimeout());
    healthCheck.setUnhealthyThreshold(action.properties.getHealthCheck().getUnhealthyThreshold());
    configureHealthCheckType.setHealthCheck(healthCheck);
    AsyncRequests.<ConfigureHealthCheckType,ConfigureHealthCheckResponseType>sendSync(configuration,configureHealthCheckType);
  }
  return action;
}
