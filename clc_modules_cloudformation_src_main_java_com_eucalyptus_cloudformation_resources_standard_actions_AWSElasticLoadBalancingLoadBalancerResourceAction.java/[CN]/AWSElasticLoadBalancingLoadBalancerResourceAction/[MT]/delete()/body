{
  if (info.getPhysicalResourceId() == null)   return;
  ServiceConfiguration configuration=Topology.lookup(LoadBalancing.class);
  DescribeLoadBalancersType describeLoadBalancersType=new DescribeLoadBalancersType();
  LoadBalancerNames loadBalancerNames=new LoadBalancerNames();
  ArrayList<String> member=Lists.newArrayList(info.getPhysicalResourceId());
  loadBalancerNames.setMember(member);
  describeLoadBalancersType.setLoadBalancerNames(loadBalancerNames);
  describeLoadBalancersType.setEffectiveUserId(info.getEffectiveUserId());
  DescribeLoadBalancersResponseType describeLoadBalancersResponseType=AsyncRequests.<DescribeLoadBalancersType,DescribeLoadBalancersResponseType>sendSync(configuration,describeLoadBalancersType);
  if (describeLoadBalancersResponseType != null && describeLoadBalancersResponseType.getDescribeLoadBalancersResult() != null && describeLoadBalancersResponseType.getDescribeLoadBalancersResult().getLoadBalancerDescriptions() != null && describeLoadBalancersResponseType.getDescribeLoadBalancersResult().getLoadBalancerDescriptions().getMember() != null && describeLoadBalancersResponseType.getDescribeLoadBalancersResult().getLoadBalancerDescriptions().getMember().size() > 0) {
    return;
  }
  DeleteLoadBalancerType deleteLoadBalancerType=new DeleteLoadBalancerType();
  deleteLoadBalancerType.setLoadBalancerName(info.getPhysicalResourceId());
  deleteLoadBalancerType.setEffectiveUserId(info.getEffectiveUserId());
  AsyncRequests.<DeleteLoadBalancerType,DeleteLoadBalancerResponseType>sendSync(configuration,deleteLoadBalancerType);
}
