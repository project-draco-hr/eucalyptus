{
  AWSElasticLoadBalancingLoadBalancerResourceAction action=(AWSElasticLoadBalancingLoadBalancerResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(LoadBalancing.class);
  if (action.properties.getPolicies() != null) {
    for (    ElasticLoadBalancingPolicyType elasticLoadBalancingPropertyType : action.properties.getPolicies()) {
      CreateLoadBalancerPolicyType createLoadBalancerPolicyType=MessageHelper.createMessage(CreateLoadBalancerPolicyType.class,action.info.getEffectiveUserId());
      createLoadBalancerPolicyType.setLoadBalancerName(action.info.getPhysicalResourceId());
      if (elasticLoadBalancingPropertyType.getAttributes() != null) {
        PolicyAttributes policyAttributes=new PolicyAttributes();
        ArrayList<PolicyAttribute> member=Lists.newArrayList();
        for (        ElasticLoadBalancingPolicyTypeAttribute elasticLoadBalancingPolicyTypeAttribute : elasticLoadBalancingPropertyType.getAttributes()) {
          PolicyAttribute policyAttribute=new PolicyAttribute();
          policyAttribute.setAttributeName(elasticLoadBalancingPolicyTypeAttribute.getName());
          policyAttribute.setAttributeValue(elasticLoadBalancingPolicyTypeAttribute.getValue());
          member.add(policyAttribute);
        }
        policyAttributes.setMember(member);
        createLoadBalancerPolicyType.setPolicyAttributes(policyAttributes);
      }
      createLoadBalancerPolicyType.setPolicyName(elasticLoadBalancingPropertyType.getPolicyName());
      createLoadBalancerPolicyType.setPolicyTypeName(elasticLoadBalancingPropertyType.getPolicyType());
      AsyncRequests.<CreateLoadBalancerPolicyType,CreateLoadBalancerPolicyResponseType>sendSync(configuration,createLoadBalancerPolicyType);
    }
  }
  return action;
}
