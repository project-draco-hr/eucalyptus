{
  AWSElasticLoadBalancingLoadBalancerResourceAction action=(AWSElasticLoadBalancingLoadBalancerResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(LoadBalancing.class);
  if (action.properties.getListeners() != null) {
    for (    ElasticLoadBalancingListener elasticLoadBalancingListener : action.properties.getListeners()) {
      if (elasticLoadBalancingListener.getPolicyNames() != null) {
        SetLoadBalancerPoliciesOfListenerType setLoadBalancerPoliciesOfListenerType=MessageHelper.createMessage(SetLoadBalancerPoliciesOfListenerType.class,action.info.getEffectiveUserId());
        setLoadBalancerPoliciesOfListenerType.setLoadBalancerName(action.info.getPhysicalResourceId());
        setLoadBalancerPoliciesOfListenerType.setLoadBalancerPort(elasticLoadBalancingListener.getLoadBalancerPort());
        PolicyNames policyNames=new PolicyNames();
        ArrayList<String> member=Lists.newArrayList(elasticLoadBalancingListener.getPolicyNames());
        policyNames.setMember(member);
        setLoadBalancerPoliciesOfListenerType.setPolicyNames(policyNames);
        AsyncRequests.<SetLoadBalancerPoliciesOfListenerType,SetLoadBalancerPoliciesOfListenerResponseType>sendSync(configuration,setLoadBalancerPoliciesOfListenerType);
      }
    }
  }
  return action;
}
