{
  if (VmStateSet.DONE.contains(this.getState()) && !VmStateSet.STOP.contains(this.getLastState())) {
    return false;
  }
 else {
    final EntityTransaction db=Entities.get(VmInstance.class);
    try {
      final VmInstance entity=Entities.merge(this);
      Set<VmVolumeAttachment> persistentAttachments=Sets.newHashSet(entity.getBootRecord().getPersistentVolumes());
      boolean ret=Iterables.all(persistentAttachments,new Predicate<VmVolumeAttachment>(){
        @Override public boolean apply(        final VmVolumeAttachment arg0){
          return predicate.apply(arg0);
        }
      }
);
      ret|=entity.getTransientVolumeState().eachVolumeAttachment(new Predicate<VmVolumeAttachment>(){
        @Override public boolean apply(        final VmVolumeAttachment arg0){
          return predicate.apply(arg0);
        }
      }
);
      db.commit();
      return ret;
    }
 catch (    final Exception ex) {
      Logs.extreme().error(ex,ex);
      db.rollback();
      return false;
    }
  }
}
