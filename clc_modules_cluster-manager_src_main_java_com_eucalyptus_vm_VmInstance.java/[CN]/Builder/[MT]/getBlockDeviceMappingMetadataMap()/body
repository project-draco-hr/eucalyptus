{
  final Map<String,String> m=Maps.newHashMap();
  if (this.bootRecord.getMachine() instanceof BlockStorageImageInfo) {
    Set<VmVolumeAttachment> volAttachments=new TreeSet<VmVolumeAttachment>(VolumeAttachmentComparator.INSTANCE);
    volAttachments.addAll(this.bootRecord.getPersistentVolumes());
    int ebsCount=0;
    for (    VmVolumeAttachment attachment : volAttachments) {
      if (attachment.getIsRootDevice()) {
        m.put("block-device-mapping/ami",attachment.getDevice());
        m.put("block-device-mapping/emi",attachment.getDevice());
        m.put("block-device-mapping/root",attachment.getDevice());
      }
      m.put("block-device-mapping/ebs" + String.valueOf(++ebsCount),attachment.getDevice());
    }
    Set<VmEphemeralAttachment> ephemeralAttachments=new TreeSet<VmEphemeralAttachment>(this.bootRecord.getEphemeralStorage());
    if (!ephemeralAttachments.isEmpty()) {
      for (      VmEphemeralAttachment attachment : ephemeralAttachments) {
        m.put("block-device-mapping/" + attachment.getEphemeralId(),attachment.getDevice());
      }
    }
  }
 else {
    m.put("block-device-mapping/emi","sda1");
    m.put("block-device-mapping/ami","sda1");
    m.put("block-device-mapping/ephemeral","sda2");
    m.put("block-device-mapping/ephemeral0","sda2");
    m.put("block-device-mapping/swap","sda3");
    m.put("block-device-mapping/root","/dev/sda1");
  }
  return m;
}
