{
  return new Function<String,NetworkGroup>(){
    @Override public NetworkGroup apply(    final String arg0){
      EntityTransaction db=Entities.get(NetworkGroup.class);
      try {
        final NetworkGroup result=(NetworkGroup)Entities.createCriteria(NetworkGroup.class).setReadOnly(true).add(Restrictions.like("naturalId",arg0.replace(userFullName.getAccountNumber() + "-","") + "%")).uniqueResult();
        db.rollback();
        return result;
      }
 catch (      Exception ex) {
        Logs.exhaust().error(ex,ex);
        db.rollback();
        throw Exceptions.toUndeclared(ex);
      }
    }
  }
;
}
