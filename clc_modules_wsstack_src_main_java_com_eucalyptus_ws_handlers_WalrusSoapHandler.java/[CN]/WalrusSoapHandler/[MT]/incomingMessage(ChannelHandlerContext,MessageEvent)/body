{
  if (event.getMessage() instanceof MappingHttpMessage) {
    final MappingHttpMessage message=(MappingHttpMessage)event.getMessage();
    String content=message.getContent().toString("UTF-8");
    StAXSOAPModelBuilder soapBuilder=new StAXSOAPModelBuilder(HoldMe.getXMLStreamReader(content),HoldMe.getOMSOAP11Factory(),null);
    SOAPEnvelope env=(SOAPEnvelope)soapBuilder.getDocumentElement();
    message.setSoapEnvelope(env);
    message.setMessageString(content);
    if (!env.hasFault()) {
      message.setOmMessage(env.getBody().getFirstElement());
    }
 else {
      final SOAPHeader header=env.getHeader();
      final List<SOAPHeaderBlock> headers=Lists.newArrayList(header.examineAllHeaderBlocks());
      if (headers != null) {
        String action="ProblemAction";
        String relatesTo="RelatesTo";
        for (        final SOAPHeaderBlock headerBlock : headers) {
          if (action.equals(headerBlock.getLocalName())) {
            action=headerBlock.getText();
          }
 else           if (relatesTo.equals(headerBlock.getLocalName())) {
            relatesTo=headerBlock.getText();
          }
        }
        final SOAPFault fault=env.getBody().getFault();
        if (fault != null) {
          String faultReason="";
          final Iterator children=fault.getChildElements();
          while (children.hasNext()) {
            final OMElement child=(OMElement)children.next();
            faultReason+=child.getText();
          }
          final String faultCode=fault.getCode().getText();
          faultReason=faultReason.replaceAll(faultCode,"");
          throw new EucalyptusRemoteFault(action,relatesTo,faultCode,faultReason);
        }
      }
    }
  }
}
