{
  if (event.getMessage() instanceof MappingHttpMessage) {
    final MappingHttpMessage message=(MappingHttpMessage)event.getMessage();
    String content=message.getContent().toString("UTF-8");
    ByteArrayInputStream byteIn=new ByteArrayInputStream(content.getBytes());
    XMLStreamReader xmlStreamReader=XMLInputFactory.newInstance().createXMLStreamReader(byteIn);
    StAXSOAPModelBuilder soapBuilder=null;
    soapBuilder=new StAXSOAPModelBuilder(xmlStreamReader);
    SOAPEnvelope env=(SOAPEnvelope)soapBuilder.getDocumentElement();
    message.setSoapEnvelope(env);
    message.setMessageString(content);
    if (!env.hasFault()) {
      message.setOmMessage(env.getBody().getFirstElement());
    }
 else {
      final SOAPHeader header=env.getHeader();
      final List<SOAPHeaderBlock> headers=Lists.newArrayList(header.examineAllHeaderBlocks());
      String action="ProblemAction";
      String relatesTo="RelatesTo";
      for (      final SOAPHeaderBlock headerBlock : headers) {
        if (action.equals(headerBlock.getLocalName())) {
          action=headerBlock.getText();
        }
 else         if (relatesTo.equals(headerBlock.getLocalName())) {
          relatesTo=headerBlock.getText();
        }
      }
      final SOAPFault fault=env.getBody().getFault();
      String faultReason="";
      final Iterator children=fault.getChildElements();
      while (children.hasNext()) {
        final OMElement child=(OMElement)children.next();
        faultReason+=child.getText();
      }
      final String faultCode=fault.getCode().getText();
      faultReason=faultReason.replaceAll(faultCode,"");
      throw new EucalyptusRemoteFault(action,relatesTo,faultCode,faultReason);
    }
  }
}
