{
  if (Ats.from(candidate).has(TypeMapper.class) && Function.class.isAssignableFrom(candidate)) {
    TypeMapper mapper=Ats.from(candidate).get(TypeMapper.class);
    Class[] types=mapper.value();
    List<Class> generics=Lists.newArrayList();
    try {
      generics.addAll(Classes.genericsToClasses(Classes.newInstance(candidate)));
    }
 catch (    Exception ex) {
      LOG.error(ex,ex);
    }
    if (generics.size() != 2) {
      LOG.error(candidate + " looks like it is a @TypeMapper but needs generics: " + generics);
      return false;
    }
 else {
      try {
        registerMapper(generics.get(0),generics.get(1),(Function)Classes.newInstance(candidate));
        return true;
      }
 catch (      Exception ex1) {
        LOG.error("Error registering type mapper: " + candidate,ex1);
      }
    }
  }
  return false;
}
