{
  try {
    KeyFactory keyFactory=KeyFactory.getInstance("RSA","BC");
    X509EncodedKeySpec publicKeySpec=new X509EncodedKeySpec(B64.standard.dec(b64PubKey));
    PublicKey publicKey=keyFactory.generatePublic(publicKeySpec);
    X500Principal subjectDn=new X500Principal(String.format("CN=%s, OU=Eucalyptus, O=Cloud, C=US",instanceId));
    final Credentials euareCred=SystemCredentials.lookup(Euare.class);
    final Principal signer=(Principal)euareCred.getCertificate().getSubjectDN();
    final PrivateKey signingKey=euareCred.getPrivateKey();
    final Date notAfter=DateUtils.addDays(Calendar.getInstance().getTime(),expirationDays);
    final X509Certificate cert=Certs.generateCertificate(publicKey,subjectDn,new X500Principal(signer.getName()),signingKey,notAfter);
    if (cert == null)     throw new Exception("Null returned");
    return cert;
  }
 catch (  final Exception ex) {
    LOG.error("failed to generate VM certificate",ex);
    throw new EuareException(HttpResponseStatus.INTERNAL_SERVER_ERROR,EuareException.INTERNAL_FAILURE);
  }
}
