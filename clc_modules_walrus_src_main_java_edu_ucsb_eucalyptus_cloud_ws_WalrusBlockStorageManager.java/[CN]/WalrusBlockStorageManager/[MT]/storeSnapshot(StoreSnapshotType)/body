{
  StoreSnapshotResponseType reply=(StoreSnapshotResponseType)request.getReply();
  String snapshotId=request.getKey();
  String bucketName=request.getBucket();
  boolean createBucket=true;
  EntityWrapper<WalrusSnapshotInfo> db=new EntityWrapper<WalrusSnapshotInfo>();
  WalrusSnapshotInfo snapshotInfo=new WalrusSnapshotInfo(snapshotId);
  List<WalrusSnapshotInfo> snapInfos=db.query(snapshotInfo);
  if (snapInfos.size() > 0) {
    db.rollback();
    throw new EntityAlreadyExistsException(snapshotId);
  }
  db.commit();
  String userId=request.getUserId();
  if (createBucket) {
    CreateBucketType createBucketRequest=new CreateBucketType();
    createBucketRequest.setUserId(userId);
    createBucketRequest.setBucket(bucketName);
    try {
      walrusManager.createBucket(createBucketRequest);
    }
 catch (    EucalyptusCloudException ex) {
      if (!(ex instanceof BucketAlreadyExistsException || ex instanceof BucketAlreadyOwnedByYouException)) {
        throw ex;
      }
    }
  }
  PutObjectType putObjectRequest=new PutObjectType();
  putObjectRequest.setUserId(userId);
  putObjectRequest.setBucket(bucketName);
  putObjectRequest.setKey(snapshotId);
  putObjectRequest.setRandomKey(request.getRandomKey());
  try {
    PutObjectResponseType putObjectResponseType=walrusManager.putObject(putObjectRequest);
    reply.setEtag(putObjectResponseType.getEtag());
    reply.setLastModified(putObjectResponseType.getLastModified());
    reply.setStatusMessage(putObjectResponseType.getStatusMessage());
    int snapshotSize=(int)(putObjectResponseType.getSize() / WalrusProperties.G);
    if (WalrusProperties.shouldEnforceUsageLimits) {
      int totalSnapshotSize=0;
      WalrusSnapshotInfo snapInfo=new WalrusSnapshotInfo();
      db=new EntityWrapper<WalrusSnapshotInfo>();
      List<WalrusSnapshotInfo> sInfos=db.query(snapInfo);
      for (      WalrusSnapshotInfo sInfo : sInfos) {
        totalSnapshotSize+=sInfo.getSize();
      }
      if ((totalSnapshotSize + snapshotSize) > WalrusProperties.MAX_TOTAL_SNAPSHOT_SIZE) {
        db.rollback();
        throw new EntityTooLargeException(snapshotId);
      }
      db.commit();
    }
    snapshotInfo=new WalrusSnapshotInfo(snapshotId);
    db=new EntityWrapper<WalrusSnapshotInfo>();
    snapshotInfo.setSnapshotBucket(bucketName);
    snapshotInfo.setSize(snapshotSize);
    db.add(snapshotInfo);
    db.commit();
  }
 catch (  EucalyptusCloudException ex) {
    db.rollback();
    throw ex;
  }
  return reply;
}
