{
  String imageId=getPropertiesJSON().getString("ImageId");
  RunInstancesType runInstancesType=new RunInstancesType();
  runInstancesType.setImageId(imageId);
  runInstancesType.setMinCount(1);
  runInstancesType.setMaxCount(1);
  final ComponentId componentId=ComponentIds.lookup(Eucalyptus.class);
  ServiceConfiguration configuration;
  if (componentId.isAlwaysLocal() || (BootstrapArgs.isCloudController() && componentId.isCloudLocal() && !componentId.isRegisterable())) {
    configuration=ServiceConfigurations.createEphemeral(componentId);
  }
 else {
    configuration=Topology.lookup(Eucalyptus.class);
  }
  runInstancesType.setEffectiveUserId(getEffectiveUserId());
  RunInstancesResponseType runInstancesResponseType=AsyncRequests.<RunInstancesType,RunInstancesResponseType>sendSync(configuration,runInstancesType);
  setPhysicalResourceId(runInstancesResponseType.getRsvInfo().getInstancesSet().get(0).getInstanceId());
  for (int i=0; i < 24; i++) {
    Thread.sleep(5000L);
    DescribeInstancesType describeInstancesType=new DescribeInstancesType();
    describeInstancesType.setInstancesSet(Lists.newArrayList(getPhysicalResourceId()));
    describeInstancesType.setEffectiveUserId(getEffectiveUserId());
    DescribeInstancesResponseType describeInstancesResponseType=AsyncRequests.<DescribeInstancesType,DescribeInstancesResponseType>sendSync(configuration,describeInstancesType);
    if ("running".equals(describeInstancesResponseType.getReservationSet().get(0).getInstancesSet().get(0).getStateName())) {
      return;
    }
  }
  throw new Exception("Timeout");
}
