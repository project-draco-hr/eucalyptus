{
  AddObjectResponseType reply=(AddObjectResponseType)request.getReply();
  String bucketName=request.getBucket();
  String objectKey=request.getKey();
  String objectName=request.getObjectName();
  try {
    Transactions.find(new BucketInfo(bucketName));
  }
 catch (  NoSuchElementException e) {
    throw new NoSuchBucketException(bucketName);
  }
catch (  Exception e) {
    LOG.error("Failed to look up metadata for bucket=" + bucketName,e);
    throw new InternalErrorException("Failed to lookup bucket " + bucketName,e);
  }
  ObjectInfo objectInfo=null;
  try (TransactionResource tr=Entities.transactionFor(ObjectInfo.class)){
    try {
      objectInfo=Entities.uniqueResult(new ObjectInfo(bucketName,objectKey));
      throw new InternalErrorException("Object already exists " + objectKey);
    }
 catch (    NoSuchElementException e) {
      objectInfo=new ObjectInfo(bucketName,objectKey);
      objectInfo.setObjectName(objectName);
      objectInfo.setSize(storageManager.getSize(bucketName,objectName));
      objectInfo.setEtag(request.getEtag());
      objectInfo.setLastModified(new Date());
      objectInfo.setStorageClass("STANDARD");
      objectInfo=Entities.persist(objectInfo);
    }
    tr.commit();
  }
 catch (  Exception e) {
    LOG.error("Failed to process metadata for object-key=" + objectKey + ", bucket="+ bucketName,e);
    throw new InternalErrorException("Failed to process metadata for object-key=" + objectKey + ", bucket="+ bucketName,e);
  }
  return reply;
}
