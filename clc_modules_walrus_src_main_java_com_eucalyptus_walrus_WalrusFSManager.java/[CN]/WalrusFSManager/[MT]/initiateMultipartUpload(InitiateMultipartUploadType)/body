{
  InitiateMultipartUploadResponseType reply=(InitiateMultipartUploadResponseType)request.getReply();
  Context ctx=Contexts.lookup();
  Account account=ctx.getAccount();
  String bucketName=request.getBucket();
  String objectKey=request.getKey();
  EntityWrapper<BucketInfo> db=EntityWrapper.get(BucketInfo.class);
  BucketInfo bucketInfo=new BucketInfo(bucketName);
  List<BucketInfo> bucketList=db.queryEscape(bucketInfo);
  if (bucketList.size() > 0) {
    BucketInfo bucket=bucketList.get(0);
    if (ctx.hasAdministrativePrivileges() || (bucket.canWrite(account.getAccountNumber()) && (bucket.isGlobalWrite() || Lookups.checkPrivilege(PolicySpec.S3_PUTOBJECT,PolicySpec.VENDOR_S3,PolicySpec.S3_RESOURCE_BUCKET,bucketName,null)))) {
      AccessControlList accessControlList=request.getAccessControlList();
      if (accessControlList == null) {
        accessControlList=new AccessControlList();
      }
      EntityWrapper<PartInfo> dbPart=db.recast(PartInfo.class);
      PartInfo manifest=PartInfo.create(bucketName,objectKey,account);
      manifest.setStorageClass("STANDARD");
      manifest.setContentEncoding(request.getContentEncoding());
      manifest.setContentType(request.getContentType());
      List<GrantInfo> grantInfos=new ArrayList<GrantInfo>();
      manifest.addGrants(account.getAccountNumber(),bucket.getOwnerId(),grantInfos,accessControlList);
      manifest.setGrants(grantInfos);
      manifest.replaceMetaData(request.getMetaData());
      manifest.setObjectName(null);
      dbPart.add(manifest);
      try {
        dbPart.commit();
      }
 catch (      RollbackException ex) {
        dbPart.rollback();
        LOG.error("Error comitting new object entity to database",ex);
      }
      reply.setUploadId(manifest.getUploadId());
    }
 else {
      db.rollback();
      throw new AccessDeniedException("Bucket",bucketName);
    }
  }
 else {
    db.rollback();
    throw new NoSuchBucketException(bucketName);
  }
  reply.setBucket(bucketName);
  reply.setKey(objectKey);
  return reply;
}
