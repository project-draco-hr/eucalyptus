{
  PutObjectInlineResponseType reply=(PutObjectInlineResponseType)request.getReply();
  String bucketName=request.getBucket();
  String objectKey=request.getKey();
  try {
    Transactions.find(new BucketInfo(bucketName));
  }
 catch (  NoSuchElementException e) {
    throw new NoSuchBucketException(bucketName);
  }
catch (  Exception e) {
    LOG.error("Failed to look up metadata for bucket=" + bucketName,e);
    throw new InternalErrorException("Failed to lookup bucket " + bucketName,e);
  }
  long size=0;
  Date lastModified=null;
  String md5=new String();
  String prevObjectName=null;
  String objectName=UUID.randomUUID().toString();
  try {
    if (request.getBase64Data().getBytes().length > WalrusProperties.MAX_INLINE_DATA_SIZE) {
      throw new InlineDataTooLargeException(bucketName + "/" + objectKey);
    }
    byte[] base64Data=Hashes.base64decode(request.getBase64Data()).getBytes();
    size=(long)base64Data.length;
    try {
      FileIO fileIO=storageManager.prepareForWrite(bucketName,objectName);
      if (fileIO != null) {
        fileIO.write(base64Data);
        fileIO.finish();
      }
    }
 catch (    Exception ex) {
      throw new AccessDeniedException(ex);
    }
    md5=Hashes.getHexString(Digest.MD5.get().digest(base64Data));
    lastModified=new Date();
    try (TransactionResource tr=Entities.transactionFor(ObjectInfo.class)){
      ObjectInfo objectInfo=null;
      try {
        objectInfo=Entities.uniqueResult(new ObjectInfo(bucketName,objectKey));
        prevObjectName=objectInfo.getObjectName();
      }
 catch (      NoSuchElementException e) {
        objectInfo=Entities.persist(new ObjectInfo(bucketName,objectKey));
      }
      objectInfo.setEtag(md5);
      objectInfo.setSize(size);
      objectInfo.setLastModified(lastModified);
      objectInfo.setObjectName(objectName);
      objectInfo.setStorageClass("STANDARD");
      if (request.getMetaData() != null) {
        objectInfo.replaceMetaData(request.getMetaData());
      }
      tr.commit();
    }
 catch (    Exception e) {
      LOG.error("Failed to update metadata for object-key=" + objectKey + ", bucket="+ bucketName,e);
      throw new InternalErrorException("Failed to update metadata for object-key=" + objectKey + ", bucket="+ bucketName,e);
    }
    if (prevObjectName != null) {
      ObjectDeleter objectDeleter=new ObjectDeleter(bucketName,prevObjectName,null,null);
      Threads.lookup(WalrusBackend.class,WalrusFSManager.ObjectDeleter.class).limitTo(10).submit(objectDeleter);
    }
  }
 catch (  WalrusException e) {
    throw e;
  }
catch (  Exception e) {
    LOG.error("Failed to perform put object for object-key=" + objectKey + ", bucket="+ bucketName,e);
    throw new InternalErrorException("Failed to perform put object for object-key=" + objectKey + ", bucket="+ bucketName,e);
  }
  reply.setSize(size);
  reply.setEtag(md5);
  reply.setLastModified(lastModified);
  reply.setVersionId(WalrusProperties.NULL_VERSION_ID);
  return reply;
}
