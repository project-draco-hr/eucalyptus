{
  List<Grant> grants=accessControlList.getGrants();
  if (grants != null && grants.size() > 0) {
    for (    Grant grant : grants) {
      Account grantAccount=null;
      Grantee grantee=grant.getGrantee();
      if (grantee != null && grantee.getCanonicalUser() != null && grantee.getCanonicalUser().getID() != null) {
        CanonicalUser canonicalUserType=grantee.getCanonicalUser();
        String canonicalUserTypeId=canonicalUserType.getID();
        try {
          grantAccount=Accounts.lookupAccountById(canonicalUserTypeId);
        }
 catch (        AuthException e) {
        }
        if (grantAccount == null) {
          try {
            grantAccount=Accounts.lookupAccountByCanonicalId(canonicalUserTypeId);
          }
 catch (          AuthException e) {
          }
        }
        if (grantAccount == null) {
          try {
            if (canonicalUserTypeId != null && canonicalUserTypeId.contains("@")) {
              User user=Accounts.lookupUserByEmailAddress(canonicalUserType.getID());
              if (user.isAccountAdmin()) {
                grantAccount=user.getAccount();
              }
            }
 else {
              LOG.error("attempted to find account with id " + canonicalUserTypeId + " as account id or canonical id, but an account"+ " was not found");
              if (isBucket) {
                throw new AccessDeniedException("Bucket",name);
              }
 else {
                throw new AccessDeniedException("Key",name);
              }
            }
          }
 catch (          Exception ex) {
            LOG.error("attempted to find account with id " + canonicalUserType.getID() + " as account id, canonical id and email address, but an account"+ " was not found");
            if (isBucket) {
              throw new AccessDeniedException("Bucket",name);
            }
 else {
              throw new AccessDeniedException("Key",name);
            }
          }
        }
        grantee.getCanonicalUser().setID(grantAccount.getAccountNumber());
      }
    }
  }
}
