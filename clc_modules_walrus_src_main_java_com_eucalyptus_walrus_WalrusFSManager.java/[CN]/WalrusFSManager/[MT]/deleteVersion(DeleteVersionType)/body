{
  DeleteVersionResponseType reply=(DeleteVersionResponseType)request.getReply();
  String bucketName=request.getBucket();
  String objectKey=request.getKey();
  Context ctx=Contexts.lookup();
  Account account=ctx.getAccount();
  EntityWrapper<BucketInfo> db=EntityWrapper.get(BucketInfo.class);
  BucketInfo bucketInfos=new BucketInfo(bucketName);
  List<BucketInfo> bucketList=db.queryEscape(bucketInfos);
  if (bucketList.size() > 0) {
    BucketInfo bucketInfo=bucketList.get(0);
    BucketLogData logData=bucketInfo.getLoggingEnabled() ? request.getLogData() : null;
    ObjectInfo foundObject=null;
    EntityWrapper<ObjectInfo> dbObject=db.recast(ObjectInfo.class);
    ObjectInfo searchObjectInfo=new ObjectInfo(bucketName,objectKey);
    if (request.getVersionid() == null) {
      db.rollback();
      throw new InternalErrorException("versionId is null");
    }
    searchObjectInfo.setVersionId(request.getVersionid());
    List<ObjectInfo> objectInfos=dbObject.queryEscape(searchObjectInfo);
    if (objectInfos.size() > 0) {
      foundObject=objectInfos.get(0);
    }
    if (foundObject != null) {
      dbObject.delete(foundObject);
      if (!foundObject.getDeleted()) {
        String objectName=foundObject.getObjectName();
        for (        GrantInfo grantInfo : foundObject.getGrants()) {
          db.delete(grantInfo);
        }
        Long size=foundObject.getSize();
        ObjectDeleter objectDeleter=new ObjectDeleter(bucketName,objectName,foundObject.getObjectKey(),foundObject.getUploadId(),foundObject.getVersionId(),size,ctx.getUser().getName(),ctx.getUser().getUserId(),ctx.getAccount().getName(),ctx.getAccount().getAccountNumber());
        Threads.lookup(WalrusBackend.class,WalrusFSManager.ObjectDeleter.class).limitTo(10).submit(objectDeleter);
      }
      if (logData != null) {
        updateLogData(bucketInfo,logData);
        reply.setLogData(logData);
      }
    }
  }
 else {
    db.rollback();
    throw new NoSuchBucketException(bucketName);
  }
  reply.setStatus(HttpResponseStatus.NO_CONTENT);
  reply.setStatusMessage("NO CONTENT");
  db.commit();
  return reply;
}
