{
  CreateBucketResponseType reply=(CreateBucketResponseType)request.getReply();
  String bucketName=request.getBucket();
  String locationConstraint=request.getLocationConstraint();
  try {
    Transactions.find(new BucketInfo(bucketName));
    throw new BucketAlreadyExistsException(bucketName);
  }
 catch (  NoSuchElementException e) {
  }
catch (  WalrusException e) {
    throw e;
  }
catch (  Exception e) {
    LOG.error("Failed to look up metadata for bucket=" + bucketName,e);
    throw new InternalErrorException("Faild to look up metadata for bucket " + bucketName,e);
  }
  try {
    BucketInfo bucket=new BucketInfo(bucketName,new Date());
    bucket.setBucketSize(0L);
    bucket.setLoggingEnabled(false);
    if (locationConstraint != null && locationConstraint.length() > 0) {
      bucket.setLocation(locationConstraint);
    }
 else {
      bucket.setLocation(null);
    }
    try {
      storageManager.createBucket(bucketName);
    }
 catch (    Exception e) {
      LOG.error("Failed to create bucket " + bucketName + " on disk",e);
      throw new InternalErrorException("Failed to create bucket " + bucketName + " on disk",e);
    }
    Transactions.saveDirect(bucket);
  }
 catch (  WalrusException e) {
    throw e;
  }
catch (  Exception e) {
    LOG.error("Failed to save metadata for bucket=" + bucketName,e);
    throw new InternalErrorException("Failed to save metadata for bucket=" + bucketName,e);
  }
  reply.setBucket(bucketName);
  return reply;
}
