{
  AWSCloudWatchAlarmResourceAction action=(AWSCloudWatchAlarmResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(CloudWatch.class);
  if (!Boolean.TRUE.equals(action.info.getCreatedEnoughToDelete()))   return action;
  DescribeAlarmsType describeAlarmsType=MessageHelper.createMessage(DescribeAlarmsType.class,action.info.getEffectiveUserId());
  AlarmNames alarmNames=new AlarmNames();
  alarmNames.setMember(Lists.newArrayList(action.info.getPhysicalResourceId()));
  describeAlarmsType.setAlarmNames(alarmNames);
  DescribeAlarmsResponseType describeAlarmsResponseType=AsyncRequests.<DescribeAlarmsType,DescribeAlarmsResponseType>sendSync(configuration,describeAlarmsType);
  if (describeAlarmsResponseType.getDescribeAlarmsResult() != null && describeAlarmsResponseType.getDescribeAlarmsResult().getMetricAlarms() != null && describeAlarmsResponseType.getDescribeAlarmsResult().getMetricAlarms().getMember() != null && describeAlarmsResponseType.getDescribeAlarmsResult().getMetricAlarms().getMember().size() > 0) {
    DeleteAlarmsType deleteAlarmsType=MessageHelper.createMessage(DeleteAlarmsType.class,action.info.getEffectiveUserId());
    deleteAlarmsType.setAlarmNames(alarmNames);
    AsyncRequests.<DeleteAlarmsType,DeleteAlarmsResponseType>sendSync(configuration,deleteAlarmsType);
  }
  return action;
}
