{
  try {
    RandomAccessFile raf=new RandomAccessFile(new File(getObjectPath(bucketName,objectName)),"r");
    final ChunkedInput file;
    isCompressed=isCompressed == null ? false : isCompressed;
    if (isCompressed) {
      file=new CompressedChunkedFile(raf,byteRangeStart,byteRangeEnd,(int)Math.min((byteRangeEnd - byteRangeStart),8192));
    }
 else {
      file=new ChunkedDataFile(raf,byteRangeStart,(int)(byteRangeEnd - byteRangeStart),(int)Math.min((byteRangeEnd - byteRangeStart),8192));
    }
    List<ChunkedInput> dataStreams=new ArrayList<>();
    dataStreams.add(file);
    response.setDataInputStream(dataStreams);
  }
 catch (  IOException ex) {
    throw new WalrusException(ex.getMessage());
  }
}
