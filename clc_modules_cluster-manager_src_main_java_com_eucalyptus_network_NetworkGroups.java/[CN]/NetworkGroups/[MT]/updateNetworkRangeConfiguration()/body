{
  netConfig=new NetworkRangeConfiguration();
  final AtomicBoolean netTagging=new AtomicBoolean(true);
  try {
    Transactions.each(new ClusterConfiguration(),new Callback<ClusterConfiguration>(){
      @Override public void fire(      final ClusterConfiguration input){
        netConfig.setUseNetworkTags(netTagging.compareAndSet(true,input.getUseNetworkTags()));
        netConfig.setMinNetworkTag(Ints.max(netConfig.getMinNetworkTag(),input.getMinNetworkTag()));
        netConfig.setMaxNetworkTag(Ints.min(netConfig.getMaxNetworkTag(),input.getMaxNetworkTag()));
        netConfig.setMinNetworkIndex(Longs.max(netConfig.getMinNetworkIndex(),input.getMinNetworkIndex()));
        netConfig.setMaxNetworkIndex(Longs.min(netConfig.getMaxNetworkIndex(),input.getMaxNetworkIndex()));
      }
    }
);
  }
 catch (  final TransactionException ex) {
    Logs.extreme().error(ex,ex);
  }
  try {
    Properties.lookup(NetworkGroups.class,"GLOBAL_MAX_NETWORK_INDEX").setValue(netConfig.getMaxNetworkIndex().toString());
    Properties.lookup(NetworkGroups.class,"GLOBAL_MIN_NETWORK_INDEX").setValue(netConfig.getMinNetworkIndex().toString());
    Properties.lookup(NetworkGroups.class,"GLOBAL_MAX_NETWORK_TAG").setValue(netConfig.getMaxNetworkTag().toString());
    Properties.lookup(NetworkGroups.class,"GLOBAL_MIN_NETWORK_TAG").setValue(netConfig.getMinNetworkTag().toString());
  }
 catch (  IllegalAccessException ex) {
    LOG.error(ex,ex);
  }
catch (  NoSuchFieldException ex) {
    LOG.error(ex,ex);
  }
}
