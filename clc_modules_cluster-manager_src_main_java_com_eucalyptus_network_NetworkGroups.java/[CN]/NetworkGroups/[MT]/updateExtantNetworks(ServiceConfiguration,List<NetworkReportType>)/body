{
  ActiveTags.INSTANCE.update(cluster,activeNetworks);
  for (  NetworkReportType activeNetReport : activeNetworks) {
    try (final TransactionResource tx=Entities.transactionFor(NetworkGroup.class)){
      NetworkGroup net=NetworkGroups.lookupByNaturalId(activeNetReport.getUuid());
      if (net.hasExtantNetwork()) {
        ExtantNetwork exNet=net.extantNetwork();
        if (Reference.State.PENDING.equals(exNet.getState())) {
          LOG.debug("Found PENDING extant network for " + net.getFullName() + " updating to EXTANT.");
          exNet.setState(Reference.State.EXTANT);
        }
 else {
          LOG.debug("Found " + exNet.getState() + " extant network for "+ net.getFullName()+ ": skipped.");
        }
      }
 else {
        LOG.warn("Failed to find extant network for " + net.getFullName());
      }
      tx.commit();
    }
 catch (    Exception ex) {
      LOG.debug(ex);
      Logs.extreme().error(ex,ex);
    }
  }
  try {
    final List<NetworkGroup> groups=NetworkGroups.lookupAll(null,null);
    for (    NetworkGroup net : groups) {
      try (final TransactionResource tx=Entities.transactionFor(NetworkGroup.class)){
        net=Entities.merge(net);
        if (net.hasExtantNetwork()) {
          ExtantNetwork exNet=net.getExtantNetwork();
          Integer exNetTag=exNet.getTag();
          if (!ActiveTags.INSTANCE.isActive(exNetTag)) {
            if (Reference.State.EXTANT.equals(exNet.getState())) {
              exNet.setState(Reference.State.RELEASING);
            }
 else             if (Reference.State.PENDING.equals(exNet.getState()) && isTimedOut(exNet.lastUpdateMillis(),NetworkGroups.NETWORK_TAG_PENDING_TIMEOUT)) {
              exNet.setState(Reference.State.RELEASING);
            }
 else             if (Reference.State.RELEASING.equals(exNet.getState())) {
              exNet.teardown();
              Entities.delete(exNet);
              net.setExtantNetwork(null);
            }
          }
        }
        tx.commit();
      }
 catch (      final Exception ex) {
        LOG.debug(ex);
        Logs.extreme().error(ex,ex);
      }
    }
  }
 catch (  MetadataException ex) {
    LOG.error(ex);
  }
  final Set<String> taggedNetworkIndicies=Sets.newHashSet(CollectionUtils.<String>listJoin().apply(Lists.transform(activeNetworks,NetworkIndexTransform.INSTANCE)));
  try (final TransactionResource db=Entities.transactionFor(PrivateNetworkIndex.class)){
    for (    final PrivateNetworkIndex index : Entities.query(PrivateNetworkIndex.inState(Reference.State.PENDING),Entities.queryOptions().build())) {
      if (isTimedOut(index.lastUpdateMillis(),NetworkGroups.NETWORK_INDEX_PENDING_TIMEOUT)) {
        if (taggedNetworkIndicies.contains(index.getDisplayName())) {
          LOG.warn(String.format("Pending network index (%s) timed out, setting state to EXTANT",index.getDisplayName()));
          index.setState(Reference.State.EXTANT);
        }
 else {
          LOG.warn(String.format("Pending network index (%s) timed out, tearing down",index.getDisplayName()));
          index.release();
          index.teardown();
        }
      }
    }
    db.commit();
  }
 catch (  final Exception ex) {
    LOG.debug(ex);
    Logs.extreme().error(ex,ex);
  }
}
