{
  return new Function<String,Optional<DiskImageConversionTask>>(){
    @Override public Optional<DiskImageConversionTask> apply(    final String taskId){
      try {
        final DescribeConversionTasks task=new DescribeConversionTasks(Lists.newArrayList(taskId));
        final CheckedListenableFuture<Boolean> result=task.dispatch();
        if (result.get()) {
          return Optional.of(task.getTasks().get(0));
        }
      }
 catch (      final Exception ex) {
        ;
      }
      return Optional.absent();
    }
  }
;
}
