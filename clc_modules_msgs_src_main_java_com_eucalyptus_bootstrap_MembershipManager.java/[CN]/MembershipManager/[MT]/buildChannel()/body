{
  final JChannel channel=new JChannel(false);
  ProtocolStack stack=new ProtocolStack(){
{
      this.setChannel(channel);
      this.addProtocol(new UDP(){
{
          setMulticastAddress(InetAddress.getByName(MembershipConfiguration.getInstance().getMulticastAddress()));
          setMulticastPort(MembershipConfiguration.getInstance().getMulticastPort());
          setDiscardIncompatiblePackets(true);
          setMaxBundleSize(60000);
          setMaxBundleTimeout(30);
          setDefaultThreadPool(MembershipConfiguration.getInstance().getThreadPool());
          setDefaultThreadPoolThreadFactory(MembershipConfiguration.getInstance().getThreadPool());
          setThreadFactory(MembershipConfiguration.getInstance().getNormalThreadPool());
          setThreadPoolMaxThreads(MembershipConfiguration.getInstance().getThreadPoolMaxThreads());
          setThreadPoolKeepAliveTime(MembershipConfiguration.getInstance().getThreadPoolKeepAliveTime());
          setThreadPoolMinThreads(MembershipConfiguration.getInstance().getThreadPoolMinThreads());
          setThreadPoolQueueEnabled(MembershipConfiguration.getInstance().getThreadPoolQueueEnabled());
          setRegularRejectionPolicy(MembershipConfiguration.getInstance().getRegularRejectionPolicy());
          setOOBThreadPoolThreadFactory(MembershipConfiguration.getInstance().getOOBThreadPool());
          setOOBThreadPool(MembershipConfiguration.getInstance().getOOBThreadPool());
          setOOBThreadPoolMaxThreads(MembershipConfiguration.getInstance().getOobThreadPoolMaxThreads());
          setOOBThreadPoolKeepAliveTime(MembershipConfiguration.getInstance().getOobThreadPoolKeepAliveTime());
          setOOBThreadPoolMinThreads(MembershipConfiguration.getInstance().getOobThreadPoolMinThreads());
          setOOBRejectionPolicy(MembershipConfiguration.getInstance().getOobRejectionPolicy());
        }
      }
);
      this.addProtocol(new PING(){
{
          setId((short)this.hashCode());
        }
      }
);
      this.addProtocol(new MERGE2());
      this.addProtocol(new FD_SOCK());
      this.addProtocol(new FD_ALL().setValue("timeout",12000).setValue("interval",3000));
      this.addProtocol(new VERIFY_SUSPECT());
      this.addProtocol(new BARRIER());
      this.addProtocol(new NAKACK());
      this.addProtocol(new UNICAST2());
      this.addProtocol(new STABLE());
      this.addProtocol(new GMS());
      this.addProtocol(new UFC());
      this.addProtocol(new MFC());
      this.addProtocol(new FRAG2());
    }
  }
;
  stack.init();
  channel.setProtocolStack(stack);
  return channel;
}
