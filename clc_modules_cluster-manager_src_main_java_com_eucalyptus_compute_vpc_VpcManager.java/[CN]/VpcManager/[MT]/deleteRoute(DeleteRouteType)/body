{
  final DeleteRouteResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final AccountFullName accountFullName=ctx.getUserFullName().asAccountFullName();
  final String routeTableId=Identifier.rtb.normalize(request.getRouteTableId());
  try {
    routeTables.updateByExample(RouteTable.exampleWithName(accountFullName,routeTableId),accountFullName,request.getRouteTableId(),new Callback<RouteTable>(){
      @Override public void fire(      final RouteTable routeTable){
        final Optional<Route> route=Iterables.tryFind(routeTable.getRoutes(),CollectionUtils.propertyPredicate(request.getDestinationCidrBlock(),new Function<Route,String>(){
          @Override public String apply(          final Route route){
            return route.getDestinationCidr();
          }
        }
));
        if (RestrictedTypes.filterPrivileged().apply(routeTable)) {
          routeTable.getRoutes().removeAll(route.asSet());
        }
      }
    }
);
  }
 catch (  Exception e) {
    throw handleException(e);
  }
  return reply;
}
