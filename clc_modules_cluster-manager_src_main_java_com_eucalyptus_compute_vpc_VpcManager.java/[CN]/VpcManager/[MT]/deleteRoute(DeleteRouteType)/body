{
  final DeleteRouteResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final AccountFullName accountFullName=ctx.getUserFullName().asAccountFullName();
  final String routeTableId=Identifier.rtb.normalize(request.getRouteTableId());
  try {
    routeTables.updateByExample(RouteTable.exampleWithName(accountFullName,routeTableId),accountFullName,request.getRouteTableId(),new Callback<RouteTable>(){
      @Override public void fire(      final RouteTable routeTable){
        try {
          final Optional<Route> route=Iterables.tryFind(routeTable.getRoutes(),CollectionUtils.propertyPredicate(request.getDestinationCidrBlock(),RouteTables.RouteFilterStringFunctions.DESTINATION_CIDR));
          if (RestrictedTypes.filterPrivileged().apply(routeTable)) {
            if (route.isPresent()) {
              routeTable.getRoutes().remove(route.get());
            }
 else {
              throw new ClientComputeException("InvalidRoute.NotFound","Route not found for cidr: " + request.getDestinationCidrBlock());
            }
          }
        }
 catch (        Exception e) {
          throw Exceptions.toUndeclared(e);
        }
      }
    }
);
  }
 catch (  Exception e) {
    throw handleException(e);
  }
  return reply;
}
