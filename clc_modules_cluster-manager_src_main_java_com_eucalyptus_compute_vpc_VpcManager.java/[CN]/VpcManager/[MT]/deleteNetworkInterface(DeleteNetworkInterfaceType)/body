{
  final DeleteNetworkInterfaceResponseType reply=request.getReply();
  delete(Identifier.eni,request.getNetworkInterfaceId(),new Function<Pair<Optional<AccountFullName>,String>,NetworkInterface>(){
    @Override public NetworkInterface apply(    final Pair<Optional<AccountFullName>,String> accountAndId){
      try {
        final NetworkInterface networkInterface=networkInterfaces.lookupByName(accountAndId.getLeft().orNull(),accountAndId.getRight(),Functions.identity());
        if (RestrictedTypes.filterPrivileged().apply(networkInterface)) {
          if (networkInterface.isAttached()) {
            throw new ClientComputeException("" + "InvalidNetworkInterface.InUse","The network interface is in use '" + request.getNetworkInterfaceId() + "'");
          }
          NetworkInterfaceHelper.release(networkInterface);
          networkInterfaces.delete(networkInterface);
        }
 else {
          throw Exceptions.toUndeclared(new ClientUnauthorizedComputeException("Not authorized to delete network interface"));
        }
        return null;
      }
 catch (      Exception ex) {
        throw new RuntimeException(ex);
      }
    }
  }
);
  return reply;
}
