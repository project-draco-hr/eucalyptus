{
  final DetachInternetGatewayResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final AccountFullName accountFullName=ctx.getUserFullName().asAccountFullName();
  final String gatewayId=Identifier.igw.normalize(request.getInternetGatewayId());
  final String vpcId=Identifier.vpc.normalize(request.getVpcId());
  try {
    internetGateways.updateByExample(InternetGateway.exampleWithName(accountFullName,gatewayId),accountFullName,request.getInternetGatewayId(),new Callback<InternetGateway>(){
      @Override public void fire(      final InternetGateway internetGateway){
        if (RestrictedTypes.filterPrivileged().apply(internetGateway))         try {
          final Vpc vpc=vpcs.lookupByName(accountFullName,vpcId,Functions.<Vpc>identity());
          if (internetGateway.getVpc() == null || !vpc.getDisplayName().equals(internetGateway.getVpc().getDisplayName())) {
            throw Exceptions.toUndeclared(new ClientComputeException("Gateway.NotAttached","resource " + gatewayId + " is not attached to network "+ vpcId));
          }
          internetGateway.setVpc(null);
        }
 catch (        VpcMetadataNotFoundException e) {
          throw Exceptions.toUndeclared(new ClientComputeException("InvalidVpcID.NotFound","Vpc not found '" + request.getVpcId() + "'"));
        }
catch (        Exception e) {
          throw Exceptions.toUndeclared(e);
        }
 else {
          throw Exceptions.toUndeclared(new ClientUnauthorizedComputeException("Not authorized to detach internet gateway"));
        }
      }
    }
);
    invalidate(vpcId);
  }
 catch (  VpcMetadataNotFoundException e) {
    throw new ClientComputeException("InvalidInternetGatewayID.NotFound","Internet gateway (" + request.getInternetGatewayId() + ") not found ");
  }
catch (  Exception e) {
    throw handleException(e);
  }
  return reply;
}
