{
  final DeleteDhcpOptionsResponseType reply=request.getReply();
  delete(Identifier.dopt,request.getDhcpOptionsId(),new Function<Pair<AccountFullName,String>,DhcpOptionSet>(){
    @Override public DhcpOptionSet apply(    final Pair<AccountFullName,String> accountAndId){
      try {
        final DhcpOptionSet dhcpOptionSet=dhcpOptionSets.lookupByName(accountAndId.getLeft(),accountAndId.getRight(),Functions.<DhcpOptionSet>identity());
        if (RestrictedTypes.filterPrivileged().apply(dhcpOptionSet)) {
          dhcpOptionSets.delete(dhcpOptionSet);
        }
        return null;
      }
 catch (      Exception ex) {
        throw new RuntimeException(ex);
      }
    }
  }
);
  return reply;
}
