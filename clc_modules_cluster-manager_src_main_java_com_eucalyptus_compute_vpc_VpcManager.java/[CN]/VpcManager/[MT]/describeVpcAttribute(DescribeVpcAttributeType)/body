{
  final DescribeVpcAttributeResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final AccountFullName accountFullName=ctx.getUserFullName().asAccountFullName();
  try {
    final Vpc vpc=vpcs.lookupByName(accountFullName,Identifier.vpc.normalize(request.getVpcId()),Functions.<Vpc>identity());
    if (RestrictedTypes.filterPrivileged().apply(vpc)) {
      reply.setVpcId(vpc.getDisplayName());
switch (request.getAttribute()) {
case "enableDnsSupport":
        reply.setEnableDnsSupport(new AttributeBooleanValueType());
      reply.getEnableDnsSupport().setValue(vpc.getDnsEnabled());
    break;
case "enableDnsHostnames":
  reply.setEnableDnsHostnames(new AttributeBooleanValueType());
reply.getEnableDnsHostnames().setValue(vpc.getDnsHostnames());
break;
default :
throw new ClientComputeException("InvalidParameterValue","Value (" + request.getAttribute() + ") for parameter attribute is invalid. Unknown vpc attribute");
}
}
}
 catch (final Exception e) {
throw handleException(e);
}
return reply;
}
