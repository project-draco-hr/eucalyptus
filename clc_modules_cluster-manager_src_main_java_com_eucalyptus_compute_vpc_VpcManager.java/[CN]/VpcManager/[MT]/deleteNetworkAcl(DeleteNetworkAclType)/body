{
  final DeleteNetworkAclResponseType reply=request.getReply();
  delete(Identifier.acl,request.getNetworkAclId(),new Function<Pair<Optional<AccountFullName>,String>,NetworkAcl>(){
    @Override public NetworkAcl apply(    final Pair<Optional<AccountFullName>,String> accountAndId){
      try {
        final NetworkAcl networkAcl=networkAcls.lookupByName(accountAndId.getLeft().orNull(),accountAndId.getRight(),Functions.<NetworkAcl>identity());
        if (RestrictedTypes.filterPrivileged().apply(networkAcl)) {
          networkAcls.delete(networkAcl);
        }
 else {
          throw Exceptions.toUndeclared(new ClientUnauthorizedComputeException("Not authorized to delete network ACL"));
        }
        return null;
      }
 catch (      Exception ex) {
        throw new RuntimeException(ex);
      }
    }
  }
);
  return reply;
}
