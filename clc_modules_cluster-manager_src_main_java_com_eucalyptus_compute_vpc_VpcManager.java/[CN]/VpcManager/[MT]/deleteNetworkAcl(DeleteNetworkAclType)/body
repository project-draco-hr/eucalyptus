{
  final DeleteNetworkAclResponseType reply=request.getReply();
  delete(Identifier.acl,request.getNetworkAclId(),new Function<Pair<Optional<AccountFullName>,String>,NetworkAcl>(){
    @Override public NetworkAcl apply(    final Pair<Optional<AccountFullName>,String> accountAndId){
      try {
        final NetworkAcl networkAcl=networkAcls.lookupByName(accountAndId.getLeft().orNull(),accountAndId.getRight(),Functions.identity());
        if (RestrictedTypes.filterPrivileged().apply(networkAcl)) {
          if (networkAcl.getDefaultForVpc()) {
            throw new ClientComputeException("InvalidParameterValue","Cannot delete default network ACL " + accountAndId.getRight());
          }
          networkAcls.delete(networkAcl);
        }
 else {
          throw new ClientUnauthorizedComputeException("Not authorized to delete network ACL");
        }
        return null;
      }
 catch (      Exception ex) {
        throw Exceptions.toUndeclared(ex);
      }
    }
  }
);
  return reply;
}
