{
  final CreateDhcpOptionsResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final Supplier<DhcpOptionSet> allocator=new Supplier<DhcpOptionSet>(){
    @Override public DhcpOptionSet get(){
      try {
        final DhcpOptionSet dhcpOptionSet=DhcpOptionSet.create(ctx.getUserFullName(),Identifier.dopt.generate());
        for (        final DhcpConfigurationItemType item : request.getDhcpConfigurationSet().getItem()) {
          dhcpOptionSet.getDhcpOptions().add(DhcpOption.create(dhcpOptionSet,item.getKey(),item.values()));
        }
        return dhcpOptionSets.save(dhcpOptionSet);
      }
 catch (      Exception ex) {
        throw new RuntimeException(ex);
      }
    }
  }
;
  reply.setDhcpOptions(allocate(allocator,DhcpOptionSet.class,DhcpOptionsType.class));
  return reply;
}
