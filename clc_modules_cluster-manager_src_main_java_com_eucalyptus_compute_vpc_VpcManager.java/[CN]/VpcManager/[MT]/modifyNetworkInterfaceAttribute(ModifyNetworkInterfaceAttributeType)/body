{
  final ModifyNetworkInterfaceAttributeResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final AccountFullName accountFullName=ctx.getUserFullName().asAccountFullName();
  final String eniId=Identifier.eni.normalize(request.getNetworkInterfaceId());
  try {
    final AtomicBoolean invalidate=new AtomicBoolean(false);
    networkInterfaces.updateByExample(NetworkInterface.exampleWithName(accountFullName,eniId),accountFullName,request.getNetworkInterfaceId(),new Callback<NetworkInterface>(){
      @Override public void fire(      final NetworkInterface networkInterface){
        if (RestrictedTypes.filterPrivileged().apply(networkInterface)) {
          if (request.getAttachment() != null) {
            if (networkInterface.isAttached() && networkInterface.getAttachment().getAttachmentId().equals(request.getAttachment().getAttachmentId())) {
              networkInterface.getAttachment().setDeleteOnTerminate(request.getAttachment().getDeleteOnTermination());
            }
          }
 else           if (request.getDescription() != null) {
            networkInterface.setDescription(request.getDescription().getValue());
          }
 else           if (request.getGroupSet() != null && !request.getGroupSet().getItem().isEmpty()) {
            try {
              networkInterface.setNetworkGroups(Sets.newHashSet(Iterables.transform(request.getGroupSet().groupIds(),RestrictedTypes.resolver(NetworkGroup.class))));
              if (networkInterface.getNetworkGroups().size() > VpcConfiguration.getSecurityGroupsPerNetworkInterface()) {
                throw Exceptions.toUndeclared(new ClientComputeException("SecurityGroupsPerInterfaceLimitExceeded","Security group limit exceeded"));
              }
              if (networkInterface.isAttached() && networkInterface.getAttachment().getDeviceIndex() == 0) {
                final Set<NetworkGroup> instanceGroups=networkInterface.getAttachment().getInstance().getNetworkGroups();
                instanceGroups.clear();
                instanceGroups.addAll(networkInterface.getNetworkGroups());
              }
              invalidate.set(true);
            }
 catch (            RuntimeException e) {
              final NoSuchMetadataException nsme=Exceptions.findCause(e,NoSuchMetadataException.class);
              if (nsme != null) {
                throw Exceptions.toUndeclared(new ClientComputeException("InvalidSecurityGroupID.NotFound",nsme.getMessage()));
              }
              throw e;
            }
          }
 else           if (request.getSourceDestCheck() != null) {
            networkInterface.setSourceDestCheck(request.getSourceDestCheck().getValue());
            invalidate.set(true);
          }
 else {
            throw Exceptions.toUndeclared(new ClientComputeException("MissingParameter","Missing attribute value"));
          }
        }
 else {
          throw Exceptions.toUndeclared(new ClientUnauthorizedComputeException("Not authorized to modify network interface attribute"));
        }
      }
    }
);
    if (invalidate.get())     invalidate(eniId);
  }
 catch (  final Exception e) {
    throw handleException(e);
  }
  return reply;
}
