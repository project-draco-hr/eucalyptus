{
  final ModifyVpcAttributeResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final AccountFullName accountFullName=ctx.getUserFullName().asAccountFullName();
  try {
    vpcs.updateByExample(Vpc.exampleWithName(ctx.isAdministrator() ? null : accountFullName,Identifier.vpc.normalize(request.getVpcId())),accountFullName,request.getVpcId(),new Callback<Vpc>(){
      @Override public void fire(      final Vpc vpc){
        if (RestrictedTypes.filterPrivileged().apply(vpc)) {
          final AttributeBooleanValueType dnsHostnames=request.getEnableDnsHostnames();
          if (dnsHostnames != null && dnsHostnames.getValue() != null) {
            vpc.setDnsHostnames(dnsHostnames.getValue());
          }
          final AttributeBooleanValueType dnsSupport=request.getEnableDnsSupport();
          if (dnsSupport != null && dnsSupport.getValue() != null) {
            vpc.setDnsEnabled(dnsSupport.getValue());
          }
        }
 else {
          throw Exceptions.toUndeclared(new ClientUnauthorizedComputeException("Not authorized to modify VPC attribute"));
        }
      }
    }
);
  }
 catch (  Exception e) {
    throw handleException(e);
  }
  return reply;
}
