{
  final DetachNetworkInterfaceResponseType reply=request.getReply();
  final Context ctx=Contexts.lookup();
  final AccountFullName accountFullName=ctx.getUserFullName().asAccountFullName();
  final String attachmentId=Identifier.eni_attach.normalize(request.getAttachmentId());
  final String[] vpcId=new String[1];
  try {
    final NetworkInterface eni=networkInterfaces.updateByExample(NetworkInterface.exampleWithAttachment(accountFullName,attachmentId),accountFullName,request.getAttachmentId(),new Callback<NetworkInterface>(){
      @Override public void fire(      final NetworkInterface networkInterface){
        if (RestrictedTypes.filterPrivileged().apply(networkInterface))         try {
          if (Integer.valueOf(0).equals(networkInterface.getAttachment().getDeviceIndex())) {
            throw new ClientComputeException("OperationNotPermitted","Primary network interface cannot be detached");
          }
          if (networkInterface.getType() == NetworkInterface.Type.NatGateway) {
            throw Exceptions.toUndeclared(new ClientComputeException("OperationNotPermitted","NAT gateway network interface cannot be detached"));
          }
          if (networkInterface.isAttached() && (networkInterface.getAttachment().getStatus() == NetworkInterfaceAttachment.Status.attached || networkInterface.getAttachment().getStatus() == NetworkInterfaceAttachment.Status.attaching)) {
            if (VmInstance.VmState.PENDING.apply(networkInterface.getInstance())) {
              throw new ClientComputeException("IncorrectState","The instance is not in a valid state for this operation");
            }
 else             if (VmInstance.VmStateSet.TORNDOWN.apply(networkInterface.getInstance())) {
              networkInterface.detach();
            }
 else {
              vpcId[0]=networkInterface.getVpc().getDisplayName();
              networkInterface.getAttachment().transitionStatus(NetworkInterfaceAttachment.Status.detaching);
              networkInterface.getInstance().updateTimeStamps();
            }
          }
        }
 catch (        Exception e) {
          throw Exceptions.toUndeclared(e);
        }
 else {
          throw Exceptions.toUndeclared(new ClientUnauthorizedComputeException("Not authorized to detach network interface"));
        }
      }
    }
);
    if (vpcId[0] != null) {
      NetworkInterfaceHelper.stop(eni);
      invalidate(vpcId[0]);
    }
  }
 catch (  VpcMetadataNotFoundException e) {
    throw new ClientComputeException("InvalidAttachmentID.NotFound","Network interface attachment (" + request.getAttachmentId() + ") not found ");
  }
catch (  Exception e) {
    throw handleException(e);
  }
  return reply;
}
