{
  if (t.getValue() != null && t.getValue().equals(zones))   return;
  if (zones == null || zones.length() == 0) {
    return;
  }
  final List<String> availabilityZones=Lists.newArrayList();
  if (zones.contains(",")) {
    final String[] tokens=zones.split(",");
    if ((tokens.length - 1) != StringUtils.countOccurrencesOf(zones,","))     throw new ConfigurablePropertyException("Invalid availability zones");
    for (    final String zone : tokens)     availabilityZones.add(zone);
  }
 else {
    availabilityZones.add(zones);
  }
  final List<String> clusterNames=Lists.newArrayList();
  try {
    final List<ClusterInfoType> clusters=Ec2Client.getInstance().describeAvailabilityZones(null,false);
    for (    final ClusterInfoType cluster : clusters) {
      clusterNames.add(cluster.getZoneName());
    }
  }
 catch (  final Exception ex) {
    throw new ConfigurablePropertyException("Faield to check availability zones",ex);
  }
  for (  final String zone : availabilityZones) {
    if (!clusterNames.contains(zone))     throw new ConfigurablePropertyException(zone + " is not found in availability zones");
  }
}
