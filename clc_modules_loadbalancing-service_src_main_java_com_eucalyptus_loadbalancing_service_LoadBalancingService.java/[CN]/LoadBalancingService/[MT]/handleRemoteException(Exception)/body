{
  final Optional<AsyncExceptions.AsyncWebServiceError> serviceErrorOption=AsyncExceptions.asWebServiceError(e);
  if (serviceErrorOption.isPresent()) {
    final AsyncExceptions.AsyncWebServiceError serviceError=serviceErrorOption.get();
    final String code=serviceError.getCode();
    final String message=serviceError.getMessage();
switch (serviceError.getHttpErrorCode()) {
case 400:
      throw new LoadBalancingClientException(code,message);
case 403:
    throw new LoadBalancingAuthorizationException(code,message);
case 409:
  throw new LoadBalancingInvalidConfigurationException(code,message);
case 503:
throw new LoadBalancingUnavailableException(message);
default :
throw new LoadBalancingException(code,Role.Receiver,message);
}
}
}
