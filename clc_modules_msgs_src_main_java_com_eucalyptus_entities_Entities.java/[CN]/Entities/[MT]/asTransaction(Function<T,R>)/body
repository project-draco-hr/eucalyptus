{
  if (function instanceof TransactionalFunction) {
    return function;
  }
 else {
    final List<Class<?>> generics=Classes.genericsToClasses(function);
    for (    final Class<?> type : generics) {
      if (PersistenceContexts.isPersistentClass(type)) {
        return asTransaction(type,function);
      }
    }
    throw new IllegalArgumentException("Failed to find generics for provided function, cannot make into transaction: " + Threads.currentStackString());
  }
}
