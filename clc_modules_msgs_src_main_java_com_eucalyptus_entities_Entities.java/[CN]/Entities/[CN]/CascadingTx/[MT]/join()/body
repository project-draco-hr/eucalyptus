{
  return new EntityTransaction(){
    private final String uuid=UUID.randomUUID().toString();
{
      CascadingTx.this.startStes.put(CascadingTx.this.getRecord().getUuid() + ":" + this.uuid,Threads.currentStackFrame(2));
    }
    @Override public void setRollbackOnly(){
    }
    @Override public void rollback(){
    }
    @Override public boolean isActive(){
      return CascadingTx.this.isActive();
    }
    @Override public boolean getRollbackOnly(){
      return CascadingTx.this.getRollbackOnly();
    }
    @Override public void commit(){
      try {
        CascadingTx.this.endStes.put(CascadingTx.this.getRecord().getUuid() + ":" + this.uuid,Threads.currentStackFrame(1));
        CascadingTx.this.getTxState().getSession().flush();
      }
 catch (      final HibernateException ex) {
        LOG.error(ex,ex);
      }
    }
    @Override public void begin(){
    }
  }
;
}
