{
  final ServerBootstrap bootstrap=new ServerBootstrap(channelFactory);
  bootstrap.setPipelineFactory(serverPipelineFactory);
  if (!Logs.isExtrrreeeme()) {
    LOG.info("Creating server bootstrap. (log level EXTREME for details)");
  }
 else {
    LOG.trace(LogUtil.subheader("Creating server boss thread pool."));
    LOG.trace(String.format("-> Server option: %25.25s = %s","child.tcpNoDelay",StackConfiguration.CHANNEL_NODELAY));
    LOG.trace(String.format("-> Server option: %25.25s = %s","child.keepAlive",StackConfiguration.CHANNEL_KEEP_ALIVE));
    LOG.trace(String.format("-> Server option: %25.25s = %s","child.reuseAddress",StackConfiguration.CHANNEL_REUSE_ADDRESS));
    LOG.trace(String.format("-> Server option: %25.25s = %s","child.connectTimeoutMillis",StackConfiguration.CHANNEL_CONNECT_TIMEOUT));
    LOG.trace(String.format("-> Server option: %25.25s = %s","tcpNoDelay",StackConfiguration.SERVER_CHANNEL_NODELAY));
    LOG.trace(String.format("-> Server option: %25.25s = %s","reuseAddress",StackConfiguration.SERVER_CHANNEL_REUSE_ADDRESS));
  }
  bootstrap.setOption("child.tcpNoDelay",StackConfiguration.CHANNEL_NODELAY);
  bootstrap.setOption("child.keepAlive",StackConfiguration.CHANNEL_KEEP_ALIVE);
  bootstrap.setOption("child.reuseAddress",StackConfiguration.CHANNEL_REUSE_ADDRESS);
  bootstrap.setOption("child.connectTimeoutMillis",StackConfiguration.CHANNEL_CONNECT_TIMEOUT);
  bootstrap.setOption("tcpNoDelay",StackConfiguration.SERVER_CHANNEL_NODELAY);
  bootstrap.setOption("reuseAddress",StackConfiguration.SERVER_CHANNEL_REUSE_ADDRESS);
  return bootstrap;
}
