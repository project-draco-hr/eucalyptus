{
  try {
    ConcurrentMap<String,Object> info=getChannelInfo(ctx);
    if (e instanceof ChannelStateEvent) {
      upstreamChannelStateEvent((ChannelStateEvent)e,info);
    }
    if (ctx.getPipeline().getLast() instanceof AsyncRequestHandler) {
      AsyncRequestHandler requestHandler=(AsyncRequestHandler)ctx.getPipeline().getLast();
      info.putIfAbsent("pipeline",ctx.getPipeline().getClass());
      info.putIfAbsent("silent.requesthandler",requestHandler);
      if (requestHandler != null && requestHandler.getRequest() != null && requestHandler.getRequest().get() != null) {
        info.putIfAbsent("request.message",Objects.firstNonNull(requestHandler.getRequest().get(),NULLPROXY).getClass());
      }
    }
 else     if (e instanceof ExceptionEvent) {
      info.putIfAbsent("exception",((ExceptionEvent)e).getCause());
    }
 else     if (e instanceof MessageEvent) {
      final Object message=Objects.firstNonNull(((MessageEvent)e).getMessage(),NULLPROXY);
      info.putIfAbsent("silent.request",message);
      info.putIfAbsent("request.type",message.getClass());
    }
  }
 catch (  Exception e1) {
    LOG.debug(e1);
  }
  ctx.sendUpstream(e);
}
