{
  int updatedStackVersion=rolledBackStackVersion - 1;
  try (TransactionResource db=Entities.transactionFor(STACK_ENTITY_TRANSACTION_CLASS)){
    Criteria criteria=Entities.createCriteria(StackEntity.class).add(Restrictions.eq("stackId",stackId)).add(Restrictions.eq("accountId",accountId)).add(Restrictions.eq("stackVersion",updatedStackVersion)).add(Restrictions.eq("recordDeleted",Boolean.FALSE));
    List<StackEntity> entityList=criteria.list();
    if (entityList == null || entityList.isEmpty()) {
      throw new ValidationErrorException("Stack does not exist");
    }
 else     if (entityList.size() > 1) {
      throw new InternalFailureException("More than one stack  exists with this id " + stackId + " and version "+ updatedStackVersion);
    }
    StackEntity currentStackEntity=entityList.get(0);
    Criteria pastCriteria=Entities.createCriteria(PastStackEntity.class).add(Restrictions.eq("stackId",stackId)).add(Restrictions.eq("accountId",accountId)).add(Restrictions.eq("stackVersion",updatedStackVersion - 1)).add(Restrictions.eq("recordDeleted",Boolean.FALSE));
    List<PastStackEntity> pastEntityList=pastCriteria.list();
    if (pastEntityList == null || pastEntityList.isEmpty()) {
      throw new ValidationErrorException("Previous version of stack does not exist with version " + (updatedStackVersion - 1));
    }
 else     if (entityList.size() > 1) {
      throw new InternalFailureException("More than one stack  exists with this id " + stackId + " and version "+ (updatedStackVersion - 1));
    }
    PastStackEntity pastStackEntity=pastEntityList.get(0);
    swapStackEntityFields(pastStackEntity,currentStackEntity);
    currentStackEntity.setStackVersion(rolledBackStackVersion);
    pastStackEntity.setStackVersion(updatedStackVersion);
    currentStackEntity.setStackStatus(pastStackEntity.getStackStatus());
    currentStackEntity.setStackStatusReason(pastStackEntity.getStackStatusReason());
    db.commit();
    return currentStackEntity;
  }
 }
