{
  StackEntity stackEntity=null;
  try (TransactionResource db=Entities.transactionFor(StackEntity.class)){
    Criteria criteria=Entities.createCriteria(StackEntity.class).add(Restrictions.eq("stackId",stackId)).add(Restrictions.eq("accountId",accountId)).add(Restrictions.eq("recordDeleted",Boolean.FALSE));
    List<StackEntity> entityList=criteria.list();
    if (entityList == null || entityList.isEmpty()) {
      throw new ValidationErrorException("Stack does not exist");
    }
 else     if (entityList.size() > 1) {
      throw new InternalFailureException("More than one stack exists with this id " + stackId + " , currently");
    }
    stackEntity=entityList.get(0);
    if (stackEntity.getStackStatus() != Status.CREATE_COMPLETE && stackEntity.getStackStatus() != Status.UPDATE_COMPLETE && stackEntity.getStackStatus() != Status.UPDATE_ROLLBACK_COMPLETE) {
      throw new ValidationErrorException("Stack:" + stackId + " is in "+ stackEntity.getStackStatus().toString()+ " state and can not be updated.");
    }
    StackEntityHelper.populateStackEntityWithTemplate(stackEntity,newTemplate);
    stackEntity.setTemplateBody(newTemplateText);
    stackEntity.setStackStatus(Status.UPDATE_IN_PROGRESS);
    stackEntity.setStackStatusReason("User initiated");
    stackEntity.setLastUpdateOperationTimestamp(new Date());
    if (request.getCapabilities() != null && request.getCapabilities().getMember() != null) {
      stackEntity.setCapabilitiesJson(StackEntityHelper.capabilitiesToJson(request.getCapabilities().getMember()));
    }
 else {
      stackEntity.setCapabilitiesJson(null);
    }
    if (request.getNotificationARNs() != null && request.getNotificationARNs().getMember() != null) {
      stackEntity.setNotificationARNsJson(StackEntityHelper.notificationARNsToJson(request.getNotificationARNs().getMember()));
    }
 else {
      stackEntity.setNotificationARNsJson(null);
    }
    Entities.persist(stackEntity);
    db.commit();
  }
   return stackEntity;
}
