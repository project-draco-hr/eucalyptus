{
  if (this.retiredInstances != null) {
    for (    final LoadBalancerServoInstance instance : retiredInstances) {
      final EntityTransaction db=Entities.get(LoadBalancerServoInstance.class);
      try {
        final LoadBalancerServoInstance update=Entities.uniqueResult(instance);
        update.setState(LoadBalancerServoInstance.STATE.InService);
        Entities.persist(update);
        db.commit();
      }
 catch (      final NoSuchElementException ex) {
        db.rollback();
        LOG.warn("Failed to update the servo instance's state: no such instance found");
      }
catch (      final Exception ex) {
        db.rollback();
        LOG.warn("Failed to update the servo instance's state",ex);
      }
 finally {
        if (db.isActive())         db.rollback();
      }
    }
  }
}
