{
  AWSEC2EIPResourceAction action=(AWSEC2EIPResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  AllocateAddressType allocateAddressType=MessageHelper.createMessage(AllocateAddressType.class,action.info.getEffectiveUserId());
  if (action.properties.getDomain() != null && !"vpc".equals(action.properties.getDomain())) {
    throw new ValidationErrorException("vpc is the only supported value for Domain");
  }
  if (action.properties.getDomain() != null) {
    allocateAddressType.setDomain(action.properties.getDomain());
  }
  AllocateAddressResponseType allocateAddressResponseType=AsyncRequests.<AllocateAddressType,AllocateAddressResponseType>sendSync(configuration,allocateAddressType);
  String publicIp=allocateAddressResponseType.getPublicIp();
  action.info.setPhysicalResourceId(publicIp);
  action.info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(action.info.getPhysicalResourceId())));
  if (action.properties.getDomain() != null) {
    action.info.setAllocationId(JsonHelper.getStringFromJsonNode(new TextNode(allocateAddressResponseType.getAllocationId())));
  }
  return action;
}
