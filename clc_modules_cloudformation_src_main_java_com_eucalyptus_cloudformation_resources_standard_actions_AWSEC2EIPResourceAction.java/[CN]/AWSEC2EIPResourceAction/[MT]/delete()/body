{
  if (info.getPhysicalResourceId() == null)   return;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  DescribeAddressesType describeAddressesType=new DescribeAddressesType();
  if (properties.getDomain() != null) {
    describeAddressesType.setAllocationIds(Lists.newArrayList(JsonHelper.getJsonNodeFromString(info.getAllocationId()).textValue()));
  }
 else {
    describeAddressesType.setPublicIpsSet(Lists.newArrayList(info.getPhysicalResourceId()));
  }
  describeAddressesType.setEffectiveUserId(info.getEffectiveUserId());
  DescribeAddressesResponseType describeAddressesResponseType=AsyncRequests.<DescribeAddressesType,DescribeAddressesResponseType>sendSync(configuration,describeAddressesType);
  if (describeAddressesResponseType.getAddressesSet() != null && !describeAddressesResponseType.getAddressesSet().isEmpty()) {
    ReleaseAddressType releaseAddressType=new ReleaseAddressType();
    if (properties.getDomain() != null) {
      releaseAddressType.setAllocationId(JsonHelper.getJsonNodeFromString(info.getAllocationId()).textValue());
    }
 else {
      releaseAddressType.setPublicIp(info.getPhysicalResourceId());
    }
    releaseAddressType.setEffectiveUserId(info.getEffectiveUserId());
    AsyncRequests.<ReleaseAddressType,ReleaseAddressResponseType>sendSync(configuration,releaseAddressType);
  }
}
