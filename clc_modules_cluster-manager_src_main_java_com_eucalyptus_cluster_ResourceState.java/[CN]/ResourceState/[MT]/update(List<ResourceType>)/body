{
  int outstandingCount=0;
  int pending=0, submitted=0, redeemed=0;
  for (  ResourceToken t : this.pendingTokens)   pending+=t.getAmount();
  for (  ResourceToken t : this.submittedTokens)   submitted+=t.getAmount();
  for (  ResourceToken t : this.redeemedTokens)   redeemed+=t.getAmount();
  outstandingCount=pending + submitted;
  EventRecord.here(ResourceState.class,EventType.CLUSTER_STATE_UPDATE,this.clusterName,String.format("outstanding=%d:pending=%d:submitted=%d:redeemed=%d",outstandingCount,pending,submitted,redeemed)).info();
  this.redeemedTokens.clear();
  StringBuffer before=new StringBuffer();
  StringBuffer after=new StringBuffer();
  for (  ResourceType rsc : rscUpdate) {
    VmTypeAvailability vmAvailable=this.typeMap.get(rsc.getInstanceType().getName());
    if (vmAvailable == null)     continue;
    before.append(String.format(":%s:%d/%d",vmAvailable.getType().getName(),vmAvailable.getAvailable(),vmAvailable.getMax()));
    vmAvailable.setAvailable(rsc.getAvailableInstances());
    vmAvailable.decrement(outstandingCount);
    vmAvailable.setMax(rsc.getMaxInstances());
    after.append(String.format(":%s:%d/%d",vmAvailable.getType().getName(),vmAvailable.getAvailable(),vmAvailable.getMax()));
  }
  EventRecord.here(ResourceState.class,EventType.CLUSTER_STATE_UPDATE,this.clusterName,"ANTE" + before.toString()).info();
  EventRecord.here(ResourceState.class,EventType.CLUSTER_STATE_UPDATE,this.clusterName,"POST" + after.toString()).info();
}
