{
  String ipAddr=null;
  HttpClient httpClient=new HttpClient();
  String clientVersion=(String)httpClient.getParams().getDefaults().getParameter(HttpMethodParams.USER_AGENT);
  String javaVersion=System.getProperty("java.version");
  String osName=System.getProperty("os.name");
  String osArch=System.getProperty("os.arch");
  String eucaVersion=System.getProperty("euca.version");
  String extraVersion=BillOfMaterials.getExtraVersion();
  LOG.debug("Eucalyptus EXTRA VERSION: " + extraVersion);
  String userAgent=clientVersion + " (java " + javaVersion+ "; "+ osName+ " "+ osArch+ ") Eucalyptus/"+ eucaVersion;
  if (extraVersion != null) {
    userAgent=userAgent + "-" + extraVersion;
  }
  httpClient.getParams().setParameter(HttpMethodParams.USER_AGENT,userAgent);
  if (HttpServerBootstrapper.httpProxyHost != null && (HttpServerBootstrapper.httpProxyHost.length() > 0)) {
    String proxyHost=HttpServerBootstrapper.httpProxyHost;
    if (HttpServerBootstrapper.httpProxyPort != null && (HttpServerBootstrapper.httpProxyPort.length() > 0)) {
      int proxyPort=Integer.parseInt(HttpServerBootstrapper.httpProxyPort);
      httpClient.getHostConfiguration().setProxy(proxyHost,proxyPort);
    }
 else {
      httpClient.getHostConfiguration().setProxyHost(new ProxyHost(proxyHost));
    }
  }
  String whoamiUrl=WebProperties.getProperty(WebProperties.RIGHTSCALE_WHOAMI_URL,WebProperties.RIGHTSCALE_WHOAMI_URL_DEFAULT);
  GetMethod method=new GetMethod(whoamiUrl);
  Integer timeoutMs=new Integer(3 * 1000);
  method.getParams().setSoTimeout(timeoutMs);
  try {
    httpClient.executeMethod(method);
    String str="";
    InputStream in=method.getResponseBodyAsStream();
    byte[] readBytes=new byte[1024];
    int bytesRead=-1;
    while ((bytesRead=in.read(readBytes)) > 0) {
      str+=new String(readBytes,0,bytesRead);
    }
    Matcher matcher=Pattern.compile(".*your ip is (.*)").matcher(str);
    if (matcher.find()) {
      ipAddr=matcher.group(1);
    }
  }
 catch (  MalformedURLException e) {
    LOG.warn("Malformed URL exception: " + e.getMessage());
    LOG.debug(e,e);
  }
catch (  IOException e) {
    LOG.warn("I/O exception: " + e.getMessage());
    LOG.debug(e,e);
  }
 finally {
    method.releaseConnection();
  }
  return ipAddr;
}
