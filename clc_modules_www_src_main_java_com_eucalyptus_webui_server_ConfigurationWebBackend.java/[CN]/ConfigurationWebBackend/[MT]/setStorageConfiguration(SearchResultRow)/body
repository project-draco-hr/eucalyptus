{
  int i=0;
  i++;
  String name=input.getField(i++);
  String partition=input.getField(i++);
  i++;
  String host=input.getField(i++);
  Integer port=null;
  try {
    port=Integer.parseInt(input.getField(i++));
  }
 catch (  Exception e) {
    LOG.error("Failed to parse port for storage configuration from UI input");
    return;
  }
  ArrayList<ComponentProperty> properties=Lists.newArrayList();
  deserializeComponentProperties(properties,input,i);
  ServiceConfiguration scConfig=ServiceConfigurations.lookupByName(Storage.class,name);
  final UpdateStorageConfigurationType updateStorageConfiguration=new UpdateStorageConfigurationType();
  updateStorageConfiguration.setName(scConfig.getPartition());
  updateStorageConfiguration.setStorageParams(properties);
  Dispatcher scDispatch=ServiceDispatcher.lookup(scConfig);
  try {
    scDispatch.send(updateStorageConfiguration);
  }
 catch (  Exception e) {
    LOG.error("Error sending update configuration message to storage controller: " + updateStorageConfiguration);
    LOG.error("The storage controller's configuration may be out of sync!");
    LOG.debug(e,e);
    throw new EucalyptusServiceException("Failed to update storage configuration",e);
  }
}
