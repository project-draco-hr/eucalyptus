{
  T oldValue=null;
  this.canHas.writeLock().lock();
  try {
    oldValue=this.lookup(obj.getName());
    E oldState=this.getState(oldValue.getName());
    this.stateMaps.get(oldState).remove(obj.getName());
  }
 catch (  NoSuchElementException e) {
  }
 finally {
    this.stateMaps.get(initialState).put(obj.getName(),obj);
    this.canHas.writeLock().unlock();
    try {
      ListenerRegistry.getInstance().fireEvent(new StateEvent<T,E>(initialState,obj));
    }
 catch (    EventVetoedException e) {
      LOG.warn("Registry change was vetoed: " + e,e);
    }
  }
  return oldValue;
}
