{
  T oldValue=null;
  this.canHas.writeLock().lock();
  try {
    for (    Map<String,T> m : this.stateMaps.values()) {
      oldValue=m.remove(name);
      if (oldValue != null)       return oldValue;
    }
    throw new NoSuchElementException("Can't find registered object: " + name + " in "+ this.getClass().getSimpleName());
  }
  finally {
    this.canHas.writeLock().unlock();
    try {
      ListenerRegistry.getInstance().fireEvent(new StateEvent<T,E>(this.states[0],oldValue));
    }
 catch (    EventVetoedException e) {
      LOG.warn("Registry change was vetoed: " + e,e);
    }
  }
}
