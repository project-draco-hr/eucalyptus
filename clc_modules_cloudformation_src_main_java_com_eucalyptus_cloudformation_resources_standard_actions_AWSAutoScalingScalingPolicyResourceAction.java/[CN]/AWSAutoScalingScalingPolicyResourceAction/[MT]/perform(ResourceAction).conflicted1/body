{
  AWSAutoScalingScalingPolicyResourceAction action=(AWSAutoScalingScalingPolicyResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(AutoScaling.class);
  if (!Boolean.TRUE.equals(action.info.getCreatedEnoughToDelete()))   return action;
  DescribeAutoScalingGroupsType describeAutoScalingGroupsType=MessageHelper.createMessage(DescribeAutoScalingGroupsType.class,action.info.getEffectiveUserId());
  AutoScalingGroupNames autoScalingGroupNames=new AutoScalingGroupNames();
  ArrayList<String> member=Lists.newArrayList(action.properties.getAutoScalingGroupName());
  autoScalingGroupNames.setMember(member);
  describeAutoScalingGroupsType.setAutoScalingGroupNames(autoScalingGroupNames);
  DescribeAutoScalingGroupsResponseType describeAutoScalingGroupsResponseType=AsyncRequests.<DescribeAutoScalingGroupsType,DescribeAutoScalingGroupsResponseType>sendSync(configuration,describeAutoScalingGroupsType);
  if (action.doesGroupNotExist(describeAutoScalingGroupsResponseType)) {
    return action;
  }
  DeletePolicyType deletePolicyType=MessageHelper.createMessage(DeletePolicyType.class,action.info.getEffectiveUserId());
  deletePolicyType.setPolicyName(action.info.getPhysicalResourceId());
  deletePolicyType.setAutoScalingGroupName(action.properties.getAutoScalingGroupName());
  AsyncRequests.<DeletePolicyType,DeletePolicyResponseType>sendSync(configuration,deletePolicyType);
  return action;
}
