{
switch (stepNum) {
case 0:
    ServiceConfiguration configuration=Topology.lookup(AutoScaling.class);
  DescribeAutoScalingGroupsType describeAutoScalingGroupsType=new DescribeAutoScalingGroupsType();
AutoScalingGroupNames autoScalingGroupNames=new AutoScalingGroupNames();
ArrayList<String> member=Lists.newArrayList(properties.getAutoScalingGroupName());
autoScalingGroupNames.setMember(member);
describeAutoScalingGroupsType.setAutoScalingGroupNames(autoScalingGroupNames);
describeAutoScalingGroupsType.setEffectiveUserId(info.getEffectiveUserId());
DescribeAutoScalingGroupsResponseType describeAutoScalingGroupsResponseType2=AsyncRequests.<DescribeAutoScalingGroupsType,DescribeAutoScalingGroupsResponseType>sendSync(configuration,describeAutoScalingGroupsType);
if (doesGroupNotExist(describeAutoScalingGroupsResponseType2)) {
throw new Exception("Autoscaling group " + properties.getAutoScalingGroupName() + " does not exist");
}
String scalingPolicyName=getDefaultPhysicalResourceId();
PutScalingPolicyType putScalingPolicyType=new PutScalingPolicyType();
putScalingPolicyType.setAutoScalingGroupName(properties.getAutoScalingGroupName());
putScalingPolicyType.setAdjustmentType(properties.getAdjustmentType());
putScalingPolicyType.setCooldown(properties.getCooldown());
putScalingPolicyType.setPolicyName(scalingPolicyName);
putScalingPolicyType.setScalingAdjustment(properties.getScalingAdjustment());
putScalingPolicyType.setEffectiveUserId(info.getEffectiveUserId());
PutScalingPolicyResponseType putScalingPolicyResponseType=AsyncRequests.<PutScalingPolicyType,PutScalingPolicyResponseType>sendSync(configuration,putScalingPolicyType);
info.setPhysicalResourceId(putScalingPolicyResponseType.getPutScalingPolicyResult().getPolicyARN());
info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(info.getPhysicalResourceId())));
break;
default :
throw new IllegalStateException("Invalid step " + stepNum);
}
}
