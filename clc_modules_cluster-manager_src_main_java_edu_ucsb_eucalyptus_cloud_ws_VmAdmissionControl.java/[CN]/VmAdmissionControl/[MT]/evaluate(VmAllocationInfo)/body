{
  SLAs sla=new SLAs();
  try {
    vmAllocInfo.getAllocationTokens().addAll(sla.doVmAllocation(vmAllocInfo));
  }
 catch (  Throwable e) {
    LOG.debug(e,e);
    for (    ResourceToken token : vmAllocInfo.getAllocationTokens()) {
      Clusters.getInstance().lookup(token.getCluster()).getNodeState().releaseToken(token);
    }
    throw new EucalyptusCloudException(e.getMessage());
  }
  try {
    sla.doAddressAllocation(vmAllocInfo);
  }
 catch (  Throwable e) {
    LOG.debug(e,e);
    for (    ResourceToken token : vmAllocInfo.getAllocationTokens()) {
      Clusters.getInstance().lookup(token.getCluster()).getNodeState().releaseToken(token);
      for (      String addr : token.getAddresses()) {
        try {
          Addresses.getAddressManager().releaseAddress(Addresses.getInstance().lookup(addr));
        }
 catch (        NoSuchElementException e1) {
          LOG.debug(e1,e1);
        }
      }
    }
    throw new EucalyptusCloudException(e.getMessage());
  }
  try {
    sla.doNetworkAllocation(vmAllocInfo);
  }
 catch (  Throwable e) {
    LOG.debug(e,e);
    for (    ResourceToken token : vmAllocInfo.getAllocationTokens()) {
      Clusters.getInstance().lookup(token.getCluster()).getNodeState().releaseToken(token);
      if (token.getPrimaryNetwork() != null) {
        Network net=Networks.getInstance().lookup(token.getPrimaryNetwork().getName());
        for (        Integer i : token.getPrimaryNetwork().getIndexes()) {
          net.returnNetworkIndex(i);
        }
      }
      for (      String addr : token.getAddresses()) {
        Addresses.getAddressManager().releaseAddress(Addresses.getInstance().lookup(addr));
      }
    }
    throw new EucalyptusCloudException(e);
  }
  return vmAllocInfo;
}
