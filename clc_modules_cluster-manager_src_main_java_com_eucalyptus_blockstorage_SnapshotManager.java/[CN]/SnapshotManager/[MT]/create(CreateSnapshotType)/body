{
  Context ctx=Contexts.lookup();
  String action=PolicySpec.requestToAction(request);
  if (!ctx.hasAdministrativePrivileges()) {
    if (!Permissions.isAuthorized(PolicySpec.VENDOR_EC2,PolicySpec.EC2_RESOURCE_SNAPSHOT,"",ctx.getAccount(),action,ctx.getUser())) {
      throw new EucalyptusCloudException("Not authorized to create snapshot by " + ctx.getUser().getName());
    }
    if (!Permissions.canAllocate(PolicySpec.VENDOR_EC2,PolicySpec.EC2_RESOURCE_SNAPSHOT,"",action,ctx.getUser(),1L)) {
      throw new EucalyptusCloudException("Quota exceeded in creating snapshot by " + ctx.getUser().getName());
    }
  }
  EntityWrapper<Snapshot> db=EntityWrapper.get(Snapshot.class);
  Volume vol;
  try {
    vol=Transactions.find(Volume.named(ctx.getUserFullName(),request.getVolumeId()));
  }
 catch (  ExecutionException ex1) {
    throw new EucalyptusCloudException(ex1);
  }
  ServiceConfiguration sc=Partitions.lookupService(Storage.class,vol.getPartition());
  vol=Volumes.checkVolumeReady(vol);
  Snapshot snap=Snapshots.initializeSnapshot(ctx.getUserFullName(),vol,sc);
  snap=Snapshots.startCreateSnapshot(vol,snap);
  CreateSnapshotResponseType reply=(CreateSnapshotResponseType)request.getReply();
  edu.ucsb.eucalyptus.msgs.Snapshot snapMsg=snap.morph(new edu.ucsb.eucalyptus.msgs.Snapshot());
  snapMsg.setProgress("0%");
  snapMsg.setOwnerId(snap.getOwnerAccountNumber());
  snapMsg.setVolumeSize(vol.getSize().toString());
  reply.setSnapshot(snapMsg);
  return reply;
}
