{
  DeleteSnapshotResponseType reply=(DeleteSnapshotResponseType)request.getReply();
  reply.set_return(false);
  EntityWrapper<Snapshot> db=SnapshotManager.getEntityWrapper();
  try {
    Snapshot snap=db.getUnique(Snapshot.named(request.getUserErn(),request.getSnapshotId()));
    if (!State.EXTANT.equals(snap.getState())) {
      db.rollback();
      reply.set_return(false);
      return reply;
    }
    db.delete(snap);
    DeleteStorageSnapshotResponseType scReply=StorageUtil.send(snap.getCluster(),new DeleteStorageSnapshotType(snap.getDisplayName()));
    if (scReply.get_return()) {
      StorageUtil.dispatchAll(new DeleteStorageSnapshotType(snap.getDisplayName()));
      db.commit();
      EventRecord.here(SnapshotManager.class,EventClass.SNAPSHOT,EventType.SNAPSHOT_DELETE,"user=" + snap.getOwner(),"snapshot=" + snap.getDisplayName()).info();
    }
 else {
      db.rollback();
      throw new EucalyptusCloudException("Unable to delete snapshot.");
    }
  }
 catch (  EucalyptusCloudException e) {
    LOG.debug(e,e);
    db.rollback();
    throw new EucalyptusCloudException("Error deleting storage volume:" + e.getMessage());
  }
  reply.set_return(true);
  return reply;
}
