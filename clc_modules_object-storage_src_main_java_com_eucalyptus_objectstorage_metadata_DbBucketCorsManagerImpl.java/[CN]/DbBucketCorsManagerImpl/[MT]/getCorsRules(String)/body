{
  List<CorsRule> rulesFromDb=null;
  CorsRule exampleRule=new CorsRule();
  exampleRule.setBucketUuid(bucketUuid);
  try (final TransactionResource tran=Entities.transactionFor(CorsRule.class)){
    rulesFromDb=Entities.query(exampleRule);
    tran.commit();
  }
 catch (  NoSuchElementException e) {
  }
catch (  Exception ex) {
    LOG.error("Exception caught while retrieving CORS rules for bucket " + bucketUuid + ": ",ex);
  }
  List<com.eucalyptus.storage.msgs.s3.CorsRule> responseRules=null;
  if (rulesFromDb != null) {
    responseRules=new ArrayList<com.eucalyptus.storage.msgs.s3.CorsRule>(rulesFromDb.size());
    for (    CorsRule fromDb : rulesFromDb) {
      int sequence=fromDb.getSequence();
      if (responseRules.size() <= sequence) {
        com.eucalyptus.storage.msgs.s3.CorsRule dummyRule=null;
        for (int idx=responseRules.size(); idx < sequence + 1; idx++) {
          responseRules.add(dummyRule);
        }
      }
      responseRules.set(sequence,convertCorsRule(fromDb));
    }
  }
  return responseRules;
}
