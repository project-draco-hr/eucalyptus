{
  CreateBucketResponseType reply;
  if (checkManifestsBucket())   return;
  try {
    CreateBucketType msg=new CreateBucketType(DOWNLOAD_MANIFEST_BUCKET_NAME);
    msg.setBucket(DOWNLOAD_MANIFEST_BUCKET_NAME);
    msg.regarding();
    reply=AsyncRequests.sendSync(Topology.lookup(ObjectStorage.class),msg);
  }
 catch (  Exception e) {
    throw new EucalyptusCloudException("Failed to create bucket " + DOWNLOAD_MANIFEST_BUCKET_NAME,e);
  }
  try {
    LifecycleRule expireRule=new LifecycleRule();
    expireRule.setId("Manifest Expiration Rule");
    expireRule.setPrefix(DOWNLOAD_MANIFEST_PREFIX);
    expireRule.setStatus("Enabled");
    Expiration exp=new Expiration();
    exp.setCreationDelayDays(1);
    expireRule.setExpiration(exp);
    LifecycleConfiguration lcConfig=new LifecycleConfiguration();
    List<LifecycleRule> rules=Lists.newArrayList(expireRule);
    lcConfig.setRules(rules);
    SetBucketLifecycleType msg1=new SetBucketLifecycleType();
    msg1.setBucket(DOWNLOAD_MANIFEST_BUCKET_NAME);
    msg1.setLifecycleConfiguration(lcConfig);
    msg1.regarding();
    SetBucketLifecycleResponseType lifecycleReply=AsyncRequests.sendSync(Topology.lookup(ObjectStorage.class),msg1);
  }
 catch (  Exception e) {
    throw new EucalyptusCloudException("Failed to set bucket lifecycle on bucket " + DOWNLOAD_MANIFEST_BUCKET_NAME,e);
  }
  LOG.debug("Created bucket for download-manifests " + DOWNLOAD_MANIFEST_BUCKET_NAME + ": "+ reply.getStatusMessage());
}
