{
  long maxTimeMs=0l;
  List<InstanceAttributes> fakeInstances=new ArrayList<InstanceAttributes>();
  for (int i=0; i < numInstance; i++) {
    String uuid=new Long(i).toString();
    String instanceId=String.format("instance-%d",(i % numInstance));
    String userId=String.format("user-%d",(i % NUM_USER));
    String clusterName=String.format("cluster-%d",(i % NUM_CLUSTER));
    String availZone=String.format("zone-%d",(i % NUM_AVAIL_ZONE));
    FalseInstanceType[] vals=FalseInstanceType.values();
    String instanceType=vals[i % vals.length].toString();
    InstanceAttributes insAttrs=new InstanceAttributes(uuid,instanceId,instanceType,userId,clusterName,availZone);
    fakeInstances.add(insAttrs);
  }
  TestEventListener listener=new TestEventListener();
  for (int i=0; i < numUsage; i++) {
    listener.setCurrentTimeMillis(i * timeUsageApartMs);
    maxTimeMs=Math.max(maxTimeMs,i * timeUsageApartMs);
    for (    InstanceAttributes insAttrs : fakeInstances) {
      long instanceNum=Long.parseLong(insAttrs.getUuid());
      long netIo=instanceNum + i;
      long diskIo=instanceNum + i * 2;
      InstanceEvent event=new InstanceEvent(insAttrs.getUuid(),insAttrs.getInstanceId(),insAttrs.getInstanceType(),insAttrs.getUserId(),insAttrs.getClusterName(),insAttrs.getAvailabilityZone(),new Long(netIo),new Long(diskIo));
      listener.receiveEvent(event);
    }
  }
  return maxTimeMs + 1;
}
