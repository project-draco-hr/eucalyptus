{
  ServiceConfiguration config=null;
  final String serviceName=Strings.nullToEmpty(input.getServiceName());
  try {
    config=ServiceConfigurations.lookupByName(serviceName);
  }
 catch (  RuntimeException e) {
    for (    Component c : Components.list()) {
      for (      ServiceConfiguration s : c.services()) {
        if (serviceName.equals(s.getName())) {
          config=s;
          break;
        }
      }
    }
    if (config == null) {
      throw e;
    }
  }
  final ServiceConfiguration finalConfig=config;
  return new ServiceStatusDetail(){
{
      this.setSeverity(input.getSeverity().toString());
      this.setUuid(input.getCorrelationId());
      this.setTimestamp(input.getTimestamp().toString());
      this.setMessage(input.getMessage() != null ? input.getMessage() : "No summary information available.");
      this.setStackTrace(input.getStackString() != null ? input.getStackString() : Exceptions.string(new RuntimeException("Error while mapping service event record:  No stack information available")));
      this.setServiceFullName(finalConfig.getFullName().toString());
      this.setServiceHost(finalConfig.getHostName());
      this.setServiceName(serviceName);
    }
  }
;
}
