{
  AWSEC2SubnetResourceAction action=(AWSEC2SubnetResourceAction)resourceAction;
  ServiceConfiguration configuration=Topology.lookup(Compute.class);
  CreateSubnetType createSubnetType=MessageHelper.createMessage(CreateSubnetType.class,action.info.getEffectiveUserId());
  createSubnetType.setVpcId(action.properties.getVpcId());
  if (action.properties.getAvailabilityZone() != null) {
    createSubnetType.setAvailabilityZone(action.properties.getAvailabilityZone());
  }
  createSubnetType.setCidrBlock(action.properties.getCidrBlock());
  CreateSubnetResponseType createSubnetResponseType=AsyncRequests.<CreateSubnetType,CreateSubnetResponseType>sendSync(configuration,createSubnetType);
  action.info.setPhysicalResourceId(createSubnetResponseType.getSubnet().getSubnetId());
  action.info.setReferenceValueJson(JsonHelper.getStringFromJsonNode(new TextNode(action.info.getPhysicalResourceId())));
  action.info.setAvailabilityZone(JsonHelper.getStringFromJsonNode(new TextNode(createSubnetResponseType.getSubnet().getAvailabilityZone())));
  return action;
}
