{
  String methodName=this.findOperation(msgContext);
  Class serviceMethodArgType=this.findArgumentClass(methodName);
  SOAPFactory factory=this.getSOAPFactory(msgContext);
  OMElement msgBodyOm=msgContext.getEnvelope().getBody().getFirstElement();
  String bindingName=this.findBindingName(msgBodyOm);
  EucalyptusMessage wrappedParam=this.bindMessage(methodName,serviceMethodArgType,msgBodyOm,bindingName);
  HttpRequest httprequest=(HttpRequest)msgContext.getProperty(GenericHttpDispatcher.HTTP_REQUEST);
  if (httprequest == null) {
    this.verifyUser(msgContext,wrappedParam);
  }
 else {
    bindingName=httprequest.getBindingName();
    Policy p=new Policy();
    newMsgContext.setProperty(RampartMessageData.KEY_RAMPART_POLICY,p);
  }
  MuleMessage message=this.invokeService(methodName,wrappedParam);
  if (message == null)   throw new AxisFault("Received a NULL response. This is a bug -- it should NEVER happen.");
  this.checkException(message);
  if (newMsgContext != null) {
    SOAPEnvelope envelope=generateMessage(methodName,factory,bindingName,message.getPayload());
    newMsgContext.setEnvelope(envelope);
  }
  newMsgContext.setProperty(Axis2HttpWorker.REAL_HTTP_REQUEST,msgContext.getProperty(Axis2HttpWorker.REAL_HTTP_REQUEST));
  newMsgContext.setProperty(Axis2HttpWorker.REAL_HTTP_RESPONSE,msgContext.getProperty(Axis2HttpWorker.REAL_HTTP_RESPONSE));
  if (message.getPayload() instanceof WalrusErrorMessageType) {
    WalrusErrorMessageType errorMessage=(WalrusErrorMessageType)message.getPayload();
    msgContext.setProperty(Axis2HttpWorker.HTTP_STATUS,errorMessage.getHttpCode());
    newMsgContext.setProperty(Axis2HttpWorker.HTTP_STATUS,errorMessage.getHttpCode());
    newMsgContext.setProperty("messageType","application/walrus");
    return;
  }
  Boolean putType=(Boolean)msgContext.getProperty(WalrusProperties.STREAMING_HTTP_PUT);
  Boolean getType=(Boolean)msgContext.getProperty(WalrusProperties.STREAMING_HTTP_GET);
  if (getType != null || putType != null) {
    WalrusDataResponseType reply=(WalrusDataResponseType)message.getPayload();
    AxisHttpResponse response=(AxisHttpResponse)msgContext.getProperty(Axis2HttpWorker.REAL_HTTP_RESPONSE);
    response.addHeader(new BasicHeader("Last-Modified",reply.getLastModified()));
    response.addHeader(new BasicHeader("ETag",reply.getEtag()));
    if (getType != null) {
      newMsgContext.setProperty(WalrusProperties.STREAMING_HTTP_GET,getType);
      WalrusDataRequestType request=(WalrusDataRequestType)wrappedParam;
      Boolean isCompressed=request.getIsCompressed();
      if (isCompressed == null)       isCompressed=false;
      if (isCompressed) {
        newMsgContext.setProperty("GET_COMPRESSED",isCompressed);
      }
 else {
        Long contentLength=reply.getSize();
        response.addHeader(new BasicHeader(HTTP.CONTENT_LEN,String.valueOf(contentLength)));
      }
      List<MetaDataEntry> metaData=reply.getMetaData();
      for (      MetaDataEntry metaDataEntry : metaData) {
        response.addHeader(new BasicHeader(WalrusProperties.AMZ_META_HEADER_PREFIX + metaDataEntry.getName(),metaDataEntry.getValue()));
      }
      if (getType.equals(Boolean.TRUE)) {
        newMsgContext.setProperty("GET_KEY",request.getBucket() + "." + request.getKey());
        newMsgContext.setProperty("GET_RANDOM_KEY",request.getRandomKey());
      }
    }
 else     if (putType != null) {
      if (reply instanceof PostObjectResponseType) {
        PostObjectResponseType postReply=(PostObjectResponseType)reply;
        String redirectUrl=postReply.getRedirectUrl();
        if (redirectUrl != null) {
          response.addHeader(new BasicHeader("Location",redirectUrl));
          msgContext.setProperty(Axis2HttpWorker.HTTP_STATUS,HttpStatus.SC_MOVED_PERMANENTLY);
          newMsgContext.setProperty(Axis2HttpWorker.HTTP_STATUS,HttpStatus.SC_MOVED_PERMANENTLY);
          newMsgContext.setProperty("messageType","application/walrus");
        }
 else {
          Integer successCode=postReply.getSuccessCode();
          if (successCode != null) {
            newMsgContext.setProperty(Axis2HttpWorker.HTTP_STATUS,successCode);
            if (successCode == 201) {
              return;
            }
 else {
              newMsgContext.setProperty("messageType","application/walrus");
              return;
            }
          }
        }
      }
      response.addHeader(new BasicHeader(HTTP.CONTENT_LEN,String.valueOf(0)));
    }
  }
}
