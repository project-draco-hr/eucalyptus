{
  if (Components.lookup(Walrus.class).hasLocalService() || Components.lookup(Eucalyptus.class).hasLocalService()) {
    final List<ArbitratorConfiguration> configs=ServiceConfigurations.list(Arbitrator.class);
    for (    final ArbitratorConfiguration config : configs) {
      final String hostName=config.getHostName();
      Threads.lookup(Arbitrator.class,ArbitratorControl.class).submit(new Runnable(){
        @Override public void run(){
          try {
            final InetAddress addr=InetAddress.getByName(hostName);
            if (addr.isReachable(2000)) {
              ArbitratorControl.error.remove(hostName);
            }
          }
 catch (          final UnknownHostException e) {
            ArbitratorControl.error.put(hostName,Exceptions.filterStackTrace(e,2));
          }
catch (          final IOException e) {
            ArbitratorControl.error.put(hostName,Exceptions.filterStackTrace(e,2));
          }
          EventRecord.here(ArbitratorControl.class,EventType.BOOTSTRAPPER_CHECK,hostName,"errorMap",error.get(hostName).toString()).debug();
        }
      }
);
    }
    final Set<String> downArbitrators=Sets.newHashSet(error.keySet());
    if (downArbitrators.size() > 0) {
      final String errorMessage="Arbitrators not reachable: " + downArbitrators.toString();
      throw new EucalyptusCloudException(errorMessage);
    }
  }
}
