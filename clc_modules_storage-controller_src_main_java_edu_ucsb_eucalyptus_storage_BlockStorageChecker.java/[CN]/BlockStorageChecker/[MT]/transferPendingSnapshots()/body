{
  if (!transferredPending) {
    EntityWrapper<SnapshotInfo> db=StorageController.getEntityWrapper();
    SnapshotInfo snapshotInfo=new SnapshotInfo();
    snapshotInfo.setShouldTransfer(true);
    List<SnapshotInfo> snapshotInfos=db.query(snapshotInfo);
    if (snapshotInfos.size() > 0) {
      SnapshotInfo snapInfo=snapshotInfos.get(0);
      String snapshotId=snapInfo.getSnapshotId();
      List<String> returnValues=blockManager.prepareForTransfer(snapshotId);
      String snapshotFileName=returnValues.get(0);
      File snapshotFile=new File(snapshotFileName);
      Map<String,String> httpParamaters=new HashMap<String,String>();
      HttpWriter httpWriter;
      SnapshotProgressCallback callback=new SnapshotProgressCallback(snapshotId,snapshotFile.length(),StorageProperties.TRANSFER_CHUNK_SIZE);
      httpWriter=new HttpWriter("PUT",snapshotFile,callback,"snapset",snapshotId,"StoreSnapshot",null,httpParamaters);
      snapInfo.setShouldTransfer(false);
      try {
        httpWriter.run();
      }
 catch (      Exception ex) {
        LOG.error(ex,ex);
        this.cleanFailedSnapshot(snapshotId);
      }
    }
    db.commit();
    transferredPending=true;
  }
}
