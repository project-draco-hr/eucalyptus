{
  SetReference<T,R> ref=new SetReference<T,R>(){
    private volatile boolean finished=false;
    @Override public T set(    R referer) throws ResourceAllocationException {
      this.checkFinished();
      T ret=PersistentResource.this.doSetReferer(referer,ResourceAllocation.State.PENDING,ResourceAllocation.State.EXTANT);
      this.finished=true;
      return ret;
    }
    @Override public T abort() throws ResourceAllocationException {
      this.checkFinished();
      T ret=PersistentResource.this.doSetReferer(null,ResourceAllocation.State.PENDING,ResourceAllocation.State.FREE);
      this.finished=true;
      return ret;
    }
    private void checkFinished() throws ResourceAllocationException {
      if (this.finished) {
        throw new ResourceAllocationException("Failed to set referer since this reference has already been set: " + PersistentResource.this.getDisplayName() + " to "+ PersistentResource.this.getReferer()+ " and is currently in state "+ PersistentResource.this.getState());
      }
    }
    @Override public T get() throws TransactionException {
      return Transactions.naturalId((T)PersistentResource.this);
    }
  }
;
  return ref;
}
