{
  EntityWrapper<? extends PersistentResource> db=Entities.get(this.getClass());
  PersistentResource<T,R> input=db.getByNaturalId(this);
  try {
    if (!preconditionState.equals(input.getState())) {
      throw new RuntimeException("Error allocating resource " + PersistentResource.this.getClass().getSimpleName() + " with id "+ this.getDisplayName()+ " as the state is not "+ preconditionState.name()+ " (currently "+ this.getState()+ ").");
    }
 else {
      this.setReferer(referer);
      this.setState(finalState);
    }
    db.commit();
    return input.get();
  }
 catch (  Exception ex) {
    Logs.extreme().error(ex,ex);
    LOG.error(ex);
    try {
      db.rollback();
    }
  finally {
      throw new ResourceAllocationException(ex);
    }
  }
}
