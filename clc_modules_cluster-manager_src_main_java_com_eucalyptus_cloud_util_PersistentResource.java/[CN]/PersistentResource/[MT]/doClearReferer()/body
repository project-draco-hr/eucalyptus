{
  try {
    return Transactions.naturalId((T)this,new Callback<T>(){
      @Override public void fire(      T input){
        if (!ResourceAllocation.State.PENDING.equals(input.getState())) {
          throw new RuntimeException("Error allocating resource " + PersistentResource.this.getClass().getSimpleName() + " with id "+ PersistentResource.this.getDisplayName()+ " as the state is not PENDING (currently "+ PersistentResource.this.getState()+ ").");
        }
 else {
          PersistentResource.this.setReferer(null);
          PersistentResource.this.setState(ResourceAllocation.State.FREE);
        }
      }
    }
);
  }
 catch (  TransactionException ex) {
    LOG.error(ex,ex);
    throw ex;
  }
}
