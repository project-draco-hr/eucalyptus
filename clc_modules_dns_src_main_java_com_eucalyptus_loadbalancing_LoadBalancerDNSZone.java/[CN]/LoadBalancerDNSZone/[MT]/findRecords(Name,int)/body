{
  if (name.toString().matches(".*\\.elb\\..*")) {
    try {
      if (type == Type.AAAA)       return (SetResponse.ofType(SetResponse.SUCCESSFUL));
      String dnsName=name.toString();
      InetAddress ip=getNextAddress(dnsName);
      if (ip != null) {
        SetResponse resp=new SetResponse(SetResponse.SUCCESSFUL);
        resp.addRRset(new RRset(new ARecord(name,1,ttl,ip)));
        return resp;
      }
 else {
        return super.findRecords(name,type);
      }
    }
 catch (    Exception e) {
      return super.findRecords(name,type);
    }
  }
 else   if (name.toString().endsWith(".in-addr.arpa.")) {
    int index=name.toString().indexOf(".in-addr.arpa.");
    Name target=null;
    if (index > 0) {
      String ipString=name.toString().substring(0,index);
      String[] parts=ipString.split("\\.");
      String ipCandidate;
      if (parts.length == 4) {
        ipCandidate=new StringBuffer().append(parts[3]).append(".").append(parts[2]).append(".").append(parts[1]).append(".").append(parts[0]).toString();
      }
 else {
        return super.findRecords(name,type);
      }
      InetAddress ip=null;
      try {
        ip=InetAddress.getByName(ipCandidate);
      }
 catch (      UnknownHostException e) {
        LOG.error(e,e);
        return super.findRecords(name,type);
      }
      String targetName=reverseLBDNSMap.get(ip);
      if (targetName != null) {
        try {
          target=new Name(targetName);
        }
 catch (        TextParseException e) {
          LOG.error(e,e);
          return super.findRecords(name,type);
        }
        SetResponse resp=new SetResponse(SetResponse.SUCCESSFUL);
        resp.addRRset(new RRset(new PTRRecord(name,DClass.IN,ttl,target)));
        return resp;
      }
 else {
        return super.findRecords(name,type);
      }
    }
 else {
      return super.findRecords(name,type);
    }
  }
 else {
    return super.findRecords(name,type);
  }
}
