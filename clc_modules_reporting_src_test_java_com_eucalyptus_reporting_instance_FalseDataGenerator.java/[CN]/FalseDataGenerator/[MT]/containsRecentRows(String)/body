{
  boolean containsRows=(hasRows != null && hasRows.equalsIgnoreCase("true"));
  System.out.println(" ----> CONTAINS RECENT ROWS:" + containsRows);
  EntityWrapper<InstanceUsageSnapshot> entityWrapper=EntityWrapper.get(InstanceUsageSnapshot.class);
  try {
    int rowCnt=0;
    @SuppressWarnings("rawtypes") Iterator iter=entityWrapper.createQuery("from InstanceUsageSnapshot as sus").iterate();
    while (iter.hasNext()) {
      if (!containsRows) {
        throw new RuntimeException("Found >0 rows where 0 expected");
      }
      rowCnt++;
      InstanceUsageSnapshot snapshot=(InstanceUsageSnapshot)iter.next();
      long foundTimestampMs=snapshot.getTimestampMs();
      long nowMs=System.currentTimeMillis();
      if (!isWithinError(nowMs,foundTimestampMs,ERROR_MARGIN_MS)) {
        throw new RuntimeException(String.format("Row outside error margin, expected:%d found:%d",nowMs,foundTimestampMs));
      }
    }
    if (rowCnt == 0 && containsRows) {
      throw new RuntimeException("Found 0 rows where >0 expected");
    }
    entityWrapper.commit();
  }
 catch (  Exception ex) {
    entityWrapper.rollback();
    throw new RuntimeException(ex);
  }
}
