{
  final ImportImageResponseType reply=request.getReply();
  final Context context=Contexts.lookup();
  try {
    if (!Bootstrap.isFinished() || !Topology.isEnabled(ImagingBackend.class)) {
      throw new ImagingServiceException(ImagingServiceException.INTERNAL_SERVER_ERROR,"For import, Imaging service should be enabled");
    }
  }
 catch (  final Exception ex) {
    throw new ImagingServiceException(ImagingServiceException.INTERNAL_SERVER_ERROR,"For import, Imaging service should be enabled");
  }
  try {
    if (!context.getUser().isSystemAdmin()) {
      throw new ImagingServiceException(ImagingServiceException.DEFAULT_CODE,"Not authorized to import image.");
    }
  }
 catch (  final ImagingServiceException ex) {
    throw ex;
  }
catch (  final Exception ex) {
    throw new ImagingServiceException(ImagingServiceException.DEFAULT_CODE,"Not authorized to import image.");
  }
  DiskImagingTask task=null;
  try {
    task=ImagingTasks.createDiskImagingTask(request);
  }
 catch (  final ImagingServiceException ex) {
    throw ex;
  }
catch (  final Exception ex) {
    LOG.error("Failed to import image",ex);
    throw new ImagingServiceException("Failed to import image",ex);
  }
  reply.setConversionTask(task.getTask());
  reply.set_return(true);
  return reply;
}
