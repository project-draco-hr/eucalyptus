{
  DescribeConversionTasksResponseType reply=request.getReply();
  Context ctx=Contexts.lookup();
  boolean verbose=request.getConversionTaskIdSet().remove("verbose");
  try {
    if (!ctx.getUser().isSystemAdmin()) {
      throw new ImagingServiceException(ImagingServiceException.DEFAULT_CODE,"Not authorized to describe conversion tasks.");
    }
  }
 catch (  final ImagingServiceException ex) {
    throw ex;
  }
catch (  final Exception ex) {
    throw new ImagingServiceException(ImagingServiceException.DEFAULT_CODE,"Not authorized to describe conversion tasks.");
  }
  Collection<String> ownerInfo=(ctx.isAdministrator() && verbose) ? Collections.<String>emptyList() : Collections.singleton(ctx.getAccount().getAccountNumber());
  final Predicate<? super DiskImagingTask> requestedAndAccessible=RestrictedTypes.filteringFor(DiskImagingTask.class).byId(request.getConversionTaskIdSet()).byOwningAccount(ownerInfo).byPrivileges().buildPredicate();
  Iterable<DiskImagingTask> tasksToList=ImagingTasks.getDiskImagingTasks(AccountFullName.getInstance(ctx.getAccountNumber()),request.getConversionTaskIdSet());
  for (  DiskImagingTask task : Iterables.filter(tasksToList,requestedAndAccessible)) {
    DiskImageConversionTask t=(DiskImageConversionTask)task.getTask();
    reply.getConversionTasks().add(t);
  }
  return reply;
}
