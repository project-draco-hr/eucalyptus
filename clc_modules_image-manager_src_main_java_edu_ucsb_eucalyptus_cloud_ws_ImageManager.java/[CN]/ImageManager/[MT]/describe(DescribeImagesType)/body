{
  DescribeImagesResponseType reply=(DescribeImagesResponseType)request.getReply();
  ImageUtil.cleanDeregistered();
  List<ImageInfo> imgList=Lists.newArrayList();
  EntityWrapper<ImageInfo> db=new EntityWrapper<ImageInfo>();
  for (  String imageId : request.getImagesSet()) {
    try {
      imgList.add(db.getUnique(ImageInfo.named(imageId)));
    }
 catch (    Throwable e) {
    }
  }
  UserInfo user=null;
  try {
    user=db.recast(UserInfo.class).getUnique(new UserInfo(request.getUserId()));
    db.commit();
  }
 catch (  Throwable e) {
    db.commit();
    throw new EucalyptusCloudException("Failed to find user information for: " + request.getUserId(),e);
  }
  ArrayList<String> imageList=request.getImagesSet();
  ArrayList<String> owners=request.getOwnersSet();
  ArrayList<String> executable=request.getExecutableBySet();
  if (owners.isEmpty() && executable.isEmpty()) {
    executable.add("self");
  }
  Set<ImageDetails> repList=Sets.newHashSet();
  if (!owners.isEmpty()) {
    repList.addAll(ImageUtil.getImagesByOwner(imgList,user,owners));
  }
  if (!executable.isEmpty()) {
    if (executable.remove("self")) {
      repList.addAll(ImageUtil.getImageOwnedByUser(imgList,user));
    }
    repList.addAll(ImageUtil.getImagesByExec(user,executable));
  }
  reply.getImagesSet().addAll(repList);
  return reply;
}
