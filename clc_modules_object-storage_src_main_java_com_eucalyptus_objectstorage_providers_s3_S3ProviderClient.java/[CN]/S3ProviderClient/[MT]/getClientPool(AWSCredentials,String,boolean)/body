{
  if (pools.containsKey(credentials.getAWSAccessKeyId())) {
    return pools.get(credentials.getAWSAccessKeyId());
  }
  GenericObjectPool.Config config=new GenericObjectPool.Config();
  config.maxIdle=S3ProviderConfiguration.getS3ProviderConfiguration().getPoolMaxIdle() == null ? DEFAULT_POOL_MAX_IDLE : S3ProviderConfiguration.getS3ProviderConfiguration().getPoolMaxIdle().intValue();
  config.maxActive=S3ProviderConfiguration.getS3ProviderConfiguration().getPoolMaxActive() == null ? DEFAULT_POOL_MAX_ACTIVE : S3ProviderConfiguration.getS3ProviderConfiguration().getPoolMaxActive().intValue();
  config.testOnBorrow=true;
  PoolableObjectFactory<OsgInternalS3Client> factory=new PoolableProviderClientFactory(credentials,upstreamEndpoint,usePathStyle);
  GenericObjectPool<OsgInternalS3Client> pool=new GenericObjectPool<>(factory,config);
  pools.put(credentials.getAWSAccessKeyId(),pool);
  return pool;
}
