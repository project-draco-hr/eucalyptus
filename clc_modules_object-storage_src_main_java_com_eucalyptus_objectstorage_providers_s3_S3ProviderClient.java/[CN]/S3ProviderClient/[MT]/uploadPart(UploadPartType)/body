{
  String bucketName=request.getBucket();
  String key=request.getKey();
  try {
    User requestUser=getRequestUser(request);
    AmazonS3Client s3Client=getS3Client(requestUser,request.getAccessKeyID());
    UploadPartResult result=null;
    UploadPartRequest uploadPartRequest=new UploadPartRequest();
    uploadPartRequest.setBucketName(bucketName);
    uploadPartRequest.setKey(key);
    uploadPartRequest.setInputStream(request.getData());
    uploadPartRequest.setUploadId(request.getUploadId());
    uploadPartRequest.setPartNumber(Integer.valueOf(request.getPartNumber()));
    uploadPartRequest.setMd5Digest(request.getContentMD5());
    uploadPartRequest.setPartSize(Long.valueOf(request.getContentLength()));
    try {
      result=s3Client.uploadPart(uploadPartRequest);
    }
 catch (    AmazonServiceException ex) {
      LOG.error("Got service error from backend: " + ex.getMessage(),ex);
      throw new EucalyptusCloudException(ex);
    }
catch (    AmazonClientException ex) {
      LOG.error("Got client error from internal Amazon Client: " + ex.getMessage(),ex);
      throw new EucalyptusCloudException(ex);
    }
    UploadPartResponseType reply=(UploadPartResponseType)request.getReply();
    if (result == null) {
      throw new EucalyptusCloudException("Null result. Internal error");
    }
 else {
      reply.setEtag(result.getETag());
      reply.setLastModified(new Date());
    }
    return reply;
  }
 catch (  Exception e) {
    throw new EucalyptusCloudException(e);
  }
}
