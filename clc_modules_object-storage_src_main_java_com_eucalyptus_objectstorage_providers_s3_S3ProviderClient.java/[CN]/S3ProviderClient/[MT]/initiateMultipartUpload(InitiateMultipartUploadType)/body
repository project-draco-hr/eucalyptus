{
  InitiateMultipartUploadResponseType reply=request.getReply();
  User requestUser=getRequestUser(request);
  OsgInternalS3Client internalS3Client=null;
  String bucketName=request.getBucket();
  String key=request.getKey();
  InitiateMultipartUploadRequest initiateMultipartUploadRequest=new InitiateMultipartUploadRequest(bucketName,key);
  ObjectMetadata metadata=new ObjectMetadata();
  for (  MetaDataEntry meta : request.getMetaData()) {
    metadata.addUserMetadata(meta.getName(),meta.getValue());
  }
  initiateMultipartUploadRequest.setObjectMetadata(metadata);
  try {
    internalS3Client=getS3Client(requestUser);
    AmazonS3Client s3Client=internalS3Client.getS3Client();
    InitiateMultipartUploadResult result=s3Client.initiateMultipartUpload(initiateMultipartUploadRequest);
    reply.setUploadId(result.getUploadId());
    reply.setBucket(bucketName);
    reply.setKey(key);
    return reply;
  }
 catch (  AmazonServiceException e) {
    LOG.debug("Error from backend",e);
    throw S3ExceptionMapper.fromAWSJavaSDK(e);
  }
 finally {
    if (internalS3Client != null && requestUser != null) {
      returnS3Client(requestUser,internalS3Client);
    }
  }
}
