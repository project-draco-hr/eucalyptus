{
  CopyObjectResponseType reply=request.getReply();
  User requestUser=getRequestUser(request);
  OsgInternalS3Client internalS3Client=null;
  String sourceBucket=request.getSourceBucket();
  String sourceKey=request.getSourceObject();
  String sourceVersionId=request.getSourceVersionId();
  String destinationBucket=request.getDestinationBucket();
  String destinationKey=request.getDestinationObject();
  String copyIfMatch=request.getCopySourceIfMatch();
  String copyIfNoneMatch=request.getCopySourceIfNoneMatch();
  Date copyIfUnmodifiedSince=request.getCopySourceIfUnmodifiedSince();
  Date copyIfModifiedSince=request.getCopySourceIfModifiedSince();
  try {
    CopyObjectRequest copyRequest=new CopyObjectRequest(sourceBucket,sourceKey,sourceVersionId,destinationBucket,destinationKey);
    copyRequest.setModifiedSinceConstraint(copyIfModifiedSince);
    copyRequest.setUnmodifiedSinceConstraint(copyIfUnmodifiedSince);
    if (copyIfMatch != null) {
      List<String> copyIfMatchConstraint=new ArrayList<String>();
      copyIfMatchConstraint.add(copyIfMatch);
      copyRequest.setMatchingETagConstraints(copyIfMatchConstraint);
    }
    if (copyIfNoneMatch != null) {
      List<String> copyIfNoneMatchConstraint=new ArrayList<String>();
      copyIfNoneMatchConstraint.add(copyIfNoneMatch);
      copyRequest.setNonmatchingETagConstraints(copyIfNoneMatchConstraint);
    }
    internalS3Client=getS3Client(requestUser);
    AmazonS3Client s3Client=internalS3Client.getS3Client();
    CopyObjectResult result=s3Client.copyObject(copyRequest);
    reply.setEtag(result.getETag());
    reply.setLastModified(DateFormatter.dateToListingFormattedString(result.getLastModifiedDate()));
    String destinationVersionId=result.getVersionId();
    if (destinationVersionId != null) {
      reply.setCopySourceVersionId(sourceVersionId);
      reply.setVersionId(destinationVersionId);
    }
  }
 catch (  AmazonServiceException e) {
    LOG.debug("Error from backend",e);
    throw S3ExceptionMapper.fromAWSJavaSDK(e);
  }
 finally {
    if (internalS3Client != null && requestUser != null) {
      returnS3Client(requestUser,internalS3Client);
    }
  }
  return reply;
}
