{
  String sanSnapshotId=null;
  EntityWrapper<SANVolumeInfo> db=StorageProperties.getEntityWrapper();
  try {
    SANVolumeInfo volumeInfo=db.getUnique(new SANVolumeInfo(snapshotId));
    if (volumeInfo == null || StringUtils.isBlank(volumeInfo.getSanVolumeId())) {
      throw new EucalyptusCloudException(snapshotId + ": Backend ID not found");
    }
    sanSnapshotId=volumeInfo.getSanVolumeId();
  }
  finally {
    db.commit();
  }
  LOG.info("Deleting backend snapshot " + sanSnapshotId + " mapping to "+ snapshotId);
  boolean deleteEntity=false;
  if (connectionManager.deleteVolume(sanSnapshotId)) {
    deleteEntity=true;
  }
 else {
    LOG.debug("Unable to delete backend snapshot " + sanSnapshotId + ". Checking to see if the snapshot exists");
    if (!connectionManager.snapshotExists(sanSnapshotId)) {
      LOG.debug("Backend snapshot " + sanSnapshotId + " not found. Safe to delete database entity");
      deleteEntity=true;
    }
 else {
      LOG.warn("Failed to delete backend snapshot " + sanSnapshotId + " mapping to "+ snapshotId);
    }
  }
  if (deleteEntity) {
    db=StorageProperties.getEntityWrapper();
    try {
      SANVolumeInfo snapInfo=db.getUnique(new SANVolumeInfo(snapshotId).withSanVolumeId(sanSnapshotId));
      db.delete(snapInfo);
    }
 catch (    EucalyptusCloudException ex) {
      LOG.error(snapshotId + ": Failed to delete database entity post snapshot deletion",ex);
    }
 finally {
      db.commit();
    }
  }
}
