{
  String sanSnapshotId=null;
  try (TransactionResource tran=Entities.transactionFor(SANVolumeInfo.class)){
    SANVolumeInfo volumeInfo=Entities.uniqueResult(new SANVolumeInfo(snapshotId));
    if (volumeInfo == null || StringUtils.isBlank(volumeInfo.getSanVolumeId())) {
      throw new EucalyptusCloudException(snapshotId + ": Backend ID not found");
    }
    sanSnapshotId=volumeInfo.getSanVolumeId();
  }
 catch (  NoSuchElementException ex) {
    throw new EucalyptusCloudException(snapshotId + ": Backend ID not found");
  }
catch (  Exception ex) {
    throw new EucalyptusCloudException("caught exception while querying the database for snapshot " + snapshotId,ex);
  }
  LOG.info("Deleting backend snapshot " + sanSnapshotId + " mapping to "+ snapshotId);
  boolean deleteEntity=false;
  if (connectionManager.deleteVolume(sanSnapshotId)) {
    deleteEntity=true;
  }
 else {
    LOG.debug("Unable to delete backend snapshot " + sanSnapshotId + ". Checking to see if the snapshot exists");
    if (!connectionManager.snapshotExists(sanSnapshotId)) {
      LOG.debug("Backend snapshot " + sanSnapshotId + " not found. Safe to delete database entity");
      deleteEntity=true;
    }
 else {
      LOG.warn("Failed to delete backend snapshot " + sanSnapshotId + " mapping to "+ snapshotId);
    }
  }
  if (deleteEntity) {
    try (TransactionResource tran=Entities.transactionFor(SANVolumeInfo.class)){
      SANVolumeInfo snapInfo=Entities.uniqueResult(new SANVolumeInfo(snapshotId).withSanVolumeId(sanSnapshotId));
      Entities.delete(snapInfo);
      tran.commit();
    }
 catch (    TransactionException|NoSuchElementException ex) {
      LOG.error(snapshotId + ": Failed to delete database entity post snapshot deletion",ex);
    }
  }
}
