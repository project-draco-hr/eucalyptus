{
  String iqnAndLun=null;
  String sanVolumeId=null;
  try {
    SANVolumeInfo snapInfo=lookup(snapshotId);
    iqnAndLun=snapInfo.getIqn();
    sanVolumeId=snapInfo.getSanVolumeId();
  }
 catch (  NoSuchRecordException e) {
    LOG.debug("Skipping finish up for " + snapshotId);
    return;
  }
  if (iqnAndLun != null && iqnAndLun.contains(",")) {
    String[] parts=iqnAndLun.split(",");
    if (parts.length == 2) {
      try {
        LOG.info("Disconnecting " + sanVolumeId + " on backend from Storage Controller");
        connectionManager.disconnectTarget(sanVolumeId,parts[0],parts[1]);
      }
 catch (      Exception e) {
        LOG.warn("Failed to disconnect iscsi session between " + sanVolumeId + " and SC",e);
      }
    }
 else {
      LOG.warn("Unable to disconnect " + sanVolumeId + " from Storage Controller due to invalid iqn format. Expected iqn to contain one ',' but got: "+ iqnAndLun);
      throw new EucalyptusCloudException("Unable to disconnect " + sanVolumeId + " from Storage Controller due to invalid iqn format");
    }
    String scIqn=StorageProperties.getStorageIqn();
    try {
      LOG.info("Unexporting " + sanVolumeId + " on backend from Storage Controller host IQN "+ scIqn);
      connectionManager.unexportResource(sanVolumeId,scIqn);
    }
 catch (    Exception e) {
      LOG.warn("Could not unexport " + sanVolumeId + " on backend from Storage Controller");
    }
  }
 else {
    LOG.debug("Skipping disconnect and unexport operations for " + sanVolumeId);
  }
  try {
    LOG.info("Waiting for " + sanVolumeId + " to complete on backend");
    connectionManager.waitAndComplete(sanVolumeId,iqnAndLun);
  }
 catch (  EucalyptusCloudException e) {
    LOG.warn("Failed during wait for " + sanVolumeId + " to complete on backend",e);
    throw e;
  }
catch (  Exception e) {
    LOG.warn("Failed during wait for " + sanVolumeId + " to complete on backend",e);
    throw new EucalyptusCloudException("Failed during wait for " + sanVolumeId + " to complete on backend",e);
  }
}
