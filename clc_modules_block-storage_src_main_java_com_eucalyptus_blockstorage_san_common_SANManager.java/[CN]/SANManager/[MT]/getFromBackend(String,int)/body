{
  SANVolumeInfo snapInfo=new SANVolumeInfo(snapshotId);
  EntityWrapper<SANVolumeInfo> db=StorageProperties.getEntityWrapper();
  try {
    SANVolumeInfo foundSnapInfo=db.getUnique(snapInfo);
    if (foundSnapInfo == null || StringUtils.isBlank(foundSnapInfo.getSanVolumeId())) {
      throw new EucalyptusCloudException("Backend ID not found for " + snapshotId);
    }
    LOG.info("Checking for backend snapshot " + foundSnapInfo.getSanVolumeId() + " mapping to "+ snapshotId);
    if (connectionManager.snapshotExists(foundSnapInfo.getSanVolumeId())) {
      return true;
    }
 else {
      db.delete(foundSnapInfo);
    }
  }
 catch (  Exception ex) {
    return false;
  }
 finally {
    db.commit();
  }
  snapInfo.setScName(null);
  try {
    db=StorageProperties.getEntityWrapper();
    List<SANVolumeInfo> foundSnapInfos=db.query(snapInfo);
    for (    SANVolumeInfo foundSnapInfo : foundSnapInfos) {
      LOG.info("Checking for backend snapshot " + foundSnapInfo.getSanVolumeId() + " mapping to "+ snapshotId);
      if (connectionManager.snapshotExists(foundSnapInfo.getSanVolumeId())) {
        SANVolumeInfo newSnapInfo=new SANVolumeInfo(snapshotId,foundSnapInfo.getIqn(),foundSnapInfo.getSize()).withSanVolumeId(foundSnapInfo.getSanVolumeId()).withSnapshotOf(foundSnapInfo.getSnapshotOf());
        db.add(newSnapInfo);
        db.commit();
        return true;
      }
    }
    return false;
  }
 catch (  Exception ex) {
    return false;
  }
 finally {
    if (db.isActive()) {
      db.commit();
    }
  }
}
