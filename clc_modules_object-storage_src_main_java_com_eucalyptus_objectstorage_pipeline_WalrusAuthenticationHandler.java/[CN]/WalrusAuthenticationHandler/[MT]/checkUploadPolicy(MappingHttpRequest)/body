{
  Map<String,String> fields=new HashMap<String,String>();
  String policy=httpRequest.getHeader(WalrusProperties.Headers.S3UploadPolicy.toString());
  fields.put(WalrusProperties.FormField.policy.toString(),policy);
  String policySignature=httpRequest.getHeader(WalrusProperties.Headers.S3UploadPolicySignature.toString());
  if (policySignature == null)   throw new AuthenticationException("Policy signature must be specified with policy.");
  String awsAccessKeyId=httpRequest.getHeader(SecurityParameter.AWSAccessKeyId.toString());
  if (awsAccessKeyId == null)   throw new AuthenticationException("AWSAccessKeyID must be specified.");
  fields.put(WalrusProperties.FormField.signature.toString(),policySignature);
  fields.put(SecurityParameter.AWSAccessKeyId.toString(),awsAccessKeyId);
  String acl=httpRequest.getHeader(WalrusProperties.AMZ_ACL.toString());
  if (acl != null)   fields.put(WalrusProperties.FormField.acl.toString(),acl);
  String operationPath=httpRequest.getServicePath().replaceAll(WalrusProperties.walrusServicePath,"");
  String[] target=WalrusUtil.getTarget(operationPath);
  if (target != null) {
    fields.put(WalrusProperties.FormField.bucket.toString(),target[0]);
    if (target.length > 1)     fields.put(WalrusProperties.FormField.key.toString(),target[1]);
  }
  UploadPolicyChecker.checkPolicy(httpRequest,fields);
}
