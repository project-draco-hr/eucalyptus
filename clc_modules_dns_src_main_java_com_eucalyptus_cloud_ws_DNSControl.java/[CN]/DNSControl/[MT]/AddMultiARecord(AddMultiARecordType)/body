{
  AddMultiARecordResponseType reply=(AddMultiARecordResponseType)request.getReply();
  String zone=request.getZone();
  if (zone.endsWith("."))   zone+=DNSProperties.DOMAIN + ".";
 else   zone+="." + DNSProperties.DOMAIN + ".";
  String name=request.getName();
  if (name.endsWith("."))   name+=DNSProperties.DOMAIN + ".";
 else   name+="." + DNSProperties.DOMAIN + ".";
  long ttl=request.getTtl();
  String address=request.getAddress();
  EntityTransaction db=Entities.get(ARecordNameInfo.class);
  ARecordNameInfo nameInfo=null;
  try {
    nameInfo=Entities.uniqueResult(ARecordNameInfo.named(name,zone));
    db.commit();
  }
 catch (  NoSuchElementException ex) {
    db.rollback();
    throw new EucalyptusCloudException("No dns record with name=" + name + " is found");
  }
catch (  Exception ex) {
    db.rollback();
    throw new EucalyptusCloudException("Failed to query dns name record",ex);
  }
  db=Entities.get(ARecordAddressInfo.class);
  try {
    List<ARecordAddressInfo> exist=Entities.query(ARecordAddressInfo.named(nameInfo,address));
    if (exist == null || exist.size() <= 0) {
      ARecord record=new ARecord(new Name(name),DClass.IN,ttl,Address.getByAddress(address));
      ZoneManager.addRecord(zone,record,true);
      ARecordAddressInfo addrInfo=ARecordAddressInfo.newInstance(nameInfo,address);
      Entities.persist(addrInfo);
    }
    db.commit();
  }
 catch (  Exception ex) {
    db.rollback();
    throw new EucalyptusCloudException("Failed to add the record",ex);
  }
  return reply;
}
