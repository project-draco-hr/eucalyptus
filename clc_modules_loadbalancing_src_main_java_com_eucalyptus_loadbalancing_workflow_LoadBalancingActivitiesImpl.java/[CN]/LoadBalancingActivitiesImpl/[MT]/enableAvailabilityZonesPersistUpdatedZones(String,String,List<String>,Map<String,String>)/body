{
  LoadBalancer lb;
  try {
    lb=LoadBalancers.getLoadbalancer(accountNumber,lbName);
  }
 catch (  NoSuchElementException ex) {
    throw new LoadBalancingActivityException("Could not find the loadbalancer with name=" + lbName,ex);
  }
catch (  Exception ex) {
    throw new LoadBalancingActivityException("Error while looking for loadbalancer with name=" + lbName,ex);
  }
  final List<String> persistedZones=Lists.newArrayList();
  if (zonesToEnable != null) {
    for (    final String zone : zonesToEnable) {
      try (final TransactionResource db=Entities.transactionFor(LoadBalancerZone.class)){
        try {
          final LoadBalancerZone exist=Entities.uniqueResult(LoadBalancerZone.named(lb,zone));
          exist.setState(LoadBalancerZone.STATE.InService);
        }
 catch (        NoSuchElementException ex) {
          final String subnetId=zoneToSubnetIdMap == null ? null : zoneToSubnetIdMap.get(zone);
          final LoadBalancerZone newZone=LoadBalancerZone.create(lb,zone,subnetId);
          newZone.setState(LoadBalancerZone.STATE.InService);
          Entities.persist(newZone);
        }
        persistedZones.add(zone);
        db.commit();
      }
 catch (      Exception ex) {
        throw new LoadBalancingActivityException("Error adding load balancer zone",ex);
      }
    }
  }
  return persistedZones;
}
