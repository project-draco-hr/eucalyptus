{
  LoadBalancer lb;
  try {
    lb=LoadBalancers.getLoadbalancer(accountNumber,lbName);
  }
 catch (  Exception ex) {
    throw new LoadBalancingActivityException("could not find the loadbalancer",ex);
  }
  for (  Listener listener : listeners) {
    final PROTOCOL protocol=PROTOCOL.valueOf(listener.getProtocol().toUpperCase());
    if (protocol.equals(PROTOCOL.HTTPS) || protocol.equals(PROTOCOL.SSL)) {
      final String certArn=listener.getSSLCertificateId();
      if (certArn == null || certArn.length() <= 0)       throw new LoadBalancingActivityException("No SSLCertificateId is specified");
      final String prefix=String.format("arn:aws:iam::%s:server-certificate",accountNumber);
      if (!certArn.startsWith(prefix))       throw new LoadBalancingActivityException("SSLCertificateId is not ARN format");
      try {
        final String pathAndName=certArn.replace(prefix,"");
        final String certName=pathAndName.substring(pathAndName.lastIndexOf("/") + 1);
        final ServerCertificateType cert=EucalyptusActivityTasks.getInstance().getServerCertificate(accountNumber,certName);
        if (cert == null)         throw new LoadBalancingActivityException("No SSL certificate is found with the ARN");
        if (!certArn.equals(cert.getServerCertificateMetadata().getArn()))         throw new LoadBalancingActivityException("Returned certificate's ARN doesn't match the request");
      }
 catch (      final LoadBalancingActivityException ex) {
        throw ex;
      }
catch (      final Exception ex) {
        throw new LoadBalancingActivityException("Failed to get SSL server certificate",ex);
      }
    }
  }
}
