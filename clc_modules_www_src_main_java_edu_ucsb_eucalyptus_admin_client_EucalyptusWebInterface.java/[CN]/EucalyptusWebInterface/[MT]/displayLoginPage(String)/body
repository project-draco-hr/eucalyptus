{
  History.newItem("login");
  label_box.setText(greeting);
  label_box.setStyleName("euca-greeting-normal");
  final TextBox login_box=new TextBox();
  login_box.setFocus(true);
  final PasswordTextBox pass_box=new PasswordTextBox();
  ClickListener LoginButtonListener=new ClickListener(){
    public void onClick(    Widget sender){
      if (login_box.getText().length() < 1) {
        displayLoginErrorPage("Username is empty!");
        return;
      }
      if (pass_box.getText().length() < 1) {
        displayLoginErrorPage("Password is empty!");
        return;
      }
      label_box.setText("Contacting the server...");
      label_box.setStyleName("euca-greeting-pending");
      EucalyptusWebBackend.App.getInstance().getNewSessionID(login_box.getText(),GWTUtils.md5(pass_box.getText()),new AsyncCallback(){
        public void onSuccess(        Object result){
          sessionId=(String)result;
          long expiresMs=System.currentTimeMillis() + (7 * 24 * 60* 60* 1000);
          Date expires=new Date(expiresMs);
          if (check_box.isChecked()) {
            Cookies.setCookie(cookie_name,sessionId,expires);
          }
 else {
            Cookies.setCookie(cookie_name,sessionId,new Date(0));
          }
          attemptLogin();
        }
        public void onFailure(        Throwable caught){
          displayLoginErrorPage((String)caught.getMessage());
        }
      }
);
    }
  }
;
  ClickListener RecoverButtonListener=new ClickListener(){
    public void onClick(    Widget sender){
      displayInitiatePasswordRecoveryPage();
    }
  }
;
  Button submit_button=new Button(MSG.signInButton(),LoginButtonListener);
  Hyperlink signup_button=new Hyperlink(MSG.applyButton(),"apply");
  signup_button.addClickListener(AddUserButtonListener);
  Hyperlink recover_button=new Hyperlink(MSG.recoverButton(),"recover");
  recover_button.addClickListener(RecoverButtonListener);
  remember_label.setStyleName("euca-remember-text");
  EucalyptusKeyboardListener sl=new EucalyptusKeyboardListener(submit_button);
  submit_button.addKeyboardListener(sl);
  login_box.addKeyboardListener(sl);
  pass_box.addKeyboardListener(sl);
  Grid g=new Grid(4,2);
  g.setCellSpacing(4);
  g.setWidget(0,0,new Label(MSG.usernameField() + ":"));
  g.getCellFormatter().setHorizontalAlignment(0,0,HasHorizontalAlignment.ALIGN_RIGHT);
  g.setWidget(1,0,new Label(MSG.passwordField() + ":"));
  g.getCellFormatter().setHorizontalAlignment(1,0,HasHorizontalAlignment.ALIGN_RIGHT);
  g.setWidget(0,1,login_box);
  g.setWidget(1,1,pass_box);
  g.setWidget(2,0,check_box);
  g.getCellFormatter().setHorizontalAlignment(2,0,HasHorizontalAlignment.ALIGN_RIGHT);
  g.setWidget(2,1,remember_label);
  g.setWidget(3,1,submit_button);
  VerticalPanel panel=new VerticalPanel();
  panel.add(g);
  panel.setStyleName("euca-login-panel");
  panel.setCellHorizontalAlignment(g,HasHorizontalAlignment.ALIGN_CENTER);
  panel.setCellVerticalAlignment(g,HasVerticalAlignment.ALIGN_MIDDLE);
  HorizontalPanel hpanel=new HorizontalPanel();
  hpanel.setSpacing(2);
  if (enable_signups) {
    hpanel.add(signup_button);
    hpanel.add(new HTML("&nbsp;" + MSG.forAccount() + "&nbsp;&nbsp;|&nbsp;&nbsp;"));
  }
  hpanel.add(recover_button);
  hpanel.add(new HTML("&nbsp;" + MSG.thePassword()));
  VerticalPanel vpanel=new VerticalPanel();
  vpanel.setSpacing(15);
  vpanel.setHorizontalAlignment(HasHorizontalAlignment.ALIGN_CENTER);
  if (logo != null) {
    vpanel.add(logo);
  }
  if (version != null) {
    Label version_label=new Label("Version " + version);
    version_label.setStyleName("euca-small-text");
    vpanel.add(version_label);
  }
  vpanel.add(label_box);
  vpanel.add(panel);
  if (server_ready.booleanValue()) {
    vpanel.add(hpanel);
  }
  VerticalPanel wrapper=new VerticalPanel();
  wrapper.add(vpanel);
  wrapper.setSize("100%","100%");
  wrapper.setCellHorizontalAlignment(vpanel,VerticalPanel.ALIGN_CENTER);
  wrapper.setCellVerticalAlignment(vpanel,VerticalPanel.ALIGN_MIDDLE);
  RootPanel.get().clear();
  RootPanel.get().add(wrapper);
}
