{
  label_box.setText("Enter the following to reset your password");
  label_box.setStyleName("euca-greeting-normal");
  final Grid g1=new Grid(2,3);
  g1.getColumnFormatter().setWidth(0,"230");
  g1.getColumnFormatter().setWidth(1,"180");
  g1.getColumnFormatter().setWidth(2,"180");
  int i=0;
  final int username_row=i;
  g1.setWidget(i,0,new Label("Username:"));
  g1.getCellFormatter().setHorizontalAlignment(i,0,HasHorizontalAlignment.ALIGN_RIGHT);
  final TextBox username_box=new TextBox();
  username_box.setWidth("180");
  g1.setWidget(i++,1,username_box);
  final int email_row=i;
  g1.setWidget(i,0,new Label("Email address:"));
  g1.getCellFormatter().setHorizontalAlignment(i,0,HasHorizontalAlignment.ALIGN_RIGHT);
  final TextBox email_box=new TextBox();
  email_box.setWidth("180");
  g1.setWidget(i++,1,email_box);
  ClickListener RecoverButtonListener=new ClickListener(){
    public void onClick(    Widget sender){
      boolean formOk=true;
      for (int j=0; j < 2; j++) {
        g1.clearCell(j,2);
      }
      if (username_box.getText().length() < 1) {
        Label l=new Label("Username is empty!");
        l.setStyleName("euca-error-hint");
        g1.setWidget(username_row,2,l);
        formOk=false;
      }
      if (username_box.getText().matches(".*[ \t]+.*")) {
        Label l=new Label("Username cannot have spaces, sorry!");
        l.setStyleName("euca-error-hint");
        g1.setWidget(username_row,2,l);
        formOk=false;
      }
      if (!email_box.getText().contains("@")) {
        Label l=new Label("Valid email is mandatory!");
        l.setStyleName("euca-error-hint");
        g1.setWidget(email_row,2,l);
        formOk=false;
      }
      if (formOk) {
        label_box.setText("Checking with the server...");
        label_box.setStyleName("euca-greeting-pending");
        UserInfoWeb user=new UserInfoWeb(username_box.getText(),"",email_box.getText(),null);
        EucalyptusWebBackend.App.getInstance().recoverPassword(user,new AsyncCallback(){
          public void onSuccess(          Object result){
            displayDialog("Thank you!",(String)result);
          }
          public void onFailure(          Throwable caught){
            String m=caught.getMessage();
            displayErrorPage(m);
          }
        }
);
      }
 else {
        label_box.setText("Please, fix the errors and resubmit:");
        label_box.setStyleName("euca-greeting-warning");
      }
    }
  }
;
  Button submit_button=new Button("Recover Password",RecoverButtonListener);
  Button cancel_button=new Button("Cancel",DefaultPageButtonListener);
  EucalyptusKeyboardListener sl=new EucalyptusKeyboardListener(submit_button,cancel_button);
  username_box.addKeyPressHandler(sl);
  email_box.addKeyPressHandler(sl);
  VerticalPanel mpanel=new VerticalPanel();
  mpanel.add(g1);
  HorizontalPanel bpanel=new HorizontalPanel();
  bpanel.add(submit_button);
  bpanel.add(new HTML("&nbsp;&nbsp;or&nbsp;&nbsp;"));
  bpanel.add(cancel_button);
  VerticalPanel vpanel=new VerticalPanel();
  vpanel.setSpacing(15);
  vpanel.setHorizontalAlignment(HasHorizontalAlignment.ALIGN_CENTER);
  if (logo != null) {
    vpanel.add(logo);
  }
  vpanel.add(label_box);
  vpanel.add(mpanel);
  vpanel.add(bpanel);
  VerticalPanel wrapper=new VerticalPanel();
  wrapper.add(vpanel);
  wrapper.setSize("100%","100%");
  wrapper.setCellHorizontalAlignment(vpanel,VerticalPanel.ALIGN_CENTER);
  wrapper.setCellVerticalAlignment(vpanel,VerticalPanel.ALIGN_MIDDLE);
  RootPanel.get().clear();
  RootPanel.get().add(wrapper);
  username_box.setFocus(true);
}
