{
  label_box.setText("Please, choose the new password");
  label_box.setStyleName("euca-greeting-normal");
  final Grid g1=new Grid(2,3);
  g1.getColumnFormatter().setWidth(0,"230");
  g1.getColumnFormatter().setWidth(1,"180");
  g1.getColumnFormatter().setWidth(2,"180");
  int i=0;
  final int password1_row=i;
  g1.setWidget(i,0,new Label("New password:"));
  g1.getCellFormatter().setHorizontalAlignment(i,0,HasHorizontalAlignment.ALIGN_RIGHT);
  final PasswordTextBox cleartextPassword1_box=new PasswordTextBox();
  cleartextPassword1_box.setWidth("180");
  g1.setWidget(i++,1,cleartextPassword1_box);
  final int password2_row=i;
  g1.setWidget(i,0,new Label("The password, again:"));
  g1.getCellFormatter().setHorizontalAlignment(i,0,HasHorizontalAlignment.ALIGN_RIGHT);
  final PasswordTextBox cleartextPassword2_box=new PasswordTextBox();
  cleartextPassword2_box.setWidth("180");
  g1.setWidget(i++,1,cleartextPassword2_box);
  ClickListener RecoverButtonListener=new ClickListener(){
    public void onClick(    Widget sender){
      boolean formOk=true;
      for (int j=0; j < 2; j++) {
        g1.clearCell(j,2);
      }
      if (cleartextPassword1_box.getText().length() < minPasswordLength) {
        Label l=new Label("Password must be at least " + minPasswordLength + " characters long!");
        l.setStyleName("euca-error-hint");
        g1.setWidget(password1_row,2,l);
        formOk=false;
      }
      if (!cleartextPassword1_box.getText().equals(cleartextPassword2_box.getText())) {
        Label l=new Label("Passwords do not match!");
        l.setStyleName("euca-error-hint");
        g1.setWidget(password2_row,2,l);
        formOk=false;
      }
      if (formOk) {
        label_box.setText("Checking with the server...");
        label_box.setStyleName("euca-greeting-pending");
        UserInfoWeb user=new UserInfoWeb();
        user.setConfirmationCode(code);
        user.setPassword(GWTUtils.md5(cleartextPassword1_box.getText()));
        EucalyptusWebBackend.App.getInstance().recoverPassword(user,new AsyncCallback(){
          public void onSuccess(          Object result){
            displayDialog("Thank you!",(String)result);
          }
          public void onFailure(          Throwable caught){
            String m=caught.getMessage();
            displayErrorPage(m);
          }
        }
);
      }
 else {
        label_box.setText("Please, fix the errors and resubmit:");
        label_box.setStyleName("euca-greeting-warning");
      }
    }
  }
;
  Button submit_button=new Button("Change Password",RecoverButtonListener);
  Button cancel_button=new Button("Cancel",DefaultPageButtonListener);
  VerticalPanel mpanel=new VerticalPanel();
  mpanel.add(g1);
  HorizontalPanel bpanel=new HorizontalPanel();
  bpanel.add(submit_button);
  bpanel.add(new HTML("&nbsp;&nbsp;or&nbsp;&nbsp;"));
  bpanel.add(cancel_button);
  VerticalPanel vpanel=new VerticalPanel();
  vpanel.setSpacing(15);
  vpanel.setHorizontalAlignment(HasHorizontalAlignment.ALIGN_CENTER);
  if (logo != null) {
    vpanel.add(logo);
  }
  vpanel.add(label_box);
  vpanel.add(mpanel);
  vpanel.add(bpanel);
  VerticalPanel wrapper=new VerticalPanel();
  wrapper.add(vpanel);
  wrapper.setSize("100%","100%");
  wrapper.setCellHorizontalAlignment(vpanel,VerticalPanel.ALIGN_CENTER);
  wrapper.setCellVerticalAlignment(vpanel,VerticalPanel.ALIGN_MIDDLE);
  RootPanel.get().clear();
  RootPanel.get().add(wrapper);
}
