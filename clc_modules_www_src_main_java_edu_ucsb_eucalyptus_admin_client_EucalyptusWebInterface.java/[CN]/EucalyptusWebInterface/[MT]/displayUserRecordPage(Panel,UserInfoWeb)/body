{
  final String oldPassword;
  final boolean admin;
  final boolean newUser;
  final boolean showSkipConfirmed;
  boolean isAdminChecked=false;
  boolean skipConfirmationChecked=previousSkipConfirmation;
  if (loggedInUser != null && loggedInUser.isAdministrator()) {
    admin=true;
  }
 else {
    admin=false;
  }
  if (userToEdit == null) {
    newUser=true;
    showSkipConfirmed=true;
    userToEdit=new UserInfoWeb();
    oldPassword="";
    if (admin) {
      label_box.setText("Please, fill out the form to add a user");
    }
 else {
      label_box.setText(signup_greeting);
    }
  }
 else {
    newUser=false;
    oldPassword=userToEdit.getPassword();
    isAdminChecked=userToEdit.isAdministrator();
    showSkipConfirmed=!userToEdit.isConfirmed();
    skipConfirmationChecked=userToEdit.isConfirmed();
    String status;
    if (!userToEdit.isApproved()) {
      status="unapproved";
    }
 else     if (!userToEdit.isEnabled()) {
      status="disabled";
    }
 else     if (!userToEdit.isConfirmed()) {
      status="unconfirmed";
    }
 else {
      status="active";
    }
    if (userToEdit.isAdministrator()) {
      status+=" & admin";
    }
    label_box.setText("Editing information for user '" + userToEdit.getUserName() + "' ("+ status+ ")");
  }
  label_box.setStyleName("euca-greeting-normal");
  int rowsMandatory=5;
  if (admin) {
    rowsMandatory++;
    if (showSkipConfirmed) {
      rowsMandatory++;
    }
  }
  final Grid g1=new Grid(rowsMandatory,3);
  g1.getColumnFormatter().setWidth(0,"180");
  g1.getColumnFormatter().setWidth(1,"180");
  g1.getColumnFormatter().setWidth(2,"180");
  int i=0;
  final Label label_mandatory=new Label("Mandatory fields:");
  label_mandatory.setStyleName("euca-section-header");
  final int userName_row=i;
  g1.setWidget(i,0,new Label("Username:"));
  g1.getCellFormatter().setHorizontalAlignment(i,0,HasHorizontalAlignment.ALIGN_RIGHT);
  final TextBox userName_box=new TextBox();
  userName_box.setText(userToEdit.getUserName());
  userName_box.setWidth("180");
  if (!newUser) {
    userName_box.setEnabled(false);
  }
  g1.setWidget(i++,1,userName_box);
  final CheckBox userIsAdmin=new CheckBox("Administrator");
  userIsAdmin.setChecked(isAdminChecked);
  userIsAdmin.setStyleName("euca-remember-text");
  if (admin) {
    g1.setWidget(i++,1,userIsAdmin);
  }
  final int password1_row=i;
  g1.setWidget(i,0,new Label("Password:"));
  g1.getCellFormatter().setHorizontalAlignment(i,0,HasHorizontalAlignment.ALIGN_RIGHT);
  final PasswordTextBox cleartextPassword1_box=new PasswordTextBox();
  cleartextPassword1_box.setText(userToEdit.getPassword());
  cleartextPassword1_box.setWidth("180");
  if ((!admin && !newUser) || userToEdit.isAdministrator().booleanValue()) {
    cleartextPassword1_box.setEnabled(false);
  }
  g1.setWidget(i++,1,cleartextPassword1_box);
  final int password2_row=i;
  g1.setWidget(i,0,new Label("Password, again:"));
  g1.getCellFormatter().setHorizontalAlignment(i,0,HasHorizontalAlignment.ALIGN_RIGHT);
  final PasswordTextBox cleartextPassword2_box=new PasswordTextBox();
  cleartextPassword2_box.setText(userToEdit.getPassword());
  cleartextPassword2_box.setWidth("180");
  if ((!admin && !newUser) || userToEdit.isAdministrator().booleanValue()) {
    cleartextPassword2_box.setEnabled(false);
  }
  g1.setWidget(i++,1,cleartextPassword2_box);
  final int realName_row=i;
  g1.setWidget(i,0,new Label("Full Name:"));
  g1.getCellFormatter().setHorizontalAlignment(i,0,HasHorizontalAlignment.ALIGN_RIGHT);
  final TextBox realName_box=new TextBox();
  realName_box.setText(userToEdit.getRealName());
  realName_box.setWidth("180");
  g1.setWidget(i++,1,realName_box);
  final int emailAddress_row=i;
  g1.setWidget(i,0,new Label("Email address:"));
  g1.getCellFormatter().setHorizontalAlignment(i,0,HasHorizontalAlignment.ALIGN_RIGHT);
  final TextBox emailAddress_box=new TextBox();
  emailAddress_box.setText(userToEdit.getEmail());
  emailAddress_box.setWidth("180");
  g1.setWidget(i++,1,emailAddress_box);
  final CheckBox skipConfirmation=new CheckBox("Skip email confirmation");
  skipConfirmation.setChecked(skipConfirmationChecked);
  skipConfirmation.setStyleName("euca-remember-text");
  if (admin && showSkipConfirmed) {
    g1.setWidget(i++,1,skipConfirmation);
  }
  final Grid g2=new Grid();
  final Label label_optional=new Label("Optional fields:");
  label_optional.setStyleName("euca-section-header");
  final TextBox telephoneNumber_box=new TextBox();
  final TextBox projectPIName_box=new TextBox();
  final TextBox affiliation_box=new TextBox();
  final TextArea projectDescription_box=new TextArea();
  int extra_fields=0;
  if (request_telephone) {
    extra_fields++;
  }
  if (request_project_leader) {
    extra_fields++;
  }
  if (request_affiliation) {
    extra_fields++;
  }
  if (request_project_description) {
    extra_fields++;
  }
  if (extra_fields > 0) {
    g2.resize(extra_fields,2);
    g2.getColumnFormatter().setWidth(0,"180");
    g2.getColumnFormatter().setWidth(1,"360");
    i=0;
    if (request_telephone) {
      g2.setWidget(i,0,new Label("Telephone Number:"));
      g2.getCellFormatter().setHorizontalAlignment(i,0,HasHorizontalAlignment.ALIGN_RIGHT);
      telephoneNumber_box.setWidth("180");
      telephoneNumber_box.setText(userToEdit.getTelephoneNumber());
      g2.setWidget(i++,1,telephoneNumber_box);
    }
    if (request_project_leader) {
      g2.setWidget(i,0,new Label("Project Leader:"));
      g2.getCellFormatter().setHorizontalAlignment(i,0,HasHorizontalAlignment.ALIGN_RIGHT);
      projectPIName_box.setText(userToEdit.getProjectPIName());
      projectPIName_box.setWidth("180");
      g2.setWidget(i++,1,projectPIName_box);
    }
    if (request_affiliation) {
      g2.setWidget(i,0,new Label("Affiliation:"));
      g2.getCellFormatter().setHorizontalAlignment(i,0,HasHorizontalAlignment.ALIGN_RIGHT);
      affiliation_box.setText(userToEdit.getAffiliation());
      affiliation_box.setWidth("360");
      g2.setWidget(i++,1,affiliation_box);
    }
    if (request_project_description) {
      g2.setWidget(i,0,new Label("Project Description:"));
      g2.getCellFormatter().setHorizontalAlignment(i,0,HasHorizontalAlignment.ALIGN_RIGHT);
      projectDescription_box.setText(userToEdit.getProjectDescription());
      projectDescription_box.setWidth("360");
      projectDescription_box.setHeight("50");
      g2.setWidget(i++,1,projectDescription_box);
    }
  }
  ClickListener SignupButtonListener=new ClickListener(){
    public void onClick(    Widget sender){
      boolean formOk=true;
      for (int j=0; j < 4; j++) {
        g1.clearCell(j,2);
      }
      if (userName_box.getText().length() < 1) {
        Label l=new Label("Username is empty!");
        l.setStyleName("euca-error-hint");
        g1.setWidget(userName_row,2,l);
        formOk=false;
      }
 else {
        if (cleartextPassword1_box.getText().toLowerCase().matches(".*" + userName_box.getText().toLowerCase() + ".*")) {
          Label l=new Label("Password may not contain the username!");
          l.setStyleName("euca-error-hint");
          g1.setWidget(password1_row,2,l);
          formOk=false;
        }
      }
      if (userName_box.getText().matches(".*[^\\w\\-\\.@]+.*")) {
        Label l=new Label("Invalid characters in the username!");
        l.setStyleName("euca-error-hint");
        g1.setWidget(userName_row,2,l);
        formOk=false;
      }
      if (userName_box.getText().length() > 30) {
        Label l=new Label("Username is too long, sorry!");
        l.setStyleName("euca-error-hint");
        g1.setWidget(userName_row,2,l);
        formOk=false;
      }
      if (cleartextPassword1_box.getText().length() < minPasswordLength) {
        Label l=new Label("Password must be at least " + minPasswordLength + " characters long!");
        l.setStyleName("euca-error-hint");
        g1.setWidget(password1_row,2,l);
        formOk=false;
      }
      if (!cleartextPassword1_box.getText().equals(cleartextPassword2_box.getText())) {
        Label l=new Label("Passwords do not match!");
        l.setStyleName("euca-error-hint");
        g1.setWidget(password2_row,2,l);
        formOk=false;
      }
      if (realName_box.getText().equalsIgnoreCase(cleartextPassword1_box.getText()) || userName_box.getText().equalsIgnoreCase(cleartextPassword1_box.getText())) {
        Label l=new Label("Password may not be your name or username!");
        l.setStyleName("euca-error-hint");
        g1.setWidget(password1_row,2,l);
        formOk=false;
      }
      if (realName_box.getText().length() < 1) {
        Label l=new Label("Name is empty!");
        l.setStyleName("euca-error-hint");
        g1.setWidget(realName_row,2,l);
        formOk=false;
      }
      if (emailAddress_box.getText().length() < 1) {
        Label l=new Label("Email address is empty!");
        l.setStyleName("euca-error-hint");
        g1.setWidget(emailAddress_row,2,l);
        formOk=false;
      }
 else       if (!emailAddress_box.getText().contains("@")) {
        Label l=new Label("Email address does not look like an email address!");
        l.setStyleName("euca-error-hint");
        g1.setWidget(emailAddress_row,2,l);
        formOk=false;
      }
      if (formOk) {
        label_box.setText("Checking with the server...");
        label_box.setStyleName("euca-greeting-pending");
        String enteredPassword=cleartextPassword1_box.getText();
        String encryptedPassword=GWTUtils.md5(enteredPassword);
        if (enteredPassword.equals(oldPassword)) {
          encryptedPassword=enteredPassword;
        }
        final UserInfoWeb userToSave=new UserInfoWeb(userName_box.getText(),realName_box.getText(),emailAddress_box.getText(),encryptedPassword);
        if (admin) {
          userToSave.setAdministrator(userIsAdmin.isChecked());
          if (showSkipConfirmed) {
            previousSkipConfirmation=skipConfirmation.isChecked();
            userToSave.setConfirmed(previousSkipConfirmation);
          }
        }
        if (telephoneNumber_box.getText().length() > 0) {
          userToSave.setTelephoneNumber(telephoneNumber_box.getText());
        }
        if (affiliation_box.getText().length() > 0) {
          userToSave.setAffiliation(affiliation_box.getText());
        }
        if (projectDescription_box.getText().length() > 0) {
          userToSave.setProjectDescription(projectDescription_box.getText());
        }
        if (projectPIName_box.getText().length() > 0) {
          userToSave.setProjectPIName(projectPIName_box.getText());
        }
        if (newUser) {
          EucalyptusWebBackend.App.getInstance().addUserRecord(sessionId,userToSave,new AsyncCallback(){
            public void onSuccess(            Object result){
              displayDialog("Thank you!",(String)result);
            }
            public void onFailure(            Throwable caught){
              String m=caught.getMessage();
              if (m.equals("User already exists")) {
                g1.setWidget(userName_row,2,new Label("Username is taken!"));
                label_box.setText("Please, fix the error and resubmit:");
                label_box.setStyleName("euca-greeting-warning");
              }
 else {
                displayErrorPage(m);
              }
            }
          }
);
        }
 else {
          EucalyptusWebBackend.App.getInstance().updateUserRecord(sessionId,userToSave,new AsyncCallback(){
            public void onSuccess(            Object result){
              if (loggedInUser.getUserName().equals(userToSave.getUserName())) {
                loggedInUser.setRealName(userToSave.getRealName());
                loggedInUser.setEmail(userToSave.getEmail());
                loggedInUser.setPassword(userToSave.getPassword());
                loggedInUser.setTelephoneNumber(userToSave.getTelephoneNumber());
                loggedInUser.setAffiliation(userToSave.getAffiliation());
                loggedInUser.setProjectDescription(userToSave.getProjectDescription());
                loggedInUser.setProjectPIName(userToSave.getProjectPIName());
                displayDialog("",(String)result);
              }
 else {
                displayBarAndTabs("");
                statusMessage.setText((String)result);
              }
            }
            public void onFailure(            Throwable caught){
              String m=caught.getMessage();
              displayErrorPage(m);
            }
          }
);
        }
      }
 else {
        label_box.setText("Please, fix the errors and resubmit:");
        label_box.setStyleName("euca-greeting-warning");
      }
    }
  }
;
  Button submit_button;
  if (newUser) {
    if (admin) {
      submit_button=new Button("Add user",SignupButtonListener);
    }
 else {
      submit_button=new Button("Sign up",SignupButtonListener);
    }
  }
 else {
    submit_button=new Button("Update Record",SignupButtonListener);
  }
  Button cancel_button=new Button("Cancel",DefaultPageButtonListener);
  VerticalPanel mpanel=new VerticalPanel();
  mpanel.add(label_mandatory);
  mpanel.add(g1);
  VerticalPanel opanel=new VerticalPanel();
  if (extra_fields > 0) {
    opanel.add(label_optional);
    opanel.add(g2);
  }
  HorizontalPanel bpanel=new HorizontalPanel();
  bpanel.add(submit_button);
  bpanel.add(new HTML("&nbsp;&nbsp;or&nbsp;&nbsp;"));
  bpanel.add(cancel_button);
  VerticalPanel vpanel=new VerticalPanel();
  vpanel.setSpacing(15);
  vpanel.setHorizontalAlignment(HasHorizontalAlignment.ALIGN_CENTER);
  vpanel.add(new HTML("<br/>"));
  if (logo != null) {
    addLogoWithText(vpanel);
    vpanel.add(new HTML("<br/>"));
  }
  ;
  vpanel.add(label_box);
  vpanel.add(mpanel);
  vpanel.add(opanel);
  vpanel.add(bpanel);
  VerticalPanel wrapper=new VerticalPanel();
  wrapper.add(vpanel);
  wrapper.setSize("100%","100%");
  wrapper.setCellHorizontalAlignment(vpanel,VerticalPanel.ALIGN_CENTER);
  parent.clear();
  parent.add(wrapper);
}
