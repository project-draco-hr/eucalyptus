{
  if (roleId == null) {
    throw new AuthException(AuthException.EMPTY_ROLE_ID);
  }
  try (final TransactionResource db=Entities.transactionFor(RoleEntity.class)){
    final RoleEntity role=DatabaseAuthUtils.getUnique(RoleEntity.class,RoleEntity_.roleId,roleId);
    return new DatabaseRoleProxy(role);
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to find role by ID " + roleId);
    throw new AuthException(AuthException.NO_SUCH_ROLE,e);
  }
}
