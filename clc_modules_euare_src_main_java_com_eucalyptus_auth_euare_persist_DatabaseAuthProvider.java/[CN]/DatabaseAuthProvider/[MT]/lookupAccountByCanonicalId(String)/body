{
  if (canonicalId == null || "".equals(canonicalId)) {
    throw new AuthException(AuthException.EMPTY_CANONICAL_ID);
  }
  try (final TransactionResource db=Entities.transactionFor(AccountEntity.class)){
    final Optional<AccountEntity> result=Entities.criteriaQuery(AccountEntity.class).whereEqual(AccountEntity_.canonicalId,canonicalId).readonly().uniqueResultOption();
    if (result.isPresent()) {
      return new DatabaseAccountProxy(result.get());
    }
 else {
      throw new AuthException(AuthException.NO_SUCH_USER);
    }
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Error occurred looking for account by canonical ID " + canonicalId);
    throw new AuthException(AuthException.NO_SUCH_USER,e);
  }
}
