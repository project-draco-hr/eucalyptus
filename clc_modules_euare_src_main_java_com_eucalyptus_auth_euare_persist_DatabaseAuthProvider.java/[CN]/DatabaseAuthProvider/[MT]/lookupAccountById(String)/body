{
  if (accountId == null) {
    throw new AuthException(AuthException.EMPTY_ACCOUNT_ID);
  }
  try (final TransactionResource db=Entities.transactionFor(AccountEntity.class)){
    AccountEntity account=DatabaseAuthUtils.getUnique(AccountEntity.class,"accountNumber",accountId);
    db.commit();
    return new DatabaseAccountProxy(account);
  }
 catch (  Exception e) {
    Debugging.logError(LOG,e,"Failed to find account " + accountId);
    throw new AuthException("Failed to find account",e);
  }
}
