{
  if (SshKeyPair.NO_KEY_NAME.equals(vmAllocInfo.getRequest().getKeyName()) || vmAllocInfo.getRequest().getKeyName() == null) {
    vmAllocInfo.setKeyInfo(new VmKeyInfo());
    return vmAllocInfo;
  }
  String keyName=vmAllocInfo.getRequest().getKeyName();
  SshKeyPair keypair=null;
  try {
    final String accountId=Users.lookupUserById(vmAllocInfo.getRequest().getUserId()).getAccount().getAccountId();
    keypair=Authorizations.lookupPrivileged(SshKeyPair.class,keyName,new KeyPairOwnerLookup(),new ResourceLookup<SshKeyPair>(){
      @Override public SshKeyPair resolve(      String name) throws ResourceLookupException {
        SshKeyPair kp=null;
        try {
          kp=KeyPairUtil.getUserKeyPair(accountId,name);
        }
 catch (        EucalyptusCloudException e) {
          throw new ResourceLookupException("Failed to find keypair: " + name,e);
        }
        if (kp == null) {
          throw new ResourceLookupException("Failed to find keypair: " + name);
        }
        return kp;
      }
    }
);
  }
 catch (  ResourceLookupException e) {
    throw new EucalyptusCloudException(e);
  }
catch (  AuthException e) {
    throw new EucalyptusCloudException("Access to the key pair " + keyName + " is denied.",e);
  }
  vmAllocInfo.setKeyInfo(new VmKeyInfo(keypair.getDisplayName(),keypair.getPublicKey(),keypair.getFingerPrint()));
  return vmAllocInfo;
}
