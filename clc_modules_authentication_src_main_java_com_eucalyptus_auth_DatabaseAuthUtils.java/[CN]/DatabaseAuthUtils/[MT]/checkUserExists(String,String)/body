{
  if (userName == null || accountName == null) {
    throw new AuthException("Empty user name or account name");
  }
  EntityWrapper<UserEntity> db=EntityWrapper.get(UserEntity.class);
  try {
    @SuppressWarnings("unchecked") UserEntity result=(UserEntity)db.createCriteria(UserEntity.class).setCacheable(true).add(Restrictions.eq("name",userName)).createCriteria("groups").setCacheable(true).add(Restrictions.eq("userGroup",true)).createCriteria("account").setCacheable(true).add(Restrictions.eq("name",accountName)).uniqueResult();
    db.commit();
    return result != null;
  }
 catch (  Exception e) {
    db.rollback();
    throw new AuthException("Failed to find user",e);
  }
}
