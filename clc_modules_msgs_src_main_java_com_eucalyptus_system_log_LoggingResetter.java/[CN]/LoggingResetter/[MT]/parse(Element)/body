{
  SmallLoggingConfiguration smallLoggingConfiguration=new SmallLoggingConfiguration();
  if (element == null) {
    LOG.error("Log4j XML file has no document element");
  }
 else   if (element.getTagName() == null) {
    LOG.error("Log4j XML file has a null document element tag");
  }
 else   if (!element.getTagName().equalsIgnoreCase(LOG4J_CONFIGURATION_TAG) && !element.getTagName().equalsIgnoreCase(LOG4J_OLD_CONFIGURATION_TAG)) {
    LOG.error("Log4j XML file has an invalid top level tag " + element.getTagName());
  }
 else {
    NodeList children=element.getChildNodes();
    final int length=children.getLength();
    for (int i=0; i < length; i++) {
      Node currentNode=children.item(i);
      if (currentNode.getNodeType() == Node.ELEMENT_NODE) {
        Element currentElement=(Element)currentNode;
        String tagName=currentElement.getTagName();
        if (tagName == null)         continue;
        if (tagName.equalsIgnoreCase(LOG4J_APPENDER_TAG)) {
          parseAppender(currentElement,smallLoggingConfiguration);
        }
 else         if (tagName.equalsIgnoreCase(LOG4J_ROOT_TAG)) {
          parseRoot(currentElement,smallLoggingConfiguration);
        }
 else         if (tagName.equalsIgnoreCase(LOG4J_CATEGORY_TAG) || tagName.equalsIgnoreCase(LOG4J_LOGGER_TAG)) {
          parseLogger(currentElement,smallLoggingConfiguration);
        }
      }
    }
  }
  return smallLoggingConfiguration;
}
