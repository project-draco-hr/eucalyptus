{
  Bucket bucket=getBucketAndCheckAuthorization(request);
  int maxKeys=ObjectStorageProperties.MAX_KEYS;
  if (!Strings.isNullOrEmpty(request.getMaxKeys())) {
    try {
      maxKeys=Integer.parseInt(request.getMaxKeys());
      if (maxKeys < 0 || maxKeys > ObjectStorageProperties.MAX_KEYS) {
        throw new InvalidArgumentException(request.getMaxKeys());
      }
    }
 catch (    NumberFormatException e) {
      throw new InvalidArgumentException(request.getMaxKeys());
    }
  }
  try {
    PaginatedResult<ObjectEntity> versionListing=ObjectMetadataManagers.getInstance().listVersionsPaginated(bucket,maxKeys,request.getPrefix(),request.getDelimiter(),request.getKeyMarker(),request.getVersionIdMarker(),true);
  }
 catch (  S3Exception e) {
    throw e;
  }
catch (  Exception e) {
    LOG.warn("Error listing versions for bucket " + request.getBucket());
    throw new InternalErrorException(e);
  }
  throw new NotImplementedException("GET ?versions");
}
