{
  GetBucketTaggingResponseType reply=(GetBucketTaggingResponseType)request.getReply();
  Bucket bucket=getBucketAndCheckAuthorization(request);
  try {
    List<BucketTags> bucketTagsLookup=BucketTaggingManagers.getInstance().getBucketTagging(bucket.getBucketUuid());
    if (bucketTagsLookup == null || bucketTagsLookup.isEmpty()) {
      throw new NoSuchTagSetException(bucket.getBucketName());
    }
    TaggingConfiguration tagging=new TaggingConfiguration();
    List<BucketTag> bucketTagList=new ArrayList<BucketTag>();
    for (    BucketTags bucketTags : bucketTagsLookup) {
      BucketTag bucketTag=new BucketTag();
      bucketTag.setKey(bucketTags.getKey());
      bucketTag.setValue(bucketTags.getValue());
      bucketTagList.add(bucketTag);
    }
    BucketTagSet tagSet=new BucketTagSet();
    tagSet.setBucketTags(bucketTagList);
    tagging.setBucketTagSet(tagSet);
    reply.setTaggingConfiguration(tagging);
  }
 catch (  S3Exception ex) {
    LOG.warn("Failed to get TagSet for bucket '" + bucket.getBucketName() + "' due to: "+ ex.getMessage());
    throw ex;
  }
catch (  Exception ex) {
    LOG.warn("Failed to get TagSet for bucket '" + bucket.getBucketName() + "' ",ex);
    InternalErrorException e=new InternalErrorException(bucket.getBucketName() + "?tagging",ex);
    e.setMessage("An exception was caught while getting TagSets for bucket - " + bucket.getBucketName());
    throw e;
  }
  setCorsInfo(request,reply,bucket);
  return reply;
}
