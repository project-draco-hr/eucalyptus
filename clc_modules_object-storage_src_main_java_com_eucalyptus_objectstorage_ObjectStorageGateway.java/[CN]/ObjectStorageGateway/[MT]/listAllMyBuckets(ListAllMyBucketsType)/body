{
  logRequest(request);
  Bucket fakeBucket=new Bucket();
  fakeBucket.setBucketName("*");
  fakeBucket.setOwnerCanonicalId(Contexts.lookup().getAccount().getCanonicalId());
  request.setBucket(fakeBucket.getBucketName());
  if (OsgAuthorizationHandler.getInstance().operationAllowed(request,fakeBucket,null,0)) {
    ListAllMyBucketsResponseType response=request.getReply();
    Account accnt;
    try {
      accnt=Contexts.lookup().getAccount();
      if (accnt == null) {
        throw new NoSuchContextException();
      }
    }
 catch (    NoSuchContextException e) {
      try {
        accnt=Accounts.lookupUserByAccessKeyId(request.getAccessKeyID()).getAccount();
      }
 catch (      AuthException ex) {
        LOG.error("Could not retrieve canonicalId for user with accessKey: " + request.getAccessKeyID());
        throw new InternalErrorException();
      }
    }
    try {
      List<Bucket> listing=BucketMetadataManagers.getInstance().lookupBucketsByOwner(accnt.getCanonicalId());
      response.setBucketList(generateBucketListing(listing));
      response.setOwner(AclUtils.buildCanonicalUser(accnt));
      return response;
    }
 catch (    Exception e) {
      throw new InternalErrorException();
    }
  }
 else {
    AccessDeniedException ex=new AccessDeniedException("ListAllMyBuckets");
    ex.setMessage("Insufficient permissions to list buckets. Check with your account administrator");
    ex.setResourceType("Service");
    throw ex;
  }
}
