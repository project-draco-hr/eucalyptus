{
  Bucket bucket=getBucketAndCheckAuthorization(request);
  if (request.getAccessControlPolicy() == null || request.getAccessControlPolicy().getAccessControlList() == null) {
    LOG.error("Cannot put ACL that does not exist in request");
    throw new MalformedACLErrorException(request.getBucket() + "?acl");
  }
 else {
    AccessControlPolicy fullPolicy=new AccessControlPolicy();
    try {
      fullPolicy.setAccessControlList(AclUtils.expandCannedAcl(request.getAccessControlPolicy().getAccessControlList(),bucket.getOwnerCanonicalId(),null));
    }
 catch (    Exception e) {
      LOG.error("Cannot expand the ACL in the request");
      throw new MalformedACLErrorException(request.getBucket() + "?acl");
    }
    if (fullPolicy.getAccessControlList() == null || fullPolicy.getAccessControlList().getGrants() == null || fullPolicy.getAccessControlList().getGrants().size() == 0) {
      LOG.error("Cannot put ACL that does not exist in request");
      throw new MalformedACLErrorException(request.getBucket() + "?acl");
    }
    if (request.getAccessControlPolicy().getOwner() == null) {
      fullPolicy.setOwner(new CanonicalUser(bucket.getOwnerCanonicalId(),bucket.getOwnerDisplayName()));
    }
 else {
      fullPolicy.setOwner(request.getAccessControlPolicy().getOwner());
    }
    try {
      String aclString=S3AccessControlledEntity.marshallAcpToString(fullPolicy);
      if (Strings.isNullOrEmpty(aclString)) {
        throw new MalformedACLErrorException(request.getBucket() + "?acl");
      }
    }
 catch (    Exception e) {
      Throwable cause=e.getCause();
      if (cause != null) {
        if (cause instanceof UnresolvableGrantByEmailAddressException) {
          throw (UnresolvableGrantByEmailAddressException)cause;
        }
        if (cause instanceof InvalidArgumentException) {
          throw (InvalidArgumentException)cause;
        }
      }
      LOG.error("Invalid ACL policy");
      throw new MalformedACLErrorException(request.getBucket() + "?acl");
    }
    try {
      BucketMetadataManagers.getInstance().setAcp(bucket,fullPolicy);
      SetBucketAccessControlPolicyResponseType reply=request.getReply();
      reply.setBucket(request.getBucket());
      setCorsInfo(request,reply,bucket);
      return reply;
    }
 catch (    Exception e) {
      LOG.error("Transaction error updating bucket ACL for bucket " + request.getBucket(),e);
      throw new InternalErrorException(request.getBucket() + "?acl");
    }
  }
}
