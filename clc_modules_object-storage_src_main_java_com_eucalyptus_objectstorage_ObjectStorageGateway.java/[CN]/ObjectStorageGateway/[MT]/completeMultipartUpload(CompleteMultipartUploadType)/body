{
  logRequest(request);
  Bucket bucket;
  try {
    bucket=BucketMetadataManagers.getInstance().lookupExtantBucket(request.getBucket());
  }
 catch (  NoSuchElementException e) {
    throw new NoSuchBucketException(request.getBucket());
  }
catch (  Exception e) {
    throw new InternalErrorException();
  }
  ObjectEntity objectEntity;
  User requestUser=Contexts.lookup().getUser();
  try {
    objectEntity=ObjectMetadataManagers.getInstance().lookupUpload(bucket,request.getUploadId());
  }
 catch (  Exception e) {
    throw new InternalErrorException("Cannot get size for uploaded parts for: " + bucket.getBucketName() + "/"+ request.getKey());
  }
  long newBucketSize=bucket.getBucketSize() == null ? 0 : bucket.getBucketSize();
  if (OsgAuthorizationHandler.getInstance().operationAllowed(request,bucket,objectEntity,newBucketSize)) {
    try {
      objectEntity=ObjectMetadataManagers.getInstance().lookupUpload(bucket,request.getUploadId());
    }
 catch (    Exception e) {
      throw new NoSuchUploadException("Cannot get upload for: " + bucket.getBucketName() + "/"+ request.getKey());
    }
    try {
      ObjectEntity completedEntity=OsgObjectFactory.getFactory().completeMultipartUpload(ospClient,objectEntity,request.getParts(),requestUser);
      CompleteMultipartUploadResponseType response=request.getReply();
      response.setSize(completedEntity.getSize());
      response.setEtag(completedEntity.geteTag());
      response.setLastModified(completedEntity.getObjectModifiedTimestamp());
      response.setLocation(Topology.lookup(ObjectStorage.class).getUri() + "/" + completedEntity.getBucket().getBucketName()+ "/"+ completedEntity.getObjectKey());
      return response;
    }
 catch (    Exception e) {
      if (e instanceof S3Exception) {
        LOG.error("Got exception completing upload for " + objectEntity.getResourceFullName() + " with uuid: "+ objectEntity.getObjectUuid(),e);
        throw (S3Exception)e;
      }
 else {
        LOG.error("Got exception completing upload for " + objectEntity.getResourceFullName() + " with uuid: "+ objectEntity.getObjectUuid(),e);
        throw new InternalErrorException(objectEntity.getResourceFullName());
      }
    }
  }
 else {
    throw new AccessDeniedException(request.getBucket() + "/" + request.getKey());
  }
}
