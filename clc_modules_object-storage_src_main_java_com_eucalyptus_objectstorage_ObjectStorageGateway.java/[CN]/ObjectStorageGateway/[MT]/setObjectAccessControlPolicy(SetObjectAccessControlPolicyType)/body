{
  ObjectEntity objectEntity=getObjectEntityAndCheckPermissions(request,request.getVersionId());
  SetObjectAccessControlPolicyResponseType reply=request.getReply();
  final String bucketOwnerId=objectEntity.getBucket().getOwnerCanonicalId();
  final String objectOwnerId=objectEntity.getOwnerCanonicalId();
  try {
    String aclString=null;
    if (request.getAccessControlPolicy() == null || request.getAccessControlPolicy().getAccessControlList() == null) {
      throw new MalformedACLErrorException(request.getBucket() + "/" + request.getKey()+ "?acl");
    }
 else {
      request.getAccessControlPolicy().setAccessControlList(AclUtils.expandCannedAcl(request.getAccessControlPolicy().getAccessControlList(),bucketOwnerId,objectOwnerId));
      if (request.getAccessControlPolicy() == null || request.getAccessControlPolicy().getAccessControlList() == null) {
        LOG.error("Cannot put ACL that does not exist in request");
        throw new InternalErrorException(request.getBucket() + "/" + request.getKey()+ "?acl");
      }
 else {
        if (request.getAccessControlPolicy().getOwner() == null) {
          request.getAccessControlPolicy().setOwner(new CanonicalUser(objectOwnerId,objectEntity.getOwnerDisplayName()));
        }
      }
      try {
        aclString=S3AccessControlledEntity.marshallAcpToString(request.getAccessControlPolicy());
      }
 catch (      Exception e) {
        throw new MalformedACLErrorException(request.getBucket() + "/" + request.getKey()+ "?acl");
      }
      if (Strings.isNullOrEmpty(aclString)) {
        throw new MalformedACLErrorException(request.getBucket() + "/" + request.getKey()+ "?acl");
      }
    }
    ObjectMetadataManagers.getInstance().setAcp(objectEntity,request.getAccessControlPolicy());
    if (!objectEntity.getBucket().getVersioning().equals(VersioningStatus.Disabled))     reply.setVersionId(objectEntity.getVersionId());
 else     reply.setVersionId(null);
    setCorsInfo(request,reply,objectEntity.getBucket());
    return reply;
  }
 catch (  Exception e) {
    LOG.error("Internal error during PUT object?acl for object " + request.getBucket() + "/"+ request.getKey(),e);
    if (e instanceof MalformedACLErrorException) {
      throw new MalformedACLErrorException(request.getBucket() + "/" + request.getKey()+ "?acl");
    }
    throw new InternalErrorException(request.getBucket() + "/" + request.getKey());
  }
}
