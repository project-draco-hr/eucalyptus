{
  Bucket bucket=getBucketAndCheckAuthorization(request);
  int maxUploads=ObjectStorageProperties.MAX_KEYS;
  try {
    if (request.getMaxUploads() != null) {
      maxUploads=request.getMaxUploads();
    }
  }
 catch (  NumberFormatException e) {
    LOG.error("Failed to parse max uploads from request properly: " + request.getMaxUploads(),e);
    throw new InvalidArgumentException("MaxKeys");
  }
  ListMultipartUploadsResponseType reply=request.getReply();
  reply.setMaxUploads(maxUploads);
  reply.setBucket(request.getBucket());
  reply.setDelimiter(request.getDelimiter());
  reply.setKeyMarker(request.getKeyMarker());
  reply.setPrefix(request.getPrefix());
  reply.setIsTruncated(false);
  PaginatedResult<ObjectEntity> result;
  try {
    result=ObjectMetadataManagers.getInstance().listUploads(bucket,maxUploads,request.getPrefix(),request.getDelimiter(),request.getKeyMarker(),request.getUploadIdMarker());
  }
 catch (  Exception e) {
    LOG.error("Error getting object listing for bucket: " + request.getBucket(),e);
    throw new InternalErrorException(request.getBucket());
  }
  if (result != null) {
    reply.setUploads(new ArrayList<Upload>());
    for (    ObjectEntity obj : result.getEntityList()) {
      reply.getUploads().add(new Upload(obj.getObjectKey(),obj.getUploadId(),new Initiator(obj.getOwnerIamUserId(),obj.getOwnerIamUserDisplayName()),new CanonicalUser(obj.getOwnerCanonicalId(),obj.getOwnerDisplayName()),obj.getStorageClass(),obj.getCreationTimestamp()));
    }
    if (result.getCommonPrefixes() != null && result.getCommonPrefixes().size() > 0) {
      reply.setCommonPrefixes(new ArrayList<CommonPrefixesEntry>());
      for (      String s : result.getCommonPrefixes()) {
        reply.getCommonPrefixes().add(new CommonPrefixesEntry(s));
      }
    }
    reply.setIsTruncated(result.isTruncated);
    if (result.isTruncated) {
      if (result.getLastEntry() instanceof ObjectEntity) {
        reply.setNextKeyMarker(((ObjectEntity)result.getLastEntry()).getObjectKey());
      }
 else {
        reply.setNextKeyMarker((result.getLastEntry() != null ? result.getLastEntry().toString() : ""));
      }
    }
  }
  return reply;
}
