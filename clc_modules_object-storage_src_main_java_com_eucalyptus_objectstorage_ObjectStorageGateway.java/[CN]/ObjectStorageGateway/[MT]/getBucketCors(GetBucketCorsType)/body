{
  Boolean isEmpty=false;
  String bucketName="nullBucket";
  GetBucketCorsResponseType response=null;
  try {
    Bucket bucket=getBucketAndCheckAuthorization(request);
    bucketName=request.getBucket();
    response=(GetBucketCorsResponseType)request.getReply();
    CorsConfiguration corsConfiguration=new CorsConfiguration();
    List<CorsRule> responseRules=BucketCorsManagers.getInstance().getCorsRules(bucket.getBucketUuid());
    isEmpty=responseRules.isEmpty();
    if (!isEmpty) {
      corsConfiguration.setRules(responseRules);
      response.setCorsConfiguration(corsConfiguration);
    }
  }
 catch (  S3Exception s3e) {
    LOG.warn("Caught S3Exception while getting the CORS configuration for bucket <" + bucketName + ">, CorrelationId: "+ Contexts.lookup().getCorrelationId()+ ", responding to client with: ",s3e);
    throw s3e;
  }
catch (  Exception ex) {
    LOG.warn("Caught general exception while getting the CORS configuration for bucket <" + bucketName + ">, CorrelationId: "+ Contexts.lookup().getCorrelationId()+ ", responding to client with 500 InternalError because of: ",ex);
    throw new InternalErrorException(bucketName,ex);
  }
  if (isEmpty) {
    NoSuchCorsConfigurationException nscc=new NoSuchCorsConfigurationException(bucketName);
    throw nscc;
  }
  return response;
}
