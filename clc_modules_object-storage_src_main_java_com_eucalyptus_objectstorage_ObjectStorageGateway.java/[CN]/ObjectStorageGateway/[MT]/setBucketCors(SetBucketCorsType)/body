{
  String bucketName="nullBucket";
  SetBucketCorsResponseType response=null;
  try {
    Bucket bucket=getBucketAndCheckAuthorization(request);
    bucketName=request.getBucket();
    response=(SetBucketCorsResponseType)request.getReply();
    CorsConfiguration corsConfig=request.getCorsConfiguration();
    final int MAX_CORS_RULES=100;
    if (corsConfig != null && corsConfig.getRules() != null && corsConfig.getRules().size() > MAX_CORS_RULES) {
      MalformedXMLException ex=new MalformedXMLException(bucketName);
      ex.setMessage("More than " + MAX_CORS_RULES + " rules in CORS configuration not allowed");
      throw ex;
    }
    HashSet<String> uniqueRuleIds=new HashSet<String>();
    String ruleId=null;
    InvalidArgumentException invArgEx=null;
    for (    CorsRule rule : corsConfig.getRules()) {
      if (rule == null) {
        break;
      }
      ruleId=rule.getId();
      if (ruleId != null && ruleId.length() > 0) {
        if (ruleId.length() > 255) {
          invArgEx=new InvalidArgumentException(ruleId);
          invArgEx.setMessage("CORS RuleId > 255 characters");
          throw invArgEx;
        }
        boolean unique=uniqueRuleIds.add(ruleId);
        if (!unique) {
          invArgEx=new InvalidArgumentException(ruleId);
          invArgEx.setMessage("RuleId must be unique. Saw this rule more than once: " + ruleId);
          throw invArgEx;
        }
      }
    }
    BucketCorsManagers.getInstance().addCorsRules(corsConfig.getRules(),bucket.getBucketUuid());
  }
 catch (  S3Exception s3e) {
    LOG.warn("Caught S3Exception while setting the CORS configuration for bucket <" + bucketName + ">, CorrelationId: "+ Contexts.lookup().getCorrelationId()+ ", responding to client with: ",s3e);
    throw s3e;
  }
catch (  Exception ex) {
    LOG.warn("Caught general exception while setting the CORS configuration for bucket <" + bucketName + ">, CorrelationId: "+ Contexts.lookup().getCorrelationId()+ ", responding to client with 500 InternalError because of: ",ex);
    throw new InternalErrorException(bucketName,ex);
  }
  return response;
}
