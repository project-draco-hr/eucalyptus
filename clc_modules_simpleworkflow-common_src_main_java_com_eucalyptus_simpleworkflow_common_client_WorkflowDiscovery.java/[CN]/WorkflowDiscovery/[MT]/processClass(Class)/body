{
  final Ats ats=Ats.inClassHierarchy(candidate);
  if ((ats.has(Workflow.class) || ats.has(Activities.class)) && ats.has(ComponentPart.class) && !Modifier.isAbstract(candidate.getModifiers())&& !Modifier.isInterface(candidate.getModifiers())&& !candidate.isLocalClass()&& !candidate.isAnonymousClass()) {
    final Class<? extends ComponentId> componentIdClass=ats.get(ComponentPart.class).value();
    if (ats.has(Workflow.class)) {
      WorkflowRegistry.registerWorkflow(componentIdClass,candidate);
    }
 else {
      WorkflowRegistry.registerActivities(componentIdClass,candidate);
    }
    logger.debug("Discovered workflow implementation class: " + candidate.getName());
    return true;
  }
 else {
    return false;
  }
}
