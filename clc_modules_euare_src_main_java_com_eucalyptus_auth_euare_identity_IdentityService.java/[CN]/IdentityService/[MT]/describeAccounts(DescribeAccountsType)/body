{
  final DescribeAccountsResponseType response=request.getReply();
  final DescribeAccountsResult result=new DescribeAccountsResult();
  try {
    final Iterable<AccountIdentifiers> accountIdentifiers;
    if (request.getAlias() != null) {
      accountIdentifiers=Collections.singleton(principalProvider.lookupAccountIdentifiersByAlias(request.getAlias()));
    }
 else     if (request.getCanonicalId() != null) {
      accountIdentifiers=Collections.singleton(principalProvider.lookupAccountIdentifiersByCanonicalId(request.getCanonicalId()));
    }
 else     if (request.getEmail() != null) {
      accountIdentifiers=Collections.singleton(principalProvider.lookupAccountIdentifiersByEmail(request.getEmail()));
    }
 else     if (request.getAliasLike() != null) {
      accountIdentifiers=principalProvider.listAccountIdentifiersByAliasMatch(request.getAliasLike());
    }
 else {
      accountIdentifiers=null;
    }
    final ArrayList<Account> accounts=Lists.newArrayList();
    if (accountIdentifiers != null) {
      Iterables.addAll(accounts,Iterables.transform(accountIdentifiers,TypeMappers.lookup(AccountIdentifiers.class,Account.class)));
    }
    result.setAccounts(accounts);
  }
 catch (  AuthException e) {
    throw handleException(e);
  }
  response.setDescribeAccountsResult(result);
  return response;
}
