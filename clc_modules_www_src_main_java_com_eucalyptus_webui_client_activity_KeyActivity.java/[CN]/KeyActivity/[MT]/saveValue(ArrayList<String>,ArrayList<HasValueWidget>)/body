{
  final ArrayList<String> newVals=Lists.newArrayList();
  for (  HasValueWidget w : values) {
    newVals.add(w.getValue());
  }
  final String keyId=emptyForNull(getField(newVals,0));
  this.clientFactory.getShellView().getFooterView().showStatus(StatusType.LOADING,"Modifying key " + keyId + " ...",0);
  clientFactory.getBackendService().modifyAccessKey(clientFactory.getLocalSession().getSession(),newVals,new AsyncCallback<Void>(){
    @Override public void onFailure(    Throwable caught){
      clientFactory.getShellView().getFooterView().showStatus(StatusType.ERROR,"Failed to modify key",FooterView.DEFAULT_STATUS_CLEAR_DELAY);
      clientFactory.getShellView().getLogView().log(LogType.ERROR,"Failed to modify key " + keyId + ": "+ caught.getMessage());
    }
    @Override public void onSuccess(    Void arg0){
      clientFactory.getShellView().getFooterView().showStatus(StatusType.NONE,"Successfully modified key",FooterView.DEFAULT_STATUS_CLEAR_DELAY);
      clientFactory.getShellView().getLogView().log(LogType.INFO,"Modified key " + keyId);
      reloadCurrentRange();
    }
  }
);
}
