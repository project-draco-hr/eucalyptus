{
  try {
    final ContractKeyEvaluator contractEval=new ContractKeyEvaluator(contracts);
    final CachedKeyEvaluator keyEval=new CachedKeyEvaluator();
    action=action.toLowerCase();
    if (!requestUser.isSystemAdmin()) {
      verifyUser(requestUser);
      final Account account=requestUser.getAccount();
      if (!requestUser.isAccountAdmin() || resourceAccount == null || resourceAccount.getAccountNumber() == null || !resourceAccount.getAccountNumber().equals(account.getAccountNumber())) {
        Decision decision=resourcePolicy == null ? Decision.ALLOW : processAuthorizations(resourcePolicy.getAuthorizations(),action,null,principalType,principalName,keyEval,contractEval);
        if (decision != Decision.ALLOW) {
          LOG.debug("Request is rejected by resource authorization check, due to decision " + decision);
          throw new AuthException(AuthException.ACCESS_DENIED);
        }
 else {
          decision=evaluateResourceAuthorization(resourceType,resourceName,resourceAccount,action,requestUser,contracts);
          if (Decision.DENY == decision || (Decision.ALLOW != decision && resourcePolicy == null)) {
            throw new AuthException(AuthException.ACCESS_DENIED);
          }
        }
      }
    }
  }
 catch (  AuthException e) {
    LOG.debug(e,e);
    throw e;
  }
catch (  Exception e) {
    LOG.debug(e,e);
    throw new AuthException("An error occurred while trying to evaluate policy for resource access",e);
  }
}
