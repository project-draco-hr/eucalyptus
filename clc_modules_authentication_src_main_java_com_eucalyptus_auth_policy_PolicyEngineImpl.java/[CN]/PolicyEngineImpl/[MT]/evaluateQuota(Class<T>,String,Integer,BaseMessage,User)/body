{
  try {
    if (resourceClass == null) {
      throw new AuthException("Empty resource class");
    }
    if (request == null) {
      throw new AuthException("Empty request");
    }
    if (requestUser == null) {
      throw new AuthException("Empty request user");
    }
    if (requestUser.isSystemAdmin()) {
      return;
    }
    String userId=requestUser.getUserId();
    String accountId=requestUser.getAccount().getAccountId();
    String resourceType=getResourceType(resourceClass);
    String action=getAction(request.getClass());
    List<Authorization> quotas=lookupQuotas(resourceType,userId,accountId,requestUser.isAccountAdmin());
    processQuotas(quotas,action,resourceType,resourceName,quantity);
  }
 catch (  AuthException e) {
    throw e;
  }
catch (  IllegalContextAccessException e) {
    throw new AuthException("Cannot invoke without a corresponding service context available.",e);
  }
catch (  Throwable e) {
    throw new AuthException("An error occurred while trying to evaluate policy for resource allocation.",e);
  }
}
