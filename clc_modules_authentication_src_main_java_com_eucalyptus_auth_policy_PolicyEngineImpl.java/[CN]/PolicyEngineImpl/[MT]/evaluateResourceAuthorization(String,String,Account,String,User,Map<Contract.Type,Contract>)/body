{
  final ContractKeyEvaluator contractEval=new ContractKeyEvaluator(contracts);
  final CachedKeyEvaluator keyEval=new CachedKeyEvaluator();
  resourceName=PolicySpec.canonicalizeResourceName(resourceType,resourceName);
  action=action.toLowerCase();
  if (requestUser.isSystemAdmin()) {
    return Decision.ALLOW;
  }
  verifyUser(requestUser);
  final Account account=requestUser.getAccount();
  Decision decision=processAuthorizations(lookupGlobalAuthorizations(resourceType,account),action,resourceName,keyEval,contractEval);
  if (decision == Decision.DENY) {
    LOG.debug("Request is rejected by global authorization check, due to decision " + decision);
    return decision;
  }
  if (resourceAccount != null && resourceAccount.getAccountNumber() != null && !resourceAccount.getAccountNumber().equals(account.getAccountNumber())) {
    decision=processAuthorizations(lookupLocalAuthorizations(resourceType,requestUser),action,resourceName,keyEval,contractEval);
    if (decision == Decision.DENY) {
      LOG.debug("Request is rejected by local authorization check, due to decision " + decision);
    }
    return decision == Decision.ALLOW ? Decision.DEFAULT : decision;
  }
 else   if (requestUser.isAccountAdmin()) {
    return Decision.ALLOW;
  }
 else {
    decision=processAuthorizations(lookupLocalAuthorizations(resourceType,requestUser),action,resourceName,keyEval,contractEval);
    if (decision == Decision.DENY || decision == Decision.DEFAULT) {
      LOG.debug("Request is rejected by local authorization check, due to decision " + decision);
    }
    return decision;
  }
}
