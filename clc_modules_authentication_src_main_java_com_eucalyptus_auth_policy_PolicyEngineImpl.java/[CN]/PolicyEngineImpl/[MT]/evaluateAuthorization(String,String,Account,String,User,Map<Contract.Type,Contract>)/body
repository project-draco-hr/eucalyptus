{
  try {
    ContractKeyEvaluator contractEval=new ContractKeyEvaluator(contracts);
    CachedKeyEvaluator keyEval=new CachedKeyEvaluator();
    resourceName=resourceName.toLowerCase();
    action=action.toLowerCase();
    if (!requestUser.isSystemAdmin()) {
      if (!requestUser.isEnabled() || !RegistrationStatus.CONFIRMED.equals(requestUser.getRegistrationStatus())) {
        LOG.debug("Request user is rejected because he/she is not enabled or confirmed yet");
        throw new AuthException(AuthException.ACCESS_DENIED);
      }
      Account account=requestUser.getAccount();
      Decision decision=processAuthorizations(lookupGlobalAuthorizations(resourceType,account),action,resourceName,keyEval,contractEval);
      if ((decision == Decision.DENY) || (decision == Decision.DEFAULT && resourceAccount != null && resourceAccount.getAccountNumber() != null && !resourceAccount.getAccountNumber().equals(account.getAccountNumber()))) {
        LOG.debug("Request is rejected by global authorization check, due to decision " + decision);
        throw new AuthException(AuthException.ACCESS_DENIED);
      }
      if (!requestUser.isAccountAdmin()) {
        decision=processAuthorizations(lookupLocalAuthorizations(resourceType,requestUser),action,resourceName,keyEval,contractEval);
        if (decision == Decision.DENY || decision == Decision.DEFAULT) {
          LOG.debug("Request is rejected by local authorization check, due to decision " + decision);
          throw new AuthException(AuthException.ACCESS_DENIED);
        }
      }
    }
  }
 catch (  AuthException e) {
    LOG.debug(e,e);
    throw e;
  }
catch (  Exception e) {
    LOG.debug(e,e);
    throw new AuthException("An error occurred while trying to evaluate policy for resource access",e);
  }
}
