{
  CachedKeyEvaluator keyEval=new CachedKeyEvaluator();
  ContractKeyEvaluator contractEval=new ContractKeyEvaluator();
  boolean allowed=false;
  for (  Authorization auth : authorizations) {
    LOG.debug(AuthTest.MARK + "Processing authorization: " + auth);
    if (evaluatePatterns(auth.getActions(),auth.isNotAction(),action)) {
      continue;
    }
    if (!evaluatePatterns(auth.getResources(),auth.isNotResource(),resource)) {
      continue;
    }
    if (!evaluateConditions(auth.getConditions(),action,auth.getType(),keyEval,contractEval)) {
      continue;
    }
    if (auth.getEffect() == EffectType.Deny) {
      LOG.debug(AuthTest.MARK + "--Explicit deny.");
      throw new AuthException(AuthException.ACCESS_DENIED);
    }
 else {
      allowed=true;
    }
  }
  if (allowed) {
    LOG.debug(AuthTest.MARK + "Approved");
    return contractEval.getContracts();
  }
  LOG.debug(AuthTest.MARK + "Default deny.");
  throw new AuthException(AuthException.ACCESS_DENIED);
}
