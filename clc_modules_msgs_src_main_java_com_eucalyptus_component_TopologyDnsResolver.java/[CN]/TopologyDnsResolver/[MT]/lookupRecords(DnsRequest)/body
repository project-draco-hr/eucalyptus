{
  final Record query=request.getQuery();
  final Name name=query.getName();
  if (ResolverSupport.COMPONENT.apply(name)) {
    final Class<? extends ComponentId> compIdType=ResolverSupport.COMPONENT_FUNCTION.apply(name);
    final ComponentId componentId=ComponentIds.lookup(compIdType);
    final List<ServiceConfiguration> configs=Lists.newArrayList();
    final Optional<Set<String>> adminServiceName=componentId.getAdminServiceNames();
    final Host coordinator=Hosts.getCoordinator();
    Predicate<ServiceConfiguration> configFilter=RESOLVABLE_STATE;
    if (coordinator != null && adminServiceName.isPresent() && adminServiceName.get().contains(name.getLabelString(0))) {
      configFilter=Predicates.alwaysTrue();
      configs.add(ServiceConfigurations.createEphemeral(componentId,coordinator.getBindAddress()));
    }
 else     if (componentId.isPartitioned()) {
      final String partitionName=name.getLabelString(1);
      final Partition partition=Partitions.lookupByName(partitionName);
      if (componentId.isManyToOnePartition()) {
        for (        ServiceConfiguration conf : Iterables.filter(Components.lookup(compIdType).services(),ServiceConfigurations.filterByPartition(partition))) {
          configs.add(conf);
        }
        Collections.shuffle(configs);
      }
 else {
        configs.add(Topology.lookup(compIdType,partition));
      }
    }
 else {
      if (componentId.isManyToOnePartition()) {
        for (        ServiceConfiguration conf : Components.lookup(compIdType).services()) {
          configs.add(conf);
        }
        Collections.shuffle(configs);
      }
 else {
        configs.add(Topology.lookup(compIdType));
      }
    }
    final List<Record> answers=Lists.newArrayList();
    for (    ServiceConfiguration config : configs) {
      if (configFilter.apply(config)) {
        Record aRecord=DomainNameRecords.addressRecord(name,maphost(request.getLocalAddress(),config.getInetAddress()));
        answers.add(aRecord);
      }
    }
    return DnsResponse.forName(query.getName()).answer(RequestType.A.apply(query) ? answers : null);
  }
 else   if (ResolverSupport.SERVICE.apply(name)) {
    final ServiceConfiguration config=ResolverSupport.SERVICE_FUNCTION.apply(name);
    return DnsResponse.forName(query.getName()).answer(RequestType.A.apply(query) ? DomainNameRecords.addressRecord(name,maphost(request.getLocalAddress(),config.getInetAddress())) : null);
  }
 else {
    throw new NoSuchElementException("Failed to lookup name: " + name);
  }
}
