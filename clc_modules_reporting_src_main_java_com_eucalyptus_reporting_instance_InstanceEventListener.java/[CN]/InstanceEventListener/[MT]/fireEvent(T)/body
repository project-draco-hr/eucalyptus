{
  if (!(e instanceof Event)) {
    return;
  }
 else {
    Event reportingEvent=(Event)e;
    final long receivedEventMs=this.getCurrentTimeMillis();
    if (reportingEvent instanceof InstanceEvent) {
      InstanceEvent event=(InstanceEvent)e;
      final String uuid=event.getUuid();
      EntityWrapper<InstanceAttributes> entityWrapper=EntityWrapper.get(InstanceAttributes.class);
      Session sess=null;
      try {
        sess=entityWrapper.getSession();
        InstanceAttributes insAttrs=new InstanceAttributes(uuid,event.getInstanceId(),event.getInstanceType(),event.getUserId(),event.getAccountId(),event.getClusterName(),event.getAvailabilityZone());
        InstanceUsageSnapshot insUsageSnapshot=new InstanceUsageSnapshot(uuid,receivedEventMs,event.getCumulativeNetworkIoMegs(),event.getCumulativeDiskIoMegs());
        System.out.printf("--Snapshot %s %d %d %d\n",uuid,receivedEventMs,event.getCumulativeNetworkIoMegs(),event.getCumulativeDiskIoMegs());
        if (!recentlySeenUuids.contains(uuid)) {
          if (null == sess.get(InstanceAttributes.class,uuid)) {
            sess.save(insAttrs);
            log.debug("Wrote Reporting Instance:" + uuid);
          }
          recentlySeenUuids.add(uuid);
        }
        recentUsageSnapshots.add(insUsageSnapshot);
        if (receivedEventMs > (lastWriteMs + WRITE_INTERVAL_SECS * 1000)) {
          for (          InstanceUsageSnapshot ius : recentUsageSnapshots) {
            sess.save(ius);
            log.debug("Wrote Instance Usage:" + ius.getUuid() + ":"+ ius.getId());
          }
          recentUsageSnapshots.clear();
          lastWriteMs=receivedEventMs;
        }
        entityWrapper.commit();
      }
 catch (      Exception ex) {
        entityWrapper.rollback();
        log.error(ex);
      }
    }
  }
}
