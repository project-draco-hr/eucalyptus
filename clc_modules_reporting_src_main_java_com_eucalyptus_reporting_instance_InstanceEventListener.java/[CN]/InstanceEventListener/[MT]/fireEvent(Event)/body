{
  final long receivedEventMs=this.getCurrentTimeMillis();
  if (e instanceof InstanceEvent) {
    InstanceEvent event=(InstanceEvent)e;
    log.info("Received instance event:" + event);
    final String uuid=event.getUuid();
    if (uuid == null) {
      log.warn("Received null uuid");
      return;
    }
    InstanceAttributes insAttrs=new InstanceAttributes(uuid,event.getInstanceId(),event.getInstanceType(),event.getUserId(),event.getAccountId(),event.getClusterName(),event.getAvailabilityZone());
    InstanceUsageSnapshot insUsageSnapshot=new InstanceUsageSnapshot(uuid,receivedEventMs,event.getCumulativeNetworkIoMegs(),event.getCumulativeDiskIoMegs());
    EntityWrapper<InstanceAttributes> attrEntityWrapper=EntityWrapper.get(InstanceAttributes.class);
    try {
      if (!recentlySeenUuids.contains(uuid)) {
        try {
          attrEntityWrapper.getUnique(new InstanceAttributes(){
{
              setUuid(uuid);
            }
          }
);
        }
 catch (        Exception ex) {
          attrEntityWrapper.add(insAttrs);
          log.info("Wrote Reporting Instance:" + uuid);
        }
        recentlySeenUuids.add(uuid);
      }
      attrEntityWrapper.commit();
    }
 catch (    Exception ex) {
      attrEntityWrapper.rollback();
      log.error(ex);
    }
    if (!recentUsageSnapshots.containsKey(uuid)) {
      recentUsageSnapshots.put(uuid,insUsageSnapshot);
    }
 else {
      InstanceUsageSnapshot oldSnapshot=recentUsageSnapshots.get(uuid);
      if (oldSnapshot.getTimestampMs() < insUsageSnapshot.getTimestampMs()) {
        recentUsageSnapshots.put(uuid,insUsageSnapshot);
      }
 else {
        log.error("Events are arriving out of order");
      }
    }
    EntityWrapper<InstanceUsageSnapshot> entityWrapper=EntityWrapper.get(InstanceUsageSnapshot.class);
    try {
      if (receivedEventMs > (lastWriteMs + getWriteIntervalMs())) {
        for (        String key : recentUsageSnapshots.keySet()) {
          InstanceUsageSnapshot ius=recentUsageSnapshots.get(key);
          entityWrapper.add(ius);
          log.info("Wrote Instance Usage:" + ius.getUuid() + ":"+ ius.getEntityId());
        }
        recentUsageSnapshots.clear();
        lastWriteMs=receivedEventMs;
      }
      entityWrapper.commit();
    }
 catch (    Exception ex) {
      entityWrapper.rollback();
      log.error(ex);
    }
  }
}
