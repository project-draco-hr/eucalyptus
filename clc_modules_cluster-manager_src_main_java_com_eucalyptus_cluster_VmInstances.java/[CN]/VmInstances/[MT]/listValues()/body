{
  final EntityWrapper<VmInstance> db=Entities.get(VmInstance.class);
  try {
    final List<VmInstance> vms=db.query(VmInstance.named(null,null));
    final Collection<VmInstance> ret=Collections2.filter(vms,new Predicate<VmInstance>(){
      @Override public boolean apply(      final VmInstance input){
        input.getNetworkRulesGroups().toArray();
        return !VmState.TERMINATED.equals(input.getState());
      }
    }
);
    db.commit();
    return Lists.newArrayList(ret);
  }
 catch (  final Exception ex) {
    db.rollback();
    if (ex.getCause() instanceof NoSuchElementException) {
      throw (NoSuchElementException)ex.getCause();
    }
 else {
      throw new NoSuchElementException(ex.getMessage());
    }
  }
}
