{
  final UserFullName ownerFullName=evt.getContext().getUserFullName();
  LoadBalancer lb=null;
  try {
    lb=LoadBalancers.getLoadbalancer(ownerFullName,evt.getLoadBalancer());
  }
 catch (  Exception ex) {
    throw new EventHandlerException("failed to find the loadbalancer",ex);
  }
  final Collection<LoadBalancerServoInstance> instances=lb.getServoInstances();
  List<String> toTerminate=Lists.newArrayList(Collections2.transform(instances,new Function<LoadBalancerServoInstance,String>(){
    @Override public String apply(    LoadBalancerServoInstance input){
      return input.getInstanceId();
    }
  }
));
  List<String> terminated=null;
  try {
    terminated=EucalyptusActivityTasks.getInstance().terminateInstances(toTerminate);
  }
 catch (  Exception ex) {
    throw new EventHandlerException("failed to terminate the instances",ex);
  }
  for (  String gone : terminated) {
    toTerminate.remove(gone);
  }
  if (toTerminate.size() > 0) {
    StringBuilder sb=new StringBuilder();
    for (    String error : toTerminate)     sb.append(error + " ");
    String strErrorInstances=new String(sb);
    LOG.error("Some instances were not terminated: " + strErrorInstances);
  }
}
