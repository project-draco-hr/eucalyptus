{
switch (scope) {
case ACCOUNT:
    return NOT_SUPPORTED;
case GROUP:
  return NOT_SUPPORTED;
case USER:
try (final TransactionResource tx=Entities.transactionFor(AccessKeyEntity.class)){
  return String.valueOf(Entities.count(new AccessKeyEntity(),Restrictions.eq("user.userId",id),Collections.singletonMap("user","user")) + quantity);
}
 }
throw new AuthException("Invalid scope");
}
