{
  try {
    this.membershipGroupName="Eucalyptus-" + Hmacs.generateSystemSignature();
    this.membershipChannel=MembershipManager.buildChannel();
    final boolean[] done={false};
    final ReentrantLock lock=new ReentrantLock();
    final Condition isReady=lock.newCondition();
    this.membershipChannel.setReceiver(new ReceiverAdapter(){
      public void viewAccepted(      View newView){
        LOG.info("view: " + newView.printDetails());
        if (Components.lookup(Database.class).isRunningLocally()) {
          for (          Address addr : newView.getMembers()) {
            if (!MembershipBootstrapper.this.membershipChannel.getLocalAddress().equals(addr)) {
              try {
                LOG.info("Sending to address=" + addr + " of type="+ addr.getClass());
                MembershipBootstrapper.this.membershipChannel.send(new Message(addr,null,"DBDBDBDBDBDBDBDBDBDBDB"));
              }
 catch (              ChannelNotConnectedException ex) {
                LOG.error(ex,ex);
              }
catch (              ChannelClosedException ex) {
                LOG.error(ex,ex);
              }
            }
          }
        }
      }
      public void receive(      Message msg){
        if (System.getProperty("euca.disable.eucalyptus") != null) {
          LOG.info(msg.getObject() + " [" + msg.getSrc()+ "]");
          lock.lock();
          try {
            done[0]=true;
            isReady.signalAll();
          }
  finally {
            lock.unlock();
          }
        }
      }
    }
);
    lock.lock();
    try {
      this.membershipChannel.connect(this.membershipGroupName);
      LOG.info("Started membership channel " + this.membershipGroupName);
      if (System.getProperty("euca.disable.eucalyptus") != null) {
        LOG.warn("Blocking the bootstrap thread for testing.");
        if (!done[0]) {
          isReady.await();
        }
      }
    }
  finally {
      lock.unlock();
    }
    return true;
  }
 catch (  Exception ex) {
    LOG.fatal(ex,ex);
    BootstrapException.throwFatal("Failed to connect membership channel because of " + ex.getMessage(),ex);
    return false;
  }
}
