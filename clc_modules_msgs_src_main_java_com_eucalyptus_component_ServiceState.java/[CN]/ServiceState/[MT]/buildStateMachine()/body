{
  final TransitionAction<ServiceConfiguration> noop=Transitions.noop();
  return new StateMachineBuilder<ServiceConfiguration,State,Transition>(this.parent,State.PRIMORDIAL){
{
      in(State.ENABLED).run(ServiceTransitions.StateCallbacks.SERVICE_CONTEXT_RESTART).run(ServiceTransitions.StateCallbacks.PIPELINES_ADD).run(ServiceTransitions.StateCallbacks.PROPERTIES_ADD);
      in(State.DISABLED).run(ServiceTransitions.StateCallbacks.SERVICE_CONTEXT_RESTART).run(ServiceTransitions.StateCallbacks.PIPELINES_REMOVE).run(ServiceTransitions.StateCallbacks.PROPERTIES_REMOVE);
      from(State.PRIMORDIAL).to(State.INITIALIZED).error(State.BROKEN).on(Transition.INITIALIZING).run(noop);
      from(State.PRIMORDIAL).to(State.BROKEN).error(State.BROKEN).on(Transition.FAILED_TO_PREPARE).run(noop);
      from(State.INITIALIZED).to(State.LOADED).error(State.BROKEN).on(Transition.LOADING).run(ServiceTransitions.TransitionActions.LOAD);
      from(State.LOADED).to(State.NOTREADY).error(State.BROKEN).on(Transition.STARTING).addListener(ServiceTransitions.StateCallbacks.FIRE_START_EVENT).run(ServiceTransitions.TransitionActions.START);
      from(State.NOTREADY).to(State.DISABLED).error(State.NOTREADY).on(Transition.READY_CHECK).run(ServiceTransitions.TransitionActions.CHECK);
      from(State.DISABLED).to(State.ENABLED).error(State.NOTREADY).on(Transition.ENABLING).addListener(ServiceTransitions.StateCallbacks.FIRE_ENABLE_EVENT).run(ServiceTransitions.TransitionActions.ENABLE);
      from(State.DISABLED).to(State.STOPPED).error(State.NOTREADY).on(Transition.STOPPING).addListener(ServiceTransitions.StateCallbacks.FIRE_STOP_EVENT).run(ServiceTransitions.TransitionActions.STOP);
      from(State.DISABLED).to(State.DISABLED).error(State.NOTREADY).on(Transition.DISABLED_CHECK).run(ServiceTransitions.TransitionActions.CHECK);
      from(State.ENABLED).to(State.DISABLED).error(State.NOTREADY).on(Transition.DISABLING).addListener(ServiceTransitions.StateCallbacks.FIRE_DISABLE_EVENT).run(ServiceTransitions.TransitionActions.DISABLE);
      from(State.ENABLED).to(State.ENABLED).error(State.NOTREADY).on(Transition.ENABLED_CHECK).run(ServiceTransitions.TransitionActions.CHECK);
      from(State.STOPPED).to(State.INITIALIZED).error(State.BROKEN).on(Transition.DESTROYING).run(ServiceTransitions.TransitionActions.DESTROY);
    }
  }
.newAtomicMarkedState();
}
