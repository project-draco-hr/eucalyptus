{
  return new StateMachineBuilder<ServiceConfiguration,State,Transition>(this.parent,State.PRIMORDIAL){
{
      in(State.ENABLED).run(ServiceTransitions.restartServiceContext).run(ServiceTransitions.addPipelines);
      in(State.DISABLED).run(ServiceTransitions.restartServiceContext).run(ServiceTransitions.removePipelines);
      on(Transition.INITIALIZING).from(State.PRIMORDIAL).to(State.INITIALIZED).error(State.BROKEN).noop();
      on(Transition.LOADING).from(State.INITIALIZED).to(State.LOADED).error(State.BROKEN).run(ServiceTransitions.LOAD_TRANSITION);
      on(Transition.STARTING).from(State.LOADED).to(State.NOTREADY).error(State.BROKEN).run(ServiceTransitions.START_TRANSITION);
      on(Transition.ENABLING).from(State.DISABLED).to(State.ENABLED).error(State.NOTREADY).run(ServiceTransitions.ENABLE_TRANSITION);
      on(Transition.DISABLING).from(State.ENABLED).to(State.DISABLED).error(State.NOTREADY).run(ServiceTransitions.DISABLE_TRANSITION);
      on(Transition.STOPPING).from(State.DISABLED).to(State.STOPPED).error(State.NOTREADY).run(ServiceTransitions.STOP_TRANSITION);
      on(Transition.DESTROYING).from(State.STOPPED).to(State.LOADED).error(State.BROKEN).run(ServiceTransitions.DESTROY_TRANSITION);
      on(Transition.READY_CHECK).from(State.NOTREADY).to(State.DISABLED).error(State.NOTREADY).run(ServiceTransitions.CHECK_TRANSITION);
      on(Transition.DISABLED_CHECK).from(State.DISABLED).to(State.DISABLED).error(State.NOTREADY).run(ServiceTransitions.CHECK_TRANSITION);
      on(Transition.ENABLED_CHECK).from(State.ENABLED).to(State.ENABLED).error(State.NOTREADY).run(ServiceTransitions.CHECK_TRANSITION);
    }
  }
.newAtomicMarkedState();
}
