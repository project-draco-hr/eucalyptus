{
  if (volumeTask.getImportManifestUrl() != null) {
    try {
      if (!doesManifestExist(volumeTask.getImportManifestUrl())) {
        if (!ImportTaskState.STATE_MSG_PENDING_UPLOAD.equals(volumeTask.getStateReason())) {
          try {
            ImagingTasks.transitState(volumeTask,ImportTaskState.NEW,ImportTaskState.NEW,ImportTaskState.STATE_MSG_PENDING_UPLOAD);
          }
 catch (          final Exception ex) {
            ;
          }
        }
        return;
      }
    }
 catch (    final Exception ex) {
      throw new Exception("Failed to check import manifest",ex);
    }
  }
  try {
    ImagingTasks.transitState(volumeTask,ImportTaskState.NEW,ImportTaskState.NEW,ImportTaskState.STATE_MSG_CREATING_VOLUME);
  }
 catch (  final Exception ex) {
    ;
  }
  if (volumeTask.getVolumeId() == null || volumeTask.getVolumeId().length() <= 0) {
    final String zone=volumeTask.getAvailabilityZone();
    final int size=volumeTask.getVolumeSize();
    try {
      final String volumeId=Ec2Client.getInstance().createVolume(volumeTask.getOwnerUserId(),zone,size);
      Volumes.setSystemManagedFlag(null,volumeId,true);
      ImagingTasks.setVolumeId(volumeTask,volumeId);
    }
 catch (    final Exception ex) {
      throw new Exception("Failed to create the volume",ex);
    }
  }
 else {
    final List<Volume> volumes=Ec2Client.getInstance().describeVolumes(null,Lists.newArrayList(volumeTask.getVolumeId()));
    final Volume volume=volumes.get(0);
    final String volumeStatus=volume.getStatus();
    if ("available".equals(volumeStatus)) {
      final ConversionTask conversionTask=volumeTask.getTask();
      if (conversionTask.getImportVolume() != null) {
        try {
          ImagingTasks.transitState(volumeTask,ImportTaskState.NEW,ImportTaskState.PENDING,"");
        }
 catch (        final Exception ex) {
          ;
        }
      }
 else {
        throw new Exception("No importVolume detail is found in the conversion task");
      }
    }
 else     if ("creating".equals(volumeStatus)) {
      ;
    }
 else {
      throw new Exception("The volume " + volume.getVolumeId() + "'s state is "+ volumeStatus);
    }
  }
}
