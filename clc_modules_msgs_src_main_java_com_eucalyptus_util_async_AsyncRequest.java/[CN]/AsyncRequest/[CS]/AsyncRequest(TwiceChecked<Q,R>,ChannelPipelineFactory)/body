{
  super();
  this.response=Futures.newAsyncMessageFuture();
  this.callbackResult=Futures.newAsyncMessageFuture();
  this.callback=callback;
  this.handler=new AsyncRequestHandler<Q,R>(this.response);
  this.callbackSequence=new CallbackListenerSequence<R>();
  this.pipelineFactory=factory;
  Futures.addListenerHandler(response,this.callback);
  Futures.addListenerHandler(response,new Callback.Success<R>(){
    @Override public void fire(    R r){
      try {
        AsyncRequest.this.callbackResult.set(AsyncRequest.this.response.get());
      }
 catch (      ExecutionException ex) {
        AsyncRequest.this.callbackResult.setException(ex.getCause());
      }
catch (      InterruptedException ex) {
        LOG.error(ex,ex);
      }
    }
  }
);
  Futures.addListenerHandler(this.callbackResult,this.callbackSequence);
}
