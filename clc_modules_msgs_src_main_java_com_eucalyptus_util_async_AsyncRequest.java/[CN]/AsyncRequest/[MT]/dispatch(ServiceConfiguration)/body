{
  try {
    Callable<CheckedListenableFuture<R>> call=new Callable<CheckedListenableFuture<R>>(){
      @Override public CheckedListenableFuture<R> call() throws Exception {
        return AsyncRequest.this.execute(serviceConfig).getResponse();
      }
    }
;
    Threads.enqueue(serviceConfig,call);
    return this.getResponse();
  }
 catch (  Exception ex1) {
    Future<CheckedListenableFuture<R>> res=Threads.lookup(Empyrean.class,AsyncRequest.class,serviceConfig.getFullName().toString()).limitTo(NUM_WORKERS).submit(new Callable<CheckedListenableFuture<R>>(){
      @Override public CheckedListenableFuture<R> call() throws Exception {
        return AsyncRequest.this.execute(serviceConfig).getResponse();
      }
    }
);
    try {
      res.get().get();
    }
 catch (    ExecutionException ex) {
      LOG.error(ex,ex);
    }
catch (    InterruptedException ex) {
      Thread.currentThread().interrupt();
      LOG.error(ex,ex);
    }
    return this.getResponse();
  }
}
