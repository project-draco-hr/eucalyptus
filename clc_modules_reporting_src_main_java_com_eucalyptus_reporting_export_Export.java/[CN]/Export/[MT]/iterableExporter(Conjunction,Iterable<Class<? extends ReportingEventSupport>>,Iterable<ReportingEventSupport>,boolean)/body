{
  return new Iterable<ReportingEventSupport>(){
    @Override public Iterator<ReportingEventSupport> iterator(){
      final List<Iterator<ReportingEventSupport>> iterators=Lists.newArrayList();
      final Set<EventDependency> dependencies=Sets.newHashSet(Iterables.transform(existingDependencies,toDependency()));
      for (      final Class<? extends ReportingEventSupport> eventClass : classes) {
        iterators.add(iteratorFor(eventClass,dependencies,criterion,includeDependencies));
      }
      return Iterators.concat(iterators.iterator());
    }
  }
;
}
