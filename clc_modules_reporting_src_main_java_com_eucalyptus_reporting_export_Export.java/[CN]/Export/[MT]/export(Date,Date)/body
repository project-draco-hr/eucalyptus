{
  final ReportingExport export=new ReportingExport();
  final Conjunction criterion=Restrictions.conjunction();
  if (startDate != null) {
    criterion.add(Restrictions.ge(CREATION_TIMESTAMP,startDate));
  }
  if (endDate != null) {
    criterion.add(Restrictions.lt(CREATION_TIMESTAMP,endDate));
  }
  final Set<ReportingEventSupport.EventDependency> dependencies=Sets.newHashSet();
  for (  final Class<? extends AbstractPersistent> eventClass : getEventClasses()) {
    final EntityTransaction transaction=Entities.get(eventClass);
    try {
      addToExportList(export,dependencies,criteriaFor(eventClass,criterion).list());
    }
 catch (    Exception e) {
      log.error(e,e);
    }
 finally {
      transaction.rollback();
    }
  }
  return export;
}
