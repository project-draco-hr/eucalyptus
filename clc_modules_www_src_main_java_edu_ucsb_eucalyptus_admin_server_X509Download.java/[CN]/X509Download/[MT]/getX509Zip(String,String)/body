{
  KeyTool keyTool=new KeyTool();
  KeyPair keyPair=keyTool.getKeyPair();
  X509Certificate x509=keyTool.getCertificate(keyPair,EucalyptusProperties.getDName(userName));
  X509Certificate cloudCert=null;
  try {
    x509.checkValidity();
    Credentials.Users.addCertificate(userName,newKeyName,x509);
    AbstractKeyStore ks=UserKeyStore.getInstance();
    ks.addCertificate(newKeyName,x509);
    cloudCert=ks.getCertificate(EucalyptusProperties.NAME);
    ks.store();
  }
 catch (  IOException e) {
    LOG.fatal(e,e);
  }
catch (  GeneralSecurityException e) {
    LOG.fatal(e,e);
  }
  String certPem=new String(UrlBase64.encode(Hashes.getPemBytes(x509)));
  String userAccessKey=Credentials.Users.getQueryId(userName);
  String userSecretKey=Credentials.Users.getSecretKey(userAccessKey);
  ByteArrayOutputStream byteOut=new ByteArrayOutputStream();
  ZipOutputStream zipOut=new ZipOutputStream(byteOut);
  String baseName=EucalyptusProperties.NAME_SHORT + "-" + userName+ "-"+ Hashes.getFingerPrint(keyPair.getPublic()).replaceAll(":","").toLowerCase().substring(0,8);
  zipOut.setComment("To setup the environment run: source /path/to/eucarc");
  StringBuffer sb=new StringBuffer();
  String userNumber=UserInfo.getUserNumber(userName);
  sb.append("EUCA_KEY_DIR=$(dirname $(readlink -f ${BASH_SOURCE}))");
  sb.append("\nexport S3_URL=" + EucalyptusProperties.getSystemConfiguration().getStorageUrl());
  sb.append("\nexport EC2_URL=" + EucalyptusProperties.getSystemConfiguration().getStorageUrl().replaceAll("Walrus","Eucalyptus"));
  sb.append("\nexport EC2_PRIVATE_KEY=${EUCA_KEY_DIR}/" + baseName + "-pk.pem");
  sb.append("\nexport EC2_CERT=${EUCA_KEY_DIR}/" + baseName + "-cert.pem");
  sb.append("\nexport EUCALYPTUS_CERT=${EUCA_KEY_DIR}/cloud-cert.pem");
  sb.append("\nexport EC2_ACCESS_KEY='" + userAccessKey + "'");
  sb.append("\nexport EC2_SECRET_KEY='" + userSecretKey + "'");
  sb.append("\nalias ec2-bundle-image=\"ec2-bundle-image --cert ${EC2_CERT} --privatekey ${EC2_PRIVATE_KEY} --user " + userNumber + " --ec2cert ${EUCALYPTUS_CERT}\"");
  sb.append("\nalias ec2-upload-bundle=\"ec2-upload-bundle -a ${EC2_ACCESS_KEY} -s ${EC2_SECRET_KEY} --url ${S3_URL} --ec2cert ${EUCALYPTUS_CERT}\"");
  sb.append("\n");
  zipOut.putNextEntry(new ZipEntry("eucarc"));
  zipOut.write(sb.toString().getBytes());
  zipOut.closeEntry();
  zipOut.putNextEntry(new ZipEntry("cloud-cert.pem"));
  zipOut.write(Hashes.getPemBytes(cloudCert));
  zipOut.closeEntry();
  zipOut.putNextEntry(new ZipEntry(baseName + "-pk.pem"));
  zipOut.write(Hashes.getPemBytes(keyPair.getPrivate()));
  zipOut.closeEntry();
  zipOut.putNextEntry(new ZipEntry(baseName + "-cert.pem"));
  zipOut.write(Hashes.getPemBytes(x509));
  zipOut.closeEntry();
  zipOut.close();
  return byteOut.toByteArray();
}
