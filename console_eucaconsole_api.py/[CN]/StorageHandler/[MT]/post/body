@tornado.web.asynchronous
def post(self):
    if (not self.authorized()):
        raise tornado.web.HTTPError(401, 'not authorized')
    if (not self.user_session.walrus):
        if self.should_use_mock():
            self.user_session.walrus = MockWalrusInterface()
        else:
            host = eucaconsole.config.get('server', 'clchost')
            if self.user_session.host_override:
                host = self.user_session.host_override
            self.user_session.walrus = BotoWalrusInterface(host, self.user_session.access_key, self.user_session.secret_key, self.user_session.session_token)
        self.user_session.walrus = CachingWalrusInterface(self.user_session.walrus, eucaconsole.config)
    self.user_session.session_lifetime_requests += 1
    try:
        action = self.get_argument('Action')
        if (action.find('Describe') == (-1)):
            self.user_session.session_last_used = time.time()
            self.check_xsrf_cookie()
        if (action == 'DescribeBuckets'):
            self.user_session.walrus.get_all_buckets(self.callback)
        elif (action == 'DescribeObjects'):
            bucket = self.get_argument('Bucket')
            self.user_session.walrus.get_all_objects(bucket, self.callback)
    except Exception as ex:
        logging.error('Could not fulfill request, exception to follow')
        logging.error('Since we got here, client likely not notified either!')
        logging.exception(ex)
