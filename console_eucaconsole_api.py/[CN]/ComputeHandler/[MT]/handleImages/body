def handleImages(self, action, clc, callback=None):
    if (action == 'DescribeImages'):
        owner = self.get_argument('Owner', None)
        if (not owner):
            owners = None
        else:
            owners = [owner]
        return clc.get_all_images(owners, callback)
    elif (action == 'DescribeImageAttribute'):
        imageid = self.get_argument('ImageId')
        attribute = self.get_argument('Attribute')
        return clc.get_image_attribute(imageid, attribute, callback)
    elif (action == 'ModifyImageAttribute'):
        imageid = self.get_argument('ImageId')
        attribute = self.get_argument('Attribute')
        operation = self.get_argument('OperationType')
        users = self.get_argument_list('UserId')
        groups = self.get_argument_list('UserGroup')
        return clc.modify_image_attribute(imageid, attribute, operation, users, groups, callback)
    elif (action == 'ResetImageAttribute'):
        imageid = self.get_argument('ImageId')
        attribute = self.get_argument('Attribute')
        return clc.reset_image_attribute(imageid, attribute, callback)
    elif (action == 'RegisterImage'):
        image_location = self.get_argument('ImageLocation', None)
        name = self.get_argument('Name')
        description = self.get_argument('Description', None)
        description = base64.b64decode(description)
        architecture = self.get_argument('Architecture', None)
        kernel_id = self.get_argument('KernelId', None)
        ramdisk_id = self.get_argument('RamdiskId', None)
        root_dev_name = self.get_argument('RootDeviceName', None)
        snapshot_id = self.get_argument('SnapshotId', None)
        bdm = BlockDeviceMapping()
        mapping = self.get_argument('BlockDeviceMapping.1.DeviceName', None)
        idx = 1
        while mapping:
            pre = ('BlockDeviceMapping.%d' % idx)
            dev_name = mapping
            block_dev_type = BlockDeviceType()
            block_dev_type.ephemeral_name = self.get_argument(('%s.VirtualName' % pre), None)
            if (not block_dev_type.ephemeral_name):
                block_dev_type.no_device = (self.get_argument(('%s.NoDevice' % pre), '') == 'true')
                block_dev_type.snapshot_id = self.get_argument(('%s.Ebs.SnapshotId' % pre), None)
                block_dev_type.size = self.get_argument(('%s.Ebs.VolumeSize' % pre), None)
                block_dev_type.delete_on_termination = (self.get_argument(('%s.Ebs.DeleteOnTermination' % pre), '') == 'true')
            bdm[dev_name] = block_dev_type
            idx += 1
            mapping = self.get_argument(('BlockDeviceMapping.%d.DeviceName' % idx), None)
        if snapshot_id:
            rootbdm = BlockDeviceType()
            rootbdm.snapshot_id = snapshot_id
            bdm['/dev/sda1'] = rootbdm
        if (len(bdm) == 0):
            bdm = None
        return clc.register_image(name, image_location, description, architecture, kernel_id, ramdisk_id, root_dev_name, bdm, callback)
