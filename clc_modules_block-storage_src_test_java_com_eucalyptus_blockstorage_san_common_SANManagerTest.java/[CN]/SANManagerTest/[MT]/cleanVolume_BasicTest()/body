{
  final String volId="foo";
  final String sanVolId="bar";
  SANVolumeInfo volInfo=new SANVolumeInfo(volId);
  volInfo.setSanVolumeId(sanVolId);
  try (TransactionResource tran=Entities.transactionFor(SANVolumeInfo.class)){
    Entities.persist(volInfo);
    tran.commit();
  }
   final SANProvider sanProvider=context.mock(SANProvider.class);
  context.checking(new Expectations(){
{
      oneOf(sanProvider).deleteVolume(sanVolId);
      will(returnValue(Boolean.TRUE));
    }
  }
);
  SANManager test=new SANManager(sanProvider);
  test.cleanSnapshot(volId);
  try (TransactionResource tran=Entities.transactionFor(SANVolumeInfo.class)){
    List<SANVolumeInfo> results=Entities.query(new SANVolumeInfo());
    assertTrue("expected no SANVolumeInfos to exist",results == null || results.size() == 0);
  }
 }
