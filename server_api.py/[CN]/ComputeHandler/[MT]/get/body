def get(self):
    if (not self.authorized()):
        raise tornado.web.HTTPError(401, 'not authorized')
    if (not self.user_session.clc):
        if self.should_use_mock():
            self.user_session.clc = MockClcInterface()
        else:
            self.user_session.clc = BotoClcInterface(server.config.get('eui', 'clchost'), self.user_session.access_key, self.user_session.secret_key)
        self.user_session.clc = CachingClcInterface(self.user_session.clc, int(server.config.get('eui', 'pollfreq')))
    ret = []
    action = self.get_argument('Action')
    if (action == 'DescribeAvailabilityZones'):
        ret = self.user_session.clc.get_all_zones()
    if (action == 'DescribeImages'):
        ret = self.user_session.clc.get_all_images()
    elif (action == 'DescribeInstances'):
        ret = self.user_session.clc.get_all_instances()
    elif (action == 'DescribeAddresses'):
        ret = self.user_session.clc.get_all_addresses()
    elif (action.find('KeyPair') > (-1)):
        ret = self.handleKeypairs(action, self.user_session.clc)
    elif (action.find('SecurityGroup') > (-1)):
        ret = self.handleGroups(action, self.user_session.clc)
    elif (action.find('Volume') > (-1)):
        ret = self.handleVolumes(action, self.user_session.clc)
    elif (action.find('Snapshot') > (-1)):
        ret = self.handleSnapshots(action, self.user_session.clc)
    ret = Response(ret)
    data = json.dumps(ret, cls=BotoJsonEncoder, indent=2)
    self.write(data)
