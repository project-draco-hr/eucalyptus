{
  String image=this.manifest.replaceAll(".*<image>","<image>").replaceAll("</image>.*","</image>");
  String machineConfiguration=this.manifest.replaceAll(".*<machine_configuration>","<machine_configuration>").replaceAll("</machine_configuration>.*","</machine_configuration>");
  final String pad=(machineConfiguration + image);
  Predicate<Certificate> tryVerifyWithCert=new Predicate<Certificate>(){
    @Override public boolean apply(    Certificate checkCert){
      if (checkCert instanceof X509Certificate) {
        X509Certificate cert=(X509Certificate)checkCert;
        Signature sigVerifier;
        try {
          sigVerifier=Signature.getInstance("SHA1withRSA");
          PublicKey publicKey=cert.getPublicKey();
          sigVerifier.initVerify(publicKey);
          sigVerifier.update((pad).getBytes());
          return sigVerifier.verify(hexToBytes(ImageManifest.this.signature));
        }
 catch (        Exception ex) {
          LOG.error(ex,ex);
          return false;
        }
      }
 else {
        return false;
      }
    }
  }
;
  Function<com.eucalyptus.auth.principal.Certificate,X509Certificate> euareToX509=new Function<com.eucalyptus.auth.principal.Certificate,X509Certificate>(){
    @Override public X509Certificate apply(    com.eucalyptus.auth.principal.Certificate input){
      return input.getX509Certificate();
    }
  }
;
  try {
    if (Iterables.any(Lists.transform(user.getCertificates(),euareToX509),tryVerifyWithCert)) {
      return true;
    }
 else     if (tryVerifyWithCert.apply(SystemCredentials.lookup(Eucalyptus.class).getCertificate())) {
      return true;
    }
 else {
      for (      User u : Accounts.listAllUsers()) {
        if (Iterables.any(Lists.transform(u.getCertificates(),euareToX509),tryVerifyWithCert)) {
          return true;
        }
      }
    }
  }
 catch (  AuthException e) {
    throw new EucalyptusCloudException("Invalid Manifest: Failed to verify signature because of missing (deleted?) user certificate.",e);
  }
  return false;
}
