{
  try {
    if (!this.msgReceiver.getConnector().isStarted()) {
      InboundEndpoint inbound=ServiceContext.getContext().getRegistry().lookupEndpointFactory().getInboundEndpoint(this.msgReceiver.getEndpointURI());
      Service service=ServiceContext.getContext().getRegistry().lookupService(this.msgReceiver.getService().getName());
      this.msgReceiver=new NioMessageReceiver(inbound.getConnector(),service,inbound);
    }
    final MuleMessage reply=this.msgReceiver.routeMessage(new DefaultMuleMessage(msg),true);
    if (reply != null) {
      ReplyQueue.handle(this.msgReceiver.getService().getName(),reply,msg);
    }
 else {
      EventRecord.here(ServiceSinkHandler.class,EventType.MSG_SENT_ASYNC,msg.getClass().getSimpleName(),this.msgReceiver.getEndpointURI().toString());
    }
  }
 catch (  Exception e1) {
    LOG.error(e1,e1);
    EucalyptusErrorMessageType errMsg=new EucalyptusErrorMessageType(this.msgReceiver.getService().getName(),msg,(e1.getCause() != null ? e1.getCause() : e1).getMessage());
    errMsg.setCorrelationId(msg.getCorrelationId());
    errMsg.setException(e1.getCause() != null ? e1.getCause() : e1);
    Contexts.clear(Contexts.lookup(errMsg.getCorrelationId()));
    Channels.write(ctx.getChannel(),errMsg);
  }
}
