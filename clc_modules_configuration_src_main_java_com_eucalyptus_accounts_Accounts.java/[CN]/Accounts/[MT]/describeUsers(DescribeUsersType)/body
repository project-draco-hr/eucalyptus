{
  DescribeUsersResponseType reply=request.getReply();
  EntityWrapper<UserInfo> db=new EntityWrapper<UserInfo>();
  try {
    List<UserGroupEntity> groupList=db.recast(UserGroupEntity.class).query(new UserGroupEntity());
    for (    User u : CredentialProvider.getAllUsers()) {
      try {
        UserInfo otherInfo=db.getUnique(UserInfo.named(u.getUserName()));
        String accessKey=u.getQueryId();
        String secretKey=u.getSecretKey();
        ArrayList<String> certs=Lists.newArrayList();
        ArrayList<String> groups=Lists.newArrayList();
        for (        X509Certificate cert : u.getX509Certificates()) {
          certs.add(cert.getSubjectDN().toString());
        }
        db.recast(UserGroupEntity.class).query(new UserGroupEntity());
        for (        UserGroupEntity g : groupList) {
          if (g.getUsers().contains(otherInfo)) {
            groups.add(g.getName());
          }
        }
        UserInfoType userInfo=new UserInfoType(u.getUserName(),otherInfo.getEmail(),otherInfo.getCertificateCode(),otherInfo.getConfirmationCode(),accessKey,secretKey,certs,groups,u.getIsAdministrator(),u.getIsEnabled(),otherInfo.isConfirmed());
        reply.getUsers().add(userInfo);
      }
 catch (      EucalyptusCloudException e) {
      }
    }
    db.commit();
  }
 catch (  Exception e) {
    db.rollback();
  }
  return reply;
}
