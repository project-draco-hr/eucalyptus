{
  DescribeUsersResponseType reply=request.getReply();
  final EntityWrapper<UserInfo> db=EntityWrapper.get(new UserInfo());
  Function<User,UserInfoType> mapUser=new Function<User,UserInfoType>(){
    @Override public UserInfoType apply(    User u){
      UserInfo otherInfo;
      try {
        otherInfo=db.getUnique(UserInfo.named(u.getName()));
      }
 catch (      EucalyptusCloudException e) {
        otherInfo=new UserInfo();
      }
      return new UserInfoType(u,otherInfo.getEmail(),otherInfo.getCertificateCode(),otherInfo.getConfirmationCode());
    }
  }
;
  List<UserInfoType> userList=Lists.newArrayList();
  if (request.getUserNames().isEmpty()) {
    userList=Lists.transform(Users.listAllUsers(),mapUser);
  }
 else {
    for (    String name : request.getUserNames()) {
      try {
        userList.add(mapUser.apply(Users.lookupUser(name)));
      }
 catch (      NoSuchUserException e) {
      }
    }
  }
  return reply;
}
