{
  DescribeUsersResponseType reply=request.getReply();
  final EntityWrapper<UserInfo> db=EntityWrapper.get(new UserInfo());
  Function<User,UserInfoType> mapUser=new Function<User,UserInfoType>(){
    @Override public UserInfoType apply(    User u){
      UserInfo otherInfo;
      try {
        otherInfo=db.getUnique(new UserInfo(u.getName()));
        return new UserInfoType(u,otherInfo.getEmail(),otherInfo.getConfirmationCode());
      }
 catch (      EucalyptusCloudException e) {
        return new UserInfoType(u,null,null);
      }
    }
  }
;
  List<UserInfoType> userList=reply.getUsers();
  if (request.getUserNames().isEmpty()) {
    List<User> allUsers=Users.listAllUsers();
    List<UserInfoType> allUserInfo=Lists.transform(allUsers,mapUser);
    userList.addAll(allUserInfo);
  }
 else {
    for (    String name : request.getUserNames()) {
      try {
        User user=Users.lookupUser(name);
        UserInfoType userInfo=mapUser.apply(user);
        userList.add(userInfo);
      }
 catch (      NoSuchUserException e) {
      }
    }
  }
  db.commit();
  return reply;
}
