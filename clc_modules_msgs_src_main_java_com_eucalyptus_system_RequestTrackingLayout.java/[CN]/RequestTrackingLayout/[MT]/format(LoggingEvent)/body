{
  try {
    String corrId=null;
    try {
      corrId=Contexts.lookup().getCorrelationId();
    }
 catch (    final Exception ex) {
      corrId=Threads.getCorrelationId();
    }
    if (corrId == null || corrId.length() < 36)     return "";
    if (event.getThrowableInformation() != null) {
      Throwable t=event.getThrowableInformation().getThrowable();
      if (t != null && t instanceof GenericJDBCException) {
        return "";
      }
    }
 else     if (event.getFQNOfLoggerClass().matches(".*JDBCExceptionReporter.*")) {
      return "";
    }
    String renderedMessage=event.getRenderedMessage();
    if (renderedMessage != null) {
      String[] messages=renderedMessage.split("\n");
      StringBuffer sb=new StringBuffer();
      boolean con=false;
      for (int i=0; i < messages.length; i++) {
        String substring=messages[i];
        LoggingEvent n=new EucaLoggingEvent(event.getFQNOfLoggerClass(),event.getLogger(),event.getTimeStamp(),event.getLevel(),substring,event.getThreadName(),event.getThrowableInformation(),null,null,null);
        n.setProperty("correlation-id",corrId);
        sb.append((!con) ? mainFormat(n) : continuation.format(n));
        if (continuation == null) {
          continuation=new EucaPatternLayout(sb.toString().split("\\|")[0].replaceAll("."," ") + "| " + CONTINUATION);
        }
        con=true;
      }
      return sb.toString();
    }
  }
 catch (  Exception ex) {
    ;
  }
  return null;
}
