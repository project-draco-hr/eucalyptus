{
  this.canHas.writeLock().lock();
  try {
    this.pending.set(false);
    this.doUnassign();
    this.userId=UNALLOCATED_USERID;
    this.system=false;
    this.state.set(State.unallocated);
    return;
  }
  finally {
    this.canHas.writeLock().unlock();
    removeAddress(this.name);
    LOG.debug(EventRecord.caller(this.getClass(),this.state.get(),this.toString()));
    try {
      Addresses.getInstance().disable(this.getName());
    }
 catch (    NoSuchElementException e) {
      LOG.debug(e);
    }
  }
}
