{
  if (!this.pending.compareAndSet(false,false)) {
    throw new IllegalStateException("Trying to allocate an address which is already pending: " + this);
  }
 else   if (!this.state.compareAndSet(State.unallocated,State.allocated)) {
    this.pending.set(false);
    throw new IllegalStateException("Trying to allocate an address which is already allocated: " + this);
  }
 else {
    this.canHas.writeLock().lock();
    try {
      this.doUnassign();
      this.setUserId(userId);
      if (Component.eucalyptus.name().equals(userId)) {
        system=true;
      }
      addAddress(this);
      LOG.debug(EventRecord.caller(this.getClass(),this.state.get(),this.toString()));
      try {
        Addresses.getInstance().register(this);
      }
 catch (      NoSuchElementException e) {
        LOG.debug(e);
      }
    }
  finally {
      this.canHas.writeLock().unlock();
    }
  }
}
