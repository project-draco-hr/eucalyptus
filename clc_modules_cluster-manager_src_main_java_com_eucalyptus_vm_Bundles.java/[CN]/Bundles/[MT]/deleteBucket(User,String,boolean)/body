{
  final EucaS3Client s3c=EucaS3ClientFactory.getEucaS3Client(user);
  try {
    final List<Bucket> buckets=s3c.listBuckets();
    boolean bucketFound=false;
    for (    final Bucket bucket : buckets) {
      if (bucketName.equals(bucket.getName())) {
        bucketFound=true;
        break;
      }
    }
    if (!bucketFound) {
      return;
    }
    final ObjectListing objects=s3c.listObjects(bucketName);
    final List<S3ObjectSummary> objectSummaries=objects.getObjectSummaries();
    if (!deleteObject && objectSummaries.size() > 0) {
      throw new ClientComputeException("InvalidParameter","Bucket is not empty");
    }
    if (deleteObject) {
      for (      final S3ObjectSummary object : objectSummaries) {
        s3c.deleteObject(bucketName,object.getKey());
      }
    }
    s3c.deleteBucket(bucketName);
  }
 catch (  final EucalyptusCloudException ex) {
    throw ex;
  }
catch (  final Exception ex) {
    LOG.debug("Unable to delete the bucket",ex);
    throw new ComputeException("InternalError","Unable to delete the bucket");
  }
}
