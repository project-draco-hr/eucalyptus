{
  try (final EucaS3Client s3c=EucaS3ClientFactory.getEucaS3Client(new SecurityTokenAWSCredentialsProvider(user).getCredentials())){
    boolean foundBucket=false;
    final List<Bucket> buckets=s3c.listBuckets();
    for (    final Bucket bucket : buckets) {
      foundBucket=bucketName.equals(bucket.getName());
      if (foundBucket) {
        if (!Strings.isNullOrEmpty(prefix)) {
          final ObjectListing objects=s3c.listObjects(bucketName,Strings.emptyToNull(prefix));
          if (!objects.getObjectSummaries().isEmpty()) {
            throw new ClientComputeException("InvalidParameterValue","Bucket prefix in use " + bucketName + "/"+ prefix);
          }
        }
        break;
      }
    }
    if (!foundBucket) {
      s3c.createBucket(bucketName);
    }
  }
 catch (  final Exception ex) {
    Exceptions.findAndRethrow(ex,ComputeException.class);
    if (ex instanceof AmazonS3Exception && "BucketAlreadyExists".equals(((AmazonS3Exception)ex).getErrorCode())) {
      throw new ClientComputeException("InvalidParameterValue","Bucket already exists " + bucketName);
    }
    LOG.debug("Unable to create bucket " + bucketName,ex);
    throw new ComputeException("InternalError","Unable to create bucket " + bucketName);
  }
}
