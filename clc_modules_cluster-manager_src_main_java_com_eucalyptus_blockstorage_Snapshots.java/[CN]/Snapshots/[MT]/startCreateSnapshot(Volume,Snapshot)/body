{
  final ServiceConfiguration sc=Topology.lookup(Storage.class,Partitions.lookupByName(vol.getPartition()));
  try {
    Snapshot snapState=Transactions.save(snap,new Callback<Snapshot>(){
      @Override public void fire(      Snapshot s){
        try {
          CreateStorageSnapshotType scRequest=new CreateStorageSnapshotType(vol.getDisplayName(),snap.getDisplayName());
          CreateStorageSnapshotResponseType scReply=AsyncRequests.sendSync(sc,scRequest);
          s.setMappedState(scReply.getStatus());
        }
 catch (        Exception ex) {
          throw Exceptions.toUndeclared(ex);
        }
      }
    }
);
  }
 catch (  ConstraintViolationException ex) {
    throw new DuplicateMetadataException("Duplicate snapshot creation: " + snap + ": "+ ex.getMessage(),ex);
  }
catch (  ExecutionException ex) {
    LOG.error(ex.getCause(),ex.getCause());
    throw new EucalyptusCloudException(ex);
  }
  fireUsageEvent(snap,SnapShotEvent.forSnapShotCreate());
  return snap;
}
